#include "libraryconfig.h"


QByteArray hardcodedServicesFile(){
    //aggiornato a 17/09/2010
    return QByteArray::fromBase64("");

}
