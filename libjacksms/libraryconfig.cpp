#include "libraryconfig.h"


QByteArray hardcodedServicesFile(){
    //aggiornato a 01/11/2010
    return QByteArray::fromBase64("");

}
