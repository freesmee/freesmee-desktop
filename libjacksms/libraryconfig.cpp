#include "libraryconfig.h"


QByteArray hardcodedServicesFile(){
    //aggiornato a 24/07/2010
    return QByteArray::fromBase64("PEphY2tTTVM+CiA8c2VydmljZSBpZD0iMSIgbmFtZT0iVm9kYWZvbmUtU01TIiB2PSIxLjciIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjM2MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IklTTy04ODU5LTEiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJtSkxSMFFBL3dEL0FQK2d2YWVUQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUJhRWxFUVZSNDJxV1RJVThEUVJDRlh3bGk1Y3JXdFk0S0Vpb1E0RnBIL3dFNGdpSW9naUxWZ0VHU0tvSXJFdGREdGJKMUxZb0tCQUpSM0oyN3VnOHhkOTByQlF5VHpPM3R6TXZiMlhtekpTVDBEOXVVSkhsdnUwWDJLVmVrZzdhMDI1RGUzcVhuU1BxY0d5WkpKT2ZDUHhKNEQ4NlpINTlBbWdMQWVBVE5OcHllMlg0NGdHb2RKSEFlSkl6QU9mQmw2TjRaTUUzaC9NS0ExUnBNSnl4dFBJS2RodVdXQkJKYzN3WlExRjhDT0R5Q09HWEZvajZVeXdXQ25VWUF6ZWZRYkxGeXRXWUxudm9ReDRFa3E5QUlIdTVENHJGSHVGWkc4Rk9Wd3dGSWJFaVNxcldnU3hMYm1uZmFPY2xsS24yOEIxeWxJa2t5Z3NVaUpIS3lZaXkzbkxSZ1J2QXlEWkc5ZmFuWk5vS2xKNWJicmdmY2JHYXJOWEZ2dGN2VGlja25nWngxL1B6aWp5WTZGMmFncUhmM3pqenFoK0hLRzdoVi96NUlIaTQ3SnVOZjl0Z3JWSmNURkVmNW9HMmdZcmxwQ3JOWE84RDdJTE5FNmRmWGVObFpqOTFjcllWSy8zM09YeVUrMGxBbm1ybmJBQUFBQUVsRlRrU3VRbUNDIiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgMTAgU01TIGFsIGdpb3JubyB0cmFtaXRlIGlsIHNpdG8gVm9kYWZvbmUuIMOIIHBvc3NpYmlsZSBpbnZpYXJlIFNNUyBzb2xvIHZlcnNvIG51bWVyaSBWb2RhZm9uZSwgb2Njb3JyZSB1biBudW1lcm8gcmVnaXN0cmF0byBzdWwgc2l0by48L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy52b2RhZm9uZS5pdCIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnZvZGFmb25lLml0IiAvPgoJCTxyZXF1aXJlZCBuPSIzIiBuYW1lPSJzaW0iIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGlsIG51bWVybyBkaSB0ZWxlZm9ubyBkZWxsYSBzaW0gY29uIGN1aSB2dW9pIGludmlhcmUgdHJhbWl0ZSBxdWVzdG8gYWNjb3VudCIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cudm9kYWZvbmUuaXQvIiBpZ25vcmVsb2NhdGlvbj0iMSIvPgogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cudm9kYWZvbmUuaXQvMTkwL3RyaWxvZ3kvanNwL2hvbWUuZG8iPgogICAgICAgIDxlcnJvcnM+CiAgICAgICAgICA8dmFyIGVycnN0cj0iYSBjYXVzYSBkaSB1biBpbnRlcnZlbnRvIGRpIG1hbnV0ZW56aW9uZSIgZXJybXNnPSJTaXRvIDE5MC5pdCBpbiBtYW51dGVuemlvbmUiLz4KICAgICAgICAgIDx2YXIgZXJyc3RyPSJsYXZvcmkudm9kYWZvbmUuaXQiIGVycm1zZz0iU2l0byBWb2RhZm9uZSBpbiBtYW51dGVuemlvbmUiLz4KICAgICAgICA8L2Vycm9ycz4KICAgICAgPC9wYWdlPgogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnZvZGFmb25lLml0LzE5MC90cmlsb2d5L2pzcC91c2VyLmRvIiBtZXRob2Q9IlBPU1QiPgogICAgICAgIDxlcnJvcnM+CiAgICAgICAgICA8dmFyIGVycnN0cj0iLzE5MC9sc2NoL2xvZ2luRmFpbGVkLmRvIiBlcnJtc2c9IlVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIiBlcnJjb2RlPSI1Ii8+CiAgICAgICAgPC9lcnJvcnM+CiAgICAgICAgPHZhcnM+CiAgICAgICAgICA8dmFyIG5hbWU9InVzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+CiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+CiAgICAgICAgICA8dmFyIG5hbWU9Im1ldGhvZCIgdmFsdWU9ImxvZ2luIi8+CiAgICAgICAgICA8dmFyIG5hbWU9InR5X3NraXBfbWQiIHZhbHVlPSJ0cnVlIi8+CiAgICAgICAgPC92YXJzPgogICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy52b2RhZm9uZS5pdC8xOTAvdHJpbG9neS9qc3Avc3dhcFNpbS5kbyIgbWV0aG9kPSJQT1NUIiBjb25kaXRpb249IiUlc2ltJSUiPgogICAgICAgICAgICAgICAgPHZhcnM+CgkJCQkJPHZhciBuYW1lPSJ0ayIgdmFsdWU9IjEwNzM3NTI5OTAsbCIvPgoJCQkJCTx2YXIgbmFtZT0idHlfbGluayIgdmFsdWU9Im51bGwiLz4KCQkJCQk8dmFyIG5hbWU9InR5X2xpbmtfdHlwZSIvPgoJCQkJCTx2YXIgbmFtZT0idHlfc2ltIiB2YWx1ZT0iJSVzaW0lJSIvPgoJCQkJCTx2YXIgbmFtZT0iZnJvbV90YmZlIiB2YWx1ZT0iZmFsc2UiLz4KCQkJCQk8dmFyIG5hbWU9InN3YXBfc2ltX2xpbmsiIHZhbHVlPSIlJXNpbSUlIi8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmFyZWFwcml2YXRpLnZvZGFmb25lLml0LzE5MC90cmlsb2d5L2pzcC9kaXNwYXRjaGVyLmRvP3R5X2tleT1mc21zX2hwIi8+CiAgICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vd3d3LmFyZWFwcml2YXRpLnZvZGFmb25lLml0LzE5MC9mc21zL3ByZXBhcmUuZG8iPgogICAgICAgIDxlcnJvcnM+CiAgICAgICAgICA8dmFyIGVycnN0cj0ic3Ugd3d3LjE5MC5pdCBpbCBwcm9wcmlvIG51bWVybyBkaSIgZXJybXNnPSJUaSBpbmZvcm1pYW1vIGNoZSBwZXIgcG90ZXIgYWNjZWRlcmUgYSBxdWVzdG8gc2Vydml6aW8gw6ggbmVjZXNzYXJpbyIvPgogICAgICAgICAgPHZhciBlcnJzdHI9ImxpbWl0ZXNtcyIgZXJybXNnPSJIYWkgcmFnZ2l1bnRvIGlsIGxpbWl0ZSBkaSBTTVMgcGVyIG9nZ2kiIGVycmNvZGU9IjEzIi8+CiAgICAgICAgICA8dmFyIGVycnN0cj0ibm9uIGUnIGFsIG1vbWVudG8gZGlzcG9uaWJpbGUiIGVycm1zZz0iMTkwOiBTZXJ2aXppbyBub24gZGlzcG9uaWJpbGUiLz4KICAgICAgICAgIDx2YXIgZXJyc3RyPSJzb2xvIGEgbnVtZXJpIGRpIGNlbGx1bGFyZSBWb2RhZm9uZSIgZXJybXNnPSJJbCBkZXN0aW5hdGFyaW8gbm9uIGUnIHVuIG51bWVybyBWb2RhZm9uZSIgZXJyY29kZT0iMTQiLz4KICAgICAgICA8L2Vycm9ycz4KICAgICAgICA8dmFycz4KICAgICAgICAgIDx2YXIgbmFtZT0icmVjZWl2ZXJOdW1iZXIiIHZhbHVlPSIlJWludG51bSUlIi8+CiAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPgogICAgICAgIDwvdmFycz4KICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICA8dmFyIG5hbWU9ImNhcHRjaGEiIGxlZnQ9ImltZyBzcmM9JnF1b3Q7LzE5MC9mc21zIiByaWdodD0iZ2VuZXJhdGVpbWcuZG8iLz4KICAgICAgICA8L2NvbnRlbnRzPgogICAgICA8L3BhZ2U+CiAgICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vd3d3LmFyZWFwcml2YXRpLnZvZGFmb25lLml0LzE5MC9mc21zL3ByZXBhcmUuZG8iPgogICAgICAgIDxlcnJvcnM+CiAgICAgICAgICA8dmFyIGVycnN0cj0ibGltaXRlc21zIiBlcnJtc2c9IkhhaSByYWdnaXVudG8gaWwgbGltaXRlIGRpIFNNUyBwZXIgb2dnaSIgZXJyY29kZT0iMTMiLz4KICAgICAgICAgIDx2YXIgZXJyc3RyPSJzb2xvIGEgbnVtZXJpIGRpIGNlbGx1bGFyZSBWb2RhZm9uZSIgZXJybXNnPSJJbCBkZXN0aW5hdGFyaW8gbm9uIGUnIHVuIG51bWVybyBWb2RhZm9uZSIgZXJyY29kZT0iMTQiLz4KICAgICAgICA8L2Vycm9ycz4KICAgICAgICA8dmFycz4KICAgICAgICAgIDx2YXIgbmFtZT0icmVjZWl2ZXJOdW1iZXIiIHZhbHVlPSIlJWludG51bSUlIi8+CiAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPgogICAgICAgIDwvdmFycz4KICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICA8dmFyIG5hbWU9ImNhcHRjaGEiIGxlZnQ9ImltZyBzcmM9JnF1b3Q7LzE5MC9mc21zIiByaWdodD0iZ2VuZXJhdGVpbWcuZG8iLz4KICAgICAgICA8L2NvbnRlbnRzPgogICAgICA8L3BhZ2U+CiAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5hcmVhcHJpdmF0aS52b2RhZm9uZS5pdC8xOTAvZnNtcy9nZW5lcmF0ZWltZy5kbyIgY2FwdGNoYT0iMSIgY29uZGl0aW9uPSIlJWNhcHRjaGElJSIvPgogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuYXJlYXByaXZhdGkudm9kYWZvbmUuaXQvMTkwL2ZzbXMvc2VuZC5kbyIgbWV0aG9kPSJQT1NUIj4KICAgICAgICA8YWNjZXB0PgogICAgICAgICAgPHZhciBhY2NlcHRzdHI9ImVsYWJvcmF0YSBjb3JyZXR0YW1lbnRlIi8+CiAgICAgICAgPC9hY2NlcHQ+CiAgICAgICAgPGVycm9ycz4KICAgICAgICAgIDx2YXIgZXJyc3RyPSJGTEFUU2VydmljZT1kZWxldGVJVCIgZXJybXNnPSJFcnJvcmUgMTkwLCByaXByb3ZhIi8+CiAgICAgICAgICA8dmFyIGVycnN0cj0iaGEgcmljZXZ1dG8gaWwgbnVtZXJvIG1hc3NpbW8iIGVycm1zZz0iSWwgZGVzdGluYXRhcmlvIGRhIHRlIGluc2VyaXRvIGhhIHJpY2V2dXRvIGlsIG51bWVybyBtYXNzaW1vIGdpb3JuYWxpZXJvIGRpIFNNUyB2aWEgV2ViIi8+CiAgICAgICAgICA8dmFyIGVycnN0cj0iaW5mb3JtaWFtbyBjaGUgcGVyIHBvdGVyIGFjY2VkZXJlIGEgcXVlc3RvIHNlcnZpemlvIiBlcnJtc2c9IkVycm9yZSAxOTAsIHJpcHJvdmEiLz4KICAgICAgICAgIDx2YXIgZXJyc3RyPSJzb2xvIGEgbnVtZXJpIGRpIGNlbGx1bGFyZSBWb2RhZm9uZSIgZXJybXNnPSJJbCBkZXN0aW5hdGFyaW8gbm9uIGUnIHVuIG51bWVybyBWb2RhZm9uZSIgZXJyY29kZT0iMTQiLz4KICAgICAgICAgIDx2YXIgZXJyc3RyPSJzdXBlcmF0byBpbCBsaW1pdGUgZ2lvcm5hbGllcm8iIGVycm1zZz0iSGFpIHJhZ2dpdW50byBpbCBsaW1pdGUgZGkgU01TIHBlciBvZ2dpIiBlcnJjb2RlPSIxMyIvPgogICAgICAgICAgPHZhciBlcnJzdHI9Im1vbWVudG8gZGlzcG9uaWJpbGUuIFRpIGludml0aWFtbyBhIHJpcHJvdmFyZSIgZXJybXNnPSJTZXJ2aXpvIG1vbWVudGFuZWFtZW50ZSBub24gZGlzcG9uaWJpbGUiIGVycmNvZGU9IjEyIi8+CiAgICAgICAgICA8dmFyIGVycnN0cj0icHJlcGFyZS5kbyIgZXJybXNnPSJDb2RpY2UgZGkgY29udHJvbGxvIHNiYWdsaWF0byIgZXJyY29kZT0iOCIvPgogICAgICAgIDwvZXJyb3JzPgogICAgICAgIDx2YXJzPgogICAgICAgICAgPHZhciBuYW1lPSJ2ZXJpZnlDb2RlIiB2YWx1ZT0iJSVjYXB0Y2hhX3ZhbHVlJSUiIGNvbmRpdGlvbj0iJSVjYXB0Y2hhJSUiLz4KICAgICAgICAgIDx2YXIgbmFtZT0icGFnZVR5cGVJZCIgdmFsdWU9Ijk2MDQiLz4KICAgICAgICAgIDx2YXIgbmFtZT0icHJvZ3JhbUlkIiB2YWx1ZT0iMTAzODQiLz4KICAgICAgICAgIDx2YXIgbmFtZT0iY2hhbm5lbElkIiB2YWx1ZT0iLTE4MTI2Ii8+CiAgICAgICAgICA8dmFyIG5hbWU9InJlY2VpdmVyTnVtYmVyIiB2YWx1ZT0iJSVpbnRudW0lJSIvPgogICAgICAgICAgPHZhciBuYW1lPSJtZXNzYWdlIiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4KICAgICAgICA8L3ZhcnM+CiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSIzIiBuYW1lPSJDb21tdW5pY2F0b3IiIHY9IjEuNCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNDEiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTQxIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJtSkxSMFFBL3dEL0FQK2d2YWVUQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUFzRWxFUVZSNDJxV1RzUlhESUF4RVQ4eERRY2tJS1ZOa29QTStLVkptQkpjdXZJOVNPSTRSUmp6eXJGYjNEMGxJc2k0ejZvZ3A2N3JNZ29FSU85QVQ5ZklCQUVnYVVmbDZURmxKdXViU2F1R2ZDTGdZQWtCYlpaY2lMMGNTUWxJZjk1c1JxQjdXSW9kQlRGa1YzeWRsazRRU1B0VWw5aWRLR05xYlFTVnF3WHRsQVFDZXI3ZWF2cXNLUE5qc2dkbThRdHlEZndhbnRaV3FEUWNlbTBFSDlnMEdZZGRBc0VFQ1lKcUkzbVZldm9VUDZ3eHJMaEIzS2RNQUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSAxMCBTTVMgYWwgZ2lvcm5vIHRyYW1pdGUgaWwgc2l0byBkaSBWaXJnaWxpby4gUmljaGllZGUgdW4gYWJib25hbWVudG8gVGluLml0PC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cudGluLml0LiBTZSBsYSB0dWEgZW1haWwgw6ggbWFyaW8ucm9zc2lAdGluLml0LCBpbnNlcmlzY2kgbWFyaW8ucm9zc2kiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy50aW4uaXQiIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9ImRvbWFpbiIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgaWwgZG9taW5pbywgY2lvw6ggbGEgcGFydGUgZG9wbyBAIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly9hYWFjc2MuYWxpY2UuaXQvcGlhdHRhZm9ybWFBQUEvYWFwbS9hbUkiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWVEaXNwbGF5IiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImRvbWluaW8iIHZhbHVlPSJAJSVkb21haW4lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJsb2dpbiIgdmFsdWU9IiUldXNlcm5hbWUlJUAlJWRvbWFpbiUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InB3ZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjaGFubmVsIiB2YWx1ZT0iVm1haWwiIC8+DQoJCQkJCTx2YXIgbmFtZT0iVVJMX09LIiB2YWx1ZT0iaHR0cHM6Ly9hdXRoc3JzLmFsaWNlLml0L2FhcC9hYXBfcmVkaXIuanNwP2VudHJ5PVZtYWlsIi8+DQoJCQkJCTx2YXIgbmFtZT0iVVJMX0tPIiB2YWx1ZT0iaHR0cHM6Ly9hdXRoc3JzLmFsaWNlLml0L2FhcC9hYXBfcmVkaXJfa28uanNwP2VudHJ5PVZtYWlsIi8+DQoJCQkJCTx2YXIgbmFtZT0ic2Vydml6aW8iIHZhbHVlPSJtYWlsIi8+DQoJCQkJCTx2YXIgbmFtZT0ibXNpc2RuIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQoJCQkJCTx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSVAJSVkb21haW4lJSIvPg0KCQkJCQk8dmFyIG5hbWU9InVzZXIiIHZhbHVlPSIlJXVzZXJuYW1lJSVAJSVkb21haW4lJSIvPg0KCQkJCQk8dmFyIG5hbWU9ImEzYWZlcCIgdmFsdWU9Imh0dHA6Ly9wb3J0YWxlLnJvc3NvYWxpY2UuYWxpY2UuaXQvcHMvTWFuYWdlQ29kRXJyb3IuZG8/Y29kZT00NzAmYW1wO2NoYW5uZWw9Vm1haWwiLz4NCgkJCQkJPHZhciBuYW1lPSJET01BSU4iIHZhbHVlPSIiLz4NCgkJCQkJPHZhciBuYW1lPSJQQVNTIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQoJCQkJCTx2YXIgbmFtZT0ic2VsZiIgdmFsdWU9InRydWUiLz4NCgkJCQkJPHZhciBuYW1lPSJhM3NpIiB2YWx1ZT0ibm9uZSIvPg0KCQkJCQk8dmFyIG5hbWU9ImEzc3QiIHZhbHVlPSJWQ09NTSIvPg0KCQkJCQk8dmFyIG5hbWU9InRvdG9wIiB2YWx1ZT0idHJ1ZSIvPg0KCQkJCQk8dmFyIG5hbWU9Im5vdG90b3BhM2VwIiB2YWx1ZT0idHJ1ZSIvPg0KCQkJCQk8dmFyIG5hbWU9ImEzYWlkIiB2YWx1ZT0ibHZtZXMiLz4NCgkJCQkJPHZhciBuYW1lPSJhM2ZsYWciIHZhbHVlPSIwIi8+DQoJCQkJCTx2YXIgbmFtZT0iYTNlcCIgdmFsdWU9Imh0dHA6Ly9jb21tdW5pY2F0b3IuYWxpY2UuaXQvYXNwL2xvZ2luLmFzcCIvPg0KCQkJCQk8dmFyIG5hbWU9ImEzZXB2ZiIgdmFsdWU9Imh0dHA6Ly93ZWJtYWlsdnRpbi5hbGljZS5pdC9jcC9wcy9NYWluL2xvZ2luL1NTT0xvZ2luIi8+DQoJCQkJCTx2YXIgbmFtZT0iYTNzZSIgdmFsdWU9Imh0dHA6Ly9wb3J0YWxlLnJvc3NvYWxpY2UuYWxpY2UuaXQvcHMvTWFuYWdlQ29kRXJyb3IuZG8/Y29kZT00NzAmYW1wO2NoYW5uZWw9Vm1haWwiLz4NCgkJCQkJPHZhciBuYW1lPSJhM2RjZXAiIHZhbHVlPSJodHRwOi8vY29tbXVuaWNhdG9yLmFsaWNlLml0L2FzcC9ob21lcGFnZS5hc3A/cz0wMDUiLz4NCgkJCQkJPHZhciBuYW1lPSJhM2wiCXZhbHVlPSIlJXVzZXJuYW1lJSVAJSVkb21haW4lJSIvPg0KCQkJCQk8dmFyIG5hbWU9ImEzcCIJdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KCQkJCTwvdmFycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCgkJCTxwYWdlIHVyaT0iaHR0cDovL2NvbW11bmljYXRvci5hbGljZS5pdC9hc3Avc3RhdG9fZmV1LmFzcD9zPTIiLz4NCgkJPHBhZ2UgdXJpPSJodHRwOi8vY29tbXVuaWNhdG9yLmFsaWNlLml0L2FzcC9zbXN3ZWIuYXNwP3A9MSIvPg0KCQkgICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9nc21haWxtZHVtYWlsLmFsaWNlLml0OjgwODAvc3VwZXJtYWlsL2NvbnRyb2xsZXI/dXNlcm5hbWU9JSV1c2VybmFtZSUlJTQwJSVkb21haW4lJSZhbXA7YWN0aW9uPXNlbmRzbXNwcmV2aWV3IiBtZXRob2Q9InBvc3QiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Imxpc3RhX29wZXJhdG9yaSIgdmFsdWU9IngiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibnVtZXJvIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNlbGVjdCIgdmFsdWU9IngiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icmVjaXBpZW50IiB2YWx1ZT0iJTJCJSVpbnRjb2RlJSUlJWludG51bSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InRlc3RvIiB2YWx1ZT0ibWVzc2FnZSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9nc21haWxtZHVtYWlsLmFsaWNlLml0OjgwODAvc3VwZXJtYWlsL2NvbnRyb2xsZXI/dXNlcm5hbWU9JSV1c2VybmFtZSUlJTQwJSVkb21haW4lJSIgbWV0aG9kPSJwb3N0Ij4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJhY3Rpb24iIHZhbHVlPSJzZW5kc21zIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InJlY2lwaWVudCIgdmFsdWU9IiUyQiUlaW50Y29kZSUlJSVpbnRudW0lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0ZXN0byIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iaW52aWF0byBjb3JyZXR0YW1lbnRlIiAvPg0KICAgICAgICAgICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJMYSB0dWEgc2Vzc2lvbmUgbm9uIiBlcnJtc2c9IkludmlvIGZhbGxpdG8sIHJpcHJvdmEiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJzdXBlcmF0byBpbCBudW1lcm8gbWFzc2ltbyIgZXJybXNnPSJMaW1pdGUgZ2lvcm5hbGllcm8gZGkgU01TIHJhZ2dpdW50byIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSIyIiBuYW1lPSJSb3Nzb2FsaWNlIiB2PSIxLjMiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTQ2IiBzbXNfZGl2aXNvcj0iMTQ2IiBtYXhsZW49IjE0NiIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IklTTy04ODU5LTEiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJtSkxSMFFBL3dEL0FQK2d2YWVUQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUF1MGxFUVZSNDJxVlRyUktHSUJBOEdBdU5hTFhlZk1Ib1EvRTRQdFJGQW1PMUdtMUdMUjdEdjUvakZXWllkcGU3QmVFc3daZnFTcHUvY1RyVFBXZEpQQW93Y1JuNjdDRGVXQ3JVaGVRU2tZc3hIS2N6RkpIL2tGT2hzRVZaTzJpMGl0WmFDUURJM0hIZG1qZGczRmtTTWlYaXV2bCtpOE1NOEN3RlA2amJ3V2dGeTlDRDBRcm0vWGgrQjB6MER2dVJPVFlGMGh2VTJvaUc2Q3k5aXBFTitDMUkrRmlTNDJoRlYzT1BadUFzQ1d6OWhTRDc2aEFaeEJlLzhRSzd4bU1yemR2V2JnQUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgMTAgU01TIGFsIGdpb3JubyB0cmFtaXRlIGlsIHNpdG8gZGkgQWxpY2UuIFJpY2hpZWRlIHVuIGFiYm9uYW1lbnRvIGZsYXQgQWxpY2UgQWRzbCBwZXIgcmVnaXN0cmFyc2kgYWwgc2l0by48L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJVc2VybmFtZSBkaSBhY2Nlc3NvIGEgd3d3LmFsaWNlLml0LiBTZSBsYSB0dWEgZW1haWwgZScgbWFyaW8ucm9zc2lAYWxpY2UuaXQsIGluc2VyaXNjaSBtYXJpby5yb3NzaSIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LmFsaWNlLml0IiAvPgoJCTxyZXF1aXJlZCBuPSIzIiBuYW1lPSJsb2dpbl9hY2NvdW50IiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBpbCB2YWxvcmUgZGVsIGNvb2tpZSBsb2dpbl9hY2NvdW50IiAvPgoJCTxyZXF1aXJlZCBuPSI0IiBuYW1lPSJzcGMiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGlsIHZhbG9yZSBkZWwgY29va2llIHNwYyIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgICAgICAgPHByb2NlZHVyZT4KICAgICAgICAgICAgPHBhZ2UgbWV0aG9kPSJQT1NUIiB1cmk9Imh0dHBzOi8vYXV0aHNycy5hbGljZS5pdC9hYXAvdmFsaWRhdGVjcmVkZW50aWFsIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWVEaXNwbGF5IiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJkb21pbmlvIiB2YWx1ZT0iQGFsaWNlLml0IiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iaW1hZ2VGaWVsZC54IiB2YWx1ZT0iMjciIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJpbWFnZUZpZWxkLnkiIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idHdvd2Vla3MiIHZhbHVlPSJmYWxzZSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImxvZ2luIiB2YWx1ZT0iJSV1c2VybmFtZSUlQGFsaWNlLml0IiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icHdkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY2hhbm5lbCIgdmFsdWU9Im1haWxfYWxpY2UiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJVUkxfT0siIHZhbHVlPSJodHRwczovL2F1dGhzcnMuYWxpY2UuaXQvYWFwL2FhcF9yZWRpci5qc3A/ZW50cnk9bWFpbF9hbGljZSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlVSTF9LTyIgdmFsdWU9Imh0dHBzOi8vYXV0aHNycy5hbGljZS5pdC9hYXAvYWFwX3JlZGlyX2tvLmpzcD9lbnRyeT1tYWlsX2FsaWNlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic2Vydml6aW8iIHZhbHVlPSJtYWlsIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibXNpc2RuIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSVAYWxpY2UuaXQiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ1c2VyIiB2YWx1ZT0iJSV1c2VybmFtZSUlQGFsaWNlLml0IiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYTNhZmVwIiB2YWx1ZT0iaHR0cDovL3BvcnRhbGUucm9zc29hbGljZS5hbGljZS5pdC9wcy9NYW5hZ2VDb2RFcnJvci5kbz9jb2RlPTQ3MCZhbXA7Y2hhbm5lbD1tYWlsX2FsaWNlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iRE9NQUlOIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iUEFTUyIgdmFsdWU9IiUlcGFzc3dvcmQlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNlbGYiIHZhbHVlPSJ0cnVlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYTNzaSIgdmFsdWU9Im5vbmUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJhM3N0IiB2YWx1ZT0iVkNPTU0iIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0b3RvcCIgdmFsdWU9InRydWUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJub3RvdG9wYTNlcCIgdmFsdWU9InRydWUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJhM2FpZCIgdmFsdWU9ImxhbWVzIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYTNmbGFnIiB2YWx1ZT0iMCIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImEzZXAiIHZhbHVlPSJodHRwOi8vY29tbXVuaWNhdG9yLmFsaWNlLml0L2FzcC9sb2dpbi5hc3AiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJhM3NlIiB2YWx1ZT0iaHR0cDovL3BvcnRhbGUucm9zc29hbGljZS5hbGljZS5pdC9wcy9NYW5hZ2VDb2RFcnJvci5kbz9jb2RlPTQ3MCZhbXA7Y2hhbm5lbD1tYWlsX2FsaWNlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYTNkY2VwIiB2YWx1ZT0iaHR0cDovL2NvbW11bmljYXRvci5hbGljZS5pdC9hc3AvaG9tZXBhZ2UuYXNwP3M9MDA1IiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYTNsIiB2YWx1ZT0iJSV1c2VybmFtZSUlQGFsaWNlLml0IiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYTNwIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICAgICAgPGVycm9ycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iTWFuYWdlQ29kRXJyb3IuZG8/Y29kZT00NzAmYW1wO2NoYW5uZWw9bWFpbF9hbGljZSIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIG5vbiB2YWxpZGkiIC8+CiAgICAgICAgICAgICAgICA8L2Vycm9ycz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9hdXRoLnJvc3NvYWxpY2UuYWxpY2UuaXQvYWFwL3NlcnZpY2Vmb3J3YXJkZXI/c2ZfZGVzdD1pYm94X2ludmlvc21zIj4KICAgICAgICAgICAgCTxlcnJvcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9ImRlbGV0ZWNyZWRlbnRpYWwiIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBub24gdmFsaWRpIiAvPgogICAgICAgICAgICAgICAgPC9lcnJvcnM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd2VibG9naW5tb2JpbGUucm9zc29hbGljZS5hbGljZS5pdC9hbGljZS9qc3AvU01TL2NvbXBvc2VyLmpzcD9JRF9GaWVsZD0wJmFtcDtJRF9WYWx1ZT0wJmFtcDtpZF9jbGlja3RvPTAmYW1wO2R1bW15PWR1bW15Ij4KICAgICAgICAgICAgCTxoZWFkZXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iQ29va2llIiB2YWx1ZT0iYWNjb3VudD0lJXVzZXJuYW1lJSVAYWxpY2UuaXQ7IGxvZ2luX2FjY291bnQ9JSVsb2dpbl9hY2NvdW50JSU7IHNlcnZpemlvPVNNUzsgc3BjPSUlc3BjJSU7IHByb2ZpbGU9R29sZDsiIC8+CiAgICAgICAgICAgICAgICA8L2hlYWRlcnM+CiAgICAgICAgICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJncmF0dWl0aSIgbGVmdD0iT2dnaSBoYWkgYW5jb3JhICBhIGRpc3Bvc2l6aW9uZSAmbHQ7YiZndDsgIiByaWdodD0iIFNNUyBHUkFUVUlUSSIgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CiAgICAgICAgICAgICAgICA8ZXJyb3JzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJhZCBvZ25pIGRlc3RpbmF0YXJpbyBoYSB1biBjb3N0byBkaSIgZXJybXNnPSJNZXNzYWdnaSBncmF0dXRpdGkgdGVybWluYXRpIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJTaXN0ZW1pIG5vbiBkaXNwb25pYmlsaSIgZXJybXNnPSJTZXJ2aXppbyBtb21lbnRhbmVhbWVudGUgbm9uIGRpc3BvbmliaWxlIiAvPgogICAgICAgICAgICAgICAgPC9lcnJvcnM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vaWFkZG85MS5hbHRlcnZpc3RhLm9yZy9zY3JpcHRwaHAvdGltLnBocCIgbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zIiB2YWx1ZT0iJSVncmF0dWl0aSUlIiAvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icmVzaWR1aSIgbGVmdD0ic21zOiIgcmlnaHQ9IjpyaW1hbmVudGkiIC8+CiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3dlYmxvZ2lubW9iaWxlLnJvc3NvYWxpY2UuYWxpY2UuaXQvYWxpY2UvanNwL1NNUy9pbnZpYVNtcy5qc3AiIG1ldGhvZD0iUE9TVCI+CiAgICAgICAgICAgIAk8aGVhZGVycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkNvb2tpZSIgdmFsdWU9ImFjY291bnQ9JSV1c2VybmFtZSUlQGFsaWNlLml0OyBsb2dpbl9hY2NvdW50PSUlbG9naW5fYWNjb3VudCUlOyBzZXJ2aXppbz1TTVM7IHNwYz0lJXNwYyUlOyBwcm9maWxlPUdvbGQ7IiAvPgogICAgICAgICAgICAgICAgPC9oZWFkZXJzPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJERVNUIiB2YWx1ZT0iJSVpbnRudW0lJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkFCR0RFU1QiIHZhbHVlPSIiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJUWVBFIiB2YWx1ZT0ic21zcCIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkFCR19OT01FX0xJU1RBIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iTk9NRV9MSVNUQSIgdmFsdWU9IiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlNIT1JUX01FU1NBR0UyIiB2YWx1ZT0iJSVtZXNzYWdlJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJTSE9SVF9NRVNTQUdFIiB2YWx1ZT0iJSVtZXNzYWdlJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJJTlZJQV9TVUJJVE8iIHZhbHVlPSJ0cnVlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iR0lPUk5PIiB2YWx1ZT0iMTglMkY2JTJGMjAxMCIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Ik9SRSIgdmFsdWU9IjA5IiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iTUlOVVRJIiB2YWx1ZT0iMDAiIC8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd2VibG9naW5tb2JpbGUucm9zc29hbGljZS5hbGljZS5pdC9hbGljZS9qc3AvRXdzSkNhcHRjaGEuanBnIiBjYXB0Y2hhPSIxIj4KICAgICAgICAgICAgICAgIDxoZWFkZXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iUHJhZ21hIiB2YWx1ZT0ibm8tY2FjaGUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJSZWZlcmVyIiB2YWx1ZT0iaHR0cDovL3dlYmxvZ2lubW9iaWxlLnJvc3NvYWxpY2UuYWxpY2UuaXQvYWxpY2UvanNwL1NNUy9pbnZpYVNtcy5qc3AiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJDb29raWUiIHZhbHVlPSJhY2NvdW50PSUldXNlcm5hbWUlJUBhbGljZS5pdDsgbG9naW5fYWNjb3VudD0lJWxvZ2luX2FjY291bnQlJTsgc2Vydml6aW89U01TOyBzcGM9JSVzcGMlJTsgcHJvZmlsZT1Hb2xkOyIgLz4KICAgICAgICAgICAgICAgIDwvaGVhZGVycz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93ZWJsb2dpbm1vYmlsZS5yb3Nzb2FsaWNlLmFsaWNlLml0L2FsaWNlL2pzcC9TTVMvaW52aWFTbXMuanNwIiBtZXRob2Q9IlBPU1QiPgogICAgICAgICAgICAJPGhlYWRlcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJDb29raWUiIHZhbHVlPSJhY2NvdW50PSUldXNlcm5hbWUlJUBhbGljZS5pdDsgbG9naW5fYWNjb3VudD0lJWxvZ2luX2FjY291bnQlJTsgc2Vydml6aW89U01TOyBzcGM9JSVzcGMlJTsgcHJvZmlsZT1Hb2xkOyIgLz4KICAgICAgICAgICAgICAgIDwvaGVhZGVycz4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iREVTVCIgdmFsdWU9IiUlaW50bnVtJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJBQkdERVNUIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iVFlQRSIgdmFsdWU9InNtc3AiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJBQkdfTk9NRV9MSVNUQSIgdmFsdWU9IiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Ik5PTUVfTElTVEEiIHZhbHVlPSIiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJTSE9SVF9NRVNTQUdFMiIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iU0hPUlRfTUVTU0FHRSIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iSU5WSUFfU1VCSVRPIiB2YWx1ZT0idHJ1ZSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkdJT1JOTyIgdmFsdWU9IjE4JTJGNiUyRjIwMTAiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJPUkUiIHZhbHVlPSIwOSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Ik1JTlVUSSIgdmFsdWU9IjAwIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY2FwdGNoYWZpZWxkIiB2YWx1ZT0iJSVjYXB0Y2hhX3ZhbHVlJSUiIC8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CiAgICAgICAgICAgICAgICA8YWNjZXB0PgogICAgICAgICAgICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJjb24gc3VjY2Vzc28iIGFjY2VwdG1zZz0iU01TIEludmlhdG8hIEhhaSBhbmNvcmEgJSVyZXNpZHVpJSUgU01TIGRpc3BvbmliaWxpIiAvPgogICAgICAgICAgICAgICAgPC9hY2NlcHQ+CiAgICAgICAgICAgICAgICA8ZXJyb3JzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJ0ZW1wbyBtYXNzaW1vIHBlciIgZXJybXNnPSJTdXBlcmF0byBpbCB0ZW1wbyBtYXNzaW1vIHBlciBsJmFwb3M7aW5zZXJpbWVudG8gZGVsIGNvZGljZSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iMzAyIEZvdW5kIiBlcnJtc2c9IlJpdGVudGEiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9Im5vbiBzb25vIGNvcnJldHRpLiIgZXJybXNnPSJDb2RpY2UgZGkgY29udHJvbGxvIHNiYWdsaWF0byIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0ibm9uIGRpc3BvbmliaWxpJmx0O2JyJmd0OyIgZXJybXNnPSJBbGljZTogU2lzdGVtaSBub24gZGlzcG9uaWJpbGkiIC8+CiAgICAgICAgICAgICAgICA8L2Vycm9ycz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgIDwvcHJvY2VkdXJlPiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNiIgbmFtZT0iVm9kYWZvbmUtTU1TIiB2PSIxLjIiIG1heHNtcz0iMTAwIiBzaW5nbGVsZW49IjEwMDAiIHNtc19kaXZpc29yPSIxMDAwIiBtYXhsZW49IjEwMDAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJBQ0NFTlQiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJtSkxSMFFBL3dEL0FQK2d2YWVUQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUNSRWxFUVZSNDJxV1RUVWhVVVJUSGYzZmVlek5hbHJnS1RHZUVhZGNIUGZPREhxbXRraklJSWhDaHBTMkxGdVUyaENCSWhCYTFDTE1nS2VuRExDb3lSSW8rekNod2hDRUtVcGtwYkNIMFlMSnhadDdIYVRIT2xDaXo2Y0xsbm5QdS9mOE81OTU3VkR3MnhmOE1mYjFnNU42NGVCOWplSXVMQkNJMWFHMFdSbTB0czlFdHFpUWdNakloMmRHbjVId1B2UzdNNXN0OWFNME5wQzllWXZuY2VhcDFRNHl1WXlUYXJTSW9VREJxK2diRWVmQUlUWUd4djQxTkl6ZlI5emJoenNUSkRnNmhnaUdVZ3V6UU1PR3J3N0lLRUI2YkZEOFdRd1YxaUZaVDBkK0xLaXNEd0U5K1IxV1dJMWtmQ0tBWkJzNkx0MFJmejBnUjRBN2RSZ1ZENERoc1BIdW1LQVlJSFRsRTVjUVl3YU1kNExyNXJPVkJNdGR1Rk04SUlMWnBDU0IremhFUmtVSzhZSXVJcEU2Y0V0dHNMZTZ0ekwvaVZGZjNHdEcvYTJiODVVcXlWckZOUzM2ZDdoRjk5V040SmQ5Y2kxUmo3MmlrYXZvVkFLbDZzNkIwVnk3c1cwbUFsMWdBSjRCdHRnS3dlZkJLSHVCbDhwa2x0VlFTNE55OVQ5V1g5MFUvZmYwV2dYaHNTdW0rWUpzVzZBSHNuYzFrSHo0bVh6YUlDSkxKa0xyUWp6UDVEdHUwc0UyTG45dWJtS3VQS2hXUFRSRys4MHpjSjg4aHBLRThMVi9PdHEyVTdXbkF6enJrM2t5aWZpeWdqR0FlNnVRd3VqcEpkTFFvSFNEWmVWQkZQbjBWZjNZZTBYMUUrYWo1SkxuUGN5QStBY1BBRDRZUVFPV3k2THQyaytob1VhdStjcUwzcEdKZkU3S1VCa0I1QXJvR2hwSDNmUS8xTzQzUmZvQmtUM2V4RjlSNjdWdzNNQ3J1aDJsOFdVYWhVQnNxTUJycm1UOStlRTAzL2dIMkpRN3VHQ1RtclFBQUFBQkpSVTVFcmtKZ2dnPT0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSBNTVMgdGVzdHVhbGkgdHJhbWl0ZSBpbCBzaXRvIFZvZGFmb25lLCBzb2xvIHZlcnNvIG51bWVyaSBWb2RhZm9uZS48L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJtaXR0ZW50ZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgaWwgbm9tZSBjaGUgdmVycmEnIHZpc3VhbGl6emF0byBjb21lIG1pdHRlbnRlIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL21tc3ZpYXdlYi5uZXQudm9kYWZvbmVvbW5pdGVsLml0L1dlYkNvbXBvc2VyL01NU1NlcnZsZXRVcGxvYWQ/bmV4dFBhZ2U9L1dlYkNvbXBvc2VyL3dlYi90ZXN0LmpzcCIgbWV0aG9kPSJwb3N0IiBjb25kaXRpb249IiUlYXR0YWNoJSUiPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJtbXMiIGxlZnQ9ImZpbGVOYW1lPSIgcmlnaHQ9IiZhbXA7ZmlsZVNpemUiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJGSUxFMSIgdHlwZT0iYXR0YWNoIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iZXJyb3IiIGVycm1zZz0iTCdpbW1hZ2luZSBpbnNlcml0YSBub24gc3VwcG9ydGF0YSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cDovL21tc3ZpYXdlYi5uZXQudm9kYWZvbmUuaXQvV2ViQ29tcG9zZXIvd2ViL2VsYWJvcmFwb3AuanNwIiBtZXRob2Q9InBvc3QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InN1YmplY3R0b3NlbmQiIHZhbHVlPSJEYTolMjAlJW1pdHRlbnRlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9IlRleHROYW1lIiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InJlY2lwaWVudCIgdmFsdWU9IiUlaW50cHJlZiUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iU21pbE5hbWUiIHZhbHVlPSIiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9IkF1ZGlvTmFtZSIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iSW1hZ2VOYW1lIiB2YWx1ZT0iIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCgkgIDx2YXIgZXJyc3RyPSJ2ZXJpZmljYXRvIHVuIGVycm9yZSBkdXJhbnRlIGxhIHByb2NlZHVyYSIgZXJybXNnPSJFcnJvcmUgZHVyYW50ZSBsYSBwcm9jZWR1cmEiIC8+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlNlbmRNZXNzYWdlPTAiIGVycm1zZz0iSWwgdHVvIG1lc3NhZ2dpbyBub24gZScgc3RhdG8gaW52aWF0bywgcmlwcm92YS4iLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICAgIDxhY2NlcHQ+DQoJICA8dmFyIGFjY2VwdHN0cj0ibWVzc2FnZ2lvICZhbXA7ZWdyYXZlOyBzdGF0byBpbnZpYXRvIiAvPg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJTZW5kTWVzc2FnZT0xIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjQwIiBuYW1lPSJKYWNrU01TLU1lc3NlbmdlciIgdj0iMS40IiBtYXhzbXM9IjUwMCIgc2luZ2xlbGVuPSI4MDAwIiBzbXNfZGl2aXNvcj0iODAwMCIgbWF4bGVuPSI4MDAwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJHZEJUVUVBQUsvSU53V0s2UUFBQUJsMFJWaDBVMjltZEhkaGNtVUFVR0ZwYm5RdVRrVlVJSFl6TGpVdU5ENk56SFlBQUFDalNVUkJWRGhQWTJRQWdyQ0tPZnV1UEhybkNHSVRDM1RraFBhdjZraHhBbXZXaXVyNlR3NEc2V1dBYVNUV1pwZzZ1RDZxRzBESUs5UjNnVTVVOTM4UUpqVU00UHAwWTNyL2d6RE1BQmdmRjQydWprRS9mc0ovRUNiVkJYQjlob21ULzRNd3FRYkE5WUVTZzNISzlQL2tZSEJDZ2lWbDA0eFovMG5CY00zb1RyZkludmNmaG5FcXd1ZGZxL3pGLzBHWUxNMGdnMjJMbDVPdkdXU0FROWtha21JRUFLcTY1S084WDZGUUFBQUFBRWxGVGtTdVFtQ0MiID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSBtZXNzYWdnaSBncmF0dWl0aSBhZCB1dGVudGkgZGkgSmFja1NNUzwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LkphY2tTTVMuaXQiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5KYWNrU01TLml0IiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KIDxwcm9jZWR1cmU+DQogIAogICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vcS5qYWNrc21zLml0L01lc3NlbmdlciI+DQoJCTxjb250ZW50cz4NCgkJCTx2YXIgbmFtZT0ic3BlYyIgbGVmdD0nOlJFU1A6JyByaWdodD0nOi9SRVNQOicgLz4NCgkJPC9jb250ZW50cz4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJtc2ciIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idSIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iZGVzdCIgdmFsdWU9IiUlaW50bnVtJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJPSzpSRVNQOiIgYWNjZXB0bXNnPSIlJXNwZWMlJSIvPg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJTRU5UIi8+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9IlFVRVVFRCIgYWNjZXB0bXNnPSJNZXNzYWdnaW8gYWNjb2RhdG8iLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IktPOlJFU1A6IiBlcnJtc2c9IiUlc3BlYyUlIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9IklsIGRlc3RpbmF0YXJpbyBub24gZXNpc3RlIiBlcnJtc2c9IlF1ZXN0byBudW1lcm8gbm9uIHB1bycgcmljZXZlcmUgSk1TIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9Im5vbiBoYSBhdHRpdmF0byIgZXJybXNnPSJJbCBkZXN0aW5hdGFyaW8gbm9uIGhhIGF0dGl2YXRvIGxhIHJpY2V6aW9uZSIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJFUlJPUjogMyIgZXJybXNnPSJMYSBjb2RhIGRpIG1lc3NhZ2dpIGRlbCBkZXN0aW5hdGFyaW8gZScgcGllbmEuIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlNlcnZlciBub24gZGlzcG9uaWJpbGUiIGVycm1zZz0iU2VydmVyIG5vbiBkaXNwb25pYmlsZSIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJVc2VybmFtZSBvIHBhc3N3b3JkIHNiYWdsaWF0aSIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIHNiYWdsaWF0aSIgZXJyY29kZT0iNSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCjwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjkiIG5hbWU9IlNNU0J5TWFpbCIgdj0iMS4xIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE0MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSIxNDAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJJU08tODg1OS0xIiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFCbUpMUjBRQS93RC9BUCtndmFlVEFBQUFDWEJJV1hNQUFBc1RBQUFMRXdFQW1wd1lBQUFBbzBsRVFWUjQycTJUdXhJQ0lReEZiekpiNmU5Q0I1VjIrcnVoalFVYmQwWElQdlRNWkJoQ0VnSmNTRUpTTkZ3ZU4vUW9NWC81YUYyZ1RiU0VrUjhBZUN1NXh6cVdqeWEzUlhqUE9Vdk1ibEVGb0txcUFGUkMwdmxlUHN4OEZtY3c2Z3hFQkFrSjErY2RBQ0FodmMyRDhTUFRhTUU2MllJOUFlMDV3dVF0ZWwwUVVTMWdPOVRMWFVicHZMdk9IVnBNaVhtUjhrai9JMHdYZkVSOXZWajY2Mjg4d3d1cXBIU0hxRkVoZlFBQUFBQkpSVTVFcmtKZ2dnPT0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSAxMCBTTVMgYWwgZ2lvcm5vIGNvbiBTTVNieU1haWwsIHNvbG8gdmVyc28gbnVtZXJpIFZvZGFmb25lLjwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSJKYWNrU01TIiBkZXNjPSJJbnNlcmlzY2kgaWwgbm9tZSBjaGUgdnVvaSBmYXIgYXBwYXJpcmUgYWxsJ2luaXppbyBkZWwgbWVzc2FnZ2lvIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJlbWFpbCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCdlbWFpbCBjb24gY3VpIGhhaSBlZmZldHR1YXRvIGxhIHJlZ2lzdHJhemlvbmUgYWwgc2l0byB3d3cuMTkwLml0IiAvPgoJCTxvcHRpb25hbCBuPSIzIiBuYW1lPSJzbXRwIiBkZWZhdWx0PSJzbXRwLXNtcy52b2RhZm9uZS5pdCIgZGVzYz0iSW5zZXJpc2NpIGlsIHNlcnZlciBTTVRQIGRlbCB0dW8gcHJvdmlkZXIiIC8+CgkJPG9wdGlvbmFsIG49IjQiIG5hbWU9InBvcnRhIiBkZWZhdWx0PSIyNSIgZGVzYz0iSW5zZXJpc2NpIGxhIHBvcnRhIGRlbCBzZXJ2ZXIgU01UUCBkZWwgdHVvIHByb3ZpZGVyIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0ic29ja2V0Oi8vJSVzbXRwJSU6JSVwb3J0YSUlIj4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iTWFpbCBhY2NlcHRlZCIvPg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJNYWlsIHF1ZXVlZCBmb3IgZGVsaXZlcnkiLz4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iYWNjZXB0ZWQgZm9yIGRlbGl2ZXJ5Ii8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJVc2VyIHVua25vd24iIGVycm1zZz0iRW1haWwgZXJyYXRhIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9IkludmFsaWQgcm91dGUgYWRkcmVzcyIgZXJybXNnPSJFbWFpbCBlcnJhdGEiLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iRG9tYWluIG9mIHNlbmRlciBhZGRyZXNzIiBlcnJtc2c9IkVtYWlsIGVycmF0YSIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJEb21haW4gbmFtZSByZXF1aXJlZCBmb3Igc2VuZGVyIiBlcnJtc2c9IkVtYWlsIGVycmF0YSIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJNYWlsYm94IGRpc2FibGVkIGZvciB0aGlzIHJlY2lwaWVudCIgZXJybXNnPSJFbWFpbCBkZXN0aW5hdGFyaW8gZGlzYWJpbGl0YXRhIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9Im5vdCBhY2NlcHRpbmcgbWVzc2FnZXMiIGVycm1zZz0iRXJyb3JlIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgICA8Y29tbWFuZHM+DQogICAgICAgICAgPHZhciBjbWQ9IiAiLz4NCiAgICAgICAgICA8dmFyIGNtZD0iSEVMTyBpcCIvPg0KICAgICAgICAgIDx2YXIgY21kPSJNQUlMIEZST006ICZsdDslJWVtYWlsJSUmZ3Q7Ii8+DQogICAgICAgICAgPHZhciBjbWQ9IlJDUFQgVE86ICZsdDslJWludG51bSUlQHNtcy52b2RhZm9uZS5pdCZndDsiLz4NCiAgICAgICAgICA8dmFyIGNtZD0iREFUQSIvPg0KICAgICAgICAgIDx2YXIgY21kPSJGcm9tOiAlJW1pdHRlbnRlJSUgJmx0OyUlZW1haWwlJSZndDsiLz4NCiAgICAgICAgICA8dmFyIGNtZD0iVG86ICZsdDslJWludG51bSUlQHNtcy52b2RhZm9uZS5pdCZndDsiLz4NCiAgICAgICAgICA8dmFyIGNtZD0iU3ViamVjdDoiLz4NCiAgICAgICAgICA8dmFyIGNtZD0iQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyIvPg0KICAgICAgICAgIDx2YXIgY21kPSJYLVByaW9yaXR5OiAzIi8+DQogICAgICAgICAgPHZhciBjbWQ9IiIvPg0KICAgICAgICAgIDx2YXIgY21kPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgY21kPSIuIi8+DQogICAgICAgICAgPHZhciBjbWQ9IlFVSVQiLz4NCiAgICAgICAgPC9jb21tYW5kcz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSIyMCIgbmFtZT0iQ2VudHJvRW1pbGlhIiB2PSIxLjEiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTM1IiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjEzNSIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFCbUpMUjBRQS93RC9BUCtndmFlVEFBQUFDWEJJV1hNQUFBc1RBQUFMRXdFQW1wd1lBQUFDajBsRVFWUjQydFdUUzBoVVlRQ0Z2Ly9lTzQvR2NiS3BuQnFzYWVoQlVsYjBWS2lvcUlpaUlLSkZCVWxJajBVZ0ZFR3JLTnhFZ1l1Z29CYVZQZERvUVVaUFJUTnRrVWpFOU5KSzA4cG1ISjJwMFR2dnVUTi9xNkpvMmFxelBCd09uQThPL1BjU0xkMGRzaS82aWF4aE1MSEF6ZnBweXdXQVB6b2c3M1Uyb1dlU3JQQXVadjdFRWdGdzgyMmo3Qjc4d0Z4M01ldG1yQlJhZlZjRGpiMU5XTWtqbEJybVVlZGpPWC95WEhiV1ZkSVY3a0ZWQkxkOER3RTQybkJTSHJoOUJMdk5RcVlEemo2OUlqWEZiT0IyVEtLaHZFWnNxOTByMno0L3Axc1A0TmNIdUxTMW1rTDdXRjU4ZnNQaFYzdmtnWVlxRHEzYXg4YnBxK2tJK0VqSEREUnlLaGtqeGZWM0QrU0Y5bHFXVEM3aHFxK2U3UXUyc014YktuNXVQZDU2U2s0cm5Nciswbkt4L3pjR21sbFlpV2VHT1hhM21wUnE0QjhaSXBMNHp0UXg3ajlnamFSamVCeXV2eUFxQ1JKWXpUYnVWVnlnY3NrT3pyK3NJNjFBVDdqL2o2RE41S1FuOHZXdkFrMlRWalFzZUFxS3hPbG5OZEt1aktiTVBZK2FsN1hVdjIrVTdud1hqWjF0ZU8wdUxvZjdPTkZ5Um02WXVaYVd2amFHdzFGRTVmMHEyZFRiaWkyckVreUdxRmkwalNNckQ0cE5GM2RKMzFBblNrN2lkVTZoZWZjMVVkVmNMYys5dUlLTlBGUUZLc3AySWRwNm44c3YzNEpreVdLM1dOazhlODB2Y0JmYjcwaWhaaWxmdVBtWGQ4UFhMTDlHQXl3dG1zTUNUNGtROTUrOGxqMGZCOGlrVlBKSG1Za2tkU0RIREU4aC9tQVVrOGxFY0VnSHhhQmdUQjVrTkVSV0paNU5VRnpzUkVsR0VpaENKVGdVSVo3S1lCRVMxOWg4UnZRa0ZvdWtQekJJTEJYRHBLajBmd29qYzNIMDVBZ0RvUkM1V0J6TmJKT0lTQWJYQkN1R29lUHhqaU9kem1KV0ZVTCtOUGtPQjdPS25Rd082bGlzR21hVGd0YzdudEMzUEN4bXg3K2Y2UWZpSHhXVXB0ZmtSd0FBQUFCSlJVNUVya0pnZ2c9PSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIDEwIFNNUyBhbCBnaW9ybm8gdHJhbWl0ZSBDZW50cm9FbWlsaWE8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5iYW5jYWNlbnRyb2VtaWxpYS5pdCIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LmJhbmNhY2VudHJvZW1pbGlhLml0IiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5iYW5jYWNlbnRyb2VtaWxpYS5pdC9wb3J0YWwvcGFnZT9fcGFnZWlkPTk1LDI0NzQ1OCZhbXA7X2RhZD1wb3J0YWwmYW1wO19zY2hlbWE9UE9SVEFMIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idG9rZW4iIGxlZnQ9InNpdGUycHN0b3JldG9rZW4mcXVvdDsgdHlwZT0mcXVvdDtoaWRkZW4mcXVvdDsgdmFsdWUgPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vcG9ydGFsbG9naW4uY2VkZWNyYS5pdC9zc28vYXV0aCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzc291c2VybmFtZSIgdmFsdWU9IiUldXNlcm5hbWUlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzaXRlMnBzdG9yZXRva2VuIiB2YWx1ZT0iJSV0b2tlbiUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InN1YnNjcmliZXJuYW1lIiB2YWx1ZT0iY2VudG8iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icF9zdWJtaXRfdXJsIiB2YWx1ZT0iaHR0cDovL3BvcnRhbGxvZ2luLmNlZGVjcmEuaXQvc3NvL2F1dGgiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJMYSBjb21iaW5hemlvbmUgdXRlbnRlIGUgcGFzc3dvcmQgaW5zZXJpdGEiIGVycm1zZz0idXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuYmFuY2FjZW50cm9lbWlsaWEuaXQvcGxzL3BvcnRhbC9wb3J0YWxfY2VudG8uaW52aWFfbWVzc2FnZ2lvX2V4dCIgbWV0aG9kPSJwb3N0Ij4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJUSVBPX01FU1NBR0dJTyIgdmFsdWU9IlNNUyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJQQ09ESUNFX0FCSSIgdmFsdWU9IjA4NTA5IiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlBfQkFDS19VUkwiIHZhbHVlPSIvcGxzL3BvcnRhbC91cmwvcGFnZS9zaXRvL3Ntcy9pbnZpb19zbXMiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iREVTVElOQVRBUklPIiB2YWx1ZT0iJSVpbnRudW0lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0ZXN0byIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iTWF4IGRpIG1lc3NhZ2dpIGNvbnNlbnRpdG8gcGVyIGlsIHBvcnRhbGUiIGVycm1zZz0iU01TIGVzYXVyaXRpIHBlciBvZ2dpIiAvPg0KICAgICAgICAgICAgICAgIDwvZXJyb3JzPg0KICAgICAgICAgICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJNZXNzYWdnaW8gaW5vbHRyYXRvIGNvcnJldHRhbWVudGUiIC8+DQogICAgICAgICAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMjEiIG5hbWU9IkZvdG9FeHBvIiB2PSIxLjEiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE2MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFCbUpMUjBRQS93RC9BUCtndmFlVEFBQUFDWEJJV1hNQUFBc1RBQUFMRXdFQW1wd1lBQUFDNlVsRVFWUjQybVdUeld0Y1ZSeUduM1B1bWV2Tm5jOG1NMDBuMDA1SURZTFFoZFFvdE5ZSUx1TE9oVHZGZ3U0S0lrVmNkbEhRYk55N0VsMzRCd2hSYWltQ1FzRnNRa1FSbTFoYjJpWnBrNXBtTWpQSm5abjdjZTc1dWFnQndRZmU1UXZQNG4zaFg1NW9SUGgvWXFVa1YwWlM0NHNvSkM0bzJVUExVVThCN0lCSXdURDBERGdIZ05XR1VpNDBzeEdaQ3RrS0FxeXpLTUE1dzc2WGNpR09sSHJzKzFKT1U1TExIK0svZXhFWEhRQUtLWldKdnYyTzhjVkZPdE96Vkw3NEhGZXFZWklZNS9uazJoSjlkQmt6cmgxZFlHeCtnZUxjUy95WGpaK1hDUUF6TTB1NDhBWUNHRUI0S3ZyallJQXgxaUpBMW15UU8wY3k2Q0kyd1F1SzNQMXRoZU1BelJPSWM1aG9TSm9kNE1LUTdvTnQwcjkzTVdMQnIxUVpPMWxIMjV6RmkrL1J2L1VIMVVxUjZ0WWpKb0ZXdTRtbkZEZXYzZUNyanovZ1JCQml0V0poRUdNRXNCTU44bWFMUVJSejJCMVM4MHFFblJGVHZZampnRzIzVUFyaWt1SDArZlBNQk1jWXJpeHpKazBnQnRtZWYwMTY0bVF3U21WMGNDQjVsc25tOVd2eWpkYnlPOGpXOWUvRk9TZERHY2tSUDF4NlgxWkJORUI2dWtWWklOU0tvRnhHRzhQdWt3NHp6dkdvOEF5MmZRcWxGSVZSUnRyYlk1U2tyTjI1VFJrd0NWQnF0MUhBenVOTmR0YnVVQzFXK1BYbU1uVkFhbFVxazVPa21lWEtXMjhUL1hXTGtxNHh2YkhPczBwamNzQnJ6cUNVNHNhWFg3UDA2U2M4RDNqQWk1NEhFOGNvams5Z2UzMlNxRXZESzFJc1FNTUluY3hoOW9CNnU0WExjK0tOKzd3S25QTUxaRmxPT2MvWlBkWEdDdWd3NExPbEpYeXJHTHFFMVF2emhQZnVZYUxhQkNkbnA5R2V4K0RoSm1lQXMxbEdmTzRWc3JrNWRnWVJSYy9EZWlFbUNBRkk5dnYwT29lVUFGT2JxdE85dmM3VzNpSEovUTJhS01aRUtKeDlBWnlsck9EQkw2dkV3eEdpRkxvUThIRHRUK2p2azJqOTlFeFh4M3pwcGNKemt2T21RRXNjdzBhZHRha3B0dGZYV0ZFd3luSVN6Nk9ZR3pLVjhvNElMenRSNm1qM1AvbUIxUEtVMmR3UkFnN0lnTDdSM1BVOGxJTlVLWHcwbWJLOG5sZ0Y4QS90ZjNBWUVwenFpZ0FBQUFCSlJVNUVya0pnZ2c9PSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIFNNUyBhdmVuZG8gY3JlZGl0aSBhIHN1ZmZpY2llbnphIGNvbiBGb3RvZXhwby48L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5mb3RvZXhwby5uZXQiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5mb3RvZXhwby5uZXQiIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSIiIGRlc2M9Im1pdHRlbnRlIGRlaSBtZXNzYWdnaSAobm9uIHNlbXByZSBmdW56aW9uYSkiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgbWV0aG9kPSJQT1NUIiB1cmk9Imh0dHA6Ly93d3cuZm90b2V4cG8ubmV0L3Bhbm5lbGxvLmFzcCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibG9naW4iIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgIDwvdmFycz4NCgkJPGNvbnRlbnRzPg0KCQkgIDx2YXIgbmFtZT0iY3JlZGl0aXJlc2lkdWkiIGxlZnQ9IkNyZWRpdGkgYXR0dWFsaSA6ICIgcmlnaHQ9IiZsdDtCUiZndDsiLz4NCgkJPC9jb250ZW50cz4gIA0KICAgICAgPC9wYWdlPg0KCSAgPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0L2ZvdG9leHBvLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJjcmVkaXRzIiB2YWx1ZT0iJSVjcmVkaXRpcmVzaWR1aSUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0icmVzaWR1aSIgbGVmdD0iUmVzaWR1aToiIHJpZ2h0PSI6Ii8+DQogICAgICAgIDwvY29udGVudHM+DQoJICA8L3BhZ2U+DQogICAgICA8cGFnZSBtZXRob2Q9IlBPU1QiIHVyaT0iaHR0cDovL3d3dy5mb3RvZXhwby5uZXQvaW52aW9zbXMuYXNwIj4NCgkgICAgPGhlYWRlcnM+DQoJCSAgPHZhciBuYW1lPSJSZWZlcmVyIiB2YWx1ZT0iaHR0cDovL3d3dy5mb3RvZXhwby5uZXQvcGFubmVsbG8uYXNwIi8+DQoJCTwvaGVhZGVycz4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJwcmVmIiB2YWx1ZT0iJSVwcmVmJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im51bWVybyIgdmFsdWU9IiUlbnVtJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImZyb20iIHZhbHVlPSIlJW1pdHRlbnRlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImRhdGF0ZXh0IiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im51bSIgdmFsdWU9IjE2MCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iQjEiIHZhbHVlPSJJbnZpYSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibG9naW4iIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iaW52aWF0byBjb3JyZXR0YW1lbnRlLiIgYWNjZXB0bXNnPSJNZXNzYWdnaW8gSW52aWF0by4gJSVyZXNpZHVpJSUgc21zIHJlc2lkdWkuIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJ0ZW1wb3JhbmVhbWVudGUgc29zcGVzbyIgZXJybXNnPSJGb3RvZXhwbzogU2Vydml6aW8gdGVtcG9yYW5lYW1lbnRlIHNvc3Blc28iIGVycmNvZGU9IjUiLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iaWwgbG9naW4iIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBzYmFnbGlhdGkiIGVycmNvZGU9IjUiLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iTm9uIGhhaSBjcmVkaXRpIiBlcnJtc2c9Ik5vbiBwb3NzaWVkaSBjcmVkaXRpIHN1ZmZpY2llbnRpIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9Ik5vbiBoYWkgbGEgY29wZXJ0dXJhIiBlcnJtc2c9Ik5vbiBwb3NzaWVkaSBjcmVkaXRpIHN1ZmZpY2llbnRpIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjQ3IiBuYW1lPSJUaXppb2FuZGNhaW8iIHY9IjEuMiIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxMjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTIwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FJQUFBQ1FrV2cyQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUNURWxFUVZSNDJpWFN6VzhiVlJTRzhmZmNjKy9NMk9PNExvcExVcUVLaEZDRUtzUUNGcFg0czVGWXN1Z1NrQXFDUUlCaXRZVFlxYi9xOGN4NHZ1NDVoMFhXajU3ZGo4U1VUQWtDVXdBd0J5SVF5K0FZd0xEYit3KytmVVUvTGZYeW1WdS8zWG9GRVRIQkVRQ0FIQUV3UUJKUUo1UlJxK0puL2drN1NoRkd6ajlrQStIaE1KakJETW9ZbUluUC9sNFczLzhRLzlnTzcvZC95YUgwckQwNWIzQUtHRUFFS0NBV2xUd1FFZTRPNmMvL1ZEY2JPUldTVys2SmVsaUVKWU9TQ3BsRTAwalNuM29USGRYQjdXcXRLUStQSnVjei93amlvYWFLS21vcnJIQ0JrMUdhSkc2Y01xb0doNkdMaVpYZHJxejJZN29OYmUyTDNyZkNSd210a2hFeWh6TkN4bkJBUmFBODVUU0ozVUtQaDZIK3hacTlMeVN0b252ZllOK2didnZZdFJ3NzFwNTV2dDJVNHc4bmkxV3pYUlZvUyt4WG9WMzczdHkvRzF5djhlczYvclpxMXNlaDZxd29XbzBMSEpkWFgzOHo3RXE5K1M1a3ZtK3JiTGoxdnBWY1RsTnBSK1UrM044L2x2RHArWGwrbWIvODhmcnBmUFE4TCs1Mm00VmlrTWluZXhuMi91Sk1KbG4yN09uWlYxZnpkeTgrQVlYcGhKS0ExeTltbDAveTJSZ3ZYK1hYTjE4MjJ6ZDJ0MnhrNTdPTXZMY3A0MktLcTNrQ0JZbDJ6ZW16enljaGdDTnVMM0tlZnl6RlprUkRsdWZld1BERUFNRllCMDlBWW1QUFJyMUdTS1FPb1ZSR08zU2lMU1d1ZzFNakFBUmlaaERCSE9DaU9aYk9wV0ZaUWVzam1wMnExYTM2OE9CSG9vRWNNNGdmZEpFRHpIckNZaldrNVZMcS8ySmJrNmxmM2I3MTVBaXFxcUpPakkwOCtUQVlIaC8rWENSZi9QNzZQdSsyMCtUVXphWWZuV2YvQTkvQ1pwZ3pWNTBoQUFBQUFFbEZUa1N1UW1DQyIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIDMgU01TIHBlciBvZ25pIHBhY2NoZXR0byBhY3F1aXN0YXRvIGNvbiBpIGNyZWRpdGkgc3UgVGl6aW9hbmRDYWlvPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cudGl6aW9hbmRjYWlvLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnRpemlvYW5kY2Fpby5jb20iIC8+CgkJPG9wdGlvbmFsIG49IjMiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBpbCBub21lIGNoZSB2ZXJyYScgdmlzdWFsaXp6YXRvIGNvbWUgbWl0dGVudGUiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnRpemlvYW5kY2Fpby5jb20vcHJvZmlsZS9sb2dpbi5hc3B4IiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgPHZhciBuYW1lPSJwYXRoIiB2YWx1ZT0iJTJGcHVibGljJTJGZm9ydW0lMkZwcm9maWxlLnBocCIgLz4NCiAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InVzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPg0KICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+ICAgICAgICAgICAgICAgICANCgkJCQk8dmFyIG5hbWU9ImxvZ2luIiB2YWx1ZT0iTG9naW4iIC8+DQogICAgICAgICAgICA8L3ZhcnM+DQoJICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIiBlcnJtc2c9IlVzZXJuYW1lIG8gcGFzc3dvcmQgbm9uIHZhbGlkaSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3Ntcy5hcnViYS5pdC9TZWN1cmVfaW52aWFzbXNkb21pbmkuYXNwIiBtZXRob2Q9IlBPU1QiPg0KCSAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iUmFuZElEIiBsZWZ0PSJpbnB1dCB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyBuYW1lPSZxdW90O1JhbmRJRCZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+DQoJCQkJPHZhciBuYW1lPSJVcmxDbGllbnRlIiBsZWZ0PSJpbnB1dCB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyBuYW1lPSZxdW90O1VybENsaWVudGUmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7IiAvPg0KCQkJCTx2YXIgbmFtZT0iSURDb2RTTVMiIGxlZnQ9ImlucHV0IHR5cGU9JnF1b3Q7dGV4dCZxdW90OyBuYW1lPSZxdW90O0lEQ29kU01TJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIgLz4NCgkJCQk8dmFyIG5hbWU9IlBhdGhSZWZlcmVyIiBsZWZ0PSJpbnB1dCB0eXBlPSZxdW90O3RleHQmcXVvdDsgbmFtZT0mcXVvdDtQYXRoUmVmZXJlciZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+DQoJCQkJPHZhciBuYW1lPSJIdHRwUGF0aFJlZmVyZXIiIGxlZnQ9ImlucHV0IHR5cGU9JnF1b3Q7dGV4dCZxdW90OyBuYW1lPSZxdW90O0h0dHBQYXRoUmVmZXJlciZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+DQoJCQkJPHZhciBuYW1lPSJNaXR0ZW50ZSIgbGVmdD0iaW5wdXQgdHlwZT0mcXVvdDt0ZXh0JnF1b3Q7IG5hbWU9JnF1b3Q7TWl0dGVudGUmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7IiAvPg0KICAgICAgICAgICAgPC9jb250ZW50cz4gDQogICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IklEQ29kU01TIiB2YWx1ZT0iJSVJRENvZFNNUyUlIiAvPg0KICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iUGF0aFJlZmVyZXIiIHZhbHVlPSIlJVBhdGhSZWZlcmVyJSUiIC8+DQogICAgICAgICAgICAgICAgPHZhciBuYW1lPSJSYW5kSUQiIHZhbHVlPSIlJVJhbmRJRCUlIiAvPg0KICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iUmllcGlsb2dvRmF0dG8iIHZhbHVlPSJTSSIgLz4NCiAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc2Rlc3RpbmF0YXJpbyIgdmFsdWU9IiUlbnVtJSUiIC8+DQogICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNtaXR0ZW50ZSIgdmFsdWU9IiUlbWl0dGVudGUlJSIgLz4NCiAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc3ByZWZjZWxsIiB2YWx1ZT0iJSVwcmVmJSUiIC8+DQogICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNwdWJibGljaXQiIHZhbHVlPSIlNUJ0aXppb2FuZGNhaW8lMkVjb20lNUQiIC8+DQogICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXN0ZXN0byIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iVXJsQ2xpZW50ZSIgdmFsdWU9IiUlVXJsQ2xpZW50ZSUlIiAvPg0KICAgICAgICAgICAgPC92YXJzPg0KICAgICAgIDwvcGFnZT4JICAJICANCgkgICA8cGFnZSB1cmk9Imh0dHA6Ly9zbXMuYXJ1YmEuaXQvU21zU2VuZGVyL0RlZmF1bHQuYXNweCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJIdHRwUGF0aFJlZmVyZXIiIHZhbHVlPSIlJUh0dHBQYXRoUmVmZXJlciUlIiAvPg0KICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJJRENvZFNNUyIgdmFsdWU9IiUlSURDb2RTTVMlJSIgLz4NCiAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iTWl0dGVudGUiIHZhbHVlPSIlJU1pdHRlbnRlJSUiIC8+DQogICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlBhdGhSZWZlcmVyIiB2YWx1ZT0iJSVQYXRoUmVmZXJlciUlIiAvPg0KICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJSYW5kSUQiIHZhbHVlPSIlJVJhbmRJRCUlIiAvPg0KICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJSaWVwaWxvZ29GYXR0byIgdmFsdWU9IlNJIiAvPg0KICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNkZXN0aW5hdGFyaW8iIHZhbHVlPSIlJW51bSUlIiAvPg0KICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNtaXR0ZW50ZSIgdmFsdWU9IiUlbWl0dGVudGUlJSIgLz4NCiAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zcHJlZmNlbGwiIHZhbHVlPSIlJXByZWYlJSIgLz4NCiAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zcHViYmxpY2l0IiB2YWx1ZT0iJTVCdGl6aW9hbmRjYWlvJTJFY29tJTVEIiAvPg0KICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXN0ZXN0byIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJVcmxDbGllbnRlIiB2YWx1ZT0iJSVVcmxDbGllbnRlJSUiIC8+DQogICAgICAgICAgICA8L3ZhcnM+DQogICAgICA8L3BhZ2U+DQoJICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9InN0YXRvIGVzZWd1aXRvIGNvcnJldHRhbWVudGUiLz4NCiAgICAgICAgPC9hY2NlcHQ+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMzAiIG5hbWU9IlRpbSIgdj0iMS4yIiBtYXhzbXM9IjUiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjY0MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IklTTy04ODU5LTEiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJtSkxSMFFBL3dEL0FQK2d2YWVUQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUJwa2xFUVZSNDJ0MlR2V3RUWVJTSG4zdnozczgwelVmQmlvcGFLVG9ZS1JURXdkbEpITlJSd1VFNjVrOXdjSEhvVkhBVXNZS0xVTnlkUkhFUjJ0Q3BJQ0kxa1dyVG0vUW11ZlcrOXlidm0rc1FyUjg0MlVId1RJY0R2d1BuNFRtR2xKS0RsSkZsMlYrSGt5VEI1SUQxN3hlSTcwMGdGZWV2TE80RGNWMkxXQTd3UFJzQW1Rd3hKd3VzUGJwdFZJcitENGhuTG85RHgyV0k3RWFjN0FjMGNkaHdLdmhIcG5FdGsyNWZvdlNJQ2QvQmM2Mzk4UHBLelJCdkd6R3o2U2V1NzIwZ2NpYWg4S2lPUmt6WkJqZnUxbEM5aUkvYlBZTGRpSXZ6TTdUREw3eHZkcmkzOUdMTVFCUThUcnNhN1Rwb1lhRnlPVkxiWVRXeDJkcnE4SERsRFhsWGNPeHdpUXR6SjdoNjZSenRjQS95NDlPRVZocHJKNkNqQjJ4NlpWcGlrbXJhSVM0VmFMVzZmQTRpbXRzOXVuM0owdkpMTEV2d3V2NEIyeG5qTTE3Vkd5emNlWm9CK0ZNbHdpZ2hKMlBVVUpPa0NpRk1UTlBBY3l6eXZzM1I2U0x2R20yZUxONDBxcWZLdjVvNGMrMStWaTY0OUhkMlVVUE5LTXZ3UFp0WURwZzRWRUdtaXMxbk5lTm5FLytvOHZ5dEIyZUJXU0FCaXQvR3ZmcmpoZWUvcS93Zi9NSlhuTUt3NlQwNkN1TUFBQUFBU1VWT1JLNUNZSUk9IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgNSBTTVMgYWwgZ2lvcm5vIHZlcnNvIGkgbnVtZXJpIFRpbSBJdGFsaWE8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy50aW0uaXQgKG51bWVybyB0ZWxlZm9uaWNvIHNlbnphIGlsIDM5KSIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnRpbS5pdCIgLz4KCQk8b3B0aW9uYWwgbj0iMyIgbmFtZT0iQ29ycmV6aW9uZSIgZGVmYXVsdD0iIiBkZXNjPSJTY3JpdmVyZSBPTiBwZXIgbGEgY29ycmV6aW9uZSBkZWkgY2FyYXR0ZXJpIGFjY2VudGF0aSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSBtZXRob2Q9IlBPU1QiIHVyaT0iaHR0cDovL3QuamFja3Ntcy5pdC9zb3N0aXR1emlvbmVPMi5waHAiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9IkNIRUNLIiB2YWx1ZT0iJSVjb3JyZXppb25lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InRleHQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im1lc3MxIiBsZWZ0PSJUZVh0TWVTc0FnRT06IiByaWdodD0iOlRlWHRNZVNzQWdFIi8+DQogICAgICAgIDwvY29udGVudHM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSBtZXRob2Q9IlBPU1QiIHVyaT0iaHR0cHM6Ly93d3cudGltLml0L2F1dGhmZS9sb2dpbi5kbyI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibG9naW4iIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwb3J0YWxlIiB2YWx1ZT0idGltUG9ydGFsZSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idXJsT2siIHZhbHVlPSJodHRwczovL3d3dy50aW0uaXQvMTE5L2NvbnN1bWVyZGlzcGF0Y2hlciIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9ImxvZ2luZXJyb3IuZG8iIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBzYmFnbGlhdGkiIGVycmNvZGU9IjUiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vc21zd2ViLnRpbS5pdC9zbXMtd2ViL2FkZGRpc3BhdGNoIj4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iT2dnaSBoYWkgcmFnZ2l1bnRvIGlsIG51bWVybyBtYXNzaW1vIGRpIFNNUyBncmF0aXMgYSB0dWEgZGlzcG9zaXppb25lLiIgZXJybXNnPSJTbXMgRXNhdXJpdGkiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJkYXRhMSIgbGVmdD0idC1pbnZpc2libGUmcXVvdDsmZ3Q7Jmx0O2lucHV0IG5hbWU9JnF1b3Q7dDpmb3JtZGF0YSZxdW90OyB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZGF0YTIiIGxlZnQ9InNlcGVyYXRlRnJlZU51bWJlcnM6aGlkZGVuJnF1b3Q7IG5hbWU9JnF1b3Q7dDpmb3JtZGF0YSZxdW90OyB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zcmVzaWR1aSIgbGVmdD0iU01TIGRpc3BvbmliaWxpJnF1b3Q7IHNyYz0mcXVvdDthc3NldHMvY29tL3RyZW5kaXdlYi9zbXMvd2ViL2Fzc2V0cy9tYXN0ZXJfcHJvY2Vzc2kvaW1nX3Byb2Nlc3NpL3Ntcy5qcGcmcXVvdDsgc3R5bGU9JnF1b3Q7ZmxvYXQ6IGxlZnQ7JnF1b3Q7LyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2NvbG9yX2JsdWUmcXVvdDsgc3R5bGU9JnF1b3Q7ZmxvYXQ6IGxlZnQ7JnF1b3Q7IiByaWdodD0iL2RpdiZndDsiLz4JDQogICAgICAgIDwvY29udGVudHM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9zdXBlcm1hYy5hbHRlcnZpc3RhLm9yZy9zY3JpcHQvdGltLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJ2YWx1ZTEiIHZhbHVlPSIlJWRhdGExJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InZhbHVlMiIgdmFsdWU9IiUlZGF0YTIlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlc3MxIiBsZWZ0PSJTZXNzaW9uZTE6IiByaWdodD0iOiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VzczIiIGxlZnQ9IlNlc3Npb25lMjoiIHJpZ2h0PSI6Ii8+DQogICAgICAgIDwvY29udGVudHM+DQogICAgICA8L3BhZ2U+DQoJICA8cGFnZSB1cmk9Imh0dHA6Ly9pYWRkbzkxLmFsdGVydmlzdGEub3JnL3NjcmlwdHBocC9yaXBldGkucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICA8dmFyIG5hbWU9InBob25lIiB2YWx1ZT0iJSVzbXNyZXNpZHVpJSUiLz4NCiAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICA8dmFyIG5hbWU9Im51bWJlciIgbGVmdD0iJmd0OyIgcmlnaHQ9IiZsdDsiIC8+DQogICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL2lhZGRvOTEuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0cGhwL3RpbS5waHAiIG1ldGhvZD0iUE9TVCI+DQoJCSAgIDx2YXJzPg0KCQkgICA8dmFyIG5hbWU9InNtcyIgdmFsdWU9IiUlbnVtYmVyJSUiLz4NCgkJICAgPC92YXJzPg0KCQkgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgPHZhciBuYW1lPSJyZXNpZHVpIiBsZWZ0PSJzbXM6IiByaWdodD0iOnJpbWFuZW50aSIgLz4NCiAgICAgICAgICAgIDwvY29udGVudHM+DQoJCTwvcGFnZT4NCiAgICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwczovL3Ntc3dlYi50aW0uaXQvc21zLXdlYi9hZGRkaXNwYXRjaC5hZGRkaXNwYXRjaGZvcm0iPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InQ6Zm9ybWRhdGEiIHZhbHVlPSIlJXNlc3MxJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InJlY2lwaWVudFR5cGUiIHZhbHVlPSJGUkVFX05VTUJFUlMiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InQ6Zm9ybWRhdGEiIHZhbHVlPSIlJXNlc3MyJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImZyZWVOdW1iZXJzIiB2YWx1ZT0iJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idDpmb3JtZGF0YSIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY29udGFjdExpc3RJZCIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idDpmb3JtZGF0YSIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY29udGFjdHNJZFN0cmluZyIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iZGVsaXZlcnlTbXNDbGFzcyIgdmFsdWU9IlNUQU5EQVJEIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJ0ZXh0QXJlYVN0YW5kYXJkIiB2YWx1ZT0iJSVtZXNzMSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJtb2RlbHNTZWxlY3QiIHZhbHVlPSIiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3Ntc3dlYi50aW0uaXQvc21zLXdlYi92YWxpZGF0ZWNhcHRjaGEvRGlzcGF0Y2giPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgIDx2YXIgbmFtZT0iZGF0YTUiIGxlZnQ9InQ6Zm9ybWRhdGEmcXVvdDsgdHlwZT0mcXVvdDtoaWRkZW4mcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7IiAvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3Ntc3dlYi50aW0uaXQvc21zLXdlYi92YWxpZGF0ZWNhcHRjaGE6aW1hZ2UvZmFsc2U/dDphYz1EaXNwYXRjaCIgY2FwdGNoYT0iMSIvPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0L3RpbS5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idmFsdWUxIiB2YWx1ZT0iJSVkYXRhNSUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VzczUiIGxlZnQ9IlNlc3Npb25lMToiIHJpZ2h0PSI6Ii8+DQogICAgICAgIDwvY29udGVudHM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vc21zd2ViLnRpbS5pdC9zbXMtd2ViL3ZhbGlkYXRlY2FwdGNoYS52YWxpZGF0ZWNhcHRjaGFmb3JtIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8aGVhZGVycz4NCiAgICAgICAgICA8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwczovL3Ntc3dlYi50aW0uaXQvc21zLXdlYi92YWxpZGF0ZWNhcHRjaGEvRGlzcGF0Y2giLz4NCiAgICAgICAgPC9oZWFkZXJzPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InQ6YWMiIHZhbHVlPSJEaXNwYXRjaCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idDpmb3JtZGF0YSIgdmFsdWU9IiUlc2VzczUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idmVyaWZpY2F0aW9uQ29kZSIgdmFsdWU9IiUlY2FwdGNoYV92YWx1ZSUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iU01TIGludmlhdG8iIGFjY2VwdG1zZz0iU01TIEludmlhdG8hIFNNUyByZXNpZHVpICUlcmVzaWR1aSUlIi8+DQogICAgICAgICAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IkludmlvIEZhbGxpdG8iIGVycm1zZz0iTWVzc2FnZ2lvIG5vbiBpbnZpYXRvIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iTGUgbGV0dGVyZSBjaGUgaGFpIGluc2VyaXRvIG5vbiBjb3JyaXNwb25kb25vIGEgcXVlbGxlIHByZXNlbnRpIiBlcnJtc2c9ImNhcHRjaGEgZXJyYXRvIiAvPg0KICAgICAgICAgICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjI4IiBuYW1lPSJTTVNIb3N0aW5nIiB2PSIxLjAiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTMwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjEzMCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUFnTUFBQUJpblJmeUFBQUFERkJNVkVYLy8vOEFBQUFVWlArRnJmOERLV0grQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUFGa2xFUVZSNDJtTll0WXFCZ1lFSUlqVDAvMzhpQ0FBbkRCL2gwSlo1MHdBQUFBQkpSVTVFcmtKZ2dnPT0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSBTTVMgdHJhbWl0ZSBTbXNIb3N0aW5nIGluIGJhc2UgYSBxdWFudGkgbmUgcmltYW5nb25vIGRpc3BvbmliaWxpIGdpb3JuYWxtZW50ZTwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSJlbXB0eSIgZGVzYz0iTm9uIMOoIG5lY2Vzc2FyaW8gaW5zZXJpcmUgbnVsbGEiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnNtc2hvc3RpbmcuaXQvc21zTWFzdGVyL3NwZWRpemlvbmVGcmVlLmRvIiBtZXRob2Q9InBvc3QiPg0KCQk8aGVhZGVycz4NCgkJCTx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHA6Ly93d3cuZ2Vla2lzc2ltby5jb20vc21zLWdyYXRpcy5odG1sIiAvPg0KCQk8L2hlYWRlcnM+DQoJCTx2YXJzPg0KCQkJPHZhciBuYW1lPSJUZXh0TWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KCQkJPHZhciBuYW1lPSJHc21Db2RlIiB2YWx1ZT0iJSVwcmVmJSUiIC8+DQoJCQk8dmFyIG5hbWU9IlBob25lTnVtYmVyIiB2YWx1ZT0iJSVudW0lJSIgLz4NCgkJCTx2YXIgbmFtZT0iYmludmlvIiB2YWx1ZT0iSW52aWElMjBzbXMiIC8+DQoJCTwvdmFycz4NCgkJPGFjY2VwdD4NCgkJCTx2YXIgYWNjZXB0c3RyPSJzbXMtZ3JhdGlzT0siLz4NCgkJPC9hY2NlcHQ+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9InNtcy1ncmF0aXNLTyIgZXJybXNnPSJTTVMgTm9uIGludmlhdG8iIC8+DQogICAgICAgIDwvZXJyb3JzPg0KCSAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjE5IiBuYW1lPSJJbkJhbmNhIiB2PSIxLjIiIG1heHNtcz0iNSIgc2luZ2xlbGVuPSIxNDEiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTQxIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJtSkxSMFFBL3dEL0FQK2d2YWVUQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUM2MGxFUVZSNDJuV1RTMmhjQlJTR3YzTWY4M0R5bXRpTXNXa2FnMkliMGxnVGxXbFFOTkdGWFJSRVJhUllFVXFoU0JlRklycHg0d05SVUh4Z2xhb0lnbTF4bzBFM2FhazYxYmFhVUp6MEVkSjBNcldZVGpPWlRwcE1NdTk3NXg0WHNXSWIreThQaHgvTy8zOUgrQjh0NWN1OCtNRSt6VTRHOFR3bDBsWG13MTA3NU5ad2FNV3VkZU9nVUtxeTg3MVA5ZEpwbTN5aEFFQjV6R2IzM2k4MHQxaVN4b2JnelEzVVU1NS82eU9kR2hWOHRoSzl0d1BUTURoN2ZvYkozMTEyOFpuV2FwNllwckhTd0trNVRHU1NBRlRDYWJvMjNNNldMYXZFTkFYdit3VTk4Vk9KWXFxUlU5TUpLbTRGditVSFFBQVdTam0rakgrancxTkhtUzh1b2lpbVlTQUNLaDZrSStoSUQ0VEsxQStlWTJCOUx6dnYyeWFSdWxWWUphZkV2cFA3ZGYrWklWVEI5R3p3QkYvQXdySk1FQS9YdEttSUFMQlF6dkh0eERDcWFNa3Bpelg0MWJNYURqUWh3TUNhaDBqRUFseStuT2VGYmYwOCtFQ25nUEpIUEswZmo4UUpCOFBjMC9rd3NVeU0yTVhmZUtRamlyWDV6Z0VPSlkvU0hBeXp0ZnRKZVg4NHJ1UXl0QVhhcGF2bExnQXkyYnkwN0lrUTlOdXNXeC9tOGF0UnFqV1h0b1pXck9Ga0RBTVRWMTBLMVNLSUFucDl0Y1VxaVF0WjZrTUJJdTBtaWFzWHFib096Y0VtWkd4bW5MZVBmYUxuNXFib2J1d21lNlNUK2RrYVR6MjNsbzMzaHdWZ0lwSFJBME54NnVwczFrWXJuSjQveGVxNlZ0NTg5Q1VSei9NNFBuMlNkNDd0MVV0eldheVJLT1ppSTE3ZkdYUk5DbEhqV2xtb0tvN25FZ2sxczFRdGNHTDcwSEswbnVjeGZ1VThQNXo5V1k4Y0tMS1lOb24wWDZHOTF3RVZabWFYU00zbXVDWGdZM0JqRDRmL2pIRjgrM2RpR3VZeVNJYXhURmFsNmtodTlKQWVUazNTTUhzM1d5T2J4R2ViZlA3TGlFNlBwK2p1NitDVi9pZms5Y2YyWU80d1Y2THM5OW44T25wQlJzZiswa1J5anRmZS9WRU5FWEpMWlVMK0lIbC9tbURRZjEzQXhvM1B0S20zZzdZZWgvYlZUVlFxTHNXeXcyMHQ5ZHpSNS9IMXE3dkYrQWVvYXhKdW9zbGtoamNPSGxTQWw1OStSamFzYS8zMzFQL3FiNzBDUFJyN20wUnlBQUFBQUVsRlRrU3VRbUNDIiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgNSBvIDI1IFNNUyBhbCBnaW9ybm8gdHJhbWl0ZSBJbkJhbmNhPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cuaW5iYW5jYS5iY2MuaXQiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5pbmJhbmNhLmJjYy5pdCIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuaW5iYW5jYS5iY2MuaXQvbG9naW4uYXNweD9MTj1pdC1JVCZhbXA7VXJsQmFjaz1+JTJmaXQtaXQlMmZiYW5jYS1vbi1saW5lJTJmYWx0cmktc2Vydml6aS1yaXNlcnZhdGktLWEtdXRlbnRpLXJlZ2lzdHJhdGktJTJmc21zLWdyYXR1aXRpLmFzcHglM2ZpZEMlM2Q2MTc1MSUyNkxOJTNkaXQtSVQiPg0KCQkJPGNvbnRlbnRzPg0KCQkJCTx2YXIgbmFtZT0ic2Vzc2lvbiIgbGVmdD0iX19WSUVXU1RBVEUmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7IiAvPg0KCQkJCTx2YXIgbmFtZT0ic2Vzc2lkIiBsZWZ0PSJfX0VWRU5UVkFMSURBVElPTiZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiLz4NCgkJCTwvY29udGVudHM+DQoJCTwvcGFnZT4NCgkJPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0L3Nlc3Npb24ucGhwIiBtZXRob2Q9IlBPU1QiPg0KCQkJPHZhcnM+DQoJCQkJPHZhciBuYW1lPSJ2aWV3IiB2YWx1ZT0iJSVzZXNzaW9uJSUiIC8+DQoJCQkJPHZhciBuYW1lPSJldmVudCIgdmFsdWU9IiUlc2Vzc2lkJSUiIC8+DQoJCQk8L3ZhcnM+DQoJCQk8Y29udGVudHM+DQoJCQkJPHZhciBuYW1lPSJ2aWV3X18iIGxlZnQ9IlZJRVdTVEFURToiIHJpZ2h0PSI6IiAvPg0KCQkJCTx2YXIgbmFtZT0iZXZlbnRfXyIgbGVmdD0iRVZFTlRWQUxJREFUSU9OOiIgcmlnaHQ9IjoiIC8+DQoJCQk8L2NvbnRlbnRzPg0KCQk8L3BhZ2U+DQoJCTxwYWdlIHVyaT0iaHR0cDovL3d3dy5pbmJhbmNhLmJjYy5pdC9sb2dpbi5hc3B4P0xOPWl0LUlUJmFtcDtVcmxCYWNrPSU3ZSUyZml0LWl0JTJmYmFuY2Etb24tbGluZSUyZmFsdHJpLXNlcnZpemktcmlzZXJ2YXRpLS1hLXV0ZW50aS1yZWdpc3RyYXRpLSUyZnNtcy1ncmF0dWl0aS5hc3B4JTNmaWRDJTNkNjE3NTElMjZMTiUzZGl0LUlUIiBtZXRob2Q9IlBPU1QiPg0KCQkJPHZhcnM+DQoJCQkJPHZhciBuYW1lPSJfX0VWRU5UVEFSR0VUIiB2YWx1ZT0iIiAvPg0KCQkJCTx2YXIgbmFtZT0iX19FVkVOVEFSR1VNRU5UIiB2YWx1ZT0iIiAvPg0KCQkJCTx2YXIgbmFtZT0iX19WSUVXU1RBVEUiIHZhbHVlPSIlJXZpZXdfXyUlIiAvPg0KCQkJCTx2YXIgbmFtZT0iX19FVkVOVFZBTElEQVRJT04iIHZhbHVlPSIlJWV2ZW50X18lJSIgLz4NCgkJCQk8dmFyIG5hbWU9ImN0bDAwJEhlYWRlciRIZWFkZXJNZW51MSR0ZXN0byIgdmFsdWU9IiIgLz4NCgkJCQk8dmFyIG5hbWU9ImN0bDAwJE1haW5DUEgkTG9naW4xJFRleHRCb3hVc2VybmFtZSIgdmFsdWU9IiUldXNlcm5hbWUlJSIgLz4NCgkJCQk8dmFyIG5hbWU9ImN0bDAwJE1haW5DUEgkTG9naW4xJFRleHRCb3hQYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIgLz4NCgkJCQk8dmFyIG5hbWU9ImN0bDAwJE1haW5DUEgkTG9naW4xJEJ1dHRvbkxvZ2luIiB2YWx1ZT0iTG9naW4iIC8+DQoJCQk8L3ZhcnM+DQoJCQk8ZXJyb3JzPg0KCQkJCTx2YXIgZXJyc3RyPSJJIGRhdGkgaW5zZXJpdGkgbm9uIHNvbm8gZXNhdHRpIiBlcnJtc2c9InVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIiAvPg0KCQkJPC9lcnJvcnM+DQoJCTwvcGFnZT4NCgkJPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmluYmFuY2EuYmNjLml0L2l0LWl0L2JhbmNhLW9uLWxpbmUvYWx0cmktc2Vydml6aS1yaXNlcnZhdGktLWEtdXRlbnRpLXJlZ2lzdHJhdGktL3Ntcy1ncmF0dWl0aS5hc3B4P2lkQz02MTc1MSZhbXA7TE49aXQtSVQiPg0KCQkJPGNvbnRlbnRzPg0KCQkJCTx2YXIgbmFtZT0ic2Vzc2lvbjEiIGxlZnQ9Il9fVklFV1NUQVRFJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIgLz4NCgkJCQk8dmFyIG5hbWU9InNlc3NpZDEiIGxlZnQ9Il9fRVZFTlRWQUxJREFUSU9OJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPg0KCQkJPC9jb250ZW50cz4NCgkJPC9wYWdlPg0KCQkgPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0L3Nlc3Npb24ucGhwIiBtZXRob2Q9IlBPU1QiPg0KCQkJPHZhcnM+DQoJCQkJPHZhciBuYW1lPSJ2aWV3IiB2YWx1ZT0iJSVzZXNzaW9uMSUlIiAvPg0KCQkJCTx2YXIgbmFtZT0iZXZlbnQiIHZhbHVlPSIlJXNlc3NpZDElJSIgLz4NCgkJCTwvdmFycz4NCgkJCTxjb250ZW50cz4NCgkJCQk8dmFyIG5hbWU9InZpZXdfXzEiIGxlZnQ9IlZJRVdTVEFURToiIHJpZ2h0PSI6IiAvPg0KCQkJCTx2YXIgbmFtZT0iZXZlbnRfXzEiIGxlZnQ9IkVWRU5UVkFMSURBVElPTjoiIHJpZ2h0PSI6IiAvPg0KCQkJPC9jb250ZW50cz4NCgkJPC9wYWdlPg0KCQk8cGFnZSB1cmk9Imh0dHA6Ly93d3cuaW5iYW5jYS5iY2MuaXQvaXQtaXQvYmFuY2Etb24tbGluZS9hbHRyaS1zZXJ2aXppLXJpc2VydmF0aS0tYS11dGVudGktcmVnaXN0cmF0aS0vc21zLWdyYXR1aXRpLmFzcHg/aWRDPTYxNzUxJmFtcDtMTj1pdC1JVCIgbWV0aG9kPSJQT1NUIj4NCgkJCTx2YXJzPg0KCQkJCTx2YXIgbmFtZT0iX19FVkVOVFRBUkdFVCIgdmFsdWU9ImN0bDAwJE1haW5DUEgkQ29udGVudXRvMSRJbnZpb1NNUzEkTG5rQ29uZmVybWFTTVMiIC8+DQoJCQkJPHZhciBuYW1lPSJfX0VWRU5UQVJHVU1FTlQiIHZhbHVlPSIiIC8+DQoJCQkJPHZhciBuYW1lPSJfX1ZJRVdTVEFURSIgdmFsdWU9IiUldmlld19fMSUlIiAvPg0KCQkJCTx2YXIgbmFtZT0iX19FVkVOVFZBTElEQVRJT04iIHZhbHVlPSIlJWV2ZW50X18xJSUiIC8+DQoJCQkJPHZhciBuYW1lPSJjdGwwMCRIZWFkZXIkSGVhZGVyTWVudTEkdGVzdG8iIHZhbHVlPSIiIC8+DQoJCQkJPHZhciBuYW1lPSJjdGwwMCRNYWluQ1BIJENvbnRlbnV0bzEkSW52aW9TTVMxJFR4dE51bVRlbGVmb25vIiB2YWx1ZT0iJTJCJSVpbnRjb2RlJSUlJWludG51bSUlIiAvPg0KCQkJCTx2YXIgbmFtZT0iY3RsMDAkTWFpbkNQSCRDb250ZW51dG8xJEludmlvU01TMSRUeHRUZXN0b01lc3NhZ2dpbyIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KCQkJPC92YXJzPg0KCQkJPGVycm9ycz4NCgkJCQk8dmFyIGVycnN0cj0iSWwgbnVtZXJvIG1hc3NpbW8gZGkgbWVzc2FnZ2kgZ2lvcm5hbGllcmkiIGVycm1zZz0iU01TIGVzYXVyaXRpIHBlciBvZ2dpIiAvPg0KCQkJPC9lcnJvcnM+DQoJCQk8YWNjZXB0Pg0KCQkJCTx2YXIgYWNjZXB0c3RyPSJNZXNzYWdnaW8gaW52aWF0byBjb3JyZXR0YW1lbnRlLiIgLz4NCgkJCTwvYWNjZXB0Pg0KCQk8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMzIiIG5hbWU9IkV1cm9TTVMiIHY9IjEuMCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSI5NiIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSI5NiIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQm1KTFIwUUEvd0QvQVArZ3ZhZVRBQUFBQ1hCSVdYTUFBQTdFQUFBT3hBR1ZLdzRiQUFBQkJrbEVRVlI0MnFXVFBZckNVQlNGdnplTWhXQVRTQ2VpTmlsMEpTSllHY0VsdUF5M1lXK1RUblFGZ29oWXFwMlN3Z1ZvWStmelRKRVpKM0ZrVE9MWFBMamNjOTU3OThmd2pTU1JBV09NQVRCNXhIRVRrMWY4dytlem9MVXdtY0JxQldFSWxRclVhdER2ZytzbWN6OGV4Y3NsZUI2TVJ0Qm9nTzlIWnhqQ2V2M2tOc1U0blNUSGtRWUR5VnFsNG01d09FVENjbG1adUJkeHQ0UGg4TzhMeDJNb0ZGSVVzZG44RFFaQmppNU1wN0Rmdy9FSXZWNEdzL2gvNW5PcFZKSTJtL1ExU0JoWUszVTZrdXRLMjIweThYcVZ6dWNYQnBKMHVVamRybFFzU3EyVzVQdFN1eTE1bmhRRS8zUWh6dTBHc3hrc0Z0RUExZXRRclVhVDZEZ1ArL0QyTXIyN3psOEV2V2h2bTA5Umh3QUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgU01TIHRyYW1pdGUgRXVyb3NtcyBhdmVuZG8gY3JlZGl0aSBkaXNwb25pYmlsaTwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LmV1cm9zbXMub3JnIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cuZXVyb3Ntcy5vcmciIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmV1cm9zbXMub3JnL2NyZWRpdG8ucGhwIiBtZXRob2Q9InBvc3QiPgoJICA8dmFycz4KCQk8dmFyIG5hbWU9ImxvZ2luX3VzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPgoJCTx2YXIgbmFtZT0ibG9naW5fcGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+CgkgIDwvdmFycz4KCSAgPGVycm9ycz4KCQk8dmFyIGVycnN0cj0icGFzc3dvcmQgZXJyYXQiIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiIGVycmNvZGU9IjUiIC8+CgkgIDwvZXJyb3JzPgoJPC9wYWdlPgoJPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmV1cm9zbXMub3JnL3NlbmRfc21zLnBocCIgbWV0aG9kPSJwb3N0Ij4KCSAgPHZhcnM+CgkJPHZhciBuYW1lPSJyY3B0IiB2YWx1ZT0iMzklJWludG51bSUlIiAvPgoJCTx2YXIgbmFtZT0idGV4dCIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPgoJICA8L3ZhcnM+CgkgIDxhY2NlcHQ+CgkJPHZhciBhY2NlcHRzdHI9ImludmlhdG8gY29ycmV0dGFtZW50ZSIgLz4KCSAgPC9hY2NlcHQ+CgkgIDxlcnJvcnM+CgkJPHZhciBlcnJzdHI9Ik5vbiBoYWkgY3JlZGl0byBzdWZmaWNpZW50ZSIgZXJybXNnPSJOb24gaGFpIGNyZWRpdG8gc3VmZmljaWVudGUgcGVyIGludmlhcmUgU01TIiAvPgoJCTx2YXIgZXJyc3RyPSJNZXNzYWdnaW8gbm9uIGludmlhdG8iIGVycm1zZz0iTWVzc2FnZ2lvIG5vbiBpbnZpYXRvIiAvPgoJICA8L2Vycm9ycz4KCTwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSIzMSIgbmFtZT0iQ2FsbHdhdmUiIHY9IjEuMSIgbWF4c21zPSI1IiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSIxNjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQm1KTFIwUUEvd0QvQVArZ3ZhZVRBQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQlcwbEVRVlI0MnFYU01VaVZVUmpHOGQvVmk5RGtkQ0Z3dWhDMGlVRTRDWEVHd1NDQ29CWW5SUWlNQm1rVHhFRUVveUVRaE5ZSUVsMkt3c0hwdm9xaU9BUkJvNkJUMEpJZ1NLRWdPbnluK3Zxb205S3puY1B6UCsvN1B1ZWxqWUlyUWFPZHA2TU5QSTJ2MkF1YWYvUFYvMVFWYnpCVXVtNWlQK2pCWFlWbklYRlNyOENkV01yd0MyemlHaHJCR202VjdKK3hYQjFoRG9ONGtIaUU5L21CcFFvTW42QldxajZJRmR4T3RJTCtERFp4aEJZT01ZelZ4SjF5NjEzQmJqQ2V6dytENCtCYk1CMTBsOFBOV2Z3Misyd1V3UWtlQjJmQlRuRGRQMVRMcisvaVJtN3ZHWjVpS25GYUt0S0RnWnhGUDdxd1hjZDlMS012d3hPSitSK2o0UjdHY3JoVmJkZXpZUWJ2TUpwNG1jRVJ4VEkxc0k0cGZNQjN2TVpiVE5TQ2pmeW4rNG5KK0FXZVlBR0xpWU5LWmdPcDJCRzFZQWRYY1JPdjhyZk5KQlpkUUIxNGppK0tUajZpOTZMd3ovVU5uZ1JiL2tkQk00ZDNLWjBEN3d0aDRhTjFkL3dBQUFBQVNVVk9SSzVDWUlJPSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIFNNUyB2ZXJzbyBudW1lcmkgVVNBIGUgQ2FuYWRhIGNvbiBDYWxsd2F2ZTwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9ImNlbGx1bGFyZSIgZGVmYXVsdD0iIiBkZXNjPSJJbCBwcm9wcmlvIG51bWVybyBkaSBjZWxsdWxhcmUgY29tcHJlbnNpdm8gZGkgcHJlZmlzc28iIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBpbiIgZGVmYXVsdD0iIiBkZXNjPSIiIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9ImVtYWlsIiBkZWZhdWx0PSIiIGRlc2M9IiIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9qYWNrc21zLmphY2tzbXMuaXQvQ2FsbHdhdmUucGhwIiBtZXRob2Q9InBvc3QiPgoJICA8dmFycz4KCQk8dmFyIG5hbWU9ImMiIHZhbHVlPSIlJWNlbGx1bGFyZSUlIiAvPgoJCTx2YXIgbmFtZT0icCIgdmFsdWU9IiUlcGluJSUiIC8+CgkJPHZhciBuYW1lPSJlIiB2YWx1ZT0iJSVlbWFpbCUlIiAvPgoJCTx2YXIgbmFtZT0ibSIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPgoJCTx2YXIgbmFtZT0iZCIgdmFsdWU9IiUyQiUlaW50Y29kZSUlJSVpbnRudW0lJSIgLz4KCSAgPC92YXJzPgoJICA8ZXJyb3JzPgoJCTx2YXIgZXJyc3RyPSJQbGVhc2UgdmVyaWZ5IHlvdXIgY2VsbCIgZXJybXNnPSJWZXJpZmljYSBpbCB0dW8gbnVtZXJvIGRpIGNlbGx1bGFyZSIgLz4KCQk8dmFyIGVycnN0cj0iSW50ZXJuYXRpb25hbCBzZXJ2aWNlIGRvd24uIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIiIGVycm1zZz0iU2Vydml6aW8gbm9uIHJhZ2dpdW5naWJpbGUiIC8+CgkJPHZhciBlcnJzdHI9IkxvZ2luIGZhaWxlZCIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIHNiYWdsaWF0aSIgZXJyY29kZT0iNSIgLz4KCQk8dmFyIGVycnN0cj0iRXhjZWVkZWQgZGFpbHkgbGltaXQiIGVycm1zZz0iUmFnZ2l1bnRvIGlsIGxpbWl0ZSBkaSBTTVMiIC8+CgkgIDwvZXJyb3JzPgoJICA8YWNjZXB0PgoJCTx2YXIgYWNjZXB0c3RyPSJzZW50IHRvIiAvPgoJICA8L2FjY2VwdD4KICAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI3IiBuYW1lPSJZZXNNTVMiIHY9IjEuMyIgbWF4c21zPSI1MDAiIHNpbmdsZWxlbj0iMTI4IiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjEyOCIgcmVzZXQ9Im1vbnRobHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJtSkxSMFFBL3dEL0FQK2d2YWVUQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUNHa2xFUVZSNDJwV1N5MnNUY1J6RVA3L3NaamViSnNhWUd0UDRwTnFnYUsza1lyR0tVRkRRWTcxNThPS2Y0TUdUWGdWdkhrUzhpaWg0OE9LalNCVWZGMXRGTFJLMVJsb2J0UkxhYUpQUVBEYko3dGREVUN6WmdINXZNd3pEOEoxUm1lbEovdld5NW1iUkZmVFh2NnJmbkkvL3VHVkg0MVBMWE1WNUdpd0hrOWlodmc1ZXFVNXRoMEUyc0pYeGFvOThhQmllWWlXeWl0UC9CbCtzelV4VUxHbUs0cWkvQm8wMi84M2FKRE1Oa3dnT3BwTHVDVjdVQXpKcVZkWEhoa0ZDYTZLRk53QndzUmhqb3RaRHlmVmg0WFkzV0hSMWtycER2cVhoaUdKMFlZdFVRMGxFYVp3TWw5bHQyS3JQMzFKZERVeHhHYStGeGNISGU5c1FTeE91clVRbDdtdHlheVhNa3FQTFhOT1FyajhZQ2RZNHN4UW5iVFZZcTdrcTVuT2s2TUN3V2FVaVB2YWF0aXE1R3JROEVrem1iVzdjbmVDU2VxT21QdWZKNVhLU2VmeUFJL2E4ZW5UdkRvUGxXWFg1NFVzNWQvTytMRFlEblFubWxrcHkrM1dXVjdtOGZOOCt3cXp1VXN0TWNUNC9JN2xDaVoySmRYTGw2VFE5cHA5aXpaYTRIK1c1Zzl5UE1yeDlocXBYMnJoUUFxQ3dVZ1hnMUlFOXBPSlI3eWtidW9abDZGQ3ZnTnV1S3hSb1QzZFhJb1psNkZ4OU1zMzh6N0ozQ3hITDRPeXg0VldKTHB3NERFRERjVGg5Y0FoWGhNeENRVHhiQU5pWGpDbmdqMkJvWTY4Q0pMdFk1UHJ6ZHdEMGhvS2RUeHlJUjlYeHdYNkpCazNHMGlrRzFrY1lTNmRZWStxTXBWUHMzNVpndVZJbllwa2MycEZVelVvQmdGK1ZJOUwzWk1vdUN3QUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgYSBwYXJ0aXJlIGRhIDMgU01TIGFsIGdpb3JubyBvZmZlcnRpIGRhIFllcyFNTVMgPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cueWVzbW1zLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgIHd3dy55ZXNtbXMuY29tIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy55ZXNtbXMuY29tL2NnaS1iaW4veWVzbW1zL3llc3N0YXJ0LmNnaSIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lkIiBsZWZ0PSJzZXNzaW9uJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0aW1lIiBsZWZ0PSJub3d0aW1lJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkIxIiB2YWx1ZT0ibG9nb24iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0ibG9naW4iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibmljayIgdmFsdWU9IiUldXNlcm5hbWUlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IkxvZ2luIGFnYWluIGF0IiBlcnJtc2c9IkVycm9yZSBsb2dpbiBZZXNNTVMiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJXcm9uZyBQYXNzd29yZCIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIHNiYWdsaWF0aSIgZXJyY29kZT0iNSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9ImRpZCBub3QgbG9nb3V0IGNvcnJlY3RseSIgZXJybXNnPSJFcnJvcmUgZGEgWWVzTU1TOiByaXByb3ZhIHRyYSAzMCBtaW51dGkiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cueWVzbW1zLmNvbS9jZ2ktYmluL3llc21tcy95ZXNpbnRyby5jZ2kiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lvbiIgdmFsdWU9IiUlc2Vzc2lkJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibm93dGltZSIgdmFsdWU9IiUldGltZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNvdW50cnkiIHZhbHVlPSIyMTIiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibGFuZyIgdmFsdWU9Iml0IiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InN1Ym1pdCIgdmFsdWU9ImNvbnRpbnVlIiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy55ZXNtbXMuY29tL2NnaS1iaW4veWVzbW1zL3llc2xvZ2luLmNnaSIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzZXNzaW9uIiB2YWx1ZT0iJSVzZXNzaWQlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJsYW5nIiB2YWx1ZT0iaXQiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3Lnllc21tcy5jb20vY2dpLWJpbi95ZXNtbXMveWVzbW1zLmNnaSIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icmVzdWx0IiBsZWZ0PSJST1VURToiIHJpZ2h0PSJCQUNLR1JPVU5ELUNPTE9SOiIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Im51bWJlcl9mcmllbmQiIHZhbHVlPSJOTyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJudW1iZXIiIHZhbHVlPSIlMkIlJWludGNvZGUlJSUlaW50bnVtJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNlc3Npb24iIHZhbHVlPSIlJXNlc3NpZCUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9InNlbmQiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3Lnllc21tcy5jb20vY2dpLWJpbi95ZXNtbXMveWVzbG9nb3V0LmNnaSIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzZXNzaW9uIiB2YWx1ZT0iJSVzZXNzaWQlJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly90LmphY2tzbXMuaXQvWWVzTU1TLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJlc2l0byIgdmFsdWU9IiUlcmVzdWx0JSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJUaGUgbWVzc2FnZSBjb250YWlucyBiYWQiIGVycm1zZz0iSWwgbWVzc2FnZ2lvIGNvbnRpZW5lIHBhcm9sZSBwcm9pYml0ZSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IllvdSBhbHJlYWR5IHNlbnQgYSIgZXJybXNnPSJPZ2dpIGhhaSBnaWEmYXBvczsgaW52aWF0byAxIFNNUyBhIHF1ZXN0byBudW1lcm8uIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iWW91IG5lZWQgYXQgbGVhc3QiIGVycm1zZz0iTm9uIGhhaSBjcmVkaXRpIGRpc3BvbmliaWxpIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0ibm90IGJlZW4gc2VudCIgZXJybXNnPSJNZXNzYWdnaW8gbm9uIGludmlhdG8iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJUaGUgbWF4LiBudW1iZXIgb2YgRlJFRSBTTVMgcGVyIGhvdXIgaGFzIGJlZW4gcmVhY2hlZCIgZXJybXNnPSJMaW1pdGUgb3JhcmlvIGRpIHNtcyByYWdnaXVudG8sIHJpcnBvdmEgcGl1JmFwb3M7IHRhcmRpIiAvPg0KICAgICAgICAgICAgICAgIDwvZXJyb3JzPg0KICAgICAgICAgICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJTTVMgc2VudCIgLz4NCiAgICAgICAgICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI0IiBuYW1lPSJTTVNjaXR5IiB2PSIxLjEiIG1heHNtcz0iMSIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTUzMCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFCM1JKVFVVSDF3VUlEUklBdnBmQ0tBQUFBQWx3U0ZsekFBQU93d0FBRHNNQngyK29aQUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUZiU1VSQlZIamFuWlBQU2dKUkdNWFB2VE5wYWlVdGxJSUllb0ZvMlNZaUJ3cUQxZ1U5Z05EcnRPMEpXclpwRVNiVVNsclZBeFFSSldvWWF1Yjh1WE8vN2x5WmFQcWpqaDhNY3pmbk45ODU1dzdEdHltdmJoSEdHT3V1d3NJeml5ditDZUZhdkdZUkdJdWovL29ncTZ6dkV2ayt5SEZqQWNMaFJqSUJ4dmxFWWcwZ3RZaTBuY2tCZnI4UFVLejhJbVArOHE3Q0hGZ2lrS1NSY0RPaU5ReE16V2VSV1ZtRzlBUjZENDhRM1o3eUtNY0Q4TlEwRnZkMmtDOWFLcGMrbmsvUDBMaTRnblQrejRnYm1UVENPNURJemlHM3ZZblUwZ0xTYW90OHNRQ3VXaG9hb2dad3BpRkJvSGF0b2Q2MmJzWitlZ0VKTVR5REFKQlUzdDNYRmtUdkEvZkhKOGhaR3hyUUxGOUR1dDVRZ042OWVsQWlyOTJCMTJ5cDBPV2doYUNBNElhcVp5UWdtSnZESTNMZjJuQnFkVldmL0xzK05yQUt0VEdVTmV2Mk12b0hWZmRMSkxwZGlNNDdnamNvS2pablovVFI5endVcXVkYSt3blFYcGJaOTI0a0d3QUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgU01TIHRyYW1pdGUgaWwgc2l0byBkaSBTTVNjaXR5IGFjcXVpc3RhbmRvIGNyZWRpdGkgc3VsIHBvcnRhbGUuPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0ibmF0Y29kZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgaWwgcHJlZmlzc28gaW50ZXJuYXppb25hbGUgZGVsIG51bWVybyByZWdpc3RyYXRvIChzZW56YSArIG8gMDApIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJtaXR0ZW50ZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgaWwgbnVtZXJvIGRpIGNlbGx1bGFyZSByZWdpc3RyYXRvIHN1IHd3dy5zbXNjaXR5LmNvbSBzZW56YSBwcmVmaXNzbyBpbnRlcm5hemlvbmFsZSAiIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5zbXNjaXR5LmNvbSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9lYXN5cmFwLmFsdGVydmlzdGEub3JnL1NjcmlwdC9zbXNjaXR5bmF0Y29kZS5waHA/bmF0Y29kZT0lJW5hdGNvZGUlJSI+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InZhbG9yZXBhZXNlIiBsZWZ0PSJDT0RJQ0UtU01TQ0lUWToiIHJpZ2h0PSI6LS0tIiAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICA8L3BhZ2U+DQoJCQk8cGFnZSB1cmk9Imh0dHA6Ly9lYXN5cmFwLmFsdGVydmlzdGEub3JnL1NjcmlwdC9zbXNjaXR5aW50cHJlZi5waHA/aW50Y29kZT0lJWludGNvZGUlJSI+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InZhbG9yZXBhZXNlMSIgbGVmdD0iQ09ESUNFLVNNU0NJVFk6IiByaWdodD0iOi0tLSIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vaXQuc21zY2l0eS5jb20vIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImZpcnN0TG9naW5fYWN0aW9uIiB2YWx1ZT0ibG9naW4iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZmlyc3RMb2dpbl9jb3VudHJ5IiB2YWx1ZT0iJSV2YWxvcmVwYWVzZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImZpcnN0TG9naW5fZ3NtTnVtYmVyIiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImZpcnN0TG9naW5fcGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJJIGRhdGkgaW5zZXJpdGkgc29ubyBlcnJhdGkhIiBlcnJtc2c9IkRhdGkgZGkgbG9naW4gZXJyYXRpIiBlcnJjb2RlPSI1IiAvPg0KICAgICAgICAgICAgICAgIDwvZXJyb3JzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vaXQuc21zY2l0eS5jb20vc21zLyI+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc1VuaXF1ZUlkIiBsZWZ0PSJpZD0mcXVvdDtzbXNVbmlxdWVJZCZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+DQoJICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNyZWRpdHNiZWZvcmUiIGxlZnQ9IkkgdHVvaSBjcmVkaXRpOiZsdDsvZGl2Jmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O2NvbG9yRm9udEJsYWNrJnF1b3Q7Jmd0OyIgcmlnaHQ9IiZsdDsiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL2l0LnNtc2NpdHkuY29tL3Ntcy8iIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNyZWRpdHNhZnRlciIgbGVmdD0iSSB0dW9pIGNyZWRpdGk6Jmx0Oy9kaXYmZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7Y29sb3JGb250QmxhY2smcXVvdDsmZ3Q7IiByaWdodD0iJmx0OyIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc1VuaXF1ZUlkIiB2YWx1ZT0iJSVzbXNVbmlxdWVJZCUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc01lc3NhZ2VUeXBlIiB2YWx1ZT0iMSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNBY3Rpb24iIHZhbHVlPSJzZW5kIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc1RlbXBsYXRlcyIgdmFsdWU9IjAiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zVGV4dGFyZWEiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNQaG9uZWJvb2tTZWxlY3QiIHZhbHVlPSJjaG9vc2UiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zQ291bnRyeVNlbGVjdCIgdmFsdWU9IiUldmFsb3JlcGFlc2UxJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zR3NtTnVtYmVyIiB2YWx1ZT0iJSVpbnRudW0lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNDdXJyZW50U2VuZGVyIiB2YWx1ZT0iJTJCJSVuYXRjb2RlJSUlJW1pdHRlbnRlJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zU2VuZGVyVHlwZSIgdmFsdWU9ImdzbSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzdWJtaXRTbXMiIHZhbHVlPSJJbnZpYSBTTVMiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zTm9BZHMiIHZhbHVlPSIxIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc0NyZWRpdENvc3QiIHZhbHVlPSI3IiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCgkJCTxwYWdlIHVyaT0iaHR0cDovL2Vhc3lyYXAuYWx0ZXJ2aXN0YS5vcmcvU2NyaXB0L2VzaXRvLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjcmVkaXRzYmVmb3JlIiB2YWx1ZT0iJSVjcmVkaXRzYmVmb3JlJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3JlZGl0c2FmdGVyIiB2YWx1ZT0iJSVjcmVkaXRzYWZ0ZXIlJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQoJCQkJPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc2FmdGVyIiBsZWZ0PSJzbXM6IiByaWdodD0iOi0tLSIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KCQkJPGFjY2VwdD4NCiAgICAgICAgICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJNZXNzYWdnaW8gSW52aWF0byEiIGFjY2VwdG1zZz0iTWVzc2FnZ2lvIEludmlhdG8hIFNNUyByZXNpZHVpOiAlJXNtc2FmdGVyJSUiIC8+DQogICAgICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJJbnZpbyBGYWxsaXRvIiBlcnJtc2c9Ik1lc3NhZ2dpbyBub24gaW52aWF0byIvPg0KICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMjQiIG5hbWU9Ik8yLUlyZWxhbmQiIHY9IjEuOCIgbWF4c21zPSIyNTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTUzIiBtYXhsZW49IjEwMDAiIHJlc2V0PSJtb250aGx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFBWE5TUjBJQXJzNGM2UUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUFnWTBoU1RRQUFlaVlBQUlDRUFBRDZBQUFBZ09nQUFIVXdBQURxWUFBQU9wZ0FBQmR3bkxwUlBBQUFBamxKUkVGVU9FK05rMTFJazJFVXg1L2RHUWc2SExzSW5EZDZNZlRTQzJIM2dqcHNmZEIyRVRLS3RWYXhPWjBWd1pBSjIvQWl5bFNjeERCbUM0bzVhRjdFWUVVUWx1VWlKR0kzZmJCQlFySnBZeC9nNXQ1LzUzazB4OWlVRHB5YmMvN1A3NXozblBQS0pFa3lNOFkwNUt4U0FadVppYkxsNWZjc2tmak41UEpUYkdCQXpjYkd0S3luNXpTWDFCc0J3aUJMSnZNWUhKeURUR1lCWTVmSnI1TmZKYitDems0bi9QNFBYRlpuakFDQlZPb1A1SEwrNEJ4VXFnbk16c2F3dHZZTmtjaG42SFJ6RkRlUVg4RGs1SXQ2UUxsY0R1aDBqMGh3SGwxZHQ2bVRkSjNJWm50NkNCbkJ4c2FQbWp3TEJ0OEZtcHBHU1hBSjRmQ25obTJXeS92MEdYZEVFYVBSWHd2UWFOd0J4c3hvYjU5QXNialhFTUNENCtQUERydThpMUpwLzBqSG1wdHZFTUFFamNaNzdHT2VXRng4UXdBOTJ0cXMyTjdPVmdFS2hWMEErdm84SndMbTUxOFI0Q0lVaWxGa01ya3F3R0R3RWNBaUV0bHM4VmlJeWZSWWJLbTNkd3FWaWxRRnhPTS9BMG9sSDVBQkN3dXZHd0l5bVR5VVNwc0FlRHlydFVQa2QrRDF4aWg1RnEydEZzUmlYMnNFdTdzRmFMVVB4QUJWS2dkMmR2SllXWW5ENVFwaGMzTUw0cEFrNm1obzZENkpkT1JHNlBVK1RFKy9oTVB4SEIwZHR5aDJCaTB0WnF5dmYwZWhzQWVyOVFubGdsQ3JYUWNBWHBMdjJ1a01VNnMzUmJVREdQY1JndCtqYWluUkdlbVBPdXp1bnFvQy9rWFQ2UnlpMFM5WVducUxVT2dqRW9sZkRlZkNyM040MkZjUE9IR1hsT1FiY0x0WHhXV1dTaEFBOFRmK3J5V1RPZnBqcjZHLy95SHM5Z2orQWprNTkwZUVUR1BMQUFBQUFFbEZUa1N1UW1DQyIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIDI1MCBTTVMgYWwgbWVzZSBjb24gTzIgSXJlbGFuZDwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InBob25lbnVtYmVyIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBpbCBudW1lcm8gZGVsbGEgc2NoZWRhIE8yIHJlZ2lzdHJhdGEgc3Ugd3d3Lm8yLmllIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cubzIuaWUiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogICAgICAgIDxwcm9jZWR1cmU+CiAgICAgICAgICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwczovL3d3dy5vMm9ubGluZS5pZS9hbXNlcnZlci9VSS9Mb2dpbj9vcmc9bzJleHQiPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJJREJ1dHRvbiIgdmFsdWU9IkdvIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ib3JnIiB2YWx1ZT0ibzJleHQiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJDT05ORUNURk9STUdFVCIgdmFsdWU9IlRSVUUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJJRFRva2VuMSIgdmFsdWU9IiUlcGhvbmVudW1iZXIlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IklEVG9rZW4yIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICAgICAgPGVycm9ycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iWW91ciBsb2dpbiBoYXMgYmVlbiB1bi1zdWNjZXNzZnVsIGR1ZSB0byBpbmNvcnJlY3QgZGV0YWlscy4iIGVycm1zZz0iTnVtZXJvIGRpIHRlbCBvIFBhc3N3b3JkIGVycmF0aSIgZXJyY29kZT0iNSIgLz4KICAgICAgICAgICAgICAgIDwvZXJyb3JzPgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL21lc3NhZ2luZy5vMm9ubGluZS5pZS9zc29tYW5hZ2VyLm9zcD9BUElJRD1BVVRILVdFQlNTTyZhbXA7VGFyZ2V0QXBwPW8yb21fc21zY2VudGVyX25ldy5vc3AlM0ZNc2dDb250ZW50SUQlM0QtMSUyNlNJRCUzRF8iPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic2lkIiBsZWZ0PSJTSUQ9IiByaWdodD0iJmFtcDtZV18iIC8+CiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL21lc3NhZ2luZy5vMm9ubGluZS5pZS9pbmZvY2VudGVyLm9zcD9TSUQ9JSVzaWQlJSZhbXA7U0lEPSUlc2lkJSUiPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icmVmIiBsZWZ0PSJSRUY9IiByaWdodD0iJmFwb3M7OyIgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vbWVzc2FnaW5nLm8yb25saW5lLmllL28yb21fc21zY2VudGVyX25ldy5vc3A/TXNnQ29udGVudElEPS0xJmFtcDtTSUQ9XyZhbXA7U0lEPSUlc2lkJSUiPgogICAgICAgICAgICAgICAgPGVycm9ycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0nc3BuX1dlYnRleHRGcmVlJnF1b3Q7Jmd0OzAmbHQ7JyBlcnJtc2c9IlNtcyBFc2F1cml0aSIgLz4KICAgICAgICAgICAgICAgIDwvZXJyb3JzPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zIiBsZWZ0PSdzcG5fV2VidGV4dEZyZWUmcXVvdDsmZ3Q7JyByaWdodD0iJmx0OyIgLz4KCQkJCQk8dmFyIG5hbWU9InJldHVybiIgbGVmdD0iUlVSTCZxdW90OyB2YWx1ZT0mcXVvdDthc3BfZ2V0ZmlsZWlkLm9zcD8iIHJpZ2h0PSImcXVvdDsiLz4KCQkJCQk8dmFyIG5hbWU9ImZlZWQiIGxlZnQ9IkZJRCZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiLz4KCQkJCQk8dmFyIG5hbWU9InllYXIiIGxlZnQ9ImZvcm1fV2VidGV4dC5zZWxlY3RTdGFydFllYXIudmFsdWUgPSAnIiByaWdodD0iJyIvPgoJCQkJCTx2YXIgbmFtZT0ibW9udGgiIGxlZnQ9ImZvcm1fV2VidGV4dC5zZWxlY3RTdGFydE1vbnRoLnZhbHVlID0gZm9ybWF0TnVtKCciIHJpZ2h0PSInIi8+CgkJCQkJPHZhciBuYW1lPSJkYXkiIGxlZnQ9ImZvcm1fV2VidGV4dC5zZWxlY3RTdGFydERheS52YWx1ZSA9IGZvcm1hdE51bSgnIiByaWdodD0iJyIvPgoJCQkJCTx2YXIgbmFtZT0iaG91ciIgbGVmdD0iZm9ybV9XZWJ0ZXh0LnNlbGVjdFN0YXJ0VGltZS52YWx1ZSA9IGZvcm1hdE51bSgnIiByaWdodD0iJyIvPgoJCQkJCTx2YXIgbmFtZT0ibWludXRlIiBsZWZ0PSIrIGZvcm1hdE51bSgnIiByaWdodD0iJyIvPgogICAgICAgICAgICAgICAgPC9jb250ZW50cz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgICAgICA8cGFnZSBtZXRob2Q9IlBPU1QiIHVyaT0iaHR0cDovL2lhZGRvOTEuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0cGhwL3JpbW8yLnBocCI+CiAgICAgICAgICAgICAgICA8dmFycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InRleHQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNyZWRpdHMiIHZhbHVlPSIlJXNtcyUlIiAvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icmVzaWR1aSIgbGVmdD0ic21zOiIgcmlnaHQ9IjpyaW1hbmVudGkiIC8+CiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPgogICAgICAgICAgICA8L3BhZ2U+CgkJCTxwYWdlIHVyaT0iaHR0cDovL21lc3NhZ2luZy5vMm9ubGluZS5pZS9zbXNjZW50ZXJfZXZhbHVhdGUub3NwIiBtZXRob2Q9IlBPU1QiPgoJCQk8aGVhZGVycz4KCQkJICA8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwOi8vbWVzc2FnaW5nLm8yb25saW5lLmllL28yb21fc21zY2VudGVyX25ldy5vc3A/TXNnQ29udGVudElEPS0xJmFtcDtTSUQ9XyZhbXA7U0lEPSUlc2lkJSUiLz4KCQkJPC9oZWFkZXJzPgoJCQkgICAgPHZhcnM+CgkJCQkgIDx2YXIgbmFtZT0iTXNnQ29udGVudElEIiB2YWx1ZT0iLTEiLz4KCQkJCSAgPHZhciBuYW1lPSJTSUQiIHZhbHVlPSIlJXNpZCUlIiAvPgoJCQkJICA8dmFyIG5hbWU9IlNNU1RvIiB2YWx1ZT0iMDAlJWludGNvZGUlJSUlaW50bnVtJSUiIC8+CgkJCQkgIDx2YXIgbmFtZT0iU01TVGV4dCIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPgoJCQkJICA8dmFyIG5hbWU9IkZsYWdETFIiIHZhbHVlPSIxIiAvPgoJCQkJICA8dmFyIG5hbWU9IlJlcGVhdFN0YXJ0RGF0ZSIgdmFsdWU9IiUleWVhciUlLCUlbW9udGglJSwlJWRheSUlLCUlaG91ciUlLCUlbWludXRlJSUsMDAiIC8+CgkJCQkgIDx2YXIgbmFtZT0iUmVwZWF0RW5kRGF0ZSIgdmFsdWU9IiUleWVhciUlLCUlbW9udGglJSwlJWRheSUlLCUlaG91ciUlLCUlbWludXRlJSUsMDAiIC8+CgkJCQkgIDx2YXIgbmFtZT0iUmVwZWF0VHlwZSIgdmFsdWU9IjAiIC8+CgkJCQkgIDx2YXIgbmFtZT0iUmVwZWF0RW5kVHlwZSIgdmFsdWU9IjAiIC8+CgkJCQkgIDx2YXIgbmFtZT0iUkVGIiB2YWx1ZT0iJSVyZWYlJSIgLz4KCQkJCSAgPHZhciBuYW1lPSJGSUQiIHZhbHVlPSIlJWZlZWQlJSIgLz4KCQkJCTwvdmFycz4KCQkJPC9wYWdlPgoJCQk8cGFnZSB1cmk9Imh0dHA6Ly9tZXNzYWdpbmcubzJvbmxpbmUuaWUvc21zY2VudGVyX3NlbmQub3NwIiBtZXRob2Q9IlBPU1QiPgoJCQk8aGVhZGVycz4KCQkJICA8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwOi8vbWVzc2FnaW5nLm8yb25saW5lLmllL28yb21fc21zY2VudGVyX25ldy5vc3A/TXNnQ29udGVudElEPS0xJmFtcDtTSUQ9XyZhbXA7U0lEPSUlc2lkJSUiLz4KCQkJPC9oZWFkZXJzPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJTTVNUbyIgdmFsdWU9IjAwJSVpbnRjb2RlJSUlJWludG51bSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iU01TVGV4dCIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iU0lEIiB2YWx1ZT0iJSVzaWQlJSIgLz4KCQkJCQk8dmFyIG5hbWU9Ik1zZ0NvbnRlbnRJRCIgdmFsdWU9Ii0xIi8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJSRUYiIHZhbHVlPSIlJXJlZiUlIiAvPgoJCQkJCTx2YXIgbmFtZT0iRmxhZ0RMUiIgdmFsdWU9IjEiLz4KCQkJCQk8dmFyIG5hbWU9IlJlcGVhdFN0YXJ0RGF0ZSIgdmFsdWU9IiUleWVhciUlLCUlbW9udGglJSwlJWRheSUlLCUlaG91ciUlLCUlbWludXRlJSUsMDAiLz4KCQkJCQk8dmFyIG5hbWU9IlJlcGVhdEVuZERhdGUiIHZhbHVlPSIlJXllYXIlJSwlJW1vbnRoJSUsJSVkYXklJSwlJWhvdXIlJSwlJW1pbnV0ZSUlLDAwIi8+CgkJCQkJPHZhciBuYW1lPSJSZXBlYXRUeXBlIiB2YWx1ZT0iMCIvPgoJCQkJCTx2YXIgbmFtZT0iUmVwZWF0RW5kVHlwZSIgdmFsdWU9IjAiLz4KCQkJCQk8dmFyIG5hbWU9IkZvbGRlcklEIiB2YWx1ZT0iMCIvPgoJCQkJCTx2YXIgbmFtZT0iUlVSTCIgdmFsdWU9ImFzcF9nZXRmaWxlaWQub3NwPyUlcmV0dXJuJSUiLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KICAgICAgICAgICAgICAgIDxhY2NlcHQ+CiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9ImlzU3VjY2VzcyA6IHRydWUiIGFjY2VwdG1zZz0iU01TIEludmlhdG8uIE1lc3NhZ2dpIFJlc2lkdWk6ICUlcmVzaWR1aSUlIiAvPgogICAgICAgICAgICAgICAgPC9hY2NlcHQ+CiAgICAgICAgICAgICAgICA8ZXJyb3JzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJQcm9ibGVtIHNlbmRpbmcgbWVzc2FnZSIgZXJybXNnPSJFcnJvcmUgbmVsbCZhcG9zO2ludmlvIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJTZXJ2aWNlIGlzIGN1cnJlbnRseSB1bmF2YWlsYWJsZSIgZXJybXNnPSJJbCBzZXJ2aXppbyBub24gZSZhcG9zOyBhbCBtb21lbnRvIGRpc3BvbmliaWxlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJtYWludGVuYW5jZSIgZXJybXNnPSJJbCBzaXRvIGUmYXBvczsgaW4gbWFudXRlbnppb25lLHJpcHJvdmEgcGl1JmFwb3M7IHRhcmRpIiAvPgogICAgICAgICAgICAgICAgPC9lcnJvcnM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICA8L3Byb2NlZHVyZT4gPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjE2IiBuYW1lPSJWb2lwV2lzZSIgdj0iMS4xIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSIxNjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQU1BQUFBb0xROVRBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQXBkUVRGUkYrZm41MmRuWjhmSHg1dXlzNysvdjd2U3o0K2lscGFsK3h0QjM1dTJjNmU2dGk0eUM1ZXV1MDlxSDRPYWl2TUo0NXV5cnViNXYwOW1SMDlpU3A2aVp4TWwrN2UzdDVlWGw3Zk95NHVpbXk5Rjc5UFQwNGVtWjhQaW80ZW1ZL1B6OGxadzMzdWFWeGNYRnhzZkUxZDJKKy92N21wcWE2L0d4MytTaW1wMkIzK1dqMWRYVjN1U2ptSng3cXE5ZzQrbW82ZSt4MGRpVnY3Ky91c0NGcUtpbzA5cVdzTFJtdk1KcTBOSzVtYUE2dHJ4cnVyOTE3L1NqbEpkLzN1V1c1dWJtMmQyZDdmU24yK0tRMk42WTJONlh3TUt4bDU4NTVlbXY0K2VxM3VhajBOSEozZVNqcmEranhjdHluS0I4N2ZPMGRuZHg2T2pub2FXRHp0U1AwOXFndXJxMjE5dXRwS3BJNk9qb2xKazJqNWN1ejllUjVPcW1ycTZvNXV1cTBkSFF1cnE2MytlWXRidUI2TzZ0NWV1MDMrZWE3T3pzbDV0K3BxYW1yYkpmMU51U3JiQ1E1L0NoMmVHYTRPaW56OU9zNmUrZnJMTmo0K21sNSsyYzVlcXUwZEhSaDRoLzdQS3gyK0doNSsycno4L053OGg5NE9XanFLNWcrdnI2L2YzOTE5Nk0xOStPcGF0TDR1bVluSnljM3VhVXZNTjFzclpudmIyOWYzOTZzTFpsMythVzZPMnZ5czZtM3VXVmZIeDU0T2VseU5DRW5LSkE0dWVscnErbDZ2S2ZzN1N0cGFtS3k5Q0s2ZTJ6a1pndjRPYWRwNnBYbVo4NmUzdDQzK2FrZ29OeHlkQjd1TDFnNHVhbjQrbVlwNjVNckxKanFyQlF5Y3JDNCttcDMrV2t6czdPeHN5RTRlaW4yT0NNNU91YzE5alZ1cjl3M04zYm02TS9xcXFxNHVpWnFxdWwwZExQeDh5TjRlZW00K3FzMGRpWnY4VjN5YzJncjdLZGhJZHJ4OHVGNCtxZjA5dUsxTlRTOWZYMWlvdUR3c1dtNGVpWWs1WjR5OVIrNXU2Z3o5YUIrUGo0NSt1djA5bW40ZW1hdHJlbjFkWFQ2L0N6MXQ2THZjTjR5TXlsNWV1cTQraW51OEIxMGRXc3U4S0M0T2FZLy8vL2hCcjNMUUFBQU4xMFVrNVQvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL3dENU53bXZBQUFCRVVsRVFWUjQybUs0QXdFWFF3OURHQXdnb3Q3TG9qZnNxbXZWRWFqQXBtUHVNNW56ZGdta1hHQ3BBd2xzT0ZmZXR2R0F3NFJWSzlYMzJUTXczQW04ZWNsNzRnMnpURkUrejdYK1Bpd01kMWIwTE5ieDRLbVpvV2V0Tlo5cnJ6TEQ5dnl6azY5MFZWY2tPeS9qMTc5ZUlzSXdMWVJaMG5STmU2R2hnVkN0Y0J6cmRJWXB1Ni90TE5KZzJ6TW5xMUxRS2tZaWlDRjJoMXpqOHJubXQ1YzJuZmUxYkRpbHl4Q2ZuY01STld0enE1VENvZE51S3RGbERHbmJjcnZESXhmSnJKdTAwTzdrVkw4V0JtbHR6ZlhOdkgySmlwZWRqc3NhZDNZd3FJb3BuWmh0VTd4a0syZUJZMUxBRmthR093emlSdHpzd2FrSFhXN3RuMmRTeWdUMHk1bUkxUmxIYmRNWDlLc2xNRExKQXdRWUFPUG5lTWw4aFNVcUFBQUFBRWxGVGtTdVFtQ0MiID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBWb2lwV2lzZTwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnZvaXB3aXNlLmNvbSAgICIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnZvaXB3aXNlLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iTnVtZXJvIHZlcmlmaWNhdG8gY2hlIHZlcnJhJyB2aXN1YWxpenphdG8gY29tZSBtaXR0ZW50ZSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnZvaXB3aXNlLmNvbS9teWFjY291bnQvaW5kZXgucGhwP3BhcnQ9bWVudSIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJ1c2VybmFtZSIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Imp1c3Rsb2dnZWRpbiIgdmFsdWU9InRydWUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwYXNzd29yZCBpbmNvcnJlY3QiIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnZvaXB3aXNlLmNvbS9teWFjY291bnQvd2Vic21zMi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDxoZWFkZXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHBzOi8vd3d3LnZvaXB3aXNlLmNvbS9teWFjY291bnQvd2Vic21zMi5waHAiLz4NCiAgICAgICAgPC9oZWFkZXJzPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9InNlbmQiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhbmVsIiB2YWx1ZT0idHJ1ZSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY2FsbGVyaWQiIHZhbHVlPSIlJW1pdHRlbnRlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYm5ycGhvbmVudW1iZXIiIHZhbHVlPSIwMCUlaW50Y29kZSUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZHNjaGVkdWxlZCIgdmFsdWU9Im5vIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0ic2VudCEiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJTb3JyeSwgeW91IGRvIG5vdCBoYXZlIGVub3VnaCBjcmVkaXQiIGVycm1zZz0iQ3JlZGl0byBlc2F1cml0by4iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW5jb3JyZWN0IiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbnZhbGlkIiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMTciIG5hbWU9IlZvaXBDaGVhcCIgdj0iMS4xIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSIxNjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQjNSSlRVVUgxd2tGRkNVRzQ1NXFDZ0FBQUFsd1NGbHpBQUFld1FBQUhzRUJ3MmxVVXdBQUFBUm5RVTFCQUFDeGp3djhZUVVBQUFMa1NVUkJWSGphYlZOZlNGTlJHUC91MzIzWDd1YmMxdFptNkphNVdFS3hCSkZBRmpncWVoT00zbnFKUUxRaUNIdUlFS0tJWHRaTHJ6MkUwSU5nWWFJVVBpa3Evc0VraVVWc1RsZnBwaTNkbk52dXRydTd2bnR3c2NvREgrZWVlNzdmbi9PZDcxRHd6N2psY05RN1BKNWVxOU41bWVMNU14VCtLK1Z5VXorajBVL3g5ZlhYejhQaHVlcDhxbnJ4eE9kN1pHdHV2bTFyYXBKMUJvTmVVMVBEWVlEVjVkcmNpOGZqMzFaV3VJOGpJek1haG5sNGIzSXlvV0tZQ3ZpeHp6Zms5SHB2aUJZTHcydTFBc1B6ck41cWhaYk9UcWkxMjBWRmxqbkJZSUQ4L3Y3SnJDUmQ3Zkw3eDBZWEZ2Wm9GZnpVNzc5N3pPM3VwbG1XSzVmTG1wSXNFK0pUSFIzQTYzU1EydG9DMFdZemIwZWpUa3FyYlRRMU5wNU5oc01CNG1Dd3Y3OWVscVQzR2tHZ2FKb0dta0VzUmNHSnRqWTQ2bklSZDl1UkNCanRkbGdlSFlXaUpJRmNLR0FLZGJxOXJ1NERHdzhHdXdXOW5pb1ZpeUN6TEZDWW9CTFpQUjRvWU9MYTRpS0VwcWNoUERzTCtXeVdnRXNxQVFyVk9aMEJ0aXpMN1FTTVA5QUNVVFNqc295em5NdEJhR1lHc3FrVXBCTUpJSGtJcnBDVUFkcFpRUlNiQzdpaGdpdWJEV2hmUWllcFdBdytUMHlRWXpIb2p1RTRZSG1lckdYRUZOQVJtOTNkL1pWRHBXSStEMHFwUklnMFJpTWhpTXpQZzVST0F4YVdPQ3NyQ2dsMWNGb3Q4SUlBTEo3enU1VEovRkZSQ1RoUkJKVjBNeGdrcW9RQVE1MlZBNUlDQ3VCMS82QkZuZTR0c1ZjSkJKVHdGbFFIcWk2eGpjRlV4MEV1RXJ5anp5Y1M0NElnZksyQTFWbkM0NmdPYkY0dm5PdnArUStJL1FMWW9XV0wyZnlDYmwxYUt0YUtZaDl1NU9rRGt1VEdCbkZReEVLVjBPNWg2aWFUNmRuMXdjRXZwT1BHUXFGSWw5dTlLZFAwUmR4azFRb0xEUTBnN2V4QUpoNkhITjRHTmc1cE1MVkdOUWJEeTc3aDRUdC92WVh4MWRYbGF5MHRjOEJ4clZJeWFWRjdnRFdiSVIwS2dZTGZwTGdjbHpvaWl2ZDdoNFllSFBvYXlWVU5EUEN2MXRZdXlSUjFSZTl3M016RVlyTUtUYTl4aWpKMTNHaDhjeUVRU0ZUbi93YUE2VTdlRE14am5BQUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIHRyYW1pdGUgVm9pcENoZWFwPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cudm9pcGNoZWFwLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnZvaXBjaGVhcC5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSIiIGRlc2M9Ik51bWVybyB2ZXJpZmljYXRvIGNoZSB2ZXJyw6AgdmlzdWFsaXp6YXRvIGNvbWUgbWl0dGVudGUiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy52b2lwY2hlYXAuY29tL215YWNjb3VudC9pbmRleC5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGFzc3dvcmQgaW5jb3JyZWN0IiBlcnJtc2c9IlVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy52b2lwY2hlYXAuY29tL215YWNjb3VudC93ZWJzbXMyLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJhY3Rpb24iIHZhbHVlPSJzZW5kIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwYW5lbCIgdmFsdWU9InRydWUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImNhbGxlcmlkIiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJtZXNzYWdlIiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImJucnBob25lbnVtYmVyIiB2YWx1ZT0iMDAlJWludHByZWYlJSUlaW50bnVtJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlbmRzY2hlZHVsZWQiIHZhbHVlPSJubyIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9InNlbnQhIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJTb3JyeSwgeW91IGRvIG5vdCBoYXZlIGVub3VnaCBjcmVkaXQiIGVycm1zZz0iQ3JlZGl0byBlc2F1cml0by4iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW5jb3JyZWN0IiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbnZhbGlkIiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI5MiIgbmFtZT0iVm9kYWZvbmUtQXppZW5kZSIgdj0iMS40IiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSIzNjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFCa1VsRVFWUjQycVdUTFV3RFFSQ0Z2L0tUckNJcnI2NDFoSW9tVkNEQUZVT29CQVdPb0FpS0ZBTVlETlFnR3hLU3BnNE1DYTVGZ1FUSG42QUNRUUtpdU5aZDNVTU03UjQwWUpoa2IzZG4zcjZkbXplYkVvaC8yQmdBM3R1dTkvV0owckJZZ3BrQ3ZMekNaUk0rMm9icGRzRzVzQlpJM2t2TzJWaGJsK0pZa3FUYkc2bFlralkyYlg5OUpXVnlFa2pPU3lBamNFN3lrWFJjTldBY1MxdGxBMmF5MHYyZEJuWjdJMDBYTERZZ0FPbndLSUNhalFGQUs2dFNKOVkzYXpha0tFb1FUQmNDcU4yV2l2TjJlSC9mZk9WdDZhSWhkVHFCNUN0REk2alhRdURzVklQZmVucVMzdDZrV20wNHkrc3JDVFFDUUNZYmRPbDJiTTduWVhJU2RuZGhhUm5HeCtIOU5lRFM2WVNNdlY0STlNa3FGUmdkaFdvVkppWmdZU0hJbHpETDRPRStlR2Jub0ZpQ2JCWk9UaUNLNFB3YzZuWEk1d0t1MWJMWmlqajd2Y3FQRHlZZlNEaXIrRmI1anlJNkYzb2dxZmR4MVVhekVacXJYOENwM005Rzh0TE9uc240bDUyZEpyTHJFeVJiZWJGa29HUzZjU3kxbnUwQzc0UE1vTlN2cjNGbmI5aFhPUmh5cGY3N25EOEJ1eXpaZllGNktFc0FBQUFBU1VWT1JLNUNZSUk9IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgMTAgU01TIGFsIGdpb3JubyB2ZXJzbyBWb2RhZm9uZSB0cmFtaXRlIGlsIHNpdG8gVm9kYWZvbmUgQnVzaW5lc3MsIHNvbG8gcGVyIGNoaSBoYSBzaW0gYXppZW5kYWxpLjwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnZvZGFmb25lLml0IiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cudm9kYWZvbmUuaXQiIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9InNpbSIgZGVmYXVsdD0iIiBkZXNjPSJTZSBoYWkgcGnDuSBkaSB1bmEgc2ltIHJlZ2lzdHJhdGEsIGluc2VyaXNjaSBpbCBudW1lcm8gZGVsbGEgc2ltIGNvbiBjdWkgdnVvaSBpbnZpYXJlIHRyYW1pdGUgcXVlc3RvIGFjY291bnQuIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy52b2RhZm9uZS5pdC8iIGlnbm9yZWxvY2F0aW9uPSIxIi8+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cudm9kYWZvbmUuaXQvMTkwL3RyaWxvZ3kvanNwL2hvbWUuZG8/QlZfVXNlQlZDb29raWU9Tm8mYW1wO3RhYk5hbWU9SE9NRSsxOTAiPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJhIGNhdXNhIGRpIHVuIGludGVydmVudG8gZGkgbWFudXRlbnppb25lIiBlcnJtc2c9IlNpdG8gdm9kYWZvbmUuaXQgaW4gbWFudXRlbnppb25lIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy52b2RhZm9uZS5pdC8xOTAvdHJpbG9neS9qc3AvdXNlci5kbyIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0ibG9naW5GYWlsZWQuZG8iIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiIGVycmNvZGU9IjUiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJtZXRob2QiIHZhbHVlPSJsb2dpbiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idHlfc2tpcF9tZCIgdmFsdWU9InRydWUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmFyZWFhemllbmRlLnZvZGFmb25lLml0LzE5MC90cmlsb2d5L2pzcC9zd2FwU2ltLmRvIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJ0ayIgdmFsdWU9Ijk2MTYsMSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idHlfc2ltIiB2YWx1ZT0iJSVzaW0lJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuYXJlYWF6aWVuZGUudm9kYWZvbmUuaXQvMTkwL3RyaWxvZ3kvanNwL2Rpc3BhdGNoZXIuZG8/dHlfa2V5PWZzbXNfaHAiLz4NCiAgICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vd3d3LmFyZWFhemllbmRlLnZvZGFmb25lLml0LzE5MC9mc21zL3ByZXBhcmUuZG8iPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJsaW1pdGVzbXMiIGVycm1zZz0iSGFpIHJhZ2dpdW50byBpbCBsaW1pdGUgZGkgU01TIHBlciBvZ2dpIiBlcnJjb2RlPSIxMyIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJub24gZScgYWwgbW9tZW50byBkaXNwb25pYmlsZSIgZXJybXNnPSIxOTA6IFNlcnZpemlvIG5vbiBkaXNwb25pYmlsZSIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJzb2xvIGEgbnVtZXJpIGRpIGNlbGx1bGFyZSBWb2RhZm9uZSIgZXJybXNnPSJJbCBkZXN0aW5hdGFyaW8gbm9uIGUnIHVuIG51bWVybyBWb2RhZm9uZSIgZXJyY29kZT0iMTQiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZGVyTnVtYmVyIiB2YWx1ZT0iJSVzaW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icmVjZWl2ZXJOdW1iZXIiIHZhbHVlPSIlJWludG51bSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJtZXNzYWdlIiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJjYXB0Y2hhIiBsZWZ0PSJpbWcgc3JjPSZxdW90Oy8xOTAvZnNtcyIgcmlnaHQ9ImdlbmVyYXRlaW1nLmRvIi8+DQogICAgICAgIDwvY29udGVudHM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSBtZXRob2Q9IlBPU1QiIHVyaT0iaHR0cDovL3d3dy5hcmVhYXppZW5kZS52b2RhZm9uZS5pdC8xOTAvZnNtcy9wcmVwYXJlLmRvIj4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0ibGltaXRlc21zIiBlcnJtc2c9IkhhaSByYWdnaXVudG8gaWwgbGltaXRlIGRpIFNNUyBwZXIgb2dnaSIgZXJyY29kZT0iMTMiLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0ic29sbyBhIG51bWVyaSBkaSBjZWxsdWxhcmUgVm9kYWZvbmUiIGVycm1zZz0iSWwgZGVzdGluYXRhcmlvIG5vbiBlJyB1biBudW1lcm8gVm9kYWZvbmUiIGVycmNvZGU9IjE0Ii8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlbmRlck51bWJlciIgdmFsdWU9IiUlc2ltJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InJlY2VpdmVyTnVtYmVyIiB2YWx1ZT0iJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY2FwdGNoYSIgbGVmdD0iaW1nIHNyYz0mcXVvdDsvMTkwL2ZzbXMiIHJpZ2h0PSJnZW5lcmF0ZWltZy5kbyIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmFyZWFhemllbmRlLnZvZGFmb25lLml0LzE5MC9mc21zL2dlbmVyYXRlaW1nLmRvIiBjYXB0Y2hhPSIxIiBjb25kaXRpb249IiUlY2FwdGNoYSUlIi8+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuYXJlYWF6aWVuZGUudm9kYWZvbmUuaXQvMTkwL2ZzbXMvc2VuZC5kbyIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iZWxhYm9yYXRhIGNvcnJldHRhbWVudGUiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IkZMQVRTZXJ2aWNlPWRlbGV0ZUlUIiBlcnJtc2c9IkVycm9yZSAxOTAsIHJpcHJvdmEiLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iaGEgcmljZXZ1dG8gaWwgbnVtZXJvIG1hc3NpbW8iIGVycm1zZz0iSWwgZGVzdGluYXRhcmlvIGRhIHRlIGluc2VyaXRvIGhhIHJpY2V2dXRvIGlsIG51bWVybyBtYXNzaW1vIGdpb3JuYWxpZXJvIGRpIFNNUyB2aWEgV2ViIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9ImluZm9ybWlhbW8gY2hlIHBlciBwb3RlciBhY2NlZGVyZSBhIHF1ZXN0byBzZXJ2aXppbyIgZXJybXNnPSJFcnJvcmUgMTkwLCByaXByb3ZhIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9InNvbG8gYSBudW1lcmkgZGkgY2VsbHVsYXJlIFZvZGFmb25lIiBlcnJtc2c9IklsIGRlc3RpbmF0YXJpbyBub24gZScgdW4gbnVtZXJvIFZvZGFmb25lIiBlcnJjb2RlPSIxNCIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJsaW1pdGVzbXMiIGVycm1zZz0iSGFpIHJhZ2dpdW50byBpbCBsaW1pdGUgZGkgU01TIHBlciBvZ2dpIiBlcnJjb2RlPSIxMyIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJtb21lbnRvIGRpc3BvbmliaWxlLiBUaSBpbnZpdGlhbW8gYSByaXByb3ZhcmUiIGVycm1zZz0iU2Vydml6byBtb21lbnRhbmVhbWVudGUgbm9uIGRpc3BvbmliaWxlIiBlcnJjb2RlPSIxMiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwcmVwYXJlLmRvIiBlcnJtc2c9IkNvZGljZSBkaSBjb250cm9sbG8gc2JhZ2xpYXRvIiBlcnJjb2RlPSI4Ii8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlbmRlck51bWJlciIgdmFsdWU9IiUlc2ltJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InZlcmlmeUNvZGUiIHZhbHVlPSIlJWNhcHRjaGFfdmFsdWUlJSIgY29uZGl0aW9uPSIlJWNhcHRjaGElJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFnZVR5cGVJZCIgdmFsdWU9Ijk2MDQiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InByb2dyYW1JZCIgdmFsdWU9IjEwMzg0Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJjaGFubmVsSWQiIHZhbHVlPSItMTgxMjYiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InJlY2VpdmVyTnVtYmVyIiB2YWx1ZT0iJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI4OTMiIG5hbWU9IlNNUy5nZSIgdj0iMS4xIiBtYXhzbXM9IjEwMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTYwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FJQUFBQ1FrV2cyQUFBQUJtSkxSMFFBL3dEL0FQK2d2YWVUQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUFCM1JKVFVVSDF3b05FQ2NDVTlnMmNnQUFBQjEwUlZoMFEyOXRiV1Z1ZEFCRGNtVmhkR1ZrSUhkcGRHZ2dWR2hsSUVkSlRWRHZaQ1Z1QUFBQkQwbEVRVlFvejVXU1FZN0RJQXhGYldNM1VsSUpydEJqc21DZCsyVTFpK25rQ0pHaXpDWkV1QXNhaEdncnpWaElZUERIRDJ4VVZUak5HSk5TZ3NvUWtZaU80eWc3bktldTYvWjk5OTZMQ0NLV1kxV05NUkpSMy9mYnRqMjNMcGNMQUlRUUpwRWY1bVpNekNFRVJCeUdRVlVoSTRVUTdzYThSdWR4TnlaclZCV0l5SHYvOXU0bWovZmVHTU1wSlJFWlVnTEVXNHlGZmhZcDdpeHlCUkNSbEJMbnJ5Z1BuVVhxWDZyZGpFVHdUM3NqdU1WWVlPcjFSMEdOTVlzMGtKVEo2bnAvTWxWRlJDYWlHT012MFZVMU16UjRPYzkrbHZ5cEN5RjhFLzJwY0twcXJjMmFTZVMxM2w5bnRITk9WVEhUTytmV2RmWGVNM1BUZk1keGpPTm9yVjJXQlFDd2ZpNHpOKzBOQUUxN1B3Q0dtTHVMZlFwbk5BQUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgU01TIGFpIG51bWVyaSBHZW9DZWxsPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iVXNlcm5hbWUgZGkgYWNjZXNzbyBhIHd3dy5zbXMuZ2UiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9IlBhc3N3b3JkIGRpIGFjY2Vzc28gYSB3d3cuc21zLmdlIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL2phY2tzbXMuamFja3Ntcy5pdC9TZXJ2aWNlSGVscGVyLnBocCIgbWV0aG9kPSJHRVQiPg0KCQk8Y29udGVudHM+DQoJCQk8dmFyIG5hbWU9ImNlbGxudW0iIGxlZnQ9Im51bWJlcjogIiByaWdodD0iOyIvPg0KCQkJPHZhciBuYW1lPSJzZXJ2aWNlIiBsZWZ0PSJzZXJ2aWNlOiAiIHJpZ2h0PSI7Ii8+DQoJCTwvY29udGVudHM+DQoJCTx2YXJzPg0KCQkJPHZhciBuYW1lPSJzaWQiIHZhbHVlPSI4OTMiIC8+DQoJCQk8dmFyIG5hbWU9Im51bWJlciIgdmFsdWU9IiUlaW50Y29kZSUlJSVpbnRudW0lJSIvPg0KCQk8L3ZhcnM+DQoJPC9wYWdlPg0KDQoJPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnNtcy5nZSIgbWV0aG9kPSJHRVQiIHVzZWNvb2tpZT0iMCI+DQoJCTxjb250ZW50cz4NCgkJCTx2YXIgbmFtZT0icGhwc2lkIiBsZWZ0PSJTZXQtQ29va2llOiBQSFBTRVNTSUQ9IiByaWdodD0iOyIvPg0KCQk8L2NvbnRlbnRzPg0KCQk8aGVhZGVycz4NCgkJCTx2YXIgbmFtZT0iVXNlci1BZ2VudCIgdmFsdWU9Ik1vemlsbGEvNS4wIChXaW5kb3dzOyBVOyBXaW5kb3dzIE5UIDUuMTsgaXQ7IHJ2OjEuOC4xLjYpIEdlY2tvLzIwMDcwNzI1IEZpcmVmb3gvMi4wLjAuNiIvPg0KCQkJPHZhciBuYW1lPSJBY2NlcHQiIHZhbHVlPSJ0ZXh0L3htbCxhcHBsaWNhdGlvbi94bWwsYXBwbGljYXRpb24veGh0bWwreG1sLHRleHQvaHRtbDtxPTAuOSx0ZXh0L3BsYWluO3E9MC44LGltYWdlL3BuZywqLyo7cT0wLjUiLz4NCgkJCTx2YXIgbmFtZT0iQWNjZXB0LUxhbmd1YWdlIiB2YWx1ZT0iaXQtaXQsaXQ7cT0wLjgsZW4tdXM7cT0wLjUsZW47cT0wLjMiLz4NCgkJCTx2YXIgbmFtZT0iQWNjZXB0LUVuY29kaW5nIiB2YWx1ZT0iZ3ppcCxkZWZsYXRlIi8+DQoJCQk8dmFyIG5hbWU9IkFjY2VwdC1DaGFyc2V0IiB2YWx1ZT0iSVNPLTg4NTktMSx1dGYtODtxPTAuNywqO3E9MC43Ii8+DQoJCQk8dmFyIG5hbWU9IktlZXAtQWxpdmUiIHZhbHVlPSIzMDAiLz4NCgkJCTx2YXIgbmFtZT0iQ29ubmVjdGlvbiIgdmFsdWU9ImtlZXAtYWxpdmUiLz4NCgkJPC9oZWFkZXJzPg0KCTwvcGFnZT4NCiAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuc21zLmdlL2dlby9pbmRleC5waHAiIG1ldGhvZD0iUE9TVCIgdXNlY29va2llPSIwIiBpZ25vcmVsb2NhdGlvbj0iMSI+DQoJCTxoZWFkZXJzPg0KCQkJPHZhciBuYW1lPSJVc2VyLUFnZW50IiB2YWx1ZT0iTW96aWxsYS81LjAgKFdpbmRvd3M7IFU7IFdpbmRvd3MgTlQgNS4xOyBpdDsgcnY6MS44LjEuNikgR2Vja28vMjAwNzA3MjUgRmlyZWZveC8yLjAuMC42Ii8+DQoJCQk8dmFyIG5hbWU9IkFjY2VwdCIgdmFsdWU9InRleHQveG1sLGFwcGxpY2F0aW9uL3htbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsdGV4dC9odG1sO3E9MC45LHRleHQvcGxhaW47cT0wLjgsaW1hZ2UvcG5nLCovKjtxPTAuNSIvPg0KCQkJPHZhciBuYW1lPSJBY2NlcHQtTGFuZ3VhZ2UiIHZhbHVlPSJpdC1pdCxpdDtxPTAuOCxlbi11cztxPTAuNSxlbjtxPTAuMyIvPg0KCQkJPHZhciBuYW1lPSJBY2NlcHQtRW5jb2RpbmciIHZhbHVlPSJnemlwLGRlZmxhdGUiLz4NCgkJCTx2YXIgbmFtZT0iQWNjZXB0LUNoYXJzZXQiIHZhbHVlPSJJU08tODg1OS0xLHV0Zi04O3E9MC43LCo7cT0wLjciLz4NCgkJCTx2YXIgbmFtZT0iS2VlcC1BbGl2ZSIgdmFsdWU9IjMwMCIvPg0KCQkJPHZhciBuYW1lPSJDb25uZWN0aW9uIiB2YWx1ZT0ia2VlcC1hbGl2ZSIvPg0KCQkJPHZhciBuYW1lPSJSZWZlcmVyIiB2YWx1ZT0iaHR0cDovL3d3dy5zbXMuZ2UvZ2VvL2luZGV4LnBocCIvPg0KCQkJPHZhciBuYW1lPSJDb29raWUiIHZhbHVlPSJQSFBTRVNTSUQ9JSVwaHBzaWQlJSIgLz4NCgkJPC9oZWFkZXJzPg0KCQk8dmFycz4NCgkgICAgICAgICAgPHZhciBuYW1lPSJ1c2VyaWQiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCgkgICAgICAgICAgPHZhciBuYW1lPSJwYXNzd2QiIHZhbHVlPSIlJXBhc3N3b3JkJSUiLz4NCgkJICA8dmFyIG5hbWU9InN1Ym1pdC54IiB2YWx1ZT0iNjAiLz4NCgkJICA8dmFyIG5hbWU9InN1Ym1pdC55IiB2YWx1ZT0iMTEiLz4NCgkgICAgICAgIDwvdmFycz4NCiAgICA8L3BhZ2U+DQogICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnNtcy5nZS9nZW8vc2VuZC5waHAiIG1ldGhvZD0iUE9TVCIgdXNlY29va2llPSIwIj4NCgkJPGhlYWRlcnM+DQoJCQk8dmFyIG5hbWU9IlVzZXItQWdlbnQiIHZhbHVlPSJNb3ppbGxhLzUuMCAoV2luZG93czsgVTsgV2luZG93cyBOVCA1LjE7IGl0OyBydjoxLjguMS42KSBHZWNrby8yMDA3MDcyNSBGaXJlZm94LzIuMC4wLjYiLz4NCgkJCTx2YXIgbmFtZT0iQWNjZXB0IiB2YWx1ZT0idGV4dC94bWwsYXBwbGljYXRpb24veG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCx0ZXh0L2h0bWw7cT0wLjksdGV4dC9wbGFpbjtxPTAuOCxpbWFnZS9wbmcsKi8qO3E9MC41Ii8+DQoJCQk8dmFyIG5hbWU9IkFjY2VwdC1MYW5ndWFnZSIgdmFsdWU9Iml0LWl0LGl0O3E9MC44LGVuLXVzO3E9MC41LGVuO3E9MC4zIi8+DQoJCQk8dmFyIG5hbWU9IkFjY2VwdC1FbmNvZGluZyIgdmFsdWU9Imd6aXAsZGVmbGF0ZSIvPg0KCQkJPHZhciBuYW1lPSJBY2NlcHQtQ2hhcnNldCIgdmFsdWU9IklTTy04ODU5LTEsdXRmLTg7cT0wLjcsKjtxPTAuNyIvPg0KCQkJPHZhciBuYW1lPSJLZWVwLUFsaXZlIiB2YWx1ZT0iMzAwIi8+DQoJCQk8dmFyIG5hbWU9IkNvbm5lY3Rpb24iIHZhbHVlPSJrZWVwLWFsaXZlIi8+DQoJCQk8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwOi8vd3d3LnNtcy5nZS9nZW8vaW5kZXgucGhwIi8+DQoJCQk8dmFyIG5hbWU9IkNvb2tpZSIgdmFsdWU9IlBIUFNFU1NJRD0lJXBocHNpZCUlIiAvPg0KDQoJCTwvaGVhZGVycz4NCgkJPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0ibWFpbi5waHAiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQoJCTx2YXJzPg0KDQoJCQk8dmFyIG5hbWU9Imdlb2xhaSIgdmFsdWU9IiUlc2VydmljZSUlIi8+DQoJCQk8dmFyIG5hbWU9InBob25lIiB2YWx1ZT0iJSVjZWxsbnVtJSUiLz4NCgkJCTx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQoJCQk8dmFyIG5hbWU9Im51bSIgdmFsdWU9IiIvPg0KDQoJCQk8dmFyIG5hbWU9InhfbnVtYmVyX2VuZCIgdmFsdWU9IiIvPg0KCQkJPHZhciBuYW1lPSJ4X3NhdmUiIHZhbHVlPSJ5ZXMiLz4NCgkJCTx2YXIgbmFtZT0iU2VuZCIgdmFsdWU9IjEiLz4NCgkJPC92YXJzPg0KDQoJPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjIzIiBuYW1lPSJWeWtlIiB2PSIxLjMiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTUzIiBtYXhsZW49Ijc2NSIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFCM1JKVFVVSDF3c0hEd1lhaVl5V1hnQUFBQWx3U0ZsekFBQVBZUUFBRDJFQnFEK25hUUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUpUU1VSQlZIamFZMlFnRWl3K2NZdnY2YjNYMi83K1pUQVY1R1AzelBJMzJRY1NaeUxXZ0cvUFA4bS8vL3pUK3RYSHIyeGZmL3lPaEltejROSXdlZDFKWVFaR3h1Q3Z2NWxXVm9TWmZIejJtK01tRCtmM09aenNySWIvL3pKTWhxbkQ2WUwzWC82MDNIbjZjU2JUM3o5dElINWptTTZ2cjh3TVpTZWVQdmY4ZXRQaUNrRURHSm4rSHhEZ1puLzc2L2UvSFNCK3hkekRTcmNmdkxuLysrdWY1M2Q1TnVkamVDR3RiN3VrS0IrWHJ0eGY3djNwNlNhL2EyTnNWZ0tGVjhMa2YvLzlZL1R1ODNmKy8vOFpHRjUvL0c2TTRRSnVEcGJlTHo5L2JYL0Q4OHNLeE0rZmM4QXl1SFh0ek5rN3pucUErRkp5b3ZzVXhQaDNTQWh5M2JYUWtsNkY0UUpPVnRibFhKd3NqRXdNZnkrQitHL2VmV3g5Ky9tbjQ3YlQ5NldBdHU2OGZadnQ2N1Y3REl2NXVUbE5iMy80Y0JqRGdMWlVoODFBYWpPTXJ5Z2hlUER6OTk4cXB1cFNaMEQ4aGgyM0lqZWV1RG52Kys4L2pPYXFraVpBSVZzVUE0cG43dzM2OXV1M0x6K1BZRWxIdlBuYmxqaTd4ak5ubm5hYm1FaC9xL3ovbi9IUnl5VnFRSGxHa0ZwZ3dKcGpoTUd6OTErbjNIajhMb0dGOFhzS2lHOVN2aUEvZCszZWQwYkZDOUlZR1JuL2gxaW9MOU9XRTcwcUk4ejM2ZHVmMzBrWUJvanlzRmZLaS9HdFpXYmhYYndObEd6ZmZpbzhlZnNaKzZOM0g3UFRacDVoTGZBMXV4TGNtNlNuSktFcGZMMC9kUW5CcEd0YnM2U1JOYUw3bW5iaC9GS0Npa0hBdW5yeGRNWE1HUmNDZWpiWndNVGk1Ky9uSUtRUEhvaFAzbjVLZmZ6bUMvT1hueit0Z2R3aklMR0ZpWTQvQ0JrQUR3TUhUZGttR1NIZVJTR1dtcHZ3YWZqL2Z4VXpDTVA0QUtxeis4dTFldlFoQUFBQUFFbEZUa1N1UW1DQyIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyB0cmFtaXRlIFZ5a2U8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy52eWtlLmNvbSAiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy52eWtlLmNvbSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnZ5a2UuY29tL2xvZ2luLmpzZiI+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImlkbG9naW4iIGxlZnQ9ImxvZ2luRm9ybTpqX2lkIiByaWdodD0iJmFwb3M7IiAvPg0KCQkgICAgPHZhciBuYW1lPSJpZCIgbGVmdD0iaWQ9JnF1b3Q7amF2YXguZmFjZXMuVmlld1N0YXRlJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy52eWtlLmNvbS9sb2dpbi5qc2YiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iQUpBWFJFUVVFU1QiIHZhbHVlPSJfdmlld1Jvb3QiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYXV0b1Njcm9sbCIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJqYXZheC5mYWNlcy5WaWV3U3RhdGUiIHZhbHVlPSIlJWlkJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibG9naW5Gb3JtIiB2YWx1ZT0ibG9naW5Gb3JtIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImxvZ2luRm9ybTpqX2lkJSVpZGxvZ2luJSUiIHZhbHVlPSJsb2dpbkZvcm06al9pZCUlaWRsb2dpbiUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImxvZ2luRm9ybTp1c2VybmFtZSIgdmFsdWU9IiUldXNlcm5hbWUlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJsb2dpbkZvcm06cGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJZb3VyIHVzZXJuYW1lIG9yIHBhc3N3b3JkIHdhcyBub3QgcmVjb2duaXplZCIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIgZXJyY29kZT0iNSIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cudnlrZS5jb20vc2VuZC1zbXMuanNmIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iaWRsb2dpbjEiIGxlZnQ9InNtc1NlbmRlckZvcm06al9pZCIgcmlnaHQ9IiZhcG9zOyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJpZDEiIGxlZnQ9ImlkPSZxdW90O2phdmF4LmZhY2VzLlZpZXdTdGF0ZSZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cudnlrZS5jb20vc2VuZC1zbXMuanNmIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjcmVkaXQiIGxlZnQ9IllvdXIgYmFsYW5jZSBpczogJmx0O3N0cm9uZyZndDsiIHJpZ2h0PSImbHQ7IiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNvc3QiIGxlZnQ9IkNoYXJnZSBpczogIiByaWdodD0iLiZsdDsiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgICAgICA8aGVhZGVycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJDb250ZW50LVR5cGUiIHZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgICAgICAgICAgPC9oZWFkZXJzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkFKQVhSRVFVRVNUIiB2YWx1ZT0iX3ZpZXdSb290IiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc1NlbmRlckZvcm06dG9QaG9uZU51bWJlcjptc2lzZG5Db3VudHJ5IiB2YWx1ZT0iJSVpbnRjb2RlJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zU2VuZGVyRm9ybTp0b1Bob25lTnVtYmVyOm1zaXNkbiIgdmFsdWU9IiUlcHJlZiUlJSVudW0lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNTZW5kZXJGb3JtOnRvUGhvbmVOdW1iZXI6dmFsaWRhdG9yIiB2YWx1ZT0iWCIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNTZW5kZXJGb3JtOm1zZ1RleHQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNTZW5kZXJGb3JtIiB2YWx1ZT0ic21zU2VuZGVyRm9ybSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJhdXRvU2Nyb2xsIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImphdmF4LmZhY2VzLlZpZXdTdGF0ZSIgdmFsdWU9IiUlaWQxJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zU2VuZGVyRm9ybTpqX2lkJSVpZGxvZ2luMSUlIiB2YWx1ZT0ic21zU2VuZGVyRm9ybTpqX2lkJSVpZGxvZ2luMSUlIiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iWW91ciBTTVMgd2FzIHN1Y2Nlc3NmdWxseSBzZW50IiBhY2NlcHRtc2c9IlNNUyBpbnZpYXRvLkNvc3RvOiAlJWNvc3QlJS5DcmVkaXRvOiAlJWNyZWRpdCUlIiAvPg0KICAgICAgICAgICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJTb3JyeSwgeW91IGRvIG5vdCBoYXZlIGVub3VnaCBjcmVkaXQiIGVycm1zZz0iQ3JlZGl0byBlc2F1cml0by4iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJ5b3UgbXVzdCBoYXZlIHNvbWUgY3JlZGl0IG9uIHlvdXIgYWNjb3VudCIgZXJybXNnPSJDcmVkaXRvIGVzYXVyaXRvIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW5jb3JyZWN0IiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9InBob25lbnVtYmVyIGlzIGludmFsaWQiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iUGxlYXNlIHByb3ZpZGUgY29ycmVjdCBkZXN0aW5hdGlvbiBwaG9uZSBudW1iZXIgY291bnRyeSBjb2RlIiBlcnJtc2c9Ikluc2VyaXNjaSBpbCBwcmVmaXNzbyBpbnRlcm5hemlvbmFsZSIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSIyNiIgbmFtZT0iRmlkbyIgdj0iMS4wIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSIxNjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQjNSSlRVVUgxd3dERmhJcXIwNmlId0FBQUFsd1NGbHpBQUFPd3dBQURzTUJ4MitvWkFBQUFBUm5RVTFCQUFDeGp3djhZUVVBQUFMVVNVUkJWSGphbFZOZFNGUkJGUDdtM3J0Nzk0ZmRNblBWeFg3TUh6WXpjdzE4NklkK2FBa3FBNk1ISHdJcHd1aVBDQXQ2c0llb2wzcFFNSHRJaVh3SmtnVE5pS3g4aUNoU1NqSFVWbXI5eWJKTlNkZDFyM2ZkM1h2dk5MdTZpdWxMaHhubXpKeHp2am56blRNRTgxSjN4WHBOYjBxOEpVMStid0doNDVwR1BnRmE5OFhHWkRmR3hzTE1KWUlWUklncjhrekFwa1ZtZUlFbnhaUVM2UFM2c2lFZkNmUHJraVlOR1dsK3M4SFk0WnYyejBZMHhZTXVkeVVMMFpZQVVIRDY2Q3FhRXJDbnBBNXI3TG1rdGJWZU5BKzJwZGJmcUVwTlQwMXd1TTZlcGxPQmFaL2ljRHhFZi85RTFKK0xBeGhFSVlXQ3grWWRaVmlmV3dUZjczNk1ENytMMlFaK0RPUEwwQ0EwbGhwTDBRS1J6NHZITFFCRUltRUZoTUNhdUpFdEJJSm9ZYUFtRUdiYm51UEU3dndDY0Z4MFJ5aWdaaTBERURnWUNWWGc2V29BcFJSRFBTMElqclJCNUpRNUJ4SWRKUFpham5BcHl3QlVpaENOeVNMRE9xS0JqMTRZSGZNR25TRG9LQ0hHdUE4ZlZ3NDRPZnZvckdYL21Nd0wzN3hUK1BQTGpWVnIwK0dWQldUeWJnUkcyeUY1TzVGbGxjamU1UEhray90Q3o1NTNZR3FoQ3VVZmN6YVlqUWE5SUFnUWUxOWhWNzRUVCs1VVFhcTlqSUM3QnF6QWNLV0pVSlZ3ZEdZcUtuZUVWYkpHV09TQXA0VmJ0cEw3RlRjWmlSb20vUDdZT1dNZW0vS1BvZURnZFlSbEg0d1dHK1BwTWVsNGNkc0p6QzV5UUtrNmVyWDBGT3hKaVNpNmRBNFBtaHJuempremRoNi9CMFZSMFZ6dHd1RG5aamhkRmNoMkhuSXNJZEdlWk5NWjlHS01NRVZSRUFxSDV4dU14S2pTTkJyYlVZMTFOT0ZZMlludG4wWXlobW9hSGtFS3ltaXF2SXNUaDQ5Q2ttVU1UQ3BvZjFvT3M1VmxkdUUxc2d0TDBmZTJHc045clV2L1FsaFZKbDUrZUkrOGttSkVNNW1la2FBWGROQWpTRE55T2pIVTNVZ0V2Wm5kSEZSNVhneFJOZGl6Qk9DbjEvdFY0TGszMDRHQTVxZUIxYXFtQmxuampCaDVKYUNvV2krZGxjMUJXZkpFb1BPWXRwWDBuVDlUdStMdi9HLzVDK2NETG0wYWxCcFJBQUFBQUVsRlRrU3VRbUNDIiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgU01TICB2ZXJzbyBudW1lcmkgY2VsbHVsYXJpIGNhbmFkZXNpIEZpZG8uPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGlsIG1pdHRlbnRlIGRlbCBtZXNzYWdnaW8iIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwOi8vZmlkby5jYS9wb3J0YWwvd2ViMmZpZG8vY29tcG9zZS5kbyNzbXMiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iZGlyZWN0b3J5Q2hvaWNlIiB2YWx1ZT0iLTEiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InJjcHRBcmVhQ29kZSIgdmFsdWU9IiUlcHJlZiUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJyY3B0UGhvbmUiIHZhbHVlPSIlJW51bSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kZXJOYW1lIiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kV2hlbiIgdmFsdWU9Im5vdyIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZERhdGVSZWYiIHZhbHVlPSIiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2VUZXh0IiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlbmRCdG4ueCIgdmFsdWU9IjY4Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kQnRuLnkiIHZhbHVlPSIxMiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZERhdGVNb250aCIgdmFsdWU9IjExIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kRGF0ZURheSIgdmFsdWU9IjI1Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kSG91ciIgdmFsdWU9IjE1Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kTWludXRlIiB2YWx1ZT0iMzAiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vZmlkby5jYS9wb3J0YWwvd2ViMmZpZG8vc2VuZC5kbyIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kQnRuLngiIHZhbHVlPSIyNiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZEJ0bi55IiB2YWx1ZT0iMTEiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJZb3VyIG1lc3NhZ2UgaGFzIGJlZW4gYWNjZXB0ZWQiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9Im51bWVybyBlcnJhdG8iIGVycm1zZz0iVGhlIEZpZG8gcGhvbmUgbnVtYmVyIHlvdSBlbnRlcmVkIGRvZXMgbm90IGV4aXN0LiIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSIyOSIgbmFtZT0iVm9pcFN0dW50IiB2PSIxLjAiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE2MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFCM1JKVFVVSDJBRURGQk1EL3FXcE9BQUFBQWx3U0ZsekFBQU93d0FBRHNNQngyK29aQUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUlrU1VSQlZIamExWkxMYXhOUkZNYlB2WGZtWmlhWmRKSk1LZ20rWXJTdGk1WUlwVjJJMkFaU0VSUVJSRVhGUjdjcXVGREVuYmpTaGU2S1dCRGRpSStWb2xKd1owRzBzV0kzRmg4TEt5Rk5HdW4wa1ptUWVkMTdiY1NLLzRINkxRNmN6ZTk4NStNRCtPK0ZCc1JkNVJrYTFqNGFvZHc3anpYN3FPd3o0SDNNZGw4MFhKZ0xHY3JaRklvY3J3a1lHVEROVzZQdHNHc3pTeFJNYkUwZG52Y2Y0RUU0QmRQSitHVksxSkdjbWhwU3NIWmRCdVhRY3hlVzRrbmpXaGROblFmVUZyR3cxTnU2YURDNnIwZE5ET2NrdmFlMTR5c0lPWjFvWFV3R1RaWlowemF3dXNXamFISnZJbkVtUnZVOURZNmZ6TUw4cEIxWWp5dmE3dmFjbk03UFFsQXF4dWlORmtCcURROXpKZ2tBb2tZNmdCRkJrRkpkSTVIVFphL3hPa003bmdySGxycEZjcUlxZitoWGthQ0xBTGRQZnFxWXZ3RU5mOWtseEdPR2lHeXlBNi9xSTBXTEFncG5TU2p2UUdWSFhGV1l3Y1NvVGFNYkhkNFFOU3dlclliNEUrQnlUNllTUXBqZ3RCTzQ0eFZtM2VkUjNmb0c5ZkkyRXV1TmMrMEUxWXo2ZDJkVzlwUmc3TWhNWmU3b0x3QmVjWTQ0QkJvam5Eak5SVVZuM3NUQmV2MnJ5NVlqM1FFZGFuUEZmb1Q1ZEdsdDlpRlJ6bDNJN0pRdklRQys2Z0MvWEhuZGtxZ2U5elhGUkhocFpxcy9YdHFnWjdKZTRsZ2JpeFlFSThVYWs0ZjFTdkZxbXR5Wk1qOGJCLzdzZ1pRSFlQY0MrMmJDdDZ4T3pyOGszemJMcjdyQzBmWDEwTVd5V0RDM0Z3YUxtYkZTOGowczlKTXdLMFZOL3VadmwvZGYwdytFSHVBT2h0dzhEQUFBQUFCSlJVNUVya0pnZ2c9PSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyB0cmFtaXRlIFZvaXBTdHVudDwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnZvaXBzdHVudC5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy52b2lwc3R1bnQuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIzIiBuYW1lPSJtaXR0ZW50ZSIgZGVmYXVsdD0iIiBkZXNjPSJOdW1lcm8gdmVyaWZpY2F0byBjaGUgdmVycmEnIHZpc3VhbGl6emF0byBjb21lIG1pdHRlbnRlIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cudm9pcHN0dW50LmNvbS9teWFjY291bnQvaW5kZXgucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InVzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBhc3N3b3JkIGluY29ycmVjdCIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cudm9pcHN0dW50LmNvbS9teWFjY291bnQvd2Vic21zMi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0ic2VuZCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFuZWwiIHZhbHVlPSJ0cnVlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJjYWxsZXJpZCIgdmFsdWU9IiUlbWl0dGVudGUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJibnJwaG9uZW51bWJlciIgdmFsdWU9IjAwJSVpbnRwcmVmJSUlJWludG51bSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kc2NoZWR1bGVkIiB2YWx1ZT0ibm8iLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJzZW50ISIvPg0KICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iU29ycnksIHlvdSBkbyBub3QgaGF2ZSBlbm91Z2ggY3JlZGl0IiBlcnJtc2c9IkNyZWRpdG8gZXNhdXJpdG8uIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBob25lbnVtYmVyIGlzIGluY29ycmVjdCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW52YWxpZCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMzciIG5hbWU9IlBvaXZ5IiB2PSIxLjIiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjY0MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFCM1JKVFVVSDJBSUpEdzRLUUh1cnBRQUFBQWx3U0ZsekFBQU93d0FBRHNNQngyK29aQUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUdWU1VSQlZIamFwVk8vVDhKQUZINDJYWWl5RVJMWWJWd05PelN1c0J2L0FmNEFkMjMvQUJMbjdvd01ob0dOdEhZd0hVcE1TRWlMazZsaTZBQ0Job1VmN2ZPdUZ5a0hKV3A4dy9YZDYvdSs5OTI3ZHdEL3RKTzBvR21hbFNpSzFDQUk1Rnd1QjJFWUFpTEs1WEw1NlVmR1RxZWpUeVlUM0xmWmJJYTJiZXVVL0NqWXNpeDkrZmFNcU5VeDdEWTVnclZueFhHMzNjQlVFbHFaU01YdzNVR3NFOFVOS1VFSEFhSlNJTEZTN1BmN2ZUdzRzK2Q1Q2FCUll5U3VIVy9ENWpYaTdSa0J1MnhQQ3JWYUxXVkxZQmlHenVsMTJ6RkIrSGlIcUd2TWQ3cGN5bWcwMGlsV3BNdG1zNUYzRlVYblZSQWtDUVR6Z1FWcUNnZ1hWNXpxMVdvVlk0UzBaZ29DQ1VzM0FJc0ZRTEVFVWZYK2FPTmpBbEVVallNL1JZbDk1VG9qM0RNeUp3a0JTVkRuOHptZjhPRXlwMUJNcmV6N3Zyb2xvQk0yR0F3NEZZTC93b2hPTHcvQXcrR1E5czNnZWtDdVJ1MzFla25XNXl1cFhnRElaamt3bVVnWWo4ZHE2bGhybWxhaFE3S2VUc25VMWRnMTdwampPRWl1WE5uRnBENG1tcFRQUzNJbXM1Uy9HMGJQVEdYLzZrSDl4YjRBVmdKS1BaMEtaUDhBQUFBQVNVVk9SSzVDWUlJPSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyB0cmFtaXRlIFBvaXZ5PC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cucG9pdnkuY29tICIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnBvaXZ5LmNvbSIgLz4KCQk8b3B0aW9uYWwgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iTnVtZXJvIHZlcmlmaWNhdG8gdXNhdG8gY29tZSBtaXR0ZW50ZSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnBvaXZ5LmNvbS9teWFjY291bnQvaW5kZXgucGhwP3BhcnQ9dHBsb2dpbiIgbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idXNlciIgdmFsdWU9IiUldXNlcm5hbWUlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InBhc3MiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CiAgICAgICAgICAgICAgICA8ZXJyb3JzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJwYXNzd29yZCBpbmNvcnJlY3QiIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiIC8+CiAgICAgICAgICAgICAgICA8L2Vycm9ycz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnBvaXZ5LmNvbS9teWFjY291bnQvd2Vic21zMi5waHAiIG1ldGhvZD0iUE9TVCI+CiAgICAgICAgICAgICAgICA8aGVhZGVycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwczovL3d3dy5wb2l2eS5jb20vbXlhY2NvdW50L3dlYnNtczIucGhwIiAvPgogICAgICAgICAgICAgICAgPC9oZWFkZXJzPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3JlZGl0byIgbGVmdD0iJmFtcDtldXJvOyZhbXA7bmJzcDsiIHJpZ2h0PSImbHQ7L2ImZ3Q7IiAvPgogICAgICAgICAgICAgICAgPC9jb250ZW50cz4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0ic2VuZCIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InBhbmVsIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYm5ycGhvbmVudW1iZXIiIHZhbHVlPSIwMCUlaW50Y29kZSUlJSVpbnRudW0lJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNlbmRzY2hlZHVsZWQiIHZhbHVlPSJubyIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNhbGxlcmlkIiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIiAvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICAgICAgPGFjY2VwdD4KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0ic2VudCEiIGFjY2VwdG1zZz0iQ3JlZGl0byByZXNpZHVvICUlY3JlZGl0byUlIGV1cm8iIC8+CiAgICAgICAgICAgICAgICA8L2FjY2VwdD4KICAgICAgICAgICAgICAgIDxlcnJvcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IlNvcnJ5LCB5b3UgZG8gbm90IGhhdmUgZW5vdWdoIGNyZWRpdCIgZXJybXNnPSJDcmVkaXRvIGVzYXVyaXRvLiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW5jb3JyZWN0IiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW52YWxpZCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iIC8+CiAgICAgICAgICAgICAgICA8L2Vycm9ycz4KICAgICAgICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjM4IiBuYW1lPSJJbnRlcm5ldGNhbGxzIiB2PSIxLjIiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE2MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFBWE5TUjBJQXJzNGM2UUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUFnWTBoU1RRQUFlaVlBQUlDRUFBRDZBQUFBZ09nQUFIVXdBQURxWUFBQU9wZ0FBQmR3bkxwUlBBQUFBclZKUkVGVU9FOTFVMTFJazFFWWZqZFNacGhKcVpFWFNURXFKYUc4eXZDbXdndEJJUXE5V0JOVXFvc3VyQ3ltT1gvS21pd3RqQ2FtTFpCR3BXWkpSaGRGMzJZalRWdUpGNjNtYkdhbXFXUXUyM1R1LytuNERWM1RmT0hoT3gvdjh6em5ITTc3Q1B4RXRVUzBqNEV2WjNnTTJYZHNwb2pVU0JLZVNpVDdrM25DWGhGRjMycWo4SWoxSk5UUExWRURYMmJRQnlJZ21pRXRDbmlhQnNmRUdEQnRBT0JrOExMMUhEQS9BRmVmQkhOSjI0QU4wZUExRElzRzNPTENmNEF3ajJZbUdHQUlWdC9JQnloYWEvQ3l0d2ZqMzBaaG5wM0FkT0tlRlFaVnV6SHkvQjZjcnBrUXNhWlhBMkdKRUNRalNNb2t5TDJSajRFeEV5elBPbUdYSHd5ZXdDZFBoalZFQ295T2pTSzJNaFowa1IyVElWdVpEVHBMZUQzVXhUTzVwa0pNeHJLZXMzSS81L3ZlRFpmZnQyemhkL3VSZFRjTGRJRVFmeVVleWtkSzVEWG1RZElpZ2R2aDVubGZKczE0VlpRQm1qMjZpM044TklmczM2SHY0TVZoOGpEb2pYcSt0K0JZQ09IOG1oMUhRMVU4Nk92UHE1elg2MXB1ZXAxZXBOZW5nODRSQ2pXRkt5NFcvUFY2dk5DOXFRV1pjc1NjN2JkbHVkUDl1UnVDWWdFaUt5SmhHRjU4eXYrWDFXcURTblVZTk55cDVId0kzbC9XSmdPZEo2VFVwUVRHWUkxeU9uMW9ieThBdWRJM2NYaW40bWsrancrcGQxSkJKWVM0aWppWUJrMXJHbGdzNzZGUWJBVFprb2o3OUxZY1Z0c1UzSFkzeEVveHFKU1FvRWhBampJSG1pN05LcE9abVIvbzczK0FhelV4b0Q5UnhKbTNFNHdkOTNuaXlmWVRFQldKa0hremt4OGc5UXYxS2dPRDRURmtySGY1dWlBNHlvUDVCZEEzbHNQckFZeVdJVWdicEpDMlNma28vRnNjVjRwNlZRYUtxd21keHdOWjBDNEZZMHE4RmEyNkpwalkyOXR0SHJoWWh2eE1iYmQ3WURScW9kUFY0WFpETWs1Zkl0U2ZZV0ZhRnpEb1dUS0FpTkJ5aEZDbjNvbUhMY2ZReXFEVlZrT3R6a0J6OHlISXl3aVZOV3puWEJhOExZRTAvZ1VGQ2R2UWszRllBd0FBQUFCSlJVNUVya0pnZ2c9PSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyB0cmFtaXRlIEludGVybmV0Y2FsbHM8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5pbnRlcm5ldGNhbGxzLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LmludGVybmV0Y2FsbHMuY29tIiAvPgoJCTxvcHRpb25hbCBuPSIzIiBuYW1lPSJtaXR0ZW50ZSIgZGVmYXVsdD0iIiBkZXNjPSJOdW1lcm8gdmVyaWZpY2F0byBjaGUgYXBwYXJpcsOgIGNvbWUgbWl0dGVudGUiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy5pbnRlcm5ldGNhbGxzLmNvbS9teWFjY291bnQvaW5kZXgucGhwP3BhcnQ9dHBsb2dpbiIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ1c2VyIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InBhc3MiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJwYXNzd29yZCBpbmNvcnJlY3QiIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LmludGVybmV0Y2FsbHMuY29tL215YWNjb3VudC93ZWJzbXMyLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8aGVhZGVycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJSZWZlcmVyIiB2YWx1ZT0iaHR0cHM6Ly93d3cuaW50ZXJuZXRjYWxscy5jb20vbXlhY2NvdW50L3dlYnNtczIucGhwIiAvPg0KICAgICAgICAgICAgICAgIDwvaGVhZGVycz4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3JlZGl0byIgbGVmdD0iJmFtcDtldXJvOyZhbXA7bmJzcDsiIHJpZ2h0PSImI3gwOTsiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJhY3Rpb24iIHZhbHVlPSJzZW5kIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InBhbmVsIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJibnJwaG9uZW51bWJlciIgdmFsdWU9IjAwJSVpbnRjb2RlJSUlJWludG51bSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNlbmRzY2hlZHVsZWQiIHZhbHVlPSJubyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjYWxsZXJpZCIgdmFsdWU9IiUlbWl0dGVudGUlJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9InNlbnQhIiBhY2NlcHRtc2c9IkNyZWRpdG8gcmVzaWR1byAlJWNyZWRpdG8lJSBldXJvIiAvPg0KICAgICAgICAgICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJTb3JyeSwgeW91IGRvIG5vdCBoYXZlIGVub3VnaCBjcmVkaXQiIGVycm1zZz0iQ3JlZGl0byBlc2F1cml0by4iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbmNvcnJlY3QiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW52YWxpZCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMzkiIG5hbWU9IlZvaXBSYWlkZXIiIHY9IjEuMiIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iNjQwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBRm85TS8zQUFBQUIzUkpUVVVIMkFNY0VBd2FJaWV6RXdBQUFBbHdTRmx6QUFBT3d3QUFEc01CeDIrb1pBQUFBQVJuUVUxQkFBQ3hqd3Y4WVFVQUFBT0xTVVJCVkhqYUpaTmJiQlJWR01kL1p6clRaWmZTS3kwb2h0QTJBcWEwWXJrb0VnTDRBQTBwaEdEaUpiNlFhcXRWZ3ZBZ1JoTk44RUZEMEVRVEFwRWlHa0FlTktXTnRkUldXOU1hS2toRGk1WUtFYWlVUyttMkxOdkxYdWZ5ZVhZOUwvTjkrWDh6Wjg1dmZxTW1rMGtzQldhbW9kS0Y4aldIWldHMkQvT2pVaGNsRWNqdGNxVDJqYmZraTJ0VDhscjlMakVlOGV1NVREK21hV0g2WnNHVm1PamwwaDVPWFczVTJ6VTdaZEQzS0dYdU9PY0xuNExXb0MxeDErWGIyd2x4UGYzZzkrdHJwU3V3bU0zSkcveWNWNG5xaTRxY09YeVlaeGZtODE3NE1ScGVYTXVsVTBkWk5EZWJBMFlGeGdxL3Exb0tWdEk2NnZCYzVUS1daM25xRzBwcEhyWFp2cndFNDRPUkROazEvaXRyc2wyNmUzNmovWUdTUFltTHJNMnlPZFhScXcralgyMTcyNGlvMFdGZTNyS0JGK2FMMnRveUxMN1FYZXEycm9mVVFFbG5WQnBHUldKMlV2Y09PVzFSK1NjcE1tUGJHTlZOVitWUXNCSFZkSVNMTXhsU2Z2eVNuSjV1NGNTaEx3bEpocGlKUDN0cEhCc2tJRWxDNjhMazk3ZlM3RXlRNVVUWWY2c08xWEFyTHVlYXozREZLcUxuOVkzcTNmNHA0ZHdQOVBoTDZhOTlXdUZwamdjSFEzTDZUa0ljMXlhdWFYMTJPU2lOOTVJU2N6VGJkUTFkVW0rTllFNk9ZNzIwbHc5UHRySTNMNFFLQjhtdjJZZnBELzVMZDNDSXVXNkVvcWs0L3JHYlhMeDlseUpuaXNzaG9PMkJKenUrNnBTcXBxSDA1MnE2NzhpTzQxMnk3ZXhORVMvNVA2aXpFeGx5N01KMUZqb1BtV1dhRE5tWlZEOVpRbDJ4VDJzaW5MempTblAvVFJZWkNUelg0YmFWUzgycUVyWVVlRW90ditCS1VlY0puZ24yRS9ibHBBY0tEWnR1dDRDcVYrdkp0Q3krUDNxRUtqVktVTFJCMnI0aVo1b2Y1MVN3Zm1jTjV1NFNneFBYbG1KRWJsRHNOMG1LajJ4N212R2NNcFlVWk9HaENNOWJTdDdVQkphbFZWU0NIZlB3Rmp4T2RZSFdNNnBSK1RQZzkwbEQvZ2dtRUkyeE9EL0F0a0tVNjNta2xtRVl0QVJGcm9laXVsT3NuaGRnWFo2b21Dc3BCZzZmWG8xSjQvbEJObVUreEdmQUw1SFpMQ3N2NCtDcVBMMGY3T3NMeWQ4REExVE5pYU94OFZNc2x3MHJLOWhmSGxBcTBKR1V0YjNIcUxnL3dJdzFHME04QXNxbFR4WHkvSnQ3VWh2eTNhSFBXZTJORVJVVFVZclpYcHkrbkNlWS84cHV6STQxRmg5SE54SVppRkhwVCtnYkRPNGxoTEVGbTFneFA0dGMvYjkrdlhvYnZ1RjJGcytTbEw3OGxmQ2h5alp6WUludVp6UURFWDEySFh3eUl2TE9kWkdJcmtYTG1WSXA1ampwT3BVZjBIbEtlMG5uaVhUMkg4SnQ0Y3dpR1M0aUFBQUFBRWxGVGtTdVFtQ0MiID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBWb2lwUmFpZGVyPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cudm9pcHJhaWRlci5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy52b2lwcmFpZGVyLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iTnVtZXJvIHZlcmlmaWNhdG8gY2hlIHZlcnLDoCB2aXN1YWxpenphdG8gY29tZSBtaXR0ZW50ZSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vbXlhY2NvdW50LnZvaXByYWlkZXIuY29tL2NseC9pbmRleC5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJqdXN0bG9nZ2VkaW4iIHZhbHVlPSJ0cnVlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGFzc3dvcmQgaW5jb3JyZWN0IiBlcnJtc2c9IlVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL215YWNjb3VudC52b2lwcmFpZGVyLmNvbS9jbHgvd2Vic21zMi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDxoZWFkZXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHBzOi8vbXlhY2NvdW50LnZvaXByYWlkZXIuY29tL2NseC93ZWJzbXMyLnBocCIvPg0KICAgICAgICA8L2hlYWRlcnM+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0ic2VuZCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFuZWwiIHZhbHVlPSJ0cnVlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJjYWxsZXJpZCIgdmFsdWU9IiUlbWl0dGVudGUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJibnJwaG9uZW51bWJlciIgdmFsdWU9IjAwJSVpbnRjb2RlJSUlJWludG51bSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kc2NoZWR1bGVkIiB2YWx1ZT0ibm8iLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJzZW50ISIvPg0KICAgICAgICA8L2FjY2VwdD4NCgkJPGVycm9ycz4NCiAgCQkgIDx2YXIgZXJyc3RyPSJTb3JyeSwgeW91IGRvIG5vdCBoYXZlIGVub3VnaCBjcmVkaXQiIGVycm1zZz0iQ3JlZGl0byBlc2F1cml0by4iLz4NCiAgCQkgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbmNvcnJlY3QiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIi8+DQogIAkJICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW52YWxpZCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iLz4NCgkJPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNTAiIG5hbWU9IlNtc2xpc3RvIiB2PSIxLjAiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE2MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFBWE5TUjBJQXJzNGM2UUFBQUFaaVMwZEVBUDhBL3dEL29MMm5rd0FBQUFsd1NGbHpBQUFMRXdBQUN4TUJBSnFjR0FBQUFBZDBTVTFGQjlnRUJBa2FEWWtXdUp3QUFBRG5TVVJCVkRqTDFaTlJqWVV3RUVYdjJ6d0JJMkVrVkVLZkFpcWhFb29ESEZRQ29HQndBQTZRQUE0cTRlN0g3amFQYkRhUThMVW42Y2MwemNuY3lmUkJrcmpCQjI1eVcvQjhMNVpsQVFBNDV5QWkxd3drdWE0clJZUUE2a2twOFFmdlBiK2YvZ0lrcWFvVUVmWjl6M21lNlp3akFKclpxZUFKQVB1K1ExVVJRb0NJd013d2p1TzFHQ1FaUXFpdGUrK1pjMllwNVhxRVVncGpqSWNaaUFqWGRiMG1lTWZNYWtjaGhIUEJ0bTFVVmNZWTYyVXBwY1k1SGFLcVFrUXdEQU1BUUZVeFRSTUFvR21hdzd4ZXI5ZWh6amwvTFpLWm9XM2JnNlRyT3FTVTZtTDl4ZVAvZjZaUDIzZzdycUtuMW1ZQUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBTTVNsaXN0bzwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnNtc2xpc3RvLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnNtc2xpc3RvLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iTnVtZXJvIHZlcmlmaWNhdG8gY2hlIHZlcnJhJyB2aXN1YWxpenphdG8gY29tZSBtaXR0ZW50ZSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnNtc2xpc3RvLmNvbS9teWFjY291bnQvaW5kZXgucGhwP3BhcnQ9dHBsb2dpbiIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ1c2VyIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InBhc3MiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJwYXNzd29yZCBpbmNvcnJlY3QiIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnNtc2xpc3RvLmNvbS9teWFjY291bnQvd2Vic21zMi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0ic2VuZCIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJtZXNzYWdlIiB2YWx1ZT0iJSVtZXNzYWdlJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY2FsbGVyaWQiIHZhbHVlPSIlJW1pdHRlbnRlJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYm5ycGhvbmVudW1iZXIiIHZhbHVlPSIlMkIlJWludGNvZGUlJSUlaW50bnVtJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZHNjaGVkdWxlZCIgdmFsdWU9Im5vIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InBhbmVsIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImdtdCIgdmFsdWU9IjEiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJzZW50ISIgYWNjZXB0bXNnPSJNZXNzYWdnaW8gaW52aWF0byEiIC8+DQogICAgICAgICAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IlNvcnJ5LCB5b3UgZG8gbm90IGhhdmUgZW5vdWdoIGNyZWRpdCIgZXJybXNnPSJDcmVkaXRvIGVzYXVyaXRvLiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9InBob25lbnVtYmVyIGlzIGluY29ycmVjdCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbnZhbGlkIiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI1MDEiIG5hbWU9IkNvc21vdGUiIHY9IjEuMiIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNDAiIHNtc19kaXZpc29yPSIxNDAiIG1heGxlbj0iMTQwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iQUNDRU5UIiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBTUFBQUFvTFE5VEFBQUFBWE5TUjBJQXJzNGM2UUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUFnWTBoU1RRQUFlaVlBQUlDRUFBRDZBQUFBZ09nQUFIVXdBQURxWUFBQU9wZ0FBQmR3bkxwUlBBQUFBd0JRVEZSRjgvbnByZFZqME9hbG1NbzhqY1Vta2NjdWljSWVjhN2dwR1FBQUFHZEpSRUZVS0ZOZFQxc093REFJVW56cy9qY2VhdE9aMVk4R0lnS2lkbDcwcnpJdzBnOC9SQnBFdEhlYVNCVUI3Qkp1aE54b1ZXMWtZZjBrRVlYV2pTZ0Y4SXdQSlVWd2ZJSVU4WmRZMXNsdEc4bUxKSyt0aFRQR1Rzb3FCcXpvM1M2UHk2MC9iZlVGY1MwQ3ZRZ0dxNHdBQUFBQVNVVk9SSzVDWUlJPSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIDEwIFNNUyBhbCBnaW9ybm8gY29uIENvc21vdGU8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5teWNvc21vcy5nciIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3Lm15Y29zbW9zLmdyIiAvPgoJCTxvcHRpb25hbCBuPSIzIiBuYW1lPSJjb3JyZXppb25lIiBkZWZhdWx0PSIiIGRlc2M9IlNjcml2ZXJlIE9OIHBlciBsYSBjb3JyZXppb25lIGRlaSBjYXJhdHRlcmkgYWNjZW50YXRpIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vdC5qYWNrc21zLml0L3Nvc3RpdHV6aW9uZU8yLnBocCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iQ0hFQ0siIHZhbHVlPSIlJWNvcnJlemlvbmUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idGV4dCIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzczEiIGxlZnQ9IlRlWHRNZVNzQWdFPToiIHJpZ2h0PSI6VGVYdE1lU3NBZ0UiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5teWNvc21vcy5nci9teWNvc21vcy9sb2dpbi5hc3B4Ij4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lvbiIgbGVmdD0ibmFtZT0mcXVvdDtfX1ZJRVdTVEFURSZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgICAgIDwvcGFnZT4NCiA8cGFnZSB1cmk9Imh0dHA6Ly9zdXBlcm1hYy5hbHRlcnZpc3RhLm9yZy9jb3Ntb3RlLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJzZXNzaW9uIiB2YWx1ZT0iJSVzZXNzaW9uJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJzZXNzMSIgbGVmdD0iU2Vzc2lvbmU6IiByaWdodD0iOiIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cubXljb3Ntb3MuZ3IvbXljb3Ntb3MvbG9naW4uYXNweCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPGhlYWRlcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJSZWZlcmVyIiB2YWx1ZT0iaHR0cDovL3d3dy5teWNvc21vcy5nci9teWNvc21vcy9sb2dpbi5hc3B4Ii8+DQogICAgICAgIDwvaGVhZGVycz4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVEFSR0VUIiB2YWx1ZT0iIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UQVJHVU1FTlQiIHZhbHVlPSIiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Il9fVklFV1NUQVRFIiB2YWx1ZT0iJSVzZXNzMSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJ0YlVzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJ0YlBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJidExvZ2luIiB2YWx1ZT0iTG9nIE9uIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJyYlNlY3VyaXR5UHViIiB2YWx1ZT0icmJTZWN1cml0eVB1YiIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICA8L3BhZ2U+DQogPHBhZ2UgdXJpPSJodHRwOi8vd3d3Lm15Y29zbW9zLmdyL215Y29zbW9zL0Nvc3Rjb250cm9sLmFzcHgiPg0KCSAgPGNvbnRlbnRzPg0KCSAgICA8dmFyIG5hbWU9InNvdXJjZSIgbGVmdD0iTnVtYmVyIG9mIFNNUyBNZXNzYWdlcyBzZW50IGJ5IFdlYiBTaXRlIiByaWdodD0iRGF5Ii8+DQoJICA8L2NvbnRlbnRzPg0KCSAgPC9wYWdlPg0KPHBhZ2UgdXJpPSJodHRwOi8vaWFkZG85MS5hbHRlcnZpc3RhLm9yZy9zY3JpcHRwaHAvcmlwZXRpLnBocCIgbWV0aG9kPSJQT1NUIj4NCjx2YXJzPg0KPHZhciBuYW1lPSJwaG9uZSIgdmFsdWU9IiUlc291cmNlJSUiLz4NCjwvdmFycz4NCjxjb250ZW50cz4NCjx2YXIgbmFtZT0ic29yZ2VudGUiIGxlZnQ9IiZsdDt0ZCZndDsiIHJpZ2h0PSImbHQ7L3RkJmd0OyIgLz4NCjwvY29udGVudHM+DQo8L3BhZ2U+DQo8cGFnZSB1cmk9Imh0dHA6Ly9pYWRkbzkxLmFsdGVydmlzdGEub3JnL3NjcmlwdHBocC9jb3Ntb3RlLnBocD9zdHJpbmdhPSUlc29yZ2VudGUlJSIgbWV0aG9kPSJHRVQiPg0KCSAgPGNvbnRlbnRzPg0KCSAgPHZhciBuYW1lPSJyZXNpZHVpIiBsZWZ0PSJzbXM6IiByaWdodD0iOnJpbWFuZW50aSIvPg0KCSAgPC9jb250ZW50cz4NCjwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5teWNvc21vcy5nci9teWNvc21vcy9TTVNfU2VuZC5hc3B4Ij4NCgkgICA8aGVhZGVycz4NCiAgICAgICAgICA8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwOi8vd3d3Lm15Y29zbW9zLmdyL215Y29zbW9zL0Nvc3Rjb250cm9sLmFzcHgiLz4NCiAgICAgICAgPC9oZWFkZXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJzZWNvbmRhIiBsZWZ0PSJuYW1lPSZxdW90O19fVklFV1NUQVRFJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvY29zbW90ZS5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lvbiIgdmFsdWU9IiUlc2Vjb25kYSUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VzczIiIGxlZnQ9IlNlc3Npb25lOiIgcmlnaHQ9IjoiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0ic2Vjb25kYSIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIgZXJyY29kZT0iNSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5teWNvc21vcy5nci9teWNvc21vcy9TTVNfU2VuZC5hc3B4IiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8aGVhZGVycz4NCiAgICAgICAgICA8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwOi8vd3d3Lm15Y29zbW9zLmdyL215Y29zbW9zL1NNU19TZW5kLmFzcHgiLz4NCiAgICAgICAgPC9oZWFkZXJzPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9Il9fVklFV1NUQVRFIiB2YWx1ZT0iJSVzZXNzMiUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJ0eHRNb2JpbGUiIHZhbHVlPSIlMkIlJWludGNvZGUlJSUlaW50bnVtJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InR4dE1lc3NhZ2UiIHZhbHVlPSIlJW1lc3MxJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImJ0blNlbmQiIHZhbHVlPSJTZW5kIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iaGFzIGJlZW4gc2VudCB0byIgYWNjZXB0bXNnPSJNZXNzYWdnaW8gaW52aWF0byEgU01TIGRpc3BvbmliaWxpOiAlJXJlc2lkdWklJSIvPg0KICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0ieW91IGhhdmUgZXhjZWVkZWQgdGhhdCBsaW1pdCIgZXJybXNnPSJNZXNzYWdnaSBncmF0dWl0aSBlc2F1cml0aSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI4OSIgbmFtZT0iSnVzdFZvaXAiIHY9IjEuMSIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTYwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUFYTlNSMElBcnM0YzZRQUFBQVppUzBkRUFQOEEvd0Qvb0wybmt3QUFBQWx3U0ZsekFBQUxFd0FBQ3hNQkFKcWNHQUFBQUFkMFNVMUZCOWdGREFrZURHS3BURkVBQUFJMFNVUkJWRGpMZlpQUGF4TlJFTWMvdXhhaFA1NVFVNG9iUVFvSmkvVFVzcmxWZEhNb1VrSnZvb2owYXNHYkp5K2gvNE1YSllLbkZvV0M5QkJ6TVlkZGMrb2hyK1FRQko5cEVZcFpXMmdyZllZU2FiWWVraXpaV0p6VGUvUG1POStaK2I0eEdMTGp6WUkzZVM1ZG1oSkV6Nm1CcE1QSmlPTmZmN2lhSFl3MytvZUxhc0hWU25wQ1MvNW5XamdvMjhsbU1xcytnTmtISTR1WGdzTzdheUNzNkM2MHhKWkZyMW90dUZFQ3JhUUhRUndwdXZXYnJSYWRwVmYwKzVISzVxTVNKS1gwQU16anpjS2x6SjA3ZWNMNTV5RGZZQmpYQ09jZklaV05yd1crRm1pdHFKYkxuamw1THQwaGFyQWNydFEyd1hrTVlnSjIzbVBlZnNLbmRnTFZpeW9xaStsV3lUVnBEckZiRm1IdU5meHVZaDQwQ05NNURyNDFRQWorVEUxRllRckJXYU9HR1VrRmhQTnJFQ2dJUHNORWhzN0pGMzdjdU1lSDcxY0p3NUJFSWpHc1NYZUlmVE4vVnJxU2pxZUJyMmdFcDZjaHpkNzcwZEhSUDdNeTBRTzN3QWZMNlphNEl6QnVadGpkM1NXVlNxRzFSbXZOOEx4TWtrN2NGMGhxTDE5d2ZQOEJBSlZLaFlXRkJlcjFlaXlCaldZMFBZZDVNdUw0ZzNpcGJQeW1ZSC8vRit2cjY4ek16R0RiTnFWU0tjYXpiQWNjanVkOEErRDAzZE1Mb1dXa3M0citraUNmejdPOXZjM1cxbFlFZG9SbUtUWEdyV2R2RFJOQTJVNVdZNkVnQWdPMDIyMDJOalppN0k3UUxOdWF2ZG1WYkd5WnF0V0NtNVRTMDFwUlZCWnFVTjllejh0MndPaFlpcjNabGF6cnVuNHNRWlNvWFBhbVd5WDNyRkhyN1hGMzJxUHBPUTdIYzM1bWNURzJ6bjhCNkN6c1o4VkdlaFVBQUFBQVNVVk9SSzVDWUlJPSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyB0cmFtaXRlIEp1c3RWb2lwPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cuanVzdHZvaXAuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cuanVzdHZvaXAuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIzIiBuYW1lPSJtaXR0ZW50ZSIgZGVmYXVsdD0iIiBkZXNjPSJOdW1lcm8gdmVyaWZpY2F0byBjaGUgdmVycsOgIHZpc3VhbGl6emF0byBjb21lIG1pdHRlbnRlIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cuanVzdHZvaXAuY29tL215YWNjb3VudC9pbmRleC5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGFzc3dvcmQgaW5jb3JyZWN0IiBlcnJtc2c9IlVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy5qdXN0dm9pcC5jb20vbXlhY2NvdW50L3dlYnNtczIucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9InNlbmQiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhbmVsIiB2YWx1ZT0idHJ1ZSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY2FsbGVyaWQiIHZhbHVlPSIlJW1pdHRlbnRlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYm5ycGhvbmVudW1iZXIiIHZhbHVlPSIwMCUlaW50cHJlZiUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZHNjaGVkdWxlZCIgdmFsdWU9Im5vIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0ic2VudCEiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlNvcnJ5LCB5b3UgZG8gbm90IGhhdmUgZW5vdWdoIGNyZWRpdCIgZXJybXNnPSJDcmVkaXRvIGVzYXVyaXRvLiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbmNvcnJlY3QiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBob25lbnVtYmVyIGlzIGludmFsaWQiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjUxIiBuYW1lPSJDaGF3dCIgdj0iMS4xIiBtYXhzbXM9IjE1IiBzaW5nbGVsZW49IjgwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjgwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FJQUFBQ1FrV2cyQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUMza2xFUVZSNG5EWFA3V3NiZFFEQThlODkvTzV5U1VsajBpU21PZTFnY3pXZEtWMmRMZE01Wlc1dVU4WmcycW14Q2tNb3hhRlFSYWRZRlhHK0dDcDc1UXRGS29Jd1pCMTFiVmxyRVlwekR6bzdLeG1zNENyT3JNOUx6U1ZwazdSSjdud2hmdjZEaitRTmMzOEgvN0ZtbVJ6QWpCUGN4SG9Sb1ZQTWNldXFhaGphMmxvNXNLbWNuVU9OUFViaVdEeHN4SUhjU3FaellPUzFMNXR4RmZMRlpiZGVPM0hHbnJtMnNOeFU4TlNKYmZkRkpvYm1hVTh3bUU1TUZVNjljbnkvTDJnQVhyL3I2VGNidnJXMm44MCs0ZlhyUElvMExJVXpZVyt2eXhmVTFmd1N3THM5Si9zL3Y0SWZuaUlYTFBWLzg3ZGpoWHFQUDVlM1JvaWhobFMzejEwS0ZtdjlFbWFjOTBjM3k3S0VGOTZETWVTZlpERWk1RHVsV0Z0UTB4V2FFVk1pbEEyMWZSajFONkRFZHZQWFpaR2FXbUVISEVZTGFKR1d5TVo3Tnk3YVM4WVZwZS9VcHp1MnRBNC9NLzd4ZzY4ZVB0UXdtWnlnUFVGamF4RGdLTko1eVZ3MWp6aEhCcHlCZlVQN1hqOTIxSEVjeDNHQU5TZHpadjdRQTg4aUE0RzdGUUFMMWFVS3Q0Z1NsWkd0R2F1K1BncFVuQ0xnVkJRVk4wRFQ3djhQZFNqRHlvYktoamFuclR2YnJjU2txVnNYLzBoZDNmcUlTUWVlRDdRRGIwZWJIZ2N6em1BNmNlREZWb0I2akpPRzhaVkJJMjk4MUZteXJaYUhUU0tFU2lGeFFiQ0xRRlJYbzNHQVVsYmNkWSt2dkZaWjZGa0ptVFh2OUhaMWQ3MThQVDJZdkRSTEk4SVIxY1VxT3VVU2FuNkpIMDRuTC80eTNYL3V4UGFXdmVVVlRRZ3hsN3VXcmR4VUZWMVJaZnRHOWZiWjIvYTB6WjhJRityeXRQSFpqOWUxMDlwOElaV1RidnlUSWRINTBzMkQrYWpsOFUvaUQ3c1dVNnZyTDZ6andXTnJhcWdxM1JFeU1qdUxQQStkc0FwQUFLMVBreTVKalJjQ1g0eDFuZnR1L05mdkYrck42TmFPd3RjbmZsWnFnNkw4bTZPTXlUMmZ0TC9WdDFOeGxaT2o2ZXBvdFhxK3V1MUpUODNtVkUyazFMb24yUFNRYjVXWjM4ZlRramZNbGwyR05VdXBWQVRzQ3JrNTNhbElOcmE3YnQxc0JoQUd3Z1dRSE9KZnRZNGFnaDUzcWRZQUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSBTTVMgdHJhbWl0ZSBDaGF3dCB2ZXJzbyBudW1lcmF6aW9uaSBpbnRlcm5hemlvbmFsaTwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgYSBDaGF3dCIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIHJlZ2lzdHJhemlvbmUgYSBDaGF3dCIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuY2hhd3QuY29tLyI+DQogICAgICA8L3BhZ2U+DQogICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5jaGF3dC5jb20vaW5kZXgucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InVzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICAgIDx2YXIgdHlwZT0ic3VibWl0IiBuYW1lPSJzdWJtaXQiIHZhbHVlPSJMT0dJTiIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IiBMb2dpbiBmYWlsZWQhIiBlcnJtc2c9IkRhdGkgZGkgbG9naW4gc3UgQ2hhd3QgZXJyYXRpIiBlcnJjb2RlPSI1Ii8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmNoYXd0LmNvbS9pbmRleC5waHAiIG1ldGhvZD0icG9zdCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY291bnRyeWNvZGUiIHZhbHVlPSIlJXByZWYlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibXNpc2RuIiB2YWx1ZT0iJSVudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgICAgPHZhciB0eXBlPSJzdWJtaXQiIG5hbWU9InNlbmQiIHZhbHVlPSJTRU5EIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iTWVzc2FnZSBzZW50IHN1Y2Nlc3NmdWwiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICA8ZXJyb3JzPg0KICAgICA8dmFyIGVycnN0cj0iTWVzc2FnZSBub3Qgc2VudCIgZXJybXNnPSJNaXR0ZW50ZSBvIGRlc3RpbmF0YXJpbyBub24gdmFsaWRvIiAvPg0KICAgICA8dmFyIGVycnN0cj0ibm9uIGNvbmZpZ3VyYXRvIiBlcnJtc2c9Ik5vbiBwdW9pIGludmlhcmUgdW4gU01TIiAvPg0KICAgICA8dmFyIGVycnN0cj0iWW91IGhhdmUgZXhjZWVkZWQgeW91ciBkYWlseSAxNSBmcmVlIG1lc3NhZ2UgYWxsb3dhbmNlLiBNZXNzYWdlIGhhcyBub3QgYmVlbiBzZW50IiBlcnJtc2c9IkhhaSB0ZXJtaW5hdG8gaSBtZXNzYWdnaSBkaXNwb25pYmlsaSBwZXIgb2dnaSIgLz4gICANCiAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjUyIiBuYW1lPSJGaXNoVGV4dCIgdj0iMS4xIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSI0NTkiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJJU08tODg1OS0xIiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBTUFBQUFvTFE5VEFBQUFDWEJJV1hNQUFBc1RBQUFMRXdFQW1wd1lBQUFLVDJsRFExQlFhRzkwYjNOb2IzQWdTVU5ESUhCeWIyWnBiR1VBQUhqYW5WTm5WRlBwRmozMzN2UkNTNGlBbEV0dlVoVUlJRkpDaTRBVWtTWXFJUWtRU29naG9ka1ZVY0VSUlVVRUc4aWdpQU9Pam9DTUZWRXNESW9LMkFma0lhS09nNk9JaXNyNzRYdWphOWE4OStiTi9yWFhQdWVzODUyenp3ZkFDQXlXU0ROUk5ZQU1xVUllRWVDRHg4VEc0ZVF1UUlFS0pIQUFFQWl6WkNGei9TTUJBUGgrUER3cklzQUh2Z0FCZU5NTENBREFUWnZBTUJ5SC93L3FRcGxjQVlDRUFjQjBrVGhMQ0lBVUFFQjZqa0ttQUVCR0FZQ2RtQ1pUQUtBRUFHRExZMkxqQUZBdEFHQW5mK2JUQUlDZCtKbDdBUUJibENFVkFhQ1JBQ0FUWlloRUFHZzdBS3pQVm9wRkFGZ3dBQlJtUzhRNUFOZ3RBREJKVjJaSUFMQzNBTURPRUF1eUFBZ01BREJSaUlVcEFBUjdBR0RJSXlONEFJU1pBQlJHOGxjODhTdXVFT2NxQUFCNG1iSTh1U1E1UllGYkNDMXhCMWRYTGg0b3pra1hLeFEyWVFKaG1rQXV3bm1aR1RLQk5BL2c4OHdBQUtDUkZSSGdnL1A5ZU00T3JzN09ObzYyRGw4dDZyOEcveUppWXVQKzVjK3JjRUFBQU9GMGZ0SCtMQyt6R29BN0JvQnQvcUlsN2dSb1hndWdkZmVMWnJJUFFMVUFvT25hVi9OdytINDhQRVdoa0xuWjJlWGs1TmhLeEVKYlljcFhmZjVud2wvQVYvMXMrWDQ4L1BmMTRMN2lKSUV5WFlGSEJQamd3c3owVEtVY3o1SUpoR0xjNW85SC9MY0wvL3dkMHlMRVNXSzVXQ29VNDFFU2NZNUVtb3p6TXFVaWlVS1NLY1VsMHY5azR0OHMrd00rM3pVQXNHbytBWHVSTGFoZFl3UDJTeWNRV0hUQTR2Y0FBUEs3YjhIVUtBZ0RnR2lENGM5My8rOC8vVWVnSlFDQVprbVNjUUFBWGtRa0xsVEtzei9IQ0FBQVJLQ0JLckJCRy9UQkdDekFCaHpCQmR6QkMveGdOb1JDSk1UQ1FoQkNDbVNBSEhKZ0theUNRaWlHemJBZEttQXYxRUFkTk1CUmFJYVRjQTR1d2xXNERqMXdEL3BoQ0o3QktMeUJDUVJCeUFnVFlTSGFpQUZpaWxnampnZ1htWVg0SWNGSUJCS0xKQ0RKaUJSUklrdVJOVWd4VW9wVUlGVklIZkk5Y2dJNWgxeEd1cEU3eUFBeWd2eUd2RWN4bElHeVVUM1VETFZEdWFnM0dvUkdvZ3ZRWkhReG1vOFdvSnZRY3JRYVBZdzJvZWZRcTJnUDJvOCtROGN3d09nWUJ6UEViREF1eHNOQ3NUZ3NDWk5qeTdFaXJBeXJ4aHF3VnF3RHU0bjFZOCt4ZHdRU2dVWEFDVFlFZDBJZ1lSNUJTRmhNV0U3WVNLZ2dIQ1EwRWRvSk53a0RoRkhDSnlLVHFFdTBKcm9SK2NRWVlqSXhoMWhJTENQV0VvOFRMeEI3aUVQRU55UVNpVU15SjdtUUFrbXhwRlRTRXRKRzBtNVNJK2tzcVpzMFNCb2prOG5hWkd1eUJ6bVVMQ0FyeUlYa25lVEQ1RFBrRytRaDhsc0tuV0pBY2FUNFUrSW9Vc3BxU2hubEVPVTA1UVpsbURKQlZhT2FVdDJvb1ZRUk5ZOWFRcTJodGxLdlVZZW9FelIxbWpuTmd4WkpTNld0b3BYVEdtZ1hhUGRwcitoMHVoSGRsUjVPbDlCWDBzdnBSK2lYNkFQMGR3d05oaFdEeDRobktCbWJHQWNZWnhsM0dLK1lUS1laMDRzWngxUXdOekhybU9lWkQ1bHZWVmdxdGlwOEZaSEtDcFZLbFNhVkd5b3ZWS21xcHFyZXFndFY4MVhMVkkrcFhsTjlya1pWTTFQanFRblVscXRWcXAxUTYxTWJVMmVwTzZpSHFtZW9iMVEvcEg1Wi9Za0dXY05NdzA5RHBGR2dzVi9qdk1ZZ0MyTVpzM2dzSVdzTnE0WjFnVFhFSnJITjJYeDJLcnVZL1IyN2l6MnFxYUU1UXpOS00xZXpVdk9VWmo4SDQ1aHgrSngwVGdubktLZVg4MzZLM2hUdktlSXBHNlkwVExreFpWeHJxcGFYbGxpclNLdFJxMGZydlRhdTdhZWRwcjFGdTFuN2dRNUJ4MG9uWENkSFo0L09CWjNuVTlsVDNhY0tweFpOUFRyMXJpNnFhNlVib2J0RWQ3OXVwKzZZbnI1ZWdKNU1iNmZlZWIzbitoeDlMLzFVL1czNnAvVkhERmdHc3d3a0J0c016aGc4eFRWeGJ6d2RMOGZiOFZGRFhjTkFRNlZobFdHWDRZU1J1ZEU4bzlWR2pVWVBqR25HWE9NazQyM0diY2FqSmdZbUlTWkxUZXBON3BwU1RibW1LYVk3VER0TXg4M016YUxOMXBrMW16MHgxekxubStlYjE1dmZ0MkJhZUZvc3RxaTJ1R1ZKc3VSYXBsbnV0cnh1aFZvNVdhVllWVnBkczBhdG5hMGwxcnV0dTZjUnA3bE9rMDZybnRabnc3RHh0c20ycWJjWnNPWFlCdHV1dG0yMmZXRm5ZaGRudDhXdXcrNlR2Wk45dW4yTi9UMEhEWWZaRHFzZFdoMStjN1J5RkRwV090NmF6cHp1UDMzRjlKYnBMMmRZenhEUDJEUGp0aFBMS2NScG5WT2IwMGRuRjJlNWM0UHppSXVKUzRMTExwYytMcHNieHQzSXZlUktkUFZ4WGVGNjB2V2RtN09id3UybzI2L3VOdTVwN29mY244dzBueW1lV1ROejBNUElRK0JSNWRFL0M1K1ZNR3Zmckg1UFEwK0JaN1huSXk5akw1RlhyZGV3dDZWM3F2ZGg3eGMrOWo1eW4rTSs0enczM2pMZVdWL01OOEMzeUxmTFQ4TnZubCtGMzBOL0kvOWsvM3IvMFFDbmdDVUJad09KZ1VHQld3TDcrSHA4SWIrT1B6cmJaZmF5MmUxQmpLQzVRUlZCajRLdGd1WEJyU0ZveU95UXJTSDM1NWpPa2M1cERvVlFmdWpXMEFkaDVtR0x3MzRNSjRXSGhWZUdQNDV3aUZnYTBUR1hOWGZSM0VOejMwVDZSSlpFM3B0bk1VODVyeTFLTlNvK3FpNXFQTm8zdWpTNlA4WXVabG5NMVZpZFdFbHNTeHc1TGlxdU5tNXN2dC84N2ZPSDRwM2lDK043RjVndnlGMXdlYUhPd3ZTRnB4YXBMaElzT3BaQVRJaE9PSlR3UVJBcXFCYU1KZklUZHlXT0NubkNIY0puSWkvUk50R0kyRU5jS2g1TzhrZ3FUWHFTN0pHOE5Ya2t4VE9sTE9XNWhDZXBrTHhNRFV6ZG16cWVGcHAySUcweVBUcTlNWU9Ta1pCeFFxb2hUWk8yWitwbjVtWjJ5NnhsaGJMK3hXNkx0eThlbFFmSmE3T1FyQVZaTFFxMlFxYm9WRm9vMXlvSHNtZGxWMmEvelluS09aYXJuaXZON2N5enl0dVFONXp2bi8vdEVzSVM0WksycFlaTFZ5MGRXT2E5ckdvNXNqeHhlZHNLNHhVRks0WldCcXc4dUlxMkttM1ZUNnZ0VjVldWZyMG1lazFyZ1Y3QnlvTEJ0UUZyNnd0VkN1V0ZmZXZjMSsxZFQxZ3ZXZCsxWWZxR25ScytGWW1LcmhUYkY1Y1ZmOWdvM0hqbEc0ZHZ5citaM0pTMHFhdkV1V1RQWnRKbTZlYmVMWjViRHBhcWwrYVhEbTROMmRxMERkOVd0TzMxOWtYYkw1Zk5LTnU3ZzdaRHVhTy9QTGk4WmFmSnpzMDdQMVNrVlBSVStsUTI3dExkdFdIWCtHN1I3aHQ3dlBZMDdOWGJXN3ozL1Q3SnZ0dFZBVlZOMVdiVlpmdEorN1AzUDY2SnF1bjRsdnR0WGExT2JYSHR4d1BTQS8wSEl3NjIxN25VMVIzU1BWUlNqOVlyNjBjT3h4KysvcDN2ZHkwTk5nMVZqWnpHNGlOd1JIbms2ZmNKMy9jZURUcmFkb3g3ck9FSDB4OTJIV2NkTDJwQ212S2FScHRUbXZ0YllsdTZUOHcrMGRicTNucjhSOXNmRDV3MFBGbDVTdk5VeVduYTZZTFRrMmZ5ejR5ZGxaMTlmaTc1M0dEYm9yWjc1MlBPMzJvUGIrKzZFSFRoMGtYL2krYzd2RHZPWFBLNGRQS3kyK1VUVjdoWG1xODZYMjNxZE9vOC9wUFRUOGU3bkx1YXJybGNhN251ZXIyMWUyYjM2UnVlTjg3ZDlMMTU4UmIvMXRXZU9UM2R2Zk42Yi9mRjkvWGZGdDErY2lmOXpzdTcyWGNuN3EyOFQ3eGY5RUR0UWRsRDNZZlZQMXYrM05qdjNIOXF3SGVnODlIY1IvY0doWVBQL3BIMWp3OURCWStaajh1R0RZYnJuamcrT1RuaVAzTDk2ZnluUTg5a3p5YWVGLzZpL3N1dUZ4WXZmdmpWNjlmTzBaalJvWmZ5bDVPL2JYeWwvZXJBNnhtdjI4YkN4aDYreVhnek1WNzBWdnZ0d1hmY2R4M3ZvOThQVCtSOElIOG8vMmo1c2ZWVDBLZjdreG1Uay84RUE1anovR016TGRzQUFBQWdZMGhTVFFBQWVpVUFBSUNEQUFENS93QUFnT2tBQUhVd0FBRHFZQUFBT3BnQUFCZHZrbC9GUmdBQUF3QlFURlJGSkNLTUJLYmtqS0tNbE5yODFKWThYS0trM01xa3pLcHN6T3IwL0k0RUZHNjg3SllrTEtMVTdLSkUvTXFVSkZhc0JLN2s3T2JrN0pvc3pNck1UTGJrUkZxczNOYlVqTEswOVBiMC9Kb2NMREtVRko3YzdLcGMvSklNTExiazVOcmNES3JrbkpyTWZKclVESXJNUEVLY0ZLN2s3TzdzZE1MVVhIckUzTjdjTEw3MExDcU1CS3IwMUxaOC9LNVUvSjRzM003TTFOYnN2TUswL1A3OEJLcmtySnBrdE03czVKNUUzUGI4OUpZYy9LWThESzdzek5Ma1RNTHNWR3EwM05yY2pNYmMvUHI4TERxazlMcDAvSkljUExMY2JLN2NMSUxFUkU2ay9QTGtMQ2FNQktic3pKNVVWSmJVM0taYzVPYmtMR2EwOUtaRS9OYWtORktrQks3MDdPcnM3SjQ4VkxMY1ZGNnMzTmJjOVBiOC9KNGtIS2JjL0xKYy9KSVVOTGIwcEtiVVJFYWNGTGJzOVBMMGZNcjBkSGEwUExyc0xDNlV6TDZjL0o0MHRLNkV2TmJVOUpZazFOTFVuTDY4TkRxVWZLN2NMSTdNQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXFQSStnQUFBQU54SlJFRlVlTnBrajcxT3dsQUFoYi9lWGtFaE5GSUxTQTB6TldXN0pJU0JyU2I2QUR3RXo4WURzS2lMWGF5SkFjSUFpUTV0d284aDBkQklvOGFJQXd3WXozYk84T1Y4bXVKdkJQK0dlVDNLWnQ5b25vMWtQdFZFdDYvazdXV2g4aEo4ZVRmbUlQTWhXZHk1NFpDeXk2VGxQSURnRzIvNW1pYndjK3R4S1VDM2ErNjFMQjVWTjhVZlpWa2FFcEY0WFFEVUdCTjArM0ZoTHkrcU0xZzdxZjRCQXF2aGUvNGg0TVRKK3hSTmxYcHFBOER6Y2RpNVI5QXZQMjAvcnNMTUhDUnR0a3pxNTdQVENFMEJHUEhPeElpRnNkK0owVStBenozYjN3RUFWVEEra29OQVRpVUFBQUFBU1VWT1JLNUNZSUk9IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIHRyYW1pdGUgRmlzaFRleHQ8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJOdW1lcm8gcmVnaXN0cmF0byAoY29uIHByZWZpc3NvIHNlbnphIGlsICspIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJQYXNzd29yZCBzdSBmaXNodGV4dC5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSIiIGRlc2M9Im1pdHRlbnRlOiAwID0gdXNlcm5hbWUgMSA9IEFub25pbW8iIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmZpc2h0ZXh0LmNvbS9jZ2ktYmluL2FjY291bnQiIG1ldGhvZD0iUE9TVCI+CiAgICAgICAgICAgICAgICA8dmFycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9ImxvZ2luIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX3NwX2Vycm9ySlMiIHZhbHVlPSIwIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX3NwX3Rvb2x0aXBfaW5pdCIgdmFsdWU9IjAiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJtb2JpbGUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlN1Ym1pdC54IiB2YWx1ZT0iMzIiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJTdWJtaXQueSIgdmFsdWU9IjYiIC8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CiAgICAgICAgICAgICAgICA8ZXJyb3JzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJMb2dpbiBFcnJvciIgZXJybXNnPSJEYXRpIGRpIGxvZ2luIGVycmF0aSIgZXJyY29kZT0iNSIgLz4KICAgICAgICAgICAgICAgIDwvZXJyb3JzPgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5maXNodGV4dC5jb20vY2dpLWJpbi9hamF4L3NlbmRNZXNzYWdlLmNnaSI+CiAgICAgICAgICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJicnV0dGEiIGxlZnQ9J21lc3NhZ2VsYXJnZWlucHV0JnF1b3Q7IG5hbWU9JnF1b3Q7JyByaWdodD0nJnF1b3Q7JyAvPgogICAgICAgICAgICAgICAgPC9jb250ZW50cz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuZmlzaHRleHQuY29tL1NlbmRTTVMvU2VuZFNNUyIgbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0iU2VuZCIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlNBIiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iRFIiIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iU1QiIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iUk4iIHZhbHVlPSIlJWludGNvZGUlJSUlaW50bnVtJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSIlJWJydXR0YSUlIiB2YWx1ZT0iJSVtZXNzYWdlJSUiIC8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CiAgICAgICAgICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjb3N0IiBsZWZ0PSIwLjAiIHJpZ2h0PSIuIiAvPgogICAgICAgICAgICAgICAgPC9jb250ZW50cz4KICAgICAgICAgICAgICAgIDxhY2NlcHQ+CiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9Im1lc3NhZ2Ugd2FzIiBhY2NlcHRtc2c9IlNNUyBpbnZpYXRvLkNvc3RvOiAwLjAlJWNvc3QlJSBldXJvIiAvPgogICAgICAgICAgICAgICAgPC9hY2NlcHQ+CiAgICAgICAgICAgICAgICA8ZXJyb3JzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJub3QgZm91bmQiIGVycm1zZz0iQ29udGF0dG8gbm9uIHByZXNlbnRlIGluIHJ1YnJpY2EuLiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iaW52YWxpZCBudW1iZXIiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbnZhbGlkIiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIgLz4KICAgICAgICAgICAgICAgIDwvZXJyb3JzPgogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNTEyIiBuYW1lPSJTd2lzc0NvbSIgdj0iMS41IiBtYXhzbXM9IjUwMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNTMiIG1heGxlbj0iNDU0IiByZXNldD0ibW9udGhseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQVhOU1IwSUFyczRjNlFBQUFBWmlTMGRFQVA4QS93RC9vTDJua3dBQUFBbHdTRmx6QUFBTEV3QUFDeE1CQUpxY0dBQUFBQWQwU1UxRkI5Z0lGQk1RTmthcUpRb0FBQUpVU1VSQlZEakxoWk5OU0pSeEVJZWY5OE5kZDNOZDEwekVnd29aR0VyUUliMTRTU3dqTXFXaUtDT0U4aWpvb1FUeGtHU0hRc2hJTUFRUFFvY09SWUZiclJEVUtTejBFa1JGaU51VzYvcXhtOXQrdnAvL2JpYTZpNy9iRE1Nek16OW1JSWZhWnVJMXAyYmpLMmRmUmJ2WlEzS3VaUFBVYU92U2o5V0s1c21ISGV1RmxhTnJ6c3JPZkFCcGV4RDJWYXVTWUVRMnJJR1JJeDAwUkg5eExqU1BBQktTL1RhcjBGNmZqR1J6VGhEMlZhdXlKVjRvdWpXQUtYRnpZUVpQU2RIL1RyTFVhc0pRM2hVVVc0ekp1bjNHTm1RMFM4Wng5UUtmYjk5anVuc1FRMUVSU0JqSWwvSjdZSEZkMHhYU2xrUjZud3ZmWUMrV0xYamRjb1dKTzlOc2VvcEpZOWJtQmVnQ01nZ2MxODVURy95STQyQU5VanFOSGR2a3krRW1wc1lEYkZRZjJzZ0xTSm4wSnlXQnEvTWtTa2t4QUhZNml4V0xrNHFuQ1JkVjhPVCtiTm5wUU9wR1RrQ2RGbm9jbDZ6K3ViNWJmUGUvQWNEVWRES3hCT25JSml1L1kvelZCYXFpVHB6d1I1dHozc0Z4TXp3MlgxN1ZQOXpWeFVJZ2dKN1ZpVVZqYklTV1dRK0ZTU1FUck9tR2Fnamx3WmI1TzNkU0p6LzFtY0p1OElTL0VTeXM0Y1BYWlFxMERGa1puRUtnMkRhcWtDcC9QaDhkQmxCM21STFBsTkI0a1pkRExhdzJ1dEQxY3Y0SUM2R3FlQ1dKUXNPQ0E2VmJ4N1FMc0JnTWpUdGo4VGIzL2xwV2drdUlNaThwWWVHUVpPS3lncTQ0OGJwZGdieS9zRGpZNUE4dnIvU3N1NnVTbG0yQllZQ1d4ZFF5UkRXZGlLbEhvdGxNYjg1ZjJDN1gwZDRLWVR2ZWFRWGVPbEVnZzg4SDVXVnprc2Q5V1R4cUQrNEpBRkNQM1gzdndLN1hQZTVaczdUNEtjOTYvRHRyL2dGWm93WjZVZlZza3dBQUFBQkpSVTVFcmtKZ2dnPT0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSA1MDAgU01TIGFsIG1lc2UgdmVyc28gaSBudW1lcmkgc3Zpenplcmk8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c3IiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cuc3dpc3Njb20uY2giIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InB3ZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cuc3dpc3Njb20uY2giIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogICAgICAgIDxwcm9jZWR1cmU+CiAgICAgICAgICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwczovL3h0cmF6b25lLnNzby5ibHVld2luLmNoL2luZGV4LnBocC8xNiw1NSxhamF4LCwsMjg5Lz9yb3V0ZT0lMkZsb2dpbiUyRmdldGNhcHRjaGEiPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJhY3Rpb24iIHZhbHVlPSJnZXRDYXB0Y2hhIiAvPgoJCQkJPC92YXJzPgoJCQkgICAgPGNvbnRlbnRzPgoJCQkJCTx2YXIgbmFtZT0idGFrZW4iIGxlZnQ9InRva2VuJnF1b3Q7OiZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPgoJCQkgICAgPC9jb250ZW50cz4KICAgICAgICAgICAgPC9wYWdlPgoJCQk8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnNjc3N0YXRpYy5jaC9jYXB0Y2hhLyUldGFrZW4lJSIgY2FwdGNoYT0iMSIvPgoJCQk8cGFnZSB1cmk9Imh0dHBzOi8veHRyYXpvbmUuc3NvLmJsdWV3aW4uY2gvaW5kZXgucGhwLzE2LDU1LGFqYXgsLCwyODkvP3JvdXRlPSUyRmxvZ2luJTJGc3NvbG9naW4iIG1ldGhvZD0iUE9TVCI+CgkJCQk8dmFycz4KCQkJCQk8dmFyIG5hbWU9ImRvX3Nzb19sb2dpbiIgdmFsdWU9IjEiLz4KCQkJCQk8dmFyIG5hbWU9InRva2VuIiB2YWx1ZT0iJSV0YWtlbiUlIi8+CgkJCQkJPHZhciBuYW1lPSJzc29fdXNlciIgdmFsdWU9IiUldXNyJSUiLz4KCQkJCQk8dmFyIG5hbWU9InNzb19wYXNzd29yZCIgdmFsdWU9IiUlcHdkJSUiLz4KCQkJCQk8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9InNzb0xvZ2luIi8+CgkJCQkJPHZhciBuYW1lPSJwYXNzcGhyYXNlIiB2YWx1ZT0iJSVjYXB0Y2hhX3ZhbHVlJSUiLz4KCQkJCTwvdmFycz4KCQkJPC9wYWdlPgoJCQk8cGFnZSB1cmk9Imh0dHBzOi8veHRyYXpvbmUuc3NvLmJsdWV3aW4uY2gvaW5kZXgucGhwLzE2LDU1LGFqYXgsLCwyODkvP3JvdXRlPSUyRmxvZ2luJTJGdXNlcmJveGluZm8ibWV0aG9kPSJQT1NUIj4KCQkJCTxjb250ZW50cz4KCQkJCQk8dmFyIG5hbWU9InByaW1hIiBsZWZ0PSI6Jmx0O3NwYW4mZ3Q7JmFtcDtuYnNwOyIgcmlnaHQ9IiZhbXA7bmJzcDtNTVNcL1NNUyIvPgoJCQkJPC9jb250ZW50cz4KCQkJPC9wYWdlPgoJCQk8cGFnZSB1cmk9Imh0dHBzOi8veHRyYXpvbmUuc3NvLmJsdWV3aW4uY2gvaW5kZXgucGhwLzE2P3JvdXRlPSUyRm1lc3NhZ2luZyUyRm91dGJveCUyRnNlbmRtb2JpbGVtc2ciIG1ldGhvZD0iUE9TVCI+CgkJCQk8dmFycz4KCQkJCQk8dmFyIG5hbWU9InJlY2VpdmVyc25hbWVzIiB2YWx1ZT0iMCUlaW50bnVtJSUiLz4KCQkJCQk8dmFyIG5hbWU9InJlY2lwaWVudHMiIHZhbHVlPSJbXSIvPgoJCQkJCTx2YXIgbmFtZT0ibWVzc2FnZWJvZHkiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPgoJCQkJCTx2YXIgbmFtZT0iYXR0YWNobWVudHMiIHZhbHVlPSIiLz4KCQkJCQk8dmFyIG5hbWU9InVwbG9hZEltYWdlIiB2YWx1ZT0iIi8+CgkJCQkJPHZhciBuYW1lPSJhdHRhY2htZW50SWQiIHZhbHVlPSIiLz4KCQkJCQk8dmFyIG5hbWU9InNlbmQiIHZhbHVlPSJJbnZpYSIvPgoJCQkJPC92YXJzPgoJCQk8L3BhZ2U+CgkJCTxwYWdlIHVyaT0iaHR0cHM6Ly94dHJhem9uZS5zc28uYmx1ZXdpbi5jaC9pbmRleC5waHAvMTYsNTUsYWpheCwsLDI4OS8/cm91dGU9JTJGbG9naW4lMkZ1c2VyYm94aW5mbyIgbWV0aG9kPSJQT1NUIj4KCQkJCTxjb250ZW50cz4KCQkJCQk8dmFyIG5hbWU9ImRvcG8iIGxlZnQ9IiZsdDtzcGFuJmd0OyZhbXA7bmJzcDsiIHJpZ2h0PSImYW1wO25ic3A7Ii8+CgkJCQk8L2NvbnRlbnRzPgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL2Vhc3lyYXAuYWx0ZXJ2aXN0YS5vcmcvU2NyaXB0L3dhZGphLnBocCIgbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYmVmb3JlIiB2YWx1ZT0iJSVwcmltYSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYWZ0ZXIiIHZhbHVlPSIlJWRvcG8lJSIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KCQkJCTxjb250ZW50cz4KCQkJCQk8dmFyIG5hbWU9ImNyZWRpdGkiIGxlZnQ9ImNyZWRpdGk6IiByaWdodD0iOiIvPgoJCQkJPC9jb250ZW50cz4KICAgICAgICAgICAgICAgIDxhY2NlcHQ+CiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9Ik1lc3NhZ2dpbyBJbnZpYXRvISIgYWNjZXB0bXNnPSJTTVMgSW52aWF0byEgU01TIHJlc2lkdWkgJSVjcmVkaXRpJSUiIC8+CiAgICAgICAgICAgICAgICA8L2FjY2VwdD4KICAgICAgICAgICAgICAgIDxlcnJvcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IkludmlvIEZhbGxpdG8iIGVycm1zZz0iTWVzc2FnZ2lvIG5vbiBpbnZpYXRvISIgLz4KICAgICAgICAgICAgICAgIDwvZXJyb3JzPgogICAgICAgICAgICA8L3BhZ2U+CQogICAgICAgIDwvcHJvY2VkdXJlPiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNDEiIG5hbWU9IlZvaXBCdXN0ZXIiIHY9IjEuMCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTYwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJITkNTVlFJQ0FnSWZBaGtpQUFBQWFwSlJFRlVPSTJsa3I5TEcyRVl4ejhuWXEzZExCM3FrTklXdGRBaUtCUUZPMnBwa2ZvSDFCOFpHdHJGSHppRW8wdVQyRW1IYWlIZFFpbkZwZERsdWxZaGcwcGNGQWNSQ2hZTWxneENlQzkzOFM3eWtuTUl2dWE0aXdwOWx2ZjdmcCtmMy9kNXRhb25QZjdEbXE0VEZOZXp4UFZzcUs4Wm9GQ3dXVjdNS1hKaGFVaGhmVzVWZFRrOXFkTFM1dStwVlQzcHhXSy9BcFV6bVZITytVeG10TEdFbGU5NzJGWUYyNm93TXR5cE1JQnRWUzVOQm1nYW4zeU1Jd1NPRUh6N3VxNndXNVk0UWpSTXpCK1VMaVRVT3dZR1AzUG5WaXZIWlpmY3hteG9jbHpQTXYyMkQxcGJhbzlZYnhYaGNpUmNIemMxOVR0UVpIRnBpM1I2MkwvR2U1RWtSY3VoYURuczdPa0FURVIvWWxvbTNWMDNrVklpcFNUUzBZeHBtUUQrQ1E3enlVQ25raWdEc0xwMm9MaENBUjdlYndldStFaGYwcHNNOWtjd2pDanp5WmVZSlFmRGlHS1dITFozL3dVbnFMZWV2azgxcmFubk5TbHZWaGg3L1pSRVlvMmllYUxpQWxzQWVOU1pRdE0wUE0vem5iMEREOWpKL1ZYMy9UOGZ3aWM0dHQwQU54TjdSdUxqQ0xmdnZxL0Y1QmVBYXZnRUFEZmFwaFUyZnJ6anhhc25vVkliRnJpdW5RRUdhTHdmZGtwcHZnQUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIHRyYW1pdGUgVm9pcEJ1c3RlcjwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnZvaXBidXN0ZXIuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cudm9pcGJ1c3Rlci5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSIiIGRlc2M9Ik51bWVybyB2ZXJpZmljYXRvIGNoZSB2ZXJyYScgdmlzdWFsaXp6YXRvIGNvbWUgbWl0dGVudGUiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwczovL215YWNjb3VudC52b2lwYnVzdGVyLmNvbS9jbHgvaW5kZXgucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InVzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBhc3N3b3JkIGluY29ycmVjdCIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly9teWFjY291bnQudm9pcGJ1c3Rlci5jb20vY2x4L3dlYnNtczIucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9InNlbmQiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhbmVsIiB2YWx1ZT0idHJ1ZSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY2FsbGVyaWQiIHZhbHVlPSIlJW1pdHRlbnRlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYm5ycGhvbmVudW1iZXIiIHZhbHVlPSIwMCUlaW50cHJlZiUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZHNjaGVkdWxlZCIgdmFsdWU9Im5vIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0ic2VudCEiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlNvcnJ5LCB5b3UgZG8gbm90IGhhdmUgZW5vdWdoIGNyZWRpdCIgZXJybXNnPSJDcmVkaXRvIGVzYXVyaXRvLiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbmNvcnJlY3QiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBob25lbnVtYmVyIGlzIGludmFsaWQiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjQyIiBuYW1lPSJTbXNCRyIgdj0iMS4wIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSIxNjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFCTWtsRVFWUjRuTVdUb1c3RE1CUkZUeXFEQndvQ0JnSUcrZ21CQlFNbWt5S1ZGQXowc3dxcWdYMkJRWUJCaDBZS0Nxb3BHaWpxQnd3RUZBUStZTTBEbWJOV0cra0tac2w2d1BmZTkrNjFuY1VZdVdhTnJtSURCdUQ1NWZsUFk4enVaMW0yZmQxR0FreHVKeGUxUFJ3T3lGZ3dJc0p1dDJNNm5WN1UzYTg5OXM0eUlrQlpsbmp2endDcSttc0ZjTFdqTEVzMGFCOWludWRZYTNHMUcwQWlncXFlMVVTdXFvbzh6eUdrV3dpOVNGVlZQMFJPNjBBZTkyUU55a2pEOTJoaUJER0NYNS9iU1o0VDVoUnZ4QWdZYUk4dG04Mkd4Y09DcnV0d3RhTzRLWUQrTEhWMnRjTmErL1VBSUd2ZW1xaEJhZDliNXZQNW9ONGVXN3F1STJXVXhBQzg5eFJGMFZ0cjlrMWNQYTVpK0FnWDdkWFRLamI3SnBvVTBISzVITUlhMGc4NmVENjlDVlVGMDRlYi9mdG51bHJnRTVBT3RsOS9HOUt4QUFBQUFFbEZUa1N1UW1DQyIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIFNNUyB2ZXJzbyBudW1lcmkgZGkgY2VsbHVsYXJlIGJ1bGdhcmkgTXRlbC48L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c3IiIGRlZmF1bHQ9IiIgZGVzYz0iaW5zZXJpc2NpIHF1YWxzaWFzaSBjb3NhIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vc21zYmcubmV0L3Ntcy5waHAiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9Ik1OMSIgdmFsdWU9IjM1OSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iTU4yIiB2YWx1ZT0iJSVwcmVmJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Ik1OMyIgdmFsdWU9IiUlbnVtJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9IklEIiB2YWx1ZT0iMSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iRlJPTSIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iU00iIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibnVtIiB2YWx1ZT0iMTQyIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzYm0iIHZhbHVlPSLI5+/w4Png7eUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSIuOiBzbXNiZy5uZXQgOi4gc2VuZCBmcmVlIFNNUyIvPg0KICAgICAgICA8L2FjY2VwdD4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI5OSIgbmFtZT0iRnJlZWNhbGwiIHY9IjEuMCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTYwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQ25rbEVRVlI0Mm0yVFgwaFRZUmpHbjIrbi9YTkh6VzNXUnBwWmcrZ1BDVkZRell1b0M0VXVvcWdMSzR3aUl1d211OGh1c2pLbzhNSVNNZWdxMUFnS0xhWlhGbnBsNE9XbUtNMjhTQ2tjYlZhcnMrYituYS8zZk9kc2s5RUxINXp2OEQyLzg3elA5eDdHcWJDKzRtOEE5UnRneXRHRzZlKzRSUHQ2b09Ja1Nvc1ZBR3NoOEhnZnVFd0hOMVNTd0lMUVRBd2o3ejdCZjNnTGZIVW0rTHc1TUVjTFlHc29BU2pqNEtrQXVIMHJDVzIwckJoNEdjYmdVQWcrbnd1TGk2dm91dXVILzVBTFNFWmdjbHdHTERzTlFQb0w1ejhmQVBaYWNtb1ZnSS9UcStpOFB5VU81QUdCa1ZPUXk2Z3RkUTNzN3pKWTVXM0FYRWVBbGV1YzIyVWg1R1JiU1VvNGYya0NpcExSQVR1Y1dnaDQzbjljaUtHbXdMU1ZvbnpjOStoNXBZWERWaU5zYTREeHlSaTZuOHdJY2V1RnZRVFlTSHFWY3FnbWNib0FRR0llelB1V25tTnRYQlBuMTUySDg5UkNGTExEak1Ed0NTTXF6WHFXUUJrU3BJdWdxaDdhUjY4V0Fkay9PSFkyTENSTmpVQkhtMU56VDZVQ2tvUE8yQ2s4Y3NJTmdMT1BBTXRObktXalFDcUM0SUlkN2IyMUF0RFIrZ1BOUnhMR0hLakdJaGVNZWplN3dHMjFZRFZqRk9Lc3MrQWcrRmxHZTQ5YmFGNDkvZzJQV3kwQUdNL3BBSlhDNVNuaEFIdWk5SDdPeTNWN1ZneFB5T2gvYlJlYXlSZkcxL0l0Q0hGVzJCY2g1c2pkcnE4RVdEakFxUWR4alFPak5FQUJTYisrT2diL2Zna1hUNXVMOWluRVFvQVNPZDMybmdEeE1jNmpuV0o4ZzJFemJqN1M3OTlUTGFGaHR3VWQxOHAxZ0xDdWk1R05nM21lQW1XTnhpaEhPZ2srVFVtWDQ5eU51UGlKSXRFc2JyVnRSdk5SR2pMUmY4WVFLMkRXZzhDbXJwS2ZhYlVYUFBrQlV6TVY2SDcySFVvaWg5R2hmVFFQSnFOLytucHlDVXcrQTFSZCtjL2ZxRlZtQ2ZnMUNDVStpNVZZRnI1NldZeXh1QVhUZGwxSTg3KysvZ0ZtanozZ09VdUN5d0FBQUFCSlJVNUVya0pnZ2c9PSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyB0cmFtaXRlIEZyZWVjYWxsPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cuZnJlZWNhbGwuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cuZnJlZWNhbGwuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIzIiBuYW1lPSJtaXR0ZW50ZSIgZGVmYXVsdD0iIiBkZXNjPSJOdW1lcm8gdmVyaWZpY2F0byBjaGUgdmVycsOgIHZpc3VhbGl6emF0byBjb21lIG1pdHRlbnRlLiBVc2FyZSAwMDM5IGNvbWUgcHJlZmlzc28iIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwczovL215YWNjb3VudC52b2lwYXJvdW5kLmNvbS9jbHgvaW5kZXgucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InVzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBhc3N3b3JkIGluY29ycmVjdCIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly9teWFjY291bnQudm9pcGFyb3VuZC5jb20vY2x4L3dlYnNtczIucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9InNlbmQiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhbmVsIiB2YWx1ZT0idHJ1ZSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY2FsbGVyaWQiIHZhbHVlPSIlJW1pdHRlbnRlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYm5ycGhvbmVudW1iZXIiIHZhbHVlPSIwMCUlaW50cHJlZiUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZHNjaGVkdWxlZCIgdmFsdWU9Im5vIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0ic2VudCEiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlNvcnJ5LCB5b3UgZG8gbm90IGhhdmUgZW5vdWdoIGNyZWRpdCIgZXJybXNnPSJDcmVkaXRvIGVzYXVyaXRvLiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbmNvcnJlY3QiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBob25lbnVtYmVyIGlzIGludmFsaWQiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjUzIiBuYW1lPSIxMTg4IiB2PSIxLjQiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iNjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQWt0SlJFRlVlTnFNVXp0TEkxRVUvdTdNSkptZFpMTWtGa29NckF4bWl5eENzTEFTOVRmWWl0WEMydmtvYk54RmEzczdmNEFnRnVZbldLUVFoQldGeEJTeVRReUxyc1RWSkRQSlBPNmVNenNKTWFiWWdWUE12ZmQ3M08rY0s2U1VqVTYxcXY4cEZtSGYzQUJTQWtKZzVCZnVHYk96K0xDOGpFZ21Zd3ZyK3RxKzI5bUp1ZmYzRUxFWS91ZnpMUXV4NldsazkvYzc2bGROKzJaWHF4cDBIWkpGZWtWcWt0UmVyWVdGYUJST3ZjNW5YSzE1ZFFVWmlRQ2VOeURoQTZvSzZUZ1Fpakw2U3VTMmRYa0p4ZTEwNEJHQXl5VVN4N1poek0waHU3ZUhhQzZIN3NzTEJzKzhLdGVGNXJKYVA2UEFJTFJzRnNtbEpieWJtY0hEMFJFZVRrL1JvWXpVZUJ5Q25BVmhFazdsK2pJeDhkMlhVdlA1emxRK3VXaFZLbmkrdUVBa2xjTDQ2aW9TbERyb211M2JXN2pkYnBDRHorQmswaFdsUXNHaWY3MXZnNE1qRXIvZGhwSkl3REJOZkZ4ZlIzcHhFWTFTQ1pXTkRZQ3NzNkF4TldWcjdtQjRBeVMrcHNGNWVvTHkrQWluMFFpV3JWb3RjSURRclVmWXR3UUVkaW00U0RxTjdNb0tURkozbTAxVWRuZFJQemtKN3M0NXlEQjB6UmtpOEZvdGpNM1A0OVBXRmxMVWpkcnhNWDRlSHVLNVhQNFhJcmVWTURMc3hCc0gzQm9lcXRqa0pINFF5UjExd0tkNVVBMERIcWNmbnU4NUVFWFR0R2haRjBQekxpZ0RqMGFXRllQV0RUOExBc2ROMDFiZTUvTndLSEZtQzRxWnlRVVBsRTlFck5mZkM0dkQ2OUpWazRSVjh0dmJnaTEzU2EwL1laeHdyNGFuajhBMmhSck5aSkJiV3hPQ24vT3Zzek85ZkhDQTMrZm44RWs5Q0dyVWErYmhJYkh4aFFWODN0ekVXS0ZnL3hWZ0FIaWtmZ09FT0lCRUFBQUFBRWxGVGtTdVFtQ0MiID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSBTTVMgdmVyc28gbnVtZXJpIGRpIGNlbGx1bGFyZSBPMiBkZWxsYSBSZXB1YmJsaWNhIENlY2E8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJlbWFpbCIgZGVmYXVsdD0iIiBkZXNjPSJFbWFpbCBtaXR0ZW50ZSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSBtZXRob2Q9IkdFVCIgdXJpPSJodHRwOi8vc21zLjExODguY3ovIi8+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9zbXMuMTE4OC5jei9pbWFnZXMvc21zY29kZS5waHAiIGNhcHRjaGE9IjEiLz4NCiAgICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vc21zLjExODguY3ovIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJhZHJlc3MiIHZhbHVlPSIlJWludG51bSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJjb2RlIiB2YWx1ZT0iJSVjYXB0Y2hhX3ZhbHVlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InJlcGx5RW1haWwiIHZhbHVlPSIlJWVtYWlsJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InRleHQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZCIgdmFsdWU9Ik9ERVNMQVQiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJVcG96b3JuIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJlbGEgbmVibyBuZWJ5bGEgdnl0dm8iIGVycm1zZz0iQ2FwdGNoYSBlcnJhdG8vU2Vzc2lvbmUgc2NhZHV0YSIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJrZW0gTzIiIGVycm1zZz0iTnVtZXJvIGVycmF0byIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI1NCIgbmFtZT0iSW50ZXJ2b2lwIiB2PSIxLjAiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE2MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBSUFBQUNRa1dnMkFBQUFCM1JKVFVVSDJBZ2JEaGtEalVaNkZRQUFBaTlKUkVGVWVKeFZrTXRPVTFFVWh2KzE5KzY1dExROWxQUm9hVkdxVlJvSEdneUpSaUtKaVVNZXczZndEWHdhQjhhUkF5ZU9ESVlaaWlKRUk0RVloVjVvVDYvbm5QMDdhREc2Sm12MDN6NGgyZTdIZzFHaXRBcURqSXpzWUtqRU11dFBUZEVuQ1JGMko5SEVRTVJiZ0FIdzRXdjA4VnZIR0wzOXNOQjdmYmI3Nm9zUmRYT3I4UGo1cGxCSm1yNTdzWHUwM3hMcWU4K3VLd0FaTFo2ck5ld2c2c3VvRy8zOFBXNjNEdzlhblhZSGd2Tzl6dWYzUCtKV0s0cWppOXhFQVNCZ1FVSXNrbnl6blBGOTdlamtJdTMxRXhINTlQSmdHc2M2NDV1NzVsb3pNQUFFRUFwZ3RaTXZWYXdTQXBMMDRtRzNOejNPSCs2Y3VrWk5mRlY3c0ZoZnJpck1qcUNvVkFWdTZHUUQxNUljYzNUQi9UZEhnKzVRaVZKcmhZMzFoakdlbVFzRUFpUkprcnVTSzViY1FYZXNOVS8yb21qbnpERXk4c3phVm1tbHZtd3RMeE1BRVpHVWRCeDNOV1NTYW8yenR5ZlJhVWZFbUlhNzhiUk9iWUIvQkNScEtXUzU1cE1pU3RKV1gxSWJPMUo3RWk0RkpWaUt5SDhKaEVCUWJKUkZLWkl3Q2pIWldHaXNsMEZ0ZVNrZ09ZTXJBQ0NGMEhHeURsTUttV1JNY0Y5ZnE0WUFSWVNrbW5uUDRRb0JGSzVtc3dYSGtoTFQxdjNtWmkyZkxZSVF1VXhJQ1pJRUtCcUFrMWRlMFNDbDFTYS83dDF1ckpDa3pCc29BRVVmMmppd2xNa3ZBTVp6Z3h0aFBNUmt4Yi8xcUJMa0FoTGd2SWdCY0tlcVpES0twK1BxWWpCcjJOeXV0QUtkV1Rwdk5pcUVBdXhzZ013ZVNSc1BTV2duT3lNV0l6NCsvZTZKVzExZUJmaDNKNEEvOFpFUWs4UEd5RjhBQUFBQVNVVk9SSzVDWUlJPSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyB0cmFtaXRlIEludGVyVm9pcDwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LmludGVydm9pcC5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5pbnRlcnZvaXAuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIzIiBuYW1lPSJtaXR0ZW50ZSIgZGVmYXVsdD0iIiBkZXNjPSJOdW1lcm8gdmVyaWZpY2F0byBjaGUgdmVycmEnIHZpc3VhbGl6emF0byBjb21lIG1pdHRlbnRlIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cuaW50ZXJ2b2lwLmNvbS9teWFjY291bnQvaW5kZXgucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InVzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBhc3N3b3JkIGluY29ycmVjdCIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cuaW50ZXJ2b2lwLmNvbS9teWFjY291bnQvd2Vic21zMi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0ic2VuZCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFuZWwiIHZhbHVlPSJ0cnVlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJjYWxsZXJpZCIgdmFsdWU9IiUlbWl0dGVudGUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJibnJwaG9uZW51bWJlciIgdmFsdWU9IjAwJSVpbnRwcmVmJSUlJWludG51bSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kc2NoZWR1bGVkIiB2YWx1ZT0ibm8iLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJzZW50ISIvPg0KICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iU29ycnksIHlvdSBkbyBub3QgaGF2ZSBlbm91Z2ggY3JlZGl0IiBlcnJtc2c9IkNyZWRpdG8gZXNhdXJpdG8uIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBob25lbnVtYmVyIGlzIGluY29ycmVjdCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW52YWxpZCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNTUiIG5hbWU9ImRvZG9UZXh0IiB2PSIxLjEiIG1heHNtcz0iNSIgc2luZ2xlbGVuPSIxMDAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTAwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iQUNDRU5UIiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQTRBQUFBUUNBTUFBQUFSU3I0SUFBQUFBWE5TUjBJQXJzNGM2UUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUFnWTBoU1RRQUFlaVlBQUlDRUFBRDZBQUFBZ09nQUFIVXdBQURxWUFBQU9wZ0FBQmR3bkxwUlBBQUFBd0JRVEZSRm5lVmJvT1ZmbitoanArWmlwdVpscWVSbW9lMWpvK3RtcGV0a3B1dGtxdWxqcU90anEreGlxT2xtbytWb3ArUnJwdVJ2cXVacHIrZHBxdU51cStSdXErZHVyZVJ0ck9kc3JPVnZwdWxvcGV0b3BlbHVxT2xvcWVwcXFPaHRwK1oycStGeXJlTnlyT2R4citkeXJPTjBxZVYwcStSMXJlUjFwK1Y1cmVSNXJPUjdydWw4cytoNXRPQ0F0dU9IdCtlRXR1ZUZ1T0dEdk9XR3RPS012T2VJdk9lT3ZPbU91dUdTdnV1UndPU1N4T2lid2VxY3hPeWZ4ZXFpeXVtZ3lleWx5dXluenVxdnp1K3YwKytoMU8ycTB1NnQwdXV5MStxMDNlZTUxZSs0MmUyKzFQYXoxL0MzMS9HMzRQTzkzUFhIM3ZESjR2SEI0ZlBJNGZmTDR2UE41L0hPNnZMSjUvYlc2UExWNi9mVjYvZmE4dmJkLy8vMyt2LzQvLy8vyZStqOXdBQUFPUkpSRUZVR0ZjVnptMVB3akFZaGVGSHVzbVdXUjFiWTFQMnBOcDJXWDJkK0JLbXFBUUZRWFFSRFNpb3lQLy9HWTdQMTMyU0F6bkwwb3cxUXFiM2xNN0JCZ0kzUFhPV2tMRHU3OElSSnBMRzVmSnk4SG5nSzBnRFJGRnJEZlpmdjVOSzA0QUh4M2ZkVGlzdExLMDBrczdqY3JXYTN2ejFDUWNieWNiYjhPbG5kam91aUFLRDlPUWpoRzY1VFRoeTRITGp1blJnMkt0dE1UU1ZCcjFwdTVpMVBTb3JUYWt6ZnVtTWZrMDlsaUtHUStHKzMxNDlURUtmSmxWc205Rjg4ZnpWZDZTMzN1cW12Ri9NSnhjdUluSU9tVUJHWExhK0tuWU1uRWM2eVpUUzJrWks1Zjg2M1NCOUVVNm9IZ0FBQUFCSlJVNUVya0pnZ2c9PSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIDIwMCBTTVMgdmVyc28gU2luZ2Fwb3JlIGUgMSBTTVMgb2duaSAxNyBnaW9ybmkgdmVyc28gYWx0cmUgbnVtZXJhemlvbmkgaW50ZXJuYXppb25hbGkuPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGlsIG51bWVybyBkaSBjZWxsdWxhcmUgcmVnaXN0cmF0byBzdSBkb2RvdGV4dC5jb20sIHByZWZpc3NvIGludGVybmF6aW9uYWxlIGNvbXByZXNvIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBhIGRvZG90ZXh0LmNvbSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9tLmRvZG90ZXh0LmNvbS9pbmRleC5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibSIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYSIgdmFsdWU9IkxvZ2luIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iRXJyb3I6IE1vYmlsZSBub3QgZm91bmQhIiBlcnJtc2c9Im51bWVybyBub24gcmVnaXN0cmF0byIgZXJyY29kZT0iNSIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJFcnJvcjogSW5jb3JyZWN0IHBhc3N3b3JkISIgZXJybXNnPSJwYXNzd29yZCBlcnJhdGEiIGVycmNvZGU9IjUiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9tLmRvZG90ZXh0LmNvbS9pbmRleC5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0icyIgdmFsdWU9IiUyQiUlaW50Y29kZSUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYyIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJhIiB2YWx1ZT0iU2VuZCIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9Ik1lc3NhZ2Ugc2VudCIvPg0KICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iRGFpbHkgcXVvdGEgcmVhY2hlZCIgZXJybXNnPSJIYWkgdGVybWluYXRvIGkgbWVzc2FnZ2kgZGlzcG9uaWJpbGkgcGVyIG9nZ2kiLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iRXJyb3I6IE1lc3NhZ2UgZW1wdHkhIiBlcnJtc2c9InRlc3RvIG1lc3NhZ2dpbyB2dW90byIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI1NyIgbmFtZT0iU01TZGlzY291bnQiIHY9IjEuMCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iNjQwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBRElFbEVRVlI0Mm0yVE8yd1VWeFNHdnpzek8vdndJeDdXTm40cFVVd2NDNG84d04wU1lxVWdTQ2hDaXFnUWdsUzBMb2dvSW9VMHFWSlFSY0l5RFpKaGlkTFFSalNKa0VVc09jaVNDeHljdGRlN085NGxYdS9NeHZhK1p1ZVJPMk9pTkZ4cGRQNTc3N24vT2VjL1o4VG01dVpQaVVUaVBPRUtmT2dlZ2xDUHNPZEV4eWh5citweTM0VllVdTcxNkxqZGJqOFJPenM3emRIUjBXUWdCQlNmb3Z6Nk5iU3EwRHNHZzZmQWQ2V25CWlVWNkJtSHFTL3dNN2NSUVVDbFVtbEpncktWVHFlTlFOTlJYanhDcjYzQ3lBd3Mvd0FmZkFYRys3RDBIYno3T1J6L0NDLzNDOTN6OHdqWG9WYXIyYUpVTXEyQmdRSEQxMUxFL3N5U1BGaUhUNzZId3dvOC9RWU9wTTE4Q3hNWk1KZm9yaTNTK213ZXhXMVNyOWR0VVN3V3JiNit2aU9DbDQvb2F4ZmtnOXU4Y2IxYW9mUEhQUnFmL29qaU5UazRPTERGOW5iQjZ1bEpHWjdhUXlMM00yKzlYSURwTDZXSXNuYkU2ODgvRXJhNlRydlQ0Wi9aZTZoZWcwYWphWXV0cmJ5bDZ6RWpFQnBxOHhYNnptL1N2L1BtREFJTlZ3cmJIZnhZaXVqaU9GMWJiR3o4WmZtK2EyaXFqS1JxZEVsR3Zxb002THBCaE1NN3p6L2lpQ215bGQwMnJoZWdLSm90Y3JtY3BXbkNNTTAyaDRjdUowNms4S1h6L3I2TFljU2lSL1Y2bC81K0xjSmJXODBJajQwbHdnQzJNTTI4OWZoeDFYajJ6RWJYRmVKeHdmUjBMNHVMSm5mdW5FSzJtNXMzWDNEbHlqaWxVa3VtSFVUMndvVWhMbDgrYm90eXVXRE56YTBiRXhNSnJsMTdtNlVsaTkzZER0bXN5ZHpjWkJUMTd0MDhzN09EckszdGMrdldlNUpVVUswNlhMeDRMQ1FvV2ZtOGE4elBieUtIVWpvT0llUlVycTdhc2dROXdyYnRjUGJzSU1QRENSNCtMQkFPN2RXcjczRHVYTDh0Q29XaWxjMytiVnk2TkU0eXFYSDkrdStrVWlxWnpCREx5elVwRkp3NWM0eENvY0hwMHdZM2JreHgvMzZlQncrMnBmM1FGdFZxeFZwWUtCdlBuKzh4T2RuTDNsNkhkRG9lNFkyTi9haUVxYWwraXNVR3B0bVVkN29jWVllVEp3Y2syVmhZUXJrNU1qS2NEQW5DVkdkbTBuUTZ2cXd6d1BPQzF5MFZNaE5CSXFHeXNySW51eENUV1ExSnJYWmI0ci9mT1I1WElpZkg4YU1hUS9WREc4MVA4UDhzaFowSzIrdzRIcTFXKzhtL0IrdHd5czBIUGgwQUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBTTVNkaXNjb3VudDwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnNtc2Rpc2NvdW50LmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnNtc2Rpc2NvdW50LmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iTnVtZXJvIHZlcmlmaWNhdG8gY2hlIHZlcnJhJyB2aXN1YWxpenphdG8gY29tZSBtaXR0ZW50ZS4gVXNhcmUgKzM5IGNvbWUgcHJlZmlzc28uIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly9teWFjY291bnQuc21zZGlzY291bnQuY29tL2NseC9pbmRleC5waHAiIG1ldGhvZD0iUE9TVCI+DQoJCTx2YXJzPg0KCQkgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCgkJICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQoJCTwvdmFycz4NCgkJPGVycm9ycz4NCgkJICA8dmFyIGVycnN0cj0icGFzc3dvcmQgaW5jb3JyZWN0IiBlcnJtc2c9IlVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIi8+DQoJCTwvZXJyb3JzPg0KCSAgPC9wYWdlPg0KCSAgPHBhZ2UgdXJpPSJodHRwczovL215YWNjb3VudC5zbXNkaXNjb3VudC5jb20vY2x4L3dlYnNtczIucGhwIiBtZXRob2Q9IlBPU1QiPg0KCQk8dmFycz4NCgkJICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9InNlbmQiLz4NCgkJICA8dmFyIG5hbWU9InBhbmVsIiB2YWx1ZT0idHJ1ZSIvPg0KCQkgIDx2YXIgbmFtZT0iY2FsbGVyaWQiIHZhbHVlPSIlJW1pdHRlbnRlJSUiLz4NCgkJICA8dmFyIG5hbWU9Im1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KCQkgIDx2YXIgbmFtZT0iYm5ycGhvbmVudW1iZXIiIHZhbHVlPSIwMCUlaW50cHJlZiUlJSVpbnRudW0lJSIvPg0KCQkgIDx2YXIgbmFtZT0ic2VuZHNjaGVkdWxlZCIgdmFsdWU9Im5vIi8+DQoJCTwvdmFycz4NCgkJPGFjY2VwdD4NCgkJICA8dmFyIGFjY2VwdHN0cj0ic2VudCEiLz4NCgkJICA8L2FjY2VwdD4NCgkJPGVycm9ycz4NCgkJICA8dmFyIGVycnN0cj0iU29ycnksIHlvdSBkbyBub3QgaGF2ZSBlbm91Z2ggY3JlZGl0IiBlcnJtc2c9IkNyZWRpdG8gZXNhdXJpdG8uIi8+DQoJCSAgPHZhciBlcnJzdHI9InBob25lbnVtYmVyIGlzIGluY29ycmVjdCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iLz4NCgkJICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW52YWxpZCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iLz4NCgkJPC9lcnJvcnM+DQoJICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNTgiIG5hbWU9IkRpYWxOb3ciIHY9IjEuMCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iNjQwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBREJVbEVRVlI0Mm8yVGJVeFRWeHlIbjNOdmJ3RXQya0lkbXNrMFdGcTBROWFFS1kzWlpzeWNMMmljWmt3Y0tpNGthTmdYcDFFK2tKZ2xKa1lUSmZwRjkrS3l6a1dYckUyV1FHSmRmSm04aEFqRFpTRE1RWVhOQ2dpSU9NRXlwTnplSFhBZkRMakUzNmVUazV6blBPZjg4aGV4V0V5NTJmdWdmV0JrbEFXekUzRWxXeEhBb2VvR0VzMW1EdVM4d2RUc3ZWeEw2cXhFOWkvUGNvb0p3Q1ovVUwvWWNSZEZDTGEvN3VTTGRlK1EvVTJBMlhGbXFyYS9QdzJ3NlBSNVBIUHRCTGFzVVo4QkFrSDlSbmNmaFprdVR2N1NUR1hlZWxvZkRESkRNN0hObmM2UnVwdGtKTnNJRHoxaGg3eGc5ZmVWZUZLZUIwaUR4dDUrZVRDWDViNEF4MVo1T2QvU2ppMCtqdmZTVWltN1hvOTdUdElrOUZMK0Jvb3ZWazAzYUx6ZlQvbTdLOWhSY1pXdmMxZHlzcUY1RXBDZVpPWGNyVGJPeXIzQ3ltc0V0MHBBOFBvVUF3bjRxVE9NcGlna0o4VHphOUdIckw1UU1RbFlrL1lhWlZYMUxKYWZlL3ZoSXduWU9BVVFqZmkrYmVrc2JIczBURXFDeGxhM0t6YlhZbW1aMEo1cDF0anRXVUxKcFdxeTU3MUNVLzhBQjNNOCtKci9ZUDRzQy91V1pYbkUySS9lRUVNZER0TUh2ekh1ZDZPNGlpSW03M0VMTHhreDVzOE1HWU8zSEtyM0ZQcU4vYWp1VDZLS3QveFVyTjBIZzYwb1dRY3hSbm93ZW10UTB2S0lkUVlRODlkaTlOY2g0dWRJd0ErWklZYi9kR0JiREkvdlNJT1B3ZXBDcnkxQnhDV0JaUUZxOW1lTUJ6ZWd2dlU1ZXMwZVZHODVlbjBwNnB1SG54bWdQM1VnRkJqK0MyVkpDY1pnRThib3c4bDFyS1lZZFhNRGVzVktzSHZnNzl2eWdnem9xOE9VMS9vZklCcHhLTTVkNkkySFVKZnV3L2luRjZQblowVHFlb3pRZDVnSzdxRmZ6cFBQcUVVNGQySzBuNE00VzVkcFcwZXVHTDFTRUdJODR0QzhKeGk3a28vcUtFQmR1SkZvZFRHeHlIM01TejlGeVNoQy8vME00MjArdEdWSGlEYVVvYjY2cXRPY2MzU1I2QnA2WXBmeWFwTHN2eTh5Z2tWV0ovdHYrdktyc3lsZFhmZXdXYTEwZDNlVDduVFdyOHYvYUpOOVJqd1RnMmZSTk4wK00yRkF2S2dhdjkvZkl6TXZIQTVqbFFBaGgwelR0SnJTMHRLM3A5WDRzbjMvWC80RitVaEFTVDdJZ3hRQUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBEaWFsTm93PC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cuZGlhbG5vdy5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5kaWFsbm93LmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iTnVtZXJvIHZlcmlmaWNhdG8gY2hlIHZlcnLDoCB2aXN1YWxpenphdG8gY29tZSBtaXR0ZW50ZS4gVXNhcmUgKzM5IGNvbWUgcHJlZmlzc28uIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly9teWFjY291bnQuZGlhbG5vdy5jb20vY2x4L2luZGV4LnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJ1c2VybmFtZSIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwYXNzd29yZCBpbmNvcnJlY3QiIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vbXlhY2NvdW50LmRpYWxub3cuY29tL2NseC93ZWJzbXMyLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJhY3Rpb24iIHZhbHVlPSJzZW5kIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwYW5lbCIgdmFsdWU9InRydWUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImNhbGxlcmlkIiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJtZXNzYWdlIiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImJucnBob25lbnVtYmVyIiB2YWx1ZT0iMDAlJWludHByZWYlJSUlaW50bnVtJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlbmRzY2hlZHVsZWQiIHZhbHVlPSJubyIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9InNlbnQhIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJTb3JyeSwgeW91IGRvIG5vdCBoYXZlIGVub3VnaCBjcmVkaXQiIGVycm1zZz0iQ3JlZGl0byBlc2F1cml0by4iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW5jb3JyZWN0IiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbnZhbGlkIiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI2MSIgbmFtZT0iQWltb24iIHY9IjEuMCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iNjEyIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iSVNPLTg4NTktMSIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQVhOU1IwSUFyczRjNlFBQUFBWmlTMGRFQVA4QS93RC9vTDJua3dBQUFBbHdTRmx6QUFBTEV3QUFDeE1CQUpxY0dBQUFBQWQwU1UxRkI5Z0pEd29MQXhDZ1MySUFBQUk2U1VSQlZEakxsWk5mU0ZOeEZNYy91L2R1YnRPNXBWUG52MW96NW1RYm10Q2ZDM3ZvajBRUGFoSktoVjVDRWhRR0JkWkxMNEhVcTlGTFVFUVErTkpUanhFUkZFUm9mMmlsRXVwZURDMXpESm5MOWtlM2UzdVlmNUkwN2NDQjMvbWUzL253NWNBUitVYzRPNjUzdFhiM241V2NqWTY1ankvRytaK283YjM5WVBCTlJPc05KVFZ4OEZrU1diRnQ5VS9ZY2xwV1BKUGVFejFYVjJ6Y1gwaVEzZWN5VWxMV3RYdUEwOTlEaFN2M05oaGhlUmxxM01IZEFXVEZ5RjdmeGZVNnp3eVpMSlJYZVpDVnBwMEJ4b0kyS3IxMk1US3pvWm1MUU5CQmpidDNaNER6Y0ZESXBCRy9mQUJWelduV01raWxvTkRhaHF4VWJRK1FGUjkyZDBENk5vRTJNem5MNU9jTUFLSWVMT1ZnTWt0WUN2dTJCeFM3KzNUNXBValRJYklMOCtPTXZwdFk3OWtQUU9JWFdDeVhrQlZwVFpZMkxXK1BwOU1RRGRQZjBjeXhRNDJua3hwMHh5QUtVRkFNQmh0SVVRZWkyQTQ4M3V6QVlEMlByZGFXZHZpNEZhdW1LZlNUbHRrVm91b2ZEaXNQUWpvTmVrUHdid2RXZnhCME1Id1hkTUpEektaWjlBS0lncGZPYSsyZ0IwY2RxQ0tvYWdCWmFXQjQ2Sk80YXY4bzlwTTN5SXVEZVFtK2hxOFFYM2pDMHp2UE1WZThwTUoxR1d1NXhJb0FpM0hRWWxCU1drVkI5WHNCV1duQVZIOFR2UjNxOThPUkFMajhyNEgyVlc4T3dtTWJoMVIzQ2xyT2dkM1JqS2tvTEtFZEQySHc1SnBUS21UaThDTVNCWEpEWnk2TTRRM0EyaTcwK1REdmdlOXZRYzJPU0RBNndOSVVMQXNRRVVCTFFXTCtFY05EMHdDTXZCcGdOQVJaY3BraEI0dlBSVWt2M3ZzTldyeXRtTGZoTHJzQUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSBnbGkgU01TIGNoZSBoYWkgYWNxdWlzdGF0byBvIGd1YWRhZ25hdG8gY29uIEFpbW9uLjwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LmFpbW9uLml0IHNlbnphIEBhaW1vbi5pdCAiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5haW1vbi5pdCIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGlsIGlsIHR1byBudW1lcm8gZGkgY2VsbHVsYXJlIHNlbnphIGlsICszOSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuYWltb24uaXQvbG9naW5fcGlhdHRhZm9ybWEucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InVzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlJTQwYWltb24uaXQiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJidXR0b24iIHZhbHVlPSJFTlRSQSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxoZWFkZXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHA6Ly93d3cuYWltb24uaXQiLz4NCiAgICAgICAgPC9oZWFkZXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJjcmVkaXRpIiBsZWZ0PSJkaSAmbHQ7U1RST05HJmd0OyIgcmlnaHQ9IiBjcmVkaXRpIi8+DQogICAgICAgIDwvY29udGVudHM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9pYWRkbzkxLmFsdGVydmlzdGEub3JnL3NjcmlwdHBocC9haW1vbi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY3JlZGl0cyIgdmFsdWU9IiUlY3JlZGl0aSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJ0ZXh0IiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJyZXNpZHVpIiBsZWZ0PSJzbXM6IiByaWdodD0iOnJpbWFuZW50aSIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vdC5qYWNrc21zLml0L0FpbW9uLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJ0ZXh0IiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im1pdHQiIHZhbHVlPSIlMkIzOSUlbWl0dGVudGUlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICA8dmFyIG5hbWU9InRleHQiIGxlZnQ9IlRlc3RvOiIgcmlnaHQ9IjoiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im1pdHQiIGxlZnQ9Ik1lc3NhZ2dpbzoiIHJpZ2h0PSI6Ii8+DQogICAgICAgIDwvY29udGVudHM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vc2VjdXJlLmFwaXNtcy5pdC9odHRwL3NlbmRfc21zIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImF1dGhsb2dpbiIgdmFsdWU9IiUldXNlcm5hbWUlJSU0MGFpbW9uLml0Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJhdXRocGFzc3dkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kZXIiIHZhbHVlPSIlJW1pdHQlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYm9keSIgdmFsdWU9IiUldGV4dCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJkZXN0aW5hdGlvbiIgdmFsdWU9IiUlaW50Y29kZSUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iaWRfYXBpIiB2YWx1ZT0iNTkiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJBY2Nlc3MgZGVuaWVkIiBlcnJtc2c9InVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9ImRlc3RpbmF0aW9uIGludmFsaWQgcGFyYW1ldGVyIHR5cGUiIGVycm1zZz0iRGVzdGluYXRhcmlvIG5vbiB2YWxpZG8iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iYm9keSBub3Qgc3BlY2lmaWVkIiBlcnJtc2c9Ik1hbmNhIGlsIHRlc3RvIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9InNlbmRlciBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMgb3IgaXMgdG9vIGxvbmciIGVycm1zZz0iTWl0dGVudGUgbm9uIHZhbGlkbyIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJOb3QgZW5vdWdoIGNyZWRpdCIgZXJybXNnPSJDcmVkaXRvIGVzYXVyaXRvIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9ImJvZHkgY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXJzIG9yIGlzIHRvbyBsb25nIiBlcnJtc2c9IlRlc3RvIG5vbiB2YWxpZG8iLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9IlNNUyBRdWV1ZWQiIGFjY2VwdG1zZz0iU01TIEludmlhdG8hU01TIHJlc2lkdWk6ICUlcmVzaWR1aSUlIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjYyIiBuYW1lPSJBaW1vbi1GcmVlIiB2PSIxLjIiIG1heHNtcz0iMiIgc2luZ2xlbGVuPSIxMTIiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTEyIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iSVNPLTg4NTktMSIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQVhOU1IwSUFyczRjNlFBQUFBWmlTMGRFQVA4QS93RC9vTDJua3dBQUFBbHdTRmx6QUFBTEV3QUFDeE1CQUpxY0dBQUFBQWQwU1UxRkI5Z0pEd29MQXhDZ1MySUFBQUk2U1VSQlZEakxsWk5mU0ZOeEZNYy91L2R1YnRPNXBWUG52MW96NW1RYm10Q2ZDM3ZvajBRUGFoSktoVjVDRWhRR0JkWkxMNEhVcTlGTFVFUVErTkpUanhFUkZFUm9mMmlsRXVwZURDMXpESm5MOWtlM2UzdVlmNUkwN2NDQjMvbWUzL253NWNBUitVYzRPNjUzdFhiM241V2NqWTY1ankvRytaK283YjM5WVBCTlJPc05KVFZ4OEZrU1diRnQ5VS9ZY2xwV1BKUGVFejFYVjJ6Y1gwaVEzZWN5VWxMV3RYdUEwOTlEaFN2M05oaGhlUmxxM01IZEFXVEZ5RjdmeGZVNnp3eVpMSlJYZVpDVnBwMEJ4b0kyS3IxMk1US3pvWm1MUU5CQmpidDNaNER6Y0ZESXBCRy9mQUJWelduV01raWxvTkRhaHF4VWJRK1FGUjkyZDBENk5vRTJNem5MNU9jTUFLSWVMT1ZnTWt0WUN2dTJCeFM3KzNUNXBValRJYklMOCtPTXZwdFk3OWtQUU9JWFdDeVhrQlZwVFpZMkxXK1BwOU1RRGRQZjBjeXhRNDJua3hwMHh5QUtVRkFNQmh0SVVRZWkyQTQ4M3V6QVlEMlByZGFXZHZpNEZhdW1LZlNUbHRrVm91b2ZEaXNQUWpvTmVrUHdid2RXZnhCME1Id1hkTUpEektaWjlBS0lncGZPYSsyZ0IwY2RxQ0tvYWdCWmFXQjQ2Sk80YXY4bzlwTTN5SXVEZVFtK2hxOFFYM2pDMHp2UE1WZThwTUoxR1d1NXhJb0FpM0hRWWxCU1drVkI5WHNCV1duQVZIOFR2UjNxOThPUkFMajhyNEgyVlc4T3dtTWJoMVIzQ2xyT2dkM1JqS2tvTEtFZEQySHc1SnBUS21UaThDTVNCWEpEWnk2TTRRM0EyaTcwK1REdmdlOXZRYzJPU0RBNndOSVVMQXNRRVVCTFFXTCtFY05EMHdDTXZCcGdOQVJaY3BraEI0dlBSVWt2M3ZzTldyeXRtTGZoTHJzQUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSAyIFNNUyBhbCBnaW9ybm8gY29uIG1pdHRlbnRlIHBlcnNvbmFsaXp6YXRvIHRyYW1pdGUgd3d3LmFpbW9uLml0PC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cuYWltb24uaXQgc2VuemEgQGFpbW9uLml0ICIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LmFpbW9uLml0IiAvPgoJCTxyZXF1aXJlZCBuPSIzIiBuYW1lPSJtaXR0ZW50ZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgaWwgaWwgdHVvIG51bWVybyBkaSBjZWxsdWxhcmUgc2VuemEgaWwgKzM5IiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL2FpbW9uLml0Lz9jbWQ9c21zZ3JhdGlzIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJjcmVkaXRpIiBsZWZ0PSJDcmVkaXRvIHJlc2lkdW8gZ2lvcm5hbGllcm86ICIgcmlnaHQ9ImNyZWRpdGkvc21zIi8+DQogICAgICAgIDwvY29udGVudHM+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iaW5wdXRVc2VybmFtZSIgdmFsdWU9IiUldXNlcm5hbWUlJSU0MGFpbW9uLml0Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJpbnB1dFBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzdWJtaXQiIHZhbHVlPSJQcm9jZWRpIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iVXNlcm5hbWUgbyBQYXNzd29yZCBlcnJhdGkiIGVycm1zZz0idXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiIGVycmNvZGU9IjUiLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iQ3JlZGl0byBub24gc3VmZmljaWVudGUiIGVycm1zZz0iQ3JlZGl0byBub24gc3VmZmljaWVudGUiIGVycmNvZGU9IjEzIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vaWFkZG85MS5hbHRlcnZpc3RhLm9yZy9zY3JpcHRwaHAvYWltb24ucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImNyZWRpdHMiIHZhbHVlPSIlJWNyZWRpdGklJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idGV4dCIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0icmVzaWR1aSIgbGVmdD0ic21zOiIgcmlnaHQ9IjpyaW1hbmVudGkiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cDovL2FpbW9uLml0L2luZGV4LnBocD9jbWQ9c21zZ3JhdGlzJmFtcDtzZXo9c21zZ3JhdGlzIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InRpcG9zbXMiIHZhbHVlPSIxIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJ0aXBvbWl0dGVudGUiIHZhbHVlPSIxIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwcmVmaXNzb19pbnRlcm5hemlvbmFsZSIgdmFsdWU9IjM5KyUyOEl0YWx5JTI5Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJtaXR0ZW50ZSIgdmFsdWU9IiUlbWl0dGVudGUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idGVzdG8iIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY2FyYXR0ZXJpIiB2YWx1ZT0iMTEyIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJkZXN0aW5hdGFyaW8iIHZhbHVlPSIlJWludG51bSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJidG5TdWJtaXQiIHZhbHVlPSJJbnZpYStTTVMiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJNZXNzYWdnaW8gaW52aWF0byBjb24gc3VjY2Vzc28iIGFjY2VwdG1zZz0iU01TIHJlc2lkdWk6ICUlcmVzaWR1aSUlIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJNaXR0ZW50ZSBub24gdmFsaWRvIiBlcnJtc2c9IklsIG1pdHRlbnRlIGRldmUgZXNzZXJlIHVuIG51bWVybyBkaSB0ZWxlZm9ubyIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJEZXN0aW5hdGFyaW8gcmljaGllc3RvIiBlcnJtc2c9Im1hbmNhIGlsIG51bWVybyBhIGN1aSBpbnZpYXJlIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlRlc3RvIHJpY2hpZXN0byIgZXJybXNnPSJ0ZXN0byBtZXNzYWdnaW8gdnVvdG8iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iTWVzc2FnZ2lvIG5vbiBpbnZpYXRvIHBlciBlcnJvcmUgZGkgc3BlZGl6aW9uZSIgZXJybXNnPSJlcnJvcmUgZHVyYW50ZSBsYSBzcGVkaXppb25lIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9ImxpbWl0ZSBtYXNzaW1vIGRpIHNtcyBpbnZpYWJpbGkgZ3JhdGlzIGluIDI0IG9yZSIgZXJybXNnPSJUcm9wcGkgc21zIGluIDI0aCBwZXIgcXVlc3RvIGRlc3RpbmF0YXJpbyIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJsaW1pdGUgbWFzc2ltbyBkaSBzbXMgaW52aWFiaWxpIGdyYXRpcyBpbiAzMCBnaW9ybmkiIGVycm1zZz0iVHJvcHBpIHNtcyBpbiAzMGcgcGVyIHF1ZXN0byBkZXN0aW5hdGFyaW8iLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNjMiIG5hbWU9IlNtcy1Lb3N0ZW5sb3MtRnJlZSIgdj0iMS40MSIgbWF4c21zPSIyIiBzaW5nbGVsZW49IjEyOSIgc21zX2Rpdmlzb3I9IjEyOSIgbWF4bGVuPSIxMjkiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQVhOU1IwSUFyczRjNlFBQUFBUm5RVTFCQUFDeGp3djhZUVVBQUFBZ1kwaFNUUUFBZWlZQUFJQ0VBQUQ2QUFBQWdPZ0FBSFV3QUFEcVlBQUFPcGdBQUJkd25McFJQQUFBQWs5SlJFRlVPRS9Ga2x0STB3RVVoNDNVWE43K2FwcWF6amwzYldwWVQ3MzExcFgwSlFPSHFZRmROTlExMThXS1dhYlRUVW9wWGVtRUlrMm56bXNYMGZLU1pWcUpsS1pGUnBUWURZSWdJb2pnUzUwdlBlK2hIeHc0TCtmN2ZROW5CUXR4Y3lXTEFGZmk1c3J4a24xZXdXYXN6ZkZZYkxHVTF6bG5jVGZYYWlpdDBXQzZzcDd6MVdyT1Zha3dYbFp5dWxKT29WWE93WUtZcFc0MzdZRUkrbWMwekxHSjJkOGJlZjByZ2VtZkczanhJNTZKNzNFOC9hWmg1S3VhQngrVjNKK1QwLzlKUnYyWW1KUmN3UWt3Vld1b3Nrc3B2eVpoN0hNY1Q3N0VNdlJlVGY4N0ZiMXZGTng2SmFOalNvcGpVa0xMWkJTbmFrTElMQlRRVlFZNEFaWTZEYk4vRXJqYUdZMmhOQXpITXhrREg1UjB6OFRRUGluRlBoR0YvYmtZMjNBNG1VYUJReVovckNNaEdHcVhEWXF0NmlYTjRYa1ZEWStpeVRJR1kya0twMjFhUXNONEpQVVQ2eWhwQ1dhdnpwZGpOb0dLd1NETWZRS0hLNzJkQnNaTENvYm1GWFMrbE5JeEhVM2p1SmdqcGlDeVNnS3BIbHhMYmtVQXlYb2Z6cllKbFBVS0dEdDhNWGI3a0dIeGNnSk9YSkJ4KzYxMG9VM005ZEVJYkNOaDJFWkQwVnNGdHFhSnlDanlvZml1UDhZdVgwNjJlbU93aXpDMGVxRTFlVGdCUjhzazJLY2lxWGtZUnRWQzQ4VjdhekQzQkdMdURlQ013Mi81Y0RYNVRTSjBONzNJdWVGSlRxTUh5VVVybllDc2ttQWFaa0twZmh4TTVYQWc1UU1DcGo0L2lucDhNTjd4cHFCTHhQSDJWZWdkbnVoYVBNaHJkaWUvMHgydFpSbVFyZDlEU25ZOFNmdFZKR1dvU1V4WHNUdGR5YTQwSlR0VEZleElsYk5OKys5czN5ZG5TNkxVYWVEeUsvOTN3Rjg0WHNXamR2WHh5d0FBQUFCSlJVNUVya0pnZ2c9PSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIDUgU01TIGFsIGdpb3JubyB2ZXJzbyBudW1lcmkgZGkgR2VybWFuaWEgZWQgQXVzdGlyYSB0cmFtaXRlIGlsIHNpdG8gZGkgU21zLUtvc3Rlbmxvcy4gT2Njb3JyZSBlc3NlcmUgcmVnaXN0cmF0aS48L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5zbXMta29zdGVubG9zLmRlIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cuc21zLWtvc3Rlbmxvcy5kZSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgICAgICAgPHByb2NlZHVyZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnNtcy1rb3N0ZW5sb3MuZGUvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjc2YiIGxlZnQ9ImlucHV0IHR5cGU9JnF1b3Q7aGlkZGVuJnF1b3Q7IG5hbWU9JnF1b3Q7Q1NSRl8iIHJpZ2h0PSImcXVvdDsiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ2YWwiIGxlZnQ9ImlucHV0IHR5cGU9JnF1b3Q7aGlkZGVuJnF1b3Q7IG5hbWU9JnF1b3Q7Q1NSRl8iIHJpZ2h0PSIvJmd0OyIgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vaWFkZG85MS5hbHRlcnZpc3RhLm9yZy9zY3JpcHRwaHAvcmlwZXRpLnBocCIgbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGhvbmUiIHZhbHVlPSIlJXZhbCUlIiAvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idGV4dDEiIGxlZnQ9InZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnNtcy1rb3N0ZW5sb3MuZGUvIiBtZXRob2Q9IlBPU1QiPgogICAgICAgICAgICAgICAgPGhlYWRlcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJSZWZlcmVyIiB2YWx1ZT0iaHR0cDovL3d3dy5zbXMta29zdGVubG9zLmRlL2luZGV4Lmh0bWwiIC8+CiAgICAgICAgICAgICAgICA8L2hlYWRlcnM+CiAgICAgICAgICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJkaXNwb25pYmlsaSIgbGVmdD0iU2llIGhldXRlIG5vY2ggYmlzIHp1IiByaWdodD0iZnJlZVNNUyIgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CiAgICAgICAgICAgICAgICA8dmFycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9ImxvZ2luIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibG9naW4iIHZhbHVlPSIlJXVzZXJuYW1lJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkNTUkZfJSVjc2YlJSIgdmFsdWU9IiUldGV4dDElJSIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KICAgICAgICAgICAgICAgIDxlcnJvcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IlNpZSBoYWJlbiBlaW4gZmFsc2NoZXMgUGFzc3dvcnQiIGVycm1zZz0iUGFzc3dvcmQgZXJyYXRhIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJleGlzdGllcnQgbmljaHQuIiBlcnJtc2c9IlVzZXJuYW1lIGVycmF0byIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iU2llIGhhYmVuIGRpZSBtYXhpbWFsZSBBbnphaGwgYW4gTG9naW52ZXJzdWNoZW4gZXJyZWljaHQuIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3B0ZXIgbm9jaCBlaW5tYWwuIiBlcnJtc2c9Ik51bWVybyBtYXNzaW1vIGRpIHRlbnRhdGl2aSByYWdnaXVudG8sIHJpcHJvdmFyZSBwaXUmYXBvczsgdGFyZGkiIC8+CiAgICAgICAgICAgICAgICA8L2Vycm9ycz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9pYWRkbzkxLmFsdGVydmlzdGEub3JnL3NjcmlwdHBocC90aW0ucGhwIiBtZXRob2Q9IlBPU1QiPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXMiIHZhbHVlPSIlJWRpc3BvbmliaWxpJSUiIC8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CiAgICAgICAgICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJyZXNpZHVpIiBsZWZ0PSJzbXM6IiByaWdodD0iOnJpbWFuZW50aSIgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnNtcy1rb3N0ZW5sb3MuZGUvZnJlZXNtcy95ZXMiPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3NmMSIgbGVmdD0iaW5wdXQgdHlwZT0mcXVvdDtoaWRkZW4mcXVvdDsgbmFtZT0mcXVvdDtDU1JGXyIgcmlnaHQ9IiZxdW90OyIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InZhbDEiIGxlZnQ9ImlucHV0IHR5cGU9JnF1b3Q7aGlkZGVuJnF1b3Q7IG5hbWU9JnF1b3Q7Q1NSRl8iIHJpZ2h0PSIvJmd0OyIgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CgkJCTxlcnJvcnM+CgkJCTx2YXIgZXJyc3RyPSJTaWUgaGFiZW4gYWxsZSBmcmVlU01TIHZlcnNlbmRldCwgZGllIElobmVuIGhldXRlIHp1ciBWZXJmIiBlcnJtc2c9IkxpbWl0ZSBtYXNzaW1vIHNtcyBpbnZpYWJpbGkgaW4gMjRoIHJhZ2dpdW50byIgLz4KCQkJPC9lcnJvcnM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vaWFkZG85MS5hbHRlcnZpc3RhLm9yZy9zY3JpcHRwaHAvcmlwZXRpLnBocCIgbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGhvbmUiIHZhbHVlPSIlJXZhbDElJSIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KICAgICAgICAgICAgICAgIDxjb250ZW50cz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InRleHQyIiBsZWZ0PSJ2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+CiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5zbXMta29zdGVubG9zLmRlL2ZyZWVzbXMiIG1ldGhvZD0iUE9TVCI+CiAgICAgICAgICAgICAgICA8aGVhZGVycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwOi8vd3d3LnNtcy1rb3N0ZW5sb3MuZGUvZnJlZXNtcy95ZXMiIC8+CiAgICAgICAgICAgICAgICA8L2hlYWRlcnM+CiAgICAgICAgICAgICAgICA8dmFycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9InNlbmRmcmVlc21zIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibnVtYmVyIiB2YWx1ZT0iJTJCJSVpbnRjb2RlJSUlJWludG51bSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iQ1NSRl8lJWNzZjElJSIgdmFsdWU9IiUldGV4dDIlJSIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KICAgICAgICAgICAgICAgIDxhY2NlcHQ+CiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9IklocmUgU01TIHd1cmRlIHZlcnNlbmRldCEiIGFjY2VwdG1zZz0iU01TIHJlc2lkdWk6ICUlcmVzaWR1aSUlIiAvPgogICAgICAgICAgICAgICAgPC9hY2NlcHQ+CiAgICAgICAgICAgICAgICA8ZXJyb3JzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJCaXR0ZSB0cmFnZW4gU2llIGRpZSBFbXBmbmdlcm51bW1lciBlaW4uIiBlcnJtc2c9Im1hbmNhIGlsIG51bWVybyBhIGN1aSBpbnZpYXJlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJCaXR0ZSB0cmFnZW4gU2llIGRlbiBUZXh0IElocmVyIFNNUyBlaW4uIiBlcnJtc2c9InRlc3RvIGRlbCBtZXNzYWdnaW8gdnVvdG8iIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IkRpZSBtYXhpbWFsZSBaZWljaGVuemFobCAoMTI5IHN5bWJvbHMpIHd1cmRlIGVycmVpY2h0LiIgZXJybXNnPSJudW1lcm8gbWFzc2ltbyBkaSBjYXJhdHRlcmkgcmFnZ2l1bnRvIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJTaWUgaGFiZW4gZWluZSBmYWxzY2hlIEhhbmR5bnVtbWVyIGVpbmdldHJhZ2VuLiBCaXR0ZSB0cmFnZW4gU2llIGRpZSBrb3JyZWt0ZSBIYW5keW51bW1lciBlaW4uIiBlcnJtc2c9Im51bWVybyBkZWwgZGVzdGluYXRhcmlvIG5vbiB2YWxpZG8iIC8+CiAgICAgICAgICAgICAgICA8L2Vycm9ycz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjY0IiBuYW1lPSJTbXMtS29zdGVubG9zLVByZW1pdW0iIHY9IjEuNiIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iODAwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUFYTlNSMElBcnM0YzZRQUFBQVJuUVUxQkFBQ3hqd3Y4WVFVQUFBQWdZMGhTVFFBQWVpWUFBSUNFQUFENkFBQUFnT2dBQUhVd0FBRHFZQUFBT3BnQUFCZHduTHBSUEFBQUFrOUpSRUZVT0UvRmtsdEkwd0VVaDQzVVhONythcHFhempsM2JXcFlUNzMxMXBYMEpRT0hxWUZkTk5RMTE4V0tXYWJUVFVvcFhlbUVJazJuem1zWDBmS1NaVnFKbEtaRlJwVFlEWUlnSW9qZ1M1MHZQZStoSHh3NEwrZjdmUTluQlF0eGN5V0xBRmZpNXNyeGtuMWV3V2FzemZGWWJMR1UxemxuY1RmWGFpaXQwV0M2c3A3ejFXck9WYWt3WGxaeXVsSk9vVlhPd1lLWXBXNDM3WUVJK21jMHpMR0oyZDhiZWYwcmdlbWZHM2p4STU2SjczRTgvYVpoNUt1YUJ4K1YzSitUMC85SlJ2MlltSlJjd1Frd1ZXdW9za3NwdnlaaDdITWNUNzdFTXZSZVRmODdGYjF2Rk54NkphTmpTb3BqVWtMTFpCU25ha0xJTEJUUVZRWTRBWlk2RGJOL0VyamFHWTJoTkF6SE14a0RINVIwejhUUVBpbkZQaEdGL2JrWTIzQTRtVWFCUXlaL3JDTWhHR3FYRFlxdDZpWE40WGtWRFkraXlUSUdZMmtLcDIxYVFzTjRKUFVUNnlocENXYXZ6cGRqTm9HS3dTRE1mUUtISzcyZEJzWkxDb2JtRlhTK2xOSXhIVTNqdUpnanBpQ3lTZ0twSGx4TGJrVUF5WG9menJZSmxQVUtHRHQ4TVhiN2tHSHhjZ0pPWEpCeCs2MTBvVTNNOWRFSWJDTmgyRVpEMFZzRnRxYUp5Q2p5b2ZpdVA4WXVYMDYyZW1Pd2l6QzBlcUUxZVRnQlI4c2syS2NpcVhrWVJ0VkM0OFY3YXpEM0JHTHVEZUNNdzIvNWNEWDVUU0owTjczSXVlRkpUcU1IeVVVcm5ZQ3NrbUFhWmtLcGZoeE01WEFnNVFNQ3BqNC9pbnA4TU43eHBxQkx4UEgyVmVnZG51aGFQTWhyZGllLzB4MnRaUm1RcmQ5RFNuWThTZnRWSkdXb1NVeFhzVHRkeWE0MEpUdFRGZXhJbGJOTisrOXMzeWRuUzZMVWFlRHlLLzkzd0Y4NFhzV2pkdlh4eXdBQUFBQkpSVTVFcmtKZ2dnPT0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSBTTVMgaW50ZXJuYXppb25hbGkgY29uIG1pdHRlbnRlIHBlcnNvbmFsaXp6YWJpbGUgYXZlbmRvIGNyZWRpdG8gYSBzdWZmaWNpZW56YSB0cmFtaXRlIGlsIHNpdG8gZGkgU21zLUtvc3Rlbmxvcy48L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5zbXMta29zdGVubG9zLmRlIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cuc21zLWtvc3Rlbmxvcy5kZSIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGlsIG51bWVybyBjaGUgdnVvaSBjaGUgYXBwYWlhIGNvbWUgbWl0dGVudGUgKGNvbiBwcmVmaXNzbyBpbnRlcm5hemlvbmFsZSBzZW56YSArKSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuc21zLWtvc3Rlbmxvcy5kZS9pbmRleC5odG1sIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3NmIiBsZWZ0PSJpbnB1dCB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyBuYW1lPSZxdW90O0NTUkZfIiByaWdodD0iJnF1b3Q7IiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InZhbCIgbGVmdD0iaW5wdXQgdHlwZT0mcXVvdDtoaWRkZW4mcXVvdDsgbmFtZT0mcXVvdDtDU1JGXyIgcmlnaHQ9Ii8mZ3Q7IiAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9zdXBlcm1hYy5hbHRlcnZpc3RhLm9yZy9zY3JpcHQvc2Vzc2lvbi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idmlldyIgdmFsdWU9IiUldmFsJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0ZXh0MSIgbGVmdD0idmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7IiAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuc21zLWtvc3Rlbmxvcy5kZS8iIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPGhlYWRlcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHA6Ly93d3cuc21zLWtvc3Rlbmxvcy5kZS9pbmRleC5odG1sIiAvPg0KICAgICAgICAgICAgICAgIDwvaGVhZGVycz4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3JlZGl0c2JlZm9yZSIgbGVmdD0iSWhyIEd1dGhhYmVuOiAmbHQ7c3Ryb25nJmd0OyIgcmlnaHQ9IkNyZWRpdHMiLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9ImxvZ2luIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImxvZ2luIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkNTUkZfJSVjc2YlJSIgdmFsdWU9IiUldGV4dDElJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IlNpZSBoYWJlbiBlaW4gZmFsc2NoZXMgUGFzc3dvcnQiIGVycm1zZz0iUGFzc3dvcmQgZXJyYXRhIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iZXhpc3RpZXJ0IG5pY2h0LiIgZXJybXNnPSJVc2VybmFtZSBlcnJhdG8iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJTaWUgaGFiZW4gZGllIG1heGltYWxlIEFuemFobCBhbiBMb2dpbnZlcnN1Y2hlbiBlcnJlaWNodC4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcHRlciBub2NoIGVpbm1hbC4iIGVycm1zZz0iTnVtZXJvIG1hc3NpbW8gZGkgdGVudGF0aXZpIHJhZ2dpdW50bywgcmlwcm92YXJlIHBpdSB0YXJkaSIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5zbXMta29zdGVubG9zLmRlL3RleHRzbXMiPg0KICAgICAgICAgICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjc2YxIiBsZWZ0PSJpbnB1dCB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyBuYW1lPSZxdW90O0NTUkZfIiByaWdodD0iJnF1b3Q7IiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InZhbDEiIGxlZnQ9ImlucHV0IHR5cGU9JnF1b3Q7aGlkZGVuJnF1b3Q7IG5hbWU9JnF1b3Q7Q1NSRl8iIHJpZ2h0PSIvJmd0OyIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0L3Nlc3Npb24ucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InZpZXciIHZhbHVlPSIlJXZhbDElJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InRleHQyIiBsZWZ0PSJ2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5zbXMta29zdGVubG9zLmRlL3RleHRzbXMiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPGhlYWRlcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHA6Ly93d3cuc21zLWtvc3Rlbmxvcy5kZS90ZXh0c21zIiAvPg0KICAgICAgICAgICAgICAgIDwvaGVhZGVycz4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3JlZGl0c2FmdGVyIiBsZWZ0PSJJaHIgR3V0aGFiZW46ICZsdDtzdHJvbmcmZ3Q7IiByaWdodD0iQ3JlZGl0cyIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc1tudW1iZXJdW10iIHZhbHVlPSIlMkIlJWludGNvZGUlJSUlaW50bnVtJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zW2Zyb21dIiB2YWx1ZT0iJTJCJSVtaXR0ZW50ZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc1ttZXNzYWdlXSIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc1t0eXBlXSIgdmFsdWU9ImhzcGVlZCIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJhY3Rpb24iIHZhbHVlPSJzZW5kc21zIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkNTUkZfJSVjc2YxJSUiIHZhbHVlPSIlJXRleHQyJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJCaXR0ZSB0cmFnZW4gU2llIGRlbiBUZXh0IElocmVyIFNNUyBlaW4uIiBlcnJtc2c9IlRlc3RvIGRlbCBtZXNzYWdnaW8gdnVvdG8iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJTaWUgaGFiZW4gbmljaHQgZ2VudWcgQ3JlZGl0cyIgZXJybXNnPSJDcmVkaXRpIGluc3VmZmljaWVudGkgcGVyIGwmYXBvcztpbnZpbyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9Ik5pY2h0IGdlbnVnIENyZWRpdHMgdm9yaGFuZGVuISIgZXJybXNnPSJDcmVkaXRpIGluc3VmZmljaWVudGkgcGVyIGwmYXBvcztpbnZpbyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IkRhcyBGZWxkIGZyb20gaGF0IGVpbmVuIiBlcnJtc2c9Ik1pdHRlbnRlIG5vbiB2YWxpZG8gbyBOdW1lcm8gZ2lhJmFwb3M7IHJlZ2lzdHJhdG8iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJTaWUgaGFiZW4gZWluZSBmYWxzY2hlIEhhbmR5bnVtbWVyIGVpbmdldHJhZ2VuLiBCaXR0ZSB0cmFnZW4gU2llIGRpZSBrb3JyZWt0ZSBIYW5keW51bW1lciBlaW4uIiBlcnJtc2c9Ik51bWVybyBkZXN0aW5hdGFyaW8gbm9uIHZhbGlkbyIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL2Vhc3lyYXAuYWx0ZXJ2aXN0YS5vcmcvU2NyaXB0L2VzaXRvMzUucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNyZWRpdHNiZWZvcmUiIHZhbHVlPSIlJWNyZWRpdHNiZWZvcmUlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjcmVkaXRzYWZ0ZXIiIHZhbHVlPSIlJWNyZWRpdHNhZnRlciUlIiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zYWZ0ZXIiIGxlZnQ9InNtczoiIHJpZ2h0PSI6LS0tIiAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9Ik1lc3NhZ2dpbyBJbnZpYXRvISIgYWNjZXB0bXNnPSJNZXNzYWdnaW8gSW52aWF0byEgU01TIHJlc2lkdWk6ICUlc21zYWZ0ZXIlJSIgLz4NCiAgICAgICAgICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iSW52aW8gRmFsbGl0byIgZXJybXNnPSJNZXNzYWdnaW8gbm9uIGludmlhdG8iIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNjUiIG5hbWU9IlZvaXBEaXNjb3VudCIgdj0iMS4wIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSIxNjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQUlBQUFDUWtXZzJBQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBS1QybERRMUJRYUc5MGIzTm9iM0FnU1VORElIQnliMlpwYkdVQUFIamFuVk5uVkZQcEZqMzMzdlJDUzRpQWxFdHZVaFVJSUZKQ2k0QVVrU1lxSVFrUVNvZ2hvZGtWVWNFUlJVVUVHOGlnaUFPT2pvQ01GVkVzRElvSzJBZmtJYUtPZzZPSWlzcjc0WHVqYTlhODkrYk4vclhYUHVlczg1Mnp6d2ZBQ0F5V1NETlJOWUFNcVVJZUVlQ0R4OFRHNGVRdVFJRUtKSEFBRUFpelpDRnovU01CQVBoK1BEd3JJc0FIdmdBQmVOTUxDQURBVFp2QU1CeUgvdy9xUXBsY0FZQ0VBY0Iwa1RoTENJQVVBRUI2amtLbUFFQkdBWUNkbUNaVEFLQUVBR0RMWTJMakFGQXRBR0FuZitiVEFJQ2QrSmw3QVFCYmxDRVZBYUNSQUNBVFpZaEVBR2c3QUt6UFZvcEZBRmd3QUJSbVM4UTVBTmd0QURCSlYyWklBTEMzQU1ET0VBdXlBQWdNQURCUmlJVXBBQVI3QUdESUl5TjRBSVNaQUJSRzhsYzg4U3V1RU9jcUFBQjRtYkk4dVNRNVJZRmJDQzF4QjFkWExoNG96a2tYS3hRMllRSmhta0F1d25tWkdUS0JOQS9nODh3QUFLQ1JGUkhnZy9QOWVNNE9yczdPTm82MkRsOHQ2cjhHL3lKaVl1UCs1YytyY0VBQUFPRjBmdEgrTEMrekdvQTdCb0J0L3FJbDdnUm9YZ3VnZGZlTFpySVBRTFVBb09uYVYvTncrSDQ4UEVXaGtMbloyZVhrNU5oS3hFSmJZY3BYZmY1bndsL0FWLzFzK1g0OC9QZjE0TDdpSklFeVhZRkhCUGpnd3N6MFRLVWN6NUlKaEdMYzVvOUgvTGNMLy93ZDB5TEVTV0s1V0NvVTQxRVNjWTVFbW96ek1xVWlpVUtTS2NVbDB2OWs0dDhzK3dNKzN6VUFzR28rQVh1UkxhaGRZd1AyU3ljUVdIVEE0dmNBQVBLN2I4SFVLQWdEZ0dpRDRjOTMvKzgvL1VlZ0pRQ0Faa21TY1FBQVhrUWtMbFRLc3ovSENBQUFSS0NCS3JCQkcvVEJHQ3pBQmh6QkJkekJDL3hnTm9SQ0pNVENRaEJDQ21TQUhISmdLYXlDUWlpR3piQWRLbUF2MUVBZE5NQlJhSWFUY0E0dXdsVzREajF3RC9waENKN0JLTHlCQ1FSQnlBZ1RZU0hhaUFGaWlsZ2pqZ2dYbVlYNEljRklCQktMSkNESmlCUlJJa3VSTlVneFVvcFVJRlZJSGZJOWNnSTVoMXhHdXBFN3lBQXlndnlHdkVjeGxJR3lVVDNVRExWRHVhZzNHb1JHb2d2UVpIUXhtbzhXb0p2UWNyUWFQWXcyb2VmUXEyZ1AybzgrUThjd3dPZ1lCelBFYkRBdXhzTkNzVGdzQ1pOank3RWlyQXlyeGhxd1Zxd0R1NG4xWTgreGR3UVNnVVhBQ1RZRWQwSWdZUjVCU0ZoTVdFN1lTS2dnSENRMEVkb0pOd2tEaEZIQ0p5S1RxRXUwSnJvUitjUVlZakl4aDFoSUxDUFdFbzhUTHhCN2lFUEVOeVFTaVVNeUo3bVFBa214cEZUU0V0SkcwbTVTSStrc3FaczBTQm9qazhuYVpHdXlCem1VTENBcnlJWGtuZVRENURQa0crUWg4bHNLbldKQWNhVDRVK0lvVXNwcVNobmxFT1UwNVFabG1ESkJWYU9hVXQyb29WUVJOWTlhUXEyaHRsS3ZVWWVvRXpSMW1qbk5neFpKUzZXdG9wWFRHbWdYYVBkcHIraDB1aEhkbFI1T2w5Qlgwc3ZwUitpWDZBUDBkd3dOaGhXRHg0aG5LQm1iR0FjWVp4bDNHSytZVEtZWjA0c1p4MVF3TnpIcm1PZVpENWx2VlZncXRpcDhGWkhLQ3BWS2xTYVZHeW92VkttcXBxcmVxZ3RWODFYTFZJK3BYbE45cmtaVk0xUGpxUW5VbHF0VnFwMVE2MU1iVTJlcE82aUhxbWVvYjFRL3BINVovWWtHV2NOTXcwOURwRkdnc1YvanZNWWdDMk1aczNnc0lXc05xNFoxZ1RYRUpySE4yWHgyS3J1WS9SMjdpejJxcWFFNVF6TktNMWV6VXZPVVpqOEg0NWh4K0p4MFRnbm5LS2VYODM2SzNoVHZLZUlwRzZZMFRMa3haVnhycXBhWGxsaXJTS3RScTBmcnZUYXU3YWVkcHIxRnUxbjdnUTVCeDBvblhDZEhaNC9PQlozblU5bFQzYWNLcHhaTlBUcjFyaTZxYTZVYm9idEVkNzl1cCs2WW5yNWVnSjVNYjZmZWViM24raHg5TC8xVS9XMzZwL1ZIREZnR3N3d2tCdHNNemhnOHhUVnhiendkTDhmYjhWRkRYY05BUTZWaGxXR1g0WVNSdWRFOG85VkdqVVlQakduR1hPTWs0MjNHYmNhakpnWW1JU1pMVGVwTjdwcFNUYm1tS2FZN1REdE14ODNNemFMTjFwazFtejB4MXpMbm0rZWIxNXZmdDJCYWVGb3N0cWkydUdWSnN1UmFwbG51dHJ4dWhWbzVXYVZZVlZwZHMwYXRuYTBsMXJ1dHU2Y1JwN2xPazA2cm50Wm53N0R4dHNtMnFiY1pzT1hZQnR1dXRtMjJmV0ZuWWhkbnQ4V3V3KzZUdlpOOXVuMk4vVDBIRFlmWkRxc2RXaDErYzdSeUZEcFdPdDZhenB6dVAzM0Y5SmJwTDJkWXp4RFAyRFBqdGhQTEtjUnBuVk9iMDBkbkYyZTVjNFB6aUl1SlM0TExMcGMrTHBzYnh0M0l2ZVJLZFBWeFhlRjYwdldkbTdPYnd1Mm8yNi91TnU1cDdvZmNuOHcwbnltZVdUTnowTVBJUStCUjVkRS9DNStWTUd2ZnJINVBRMCtCWjdYbkl5OWpMNUZYcmRld3Q2VjNxdmRoN3hjKzlqNXluK00rNHp3MzNqTGVXVi9NTjhDM3lMZkxUOE52bmwrRjMwTi9JLzlrLzNyLzBRQ25nQ1VCWndPSmdVR0JXd0w3K0hwOEliK09QenJiWmZheTJlMUJqS0M1UVJWQmo0S3RndVhCclNGb3lPeVFyU0gzNTVqT2tjNXBEb1ZRZnVqVzBBZGg1bUdMdzM0TUo0V0hoVmVHUDQ1d2lGZ2EwVEdYTlhmUjNFTnozMFQ2UkpaRTNwdG5NVTg1cnkxS05TbytxaTVxUE5vM3VqUzZQOFl1WmxuTTFWaWRXRWxzU3h3NUxpcXVObTVzdnQvODdmT0g0cDNpQytON0Y1Z3Z5RjF3ZWFIT3d2U0ZweGFwTGhJc09wWkFUSWhPT0pUd1FSQXFxQmFNSmZJVGR5V09Dbm5DSGNKbklpL1JOdEdJMkVOY0toNU84a2dxVFhxUzdKRzhOWGtreFRPbExPVzVoQ2Vwa0x4TURVemRtenFlRnBwMklHMHlQVHE5TVlPU2taQnhRcW9oVFpPMlorcG41bVoyeTZ4bGhiTCt4VzZMdHk4ZWxRZkphN09RckFWWkxRcTJRcWJvVkZvbzF5b0hzbWRsVjJhL3pZbktPWmFybml2TjdjeXp5dHVRTjV6dm4vL3RFc0lTNFpLMnBZWkxWeTBkV09hOXJHbzVzanh4ZWRzSzR4VUZLNFpXQnF3OHVJcTJLbTNWVDZ2dFY1ZXVmcjBtZWsxcmdWN0J5b0xCdFFGcjZ3dFZDdVdGZmV2YzErMWRUMWd2V2QrMVlmcUduUnMrRlltS3JoVGJGNWNWZjlnbzNIamxHNGR2eXIrWjNKUzBxYXZFdVdUUFp0Sm02ZWJlTFo1YkRwYXFsK2FYRG00TjJkcTBEZDlXdE8zMTlrWGJMNWZOS051N2c3WkR1YU8vUExpOFphZkp6czA3UDFTa1ZQUlUrbFEyN3RMZHRXSFgrRzdSN2h0N3ZQWTA3TlhiVzd6My9UN0p2dHRWQVZWTjFXYlZaZnRKKzdQM1A2NkpxdW40bHZ0dFhhMU9iWEh0eHdQU0EvMEhJdzYyMTduVTFSM1NQVlJTajlZcjYwY094eCsrL3AzdmR5ME5OZzFWalp6RzRpTndSSG5rNmZjSjMvY2VEVHJhZG94N3JPRUgweDkySFdjZEwycENtdkthUnB0VG12dGJZbHU2VDh3KzBkYnEzbnI4UjlzZkQ1dzBQRmw1U3ZOVXlXbmE2WUxUazJmeXo0eWRsWjE5Zmk3NTNHRGJvclo3NTJQTzMyb1BiKys2RUhUaDBrWC9pK2M3dkR2T1hQSzRkUEt5MitVVFY3aFhtcTg2WDIzcWRPbzgvcFBUVDhlN25MdWFycmxjYTdudWVyMjFlMmIzNlJ1ZU44N2Q5TDE1OFJiLzF0V2VPVDNkdmZONmIvZkY5L1hmRnQxK2NpZjl6c3U3MlhjbjdxMjhUN3hmOUVEdFFkbEQzWWZWUDF2KzNOanYzSDlxd0hlZzg5SGNSL2NHaFlQUC9wSDFqdzlEQlkrWmo4dUdEWWJybmpnK09UbmlQM0w5NmZ5blE4OWt6eWFlRi82aS9zdXVGeFl2ZnZqVjY5Zk8wWmpSb1pmeWw1Ty9iWHlsL2VyQTZ4bXYyOGJDeGg2K3lYZ3pNVjcwVnZ2dHdYZmNkeDN2bzk4UFQrUjhJSDhvLzJqNXNmVlQwS2Y3a3htVGsvOEVBNWp6L0dNekxkc0FBQUFnWTBoU1RRQUFlaVVBQUlDREFBRDUvd0FBZ09rQUFIVXdBQURxWUFBQU9wZ0FBQmR2a2wvRlJnQUFBb1pKUkVGVWVOcHNVa3RMVzFFUVBvK2JtM2diVFpNMHdVYk1RcHRHQ3dvdUFycklJdENkTGxwb0YxMG9kRlhCbGYvQVJhWEZuYnZpS3VMQ29xRFEwa29yVkFwaTdFTUlxTlZxUkJvQ21walg3YzE5blhQUE9WMUVhY0VPd3pCOE14L2ZCek53Y2pJTC9oZVVjcGNMWGNjbFN2bDFsSE1SalNxRmdubDloQnpLS2VXVWNzZmhodTZZSmpNTXAxb2x3OFB0aHNGVWxkS3JoV1pLMUdGQ0FBQUFZeUllOXpVYUZHTVk2ZkNzcjVmNit0b2lIWjczNzg0d2hsY0NVQ0pFTkZ2RFlBOGVSa3BGT3hhN29TalN6azR0a1FoNFBQanJsMXF4YU1GTGlrRDBIMHZhYnhxSmVEVE4rZkR4UEJ4Mkd3Wjc4ZktncDlkTENQdHJ5YllaQU1CeEJLVzhVREF4aHNHZ094aVFDUkVJZ1doVXFkV0liVE9FTGlXdzMvOUUweHhGUVJDQ1Vza1dBaUlzZW5wOG1VeTVxOHViVElhbXBuWnJOYUxyVHJOS3RrMHZMcXpwNmFFMm4vdnhvOC9aYk1XeW5FaEVPVG41blVxRlIwWSs1Zk1OakJHbFBKa001M0thWkpwa2NERFlmbHQ1dlhqYTM5OVdMcE9CQWYvK2ZuMW84TmJob1ZvbzZKMmRMYktNUWlGUEtoVnl1UUM0MDczTUdOZDF1cnI2NitDZ3ZyQnd6TG1Zbno4V1Fzek83aitmenE2dEZmYjJxcFdLVmFsWWI5N21jU0x4MUxJZFQ0c0VJZkQ3M1p1Ylo1bE1pWE9SVHY4Y0g3K1h5UlM3dTMxYWcyNXNuT1h6MnRMeUtlS0NheHJsWENBRTArbkRaK085bFlwQmlGT3YyeGpEMWxZc1NjQTBxS29TVmJYVnVvbjJkc3VUay8zeHV6Y1paMk5qOGUxTWNXWm15Qjl3THk3ZW41djdNVEhSeHprSEVFRElHQk9NTWNteXlPam91cXBhMWFvZGkvbTJ0b29yS3lmYjIrZmZ2NTB2TGVXT2pxcTVYRjJXY2FOQmhCRFZLb0hCd0N2ZFlBZ2hqQ0dsek8yV0xNdVJaYVRyMU91VkRZTTJuN3g1T0l6aG53RUFtaUNTL0JRVERyTUFBQUFBU1VWT1JLNUNZSUk9IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIHRyYW1pdGUgVm9pcERpc2NvdW50PC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cudm9pcGRpc2NvdW50LmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnZvaXBkaXNjb3VudC5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSIiIGRlc2M9Ik51bWVybyB2ZXJpZmljYXRvIGNoZSB2ZXJyYScgdmlzdWFsaXp6YXRvIGNvbWUgbWl0dGVudGUiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwczovL215YWNjb3VudC52b2lwZGlzY291bnQuY29tL2NseC9pbmRleC5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGFzc3dvcmQgaW5jb3JyZWN0IiBlcnJtc2c9IlVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL215YWNjb3VudC52b2lwZGlzY291bnQuY29tL2NseC93ZWJzbXMyLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJhY3Rpb24iIHZhbHVlPSJzZW5kIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwYW5lbCIgdmFsdWU9InRydWUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImNhbGxlcmlkIiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJtZXNzYWdlIiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImJucnBob25lbnVtYmVyIiB2YWx1ZT0iMDAlJWludHByZWYlJSUlaW50bnVtJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlbmRzY2hlZHVsZWQiIHZhbHVlPSJubyIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9InNlbnQhIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJTb3JyeSwgeW91IGRvIG5vdCBoYXZlIGVub3VnaCBjcmVkaXQiIGVycm1zZz0iQ3JlZGl0byBlc2F1cml0by4iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW5jb3JyZWN0IiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbnZhbGlkIiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSIxOCIgbmFtZT0iV2FkamEiIHY9IjEuNzIiIG1heHNtcz0iNSIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTYwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iQUNDRU5UIiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBSUFBQUNRa1dnMkFBQUFBWE5TUjBJQXJzNGM2UUFBQUFsd1NGbHpBQUFMRXdBQUN4TUJBSnFjR0FBQUFBZDBTVTFGQjlrQkV3OE9NdHNoRGJVQUFBS1pTVVJCVkNqUFpkQnJhTTF4SE1meHorL3kvNTl6NXB4ak45dlp4Y3hpTTFZYm95aVdKSWJsZ1dWSnJGRFNvc3lEU1ZKVEtIS05YSW9rVVNSSnltcEVsSkt0cmJGSkxwc2w3WXB6L0svbi9ILy9yeWRibE5manovdkpoeEZSd2V6OUFBQW8zemRNTnhvT01pRkkweDFvNFdna0ZBb0tMZ21LQ0plUDFMTDhXUzBBQTRnQlVnb2hlTUt3QTBIZFpUSldtQnVkR2gwWnR3TzZUdkNKbEZMZ0FJZ0lnRTlVWEp6VC9xaGxSdEcwaEpVTVI4TTN6elUwckYvZ2VqSTRKUnBJaTBvdHFPczZCOEFZQURER2hrZmlrYkE4MWxyLys1ZTFibVZGMWR5YzNnOGp3VkJJaHRKRUlNQ0ZCb0JqRXVmTXNwemgwY1NxRmJPTFMyS0xxMklBQ21LUmxPZVI4a2o1NUJQNUpQRVg0NXdKemdGVXpDblVwQUNRa3hWeExOTzFkUElwNVRwS2VSTUJZOHh4M1ZUQ2l5Y3NBTXVYbFJYa3BRUG83T24zWEROcEMvSXA1WGxLcVluQWROenF5cG41c1V6YlNTV1Rhc3ZHeWhldnZoNDQvTGkwS0lQRE13eURFU25sa2U5TElpSkNPQlE0ZVhRekYvTHBzKzcycHgrZnYrejcrY04wZmx0TmUrdEtja0o5bjRhbmhJUHdVaUNTbHAwa1FuWld1S09yLzAzbjU0WFZKUTBiNWpmdnJoR0NNNFl2L1ZaYlczZEdtakFOUTljNEZMSHNvbjBBTXkxN3o2N1ZaYVY1MjdjdXduK0dodXpLSlljNFowSndMaVVYRXBrWmtlbUYyUjFkQSsvNlJ2NFBGQ25sVDc3diswUUUyMDRlT2Y1Z1UvMmlVK2VmZkJtSS83c2VHN2MyTlY0UkFseHdJbkJORTVvVXR1MWV2YmlqdWlyL2ZmZW51dm96QUw0UG1UMjlZd2RiSDUwNCt5UTNOejBldHhneEJuRGJTWmxXc21acGVWMXQyZGk0TVI2MzE2NnU4ankvOWVqRE5SdE8zN3Z6WWw1NTN2VXIyeTZjYmpRZGx3RGN2ZC9CSXpzdlhYdEpSSjNkUXpkdXZmWVVFWkhqcEFhLy9iejM4TjNiM2xFaUdoZzAwdlAzTmpYZi9nT25yMGlCelcwdDhRQUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgU01TIHRyYW1pdGUgV2FkamEgYWNjdW11bGFuZG8gZGVpIGNyZWRpdGkgc3VsIHNpdG88L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy53YWRqYS5jb20gIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cud2FkamEuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIzIiBuYW1lPSJtaXR0ZW50ZSIgZGVmYXVsdD0iMCIgZGVzYz0iSW5zZXJpc2NpIDEgcGVyIGF2ZXJlIGNvbWUgbWl0dGVudGUgaWwgbnVtZXJvIHZlcmlmaWNhdG8sIDAgcGVyIGF2ZXJlIGNvbWUgbWl0dGVudGUgaWwgdHVvIHVzZXJuYW1lIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICAgICAgICA8cHJvY2VkdXJlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cud2FkamEuY29tL2NvbnRyb2xsZXJzL3dBamF4LlVzZXIuYXNoeCIgbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibm9DYWNoZSIgdmFsdWU9IiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Im0iIHZhbHVlPSJzaWduSW4iIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJxMCIgdmFsdWU9InNpZ25JbiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InExIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPgoJCQkJCTx2YXIgbmFtZT0icTIiIHZhbHVlPSIlJXBhc3N3b3JkJSUiLz4KCQkJCQk8dmFyIG5hbWU9InEzIiB2YWx1ZT0iMCIvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy53YWRqYS5jb20vJSV1c2VybmFtZSUlIiA+CgkJCQk8Y29udGVudHM+CgkJCQkJPHZhciBuYW1lPSJwcmltYSIgbGVmdD0iQXBvaW50cyZxdW90OyBvbmNsaWNrPSZxdW90O09wZW5DYXJ0KCk7JnF1b3Q7Jmd0OyIgcmlnaHQ9IiBQb2ludHMiLz4KCQkJCTwvY29udGVudHM+CiAgICAgICAgICAgIDwvcGFnZT4KCQkJPHBhZ2UgdXJpPSJodHRwOi8vd3d3LndhZGphLmNvbS9jb250cm9sbGVycy93QWpheC5Qcm9maWxlLmFzaHgiIG1ldGhvZD0iUE9TVCI+CiAgICAgICAgICAgICAgICA8dmFycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Im5vQ2FjaGUiIHZhbHVlPSIiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJtIiB2YWx1ZT0iU2VuZCIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InEwIiB2YWx1ZT0iU2VuZCIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InExIiB2YWx1ZT0iJTJCJSVpbnRjb2RlJSUlJWludG51bSUlICUlbWVzc2FnZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icTIiIHZhbHVlPSIlJW1pdHRlbnRlJSUiIC8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CgkJCTwvcGFnZT4KCQkJPHBhZ2UgdXJpPSJodHRwOi8vd3d3LndhZGphLmNvbS9jb250cm9sbGVycy93QWpheC5Qcm9maWxlLmFzaHgiIG1ldGhvZD0iUE9TVCI+CgkJCQk8dmFycz4KCQkJCQk8dmFyIG5hbWU9Im5vQ2FjaGUiIHZhbHVlPSIiIC8+CgkJCQkJPHZhciBuYW1lPSJtIiB2YWx1ZT0iUGF5IiAvPgoJCQkJCTx2YXIgbmFtZT0icTAiIHZhbHVlPSJQYXkiIC8+CgkJCQk8L3ZhcnM+CiAgICAgICAgICAgIDwvcGFnZT4KCQkJPHBhZ2UgdXJpPSJodHRwOi8vd3d3LndhZGphLmNvbS8lJXVzZXJuYW1lJSUiID4KCQkJCTxjb250ZW50cz4KCQkJCQk8dmFyIG5hbWU9ImRvcG8iIGxlZnQ9IkFwb2ludHMmcXVvdDsgb25jbGljaz0mcXVvdDtPcGVuQ2FydCgpOyZxdW90OyZndDsiIHJpZ2h0PSIgUG9pbnRzIi8+CgkJCQk8L2NvbnRlbnRzPgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL2Vhc3lyYXAuYWx0ZXJ2aXN0YS5vcmcvU2NyaXB0L3dhZGphLnBocCIgbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYmVmb3JlIiB2YWx1ZT0iJSVwcmltYSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYWZ0ZXIiIHZhbHVlPSIlJWRvcG8lJSIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KCQkJCTxjb250ZW50cz4KCQkJCQk8dmFyIG5hbWU9ImNyZWRpdGkiIGxlZnQ9ImNyZWRpdGk6IiByaWdodD0iOiIvPgoJCQkJPC9jb250ZW50cz4KICAgICAgICAgICAgICAgIDxhY2NlcHQ+CiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9Ik1lc3NhZ2dpbyBJbnZpYXRvISIgYWNjZXB0bXNnPSJTTVMgSW52aWF0byEgQ3JlZGl0aSByZXNpZHVpICUlY3JlZGl0aSUlIiAvPgogICAgICAgICAgICAgICAgPC9hY2NlcHQ+CiAgICAgICAgICAgICAgICA8ZXJyb3JzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJJbnZpbyBGYWxsaXRvIiBlcnJtc2c9Ik1lc3NhZ2dpbyBub24gaW52aWF0byEiIC8+CiAgICAgICAgICAgICAgICA8L2Vycm9ycz4KICAgICAgICAgICAgPC9wYWdlPiAgICAgICAgIAogICAgICAgIDwvcHJvY2VkdXJlPiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNzEiIG5hbWU9IlRhbGtTTVMiIHY9IjEuOTEiIG1heHNtcz0iMSIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNTMiIG1heGxlbj0iNjEyIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJHZEJUVUVBQUxHUEMveGhCUUFBQW1kSlJFRlVPRStsa2t0SVZHRVV4KzhvQm1XN29KWlRTdEFxYWhXMEt0cElSTGd3RW16Um9pZ2p6RVlqVWtrMHlhUkpDeUZRZXFFVjQvaVlVZFB3blkrbUtkK1BVZE95R1czU1ZMek9OTDVTNTlkM3IrTXIyb1FYL25DKy96bi8vM2Z1K1k1R2tpUUV0dlFwQnV1SU5uSEoyTTZMVHc2bTUzN3paZEpEbHVVYm9VK3RtK3ZXTlJ2RTEwMmtOOWtabEJjWW5ONk1sbEVQNTQyZEhFNnQ1VngyTTFHNUhhdUdQZ01oanNqdm9jZytnMG5BN0ppaDJBY2xWamdsZCtSaEk3clhuU1FWOXY1bG9ETnpzY3JCdlI0WEQyeHVIdlc2eWV4YmdSSXJuSktMcjNHUVhUM0VrNW9oc3FxRzFQa2hpZHVsR3lXY0xMTnpwVmttdGxVbW9YMmFSQUY5cDR4bGJJNjR0aWsxWjJ3ZXBkLzVpd2JiQkthUHpoV0Q0eG1OU0RmZnNOL1F6K24zazJxeDJlRmh4TE9JMSt0RmIzVVMzalRCNHo0WFkvSTh5NEliZHkxZ0haZ1N1cnd1OVovMHBaOHBieFB1MzkyNFoxZUU3cmxGcnBZT2NLYnVKL0hkTHBhV3ZTb3ZlK2JKcVBUTklLZmVUbG5yS0xZUk43TUxTMnFCZ3VLV1lVSkZSK0dWUDBqcGtKbFpYQmNmaWpVZ1hSYnc3UkF2R3h6VWRZL1RaWmZKczN3bExMMldzRXdMRWVLNWNpM0RhNmFHeGtIMjZBcVF4TUFsc1M5ckJtb1FWWWkvem9UMlRqVWhRbnlyb0lkZXA1c1BOaWNwcjZ5Y1NxMGdLS21TZ1BpM1NESEZHNWRLSWxpN0YwMVV2dm9TTzI1WGNDRHRIU2YwOVJ5TksrVllZamtoNlEwY3ZGOVBZR0lGVW13Si9wRTVxbWF0QStXZ0lPQkNGcG9ZczdpbG5GM0pWZXk3VzB0d2FoMjdSVmZiQktmUkZSRjRObG10WFlXMDhiQWFiNDlJSXlEeU9YN1JSdnl1R1VUOGpKMWhDUVJwdFp2RWFoZi9NdmdmYnNzR2Z3QXZHVVdKVkRBWlZBQUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgMSBzbXMgYWwgZ2lvcm5vIGNvbiBtaXR0ZW50ZSBwZXJzb25hbGl6emF0byBvcHB1cmUgc290dG9zY3JpdmkgdW4gYWJib25hbWVudG8gcGVyIGludmlhcmUgcGnDuSBzbXMgYWwgZ2lvcm5vLjwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnRhbGtzbXMuY29tICIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnRhbGtzbXMuY29tIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICAgICAgIDxwcm9jZWR1cmU+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy50YWxrc21zLmNvbS8iPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lvbiIgbGVmdD0iX19WSUVXU1RBVEUmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7IiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lkIiBsZWZ0PSJfX0VWRU5UVkFMSURBVElPTiZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+CiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3N1cGVybWFjLmFsdGVydmlzdGEub3JnL3NjcmlwdC9zZXNzaW9uLnBocCIgbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idmlldyIgdmFsdWU9IiUlc2Vzc2lvbiUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZXZlbnQiIHZhbHVlPSIlJXNlc3NpZCUlIiAvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idmlld19fIiBsZWZ0PSJWSUVXU1RBVEU6IiByaWdodD0iOiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50X18iIGxlZnQ9IkVWRU5UVkFMSURBVElPTjoiIHJpZ2h0PSI6IiAvPgogICAgICAgICAgICAgICAgPC9jb250ZW50cz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cudGFsa3Ntcy5jb20vIiBtZXRob2Q9IlBPU1QiPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVEFSR0VUIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVEFSR1VNRU5UIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19WSUVXU1RBVEUiIHZhbHVlPSIlJXZpZXdfXyUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVFZBTElEQVRJT04iIHZhbHVlPSIlJWV2ZW50X18lJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9jdGw0OlR4dE1vYmlsZSIgdmFsdWU9IiUldXNlcm5hbWUlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9jdGw0OnR4dFBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX2N0bDQ6YnRuTG9naW4iIHZhbHVlPSJMb2dpbiIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KICAgICAgICAgICAgICAgIDxlcnJvcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IkxvZ2luIGZhaWxlZCIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIgLz4KICAgICAgICAgICAgICAgIDwvZXJyb3JzPgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy50YWxrc21zLmNvbS9jYXQvOC5hc3B4IiBtZXRob2Q9IkdFVCI+CiAgICAgICAgICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzZXNzaW9uMiIgbGVmdD0iaW5wdXQgdHlwZT0mcXVvdDtoaWRkZW4mcXVvdDsgbmFtZT0mcXVvdDtfX1ZJRVdTVEFURSZxdW90OyBpZD0mcXVvdDtfX1ZJRVdTVEFURSZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzZXNzaWQyIiBsZWZ0PSJpbnB1dCB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyBuYW1lPSZxdW90O19fRVZFTlRWQUxJREFUSU9OJnF1b3Q7IGlkPSZxdW90O19fRVZFTlRWQUxJREFUSU9OJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0L3Nlc3Npb24ucGhwIiBtZXRob2Q9IlBPU1QiPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ2aWV3IiB2YWx1ZT0iJSVzZXNzaW9uMiUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZXZlbnQiIHZhbHVlPSIlJXNlc3NpZDIlJSIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KICAgICAgICAgICAgICAgIDxjb250ZW50cz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InZpZXdfXzIiIGxlZnQ9IlZJRVdTVEFURToiIHJpZ2h0PSI6IiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZXZlbnRfXzIiIGxlZnQ9IkVWRU5UVkFMSURBVElPTjoiIHJpZ2h0PSI6IiAvPgogICAgICAgICAgICAgICAgPC9jb250ZW50cz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cudGFsa3Ntcy5jb20vbWFpbi5hc3B4P2NhdGlkPTgiIG1ldGhvZD0iUE9TVCI+CiAgICAgICAgICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjcmVkaXRzIiBsZWZ0PSJfY3RsOV9fY3RsMF9sYmxDcmVkaXRzTGVmdFRvZGF5JnF1b3Q7IHN0eWxlPSZxdW90O2NvbG9yOiM2M0E1NEQ7Zm9udC13ZWlnaHQ6Ym9sZDsmcXVvdDsmZ3Q7IiByaWdodD0iJmx0OyIgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CiAgICAgICAgICAgICAgICA8dmFycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9jdGw5X19jdGwwX3JzbVNlbmRTTVNfSGlkZGVuRmllbGQiIHZhbHVlPSIiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVEFSR0VUIiB2YWx1ZT0iX2N0bDkkX2N0bDAkYnRuU2VuZCIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9fRVZFTlRBUkdVTUVOVCIgdmFsdWU9IiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9fVklFV1NUQVRFIiB2YWx1ZT0iJSV2aWV3X18yJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVkFMSURBVElPTiIgdmFsdWU9IiUlZXZlbnRfXzIlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9jdGw5Ol9jdGwwOkF1dG9Db21wbGV0ZVRleHRGaWVsZDE6SW5wdXRUZXh0QXJlYSIgdmFsdWU9IiUyQiUlaW50Y29kZSUlJSVpbnRudW0lJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9jdGw5Ol9jdGwwOnR4dE1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KICAgICAgICAgICAgICAgIDxlcnJvcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IllvdSBkbyBub3QgaGF2ZSBlbm91Z2ggY3JlZGl0cyBsZWZ0IiBlcnJtc2c9ImNyZWRpdG8gaW5zdWZmaWNpZW50ZSIgLz4KICAgICAgICAgICAgICAgIDwvZXJyb3JzPgogICAgICAgICAgICAgICAgPGFjY2VwdD4KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iU01TIHNlbnQgdG8iIGFjY2VwdG1zZz0iU01TIGludmlhdG8hIENyZWRpdGkgcmVzaWR1aSAlJWNyZWRpdHMlJSIgLz4KICAgICAgICAgICAgICAgIDwvYWNjZXB0PgogICAgICAgICAgICA8L3BhZ2U+CiAgICAgICAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNzMiIG5hbWU9IlZvcGl1bSIgdj0iMS4yIiBtYXhzbXM9IjMwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSI5NjAiIHJlc2V0PSJtb250aGx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBSUFBQUNRa1dnMkFBQUN3MGxFUVZSNDJsV1F6VS9UY0J6R3YvMzkybzVsWmJhRGJReTJaU3dSZElDRXNLQ2NJQjd3c25EUWNORXJSaExEZ1hEQ2tIRGhiOEJnUEdtSWtJaUJLd1I1TWNId0ptL0dURGZHTVBKU2h1dmFkVnU3ZHEySGthalA2Y21UNTBrK2VRajRYNk9qWTVGSW84TmgyR3hYaXVLZW0vc3hQRHoyYndFQkFFRVFMTXZTTkEwQUZDV1RKS1dxanVQalpsbE9Hd1lCQUJSRlVSVDFkOURkM1QweDhYSmdvQU1ocUtvNmREZ29TY3BaTE1mRm9rVVFESVJnYUtpN3YvOHB4aGdBeU5iVzFwR1I1MzcvVVRENG1PYzVRZWdFc0dOOHBpaTFBSVRUT2VYek9YdDdJd0IzMCtuZk16TXpPQndPUnlMK2JMWldWVy9XMXZwYVdwb0NnWFpCRUJsbUc2R2lMSHQ2ZXA1NFBCMDB2VXZUcnUydEEveXN2NC9qc3BjcHRyNythMWRYWHlCd3U2TENrc3VsZEQyaDY1VU5EZmZiMis4aGhBdjVYZGFyM0FuWGtJRUg4WXlCN1pvZWl6VzUzU2JIQVFCWXJaNXMxbTIzQjV6T0lFSGtaWGxaeWYzY0xPMDUycnpvOENDdm0rSnBJVllxMGJwKy9aM0w1Y0c0MnV1dFVWWDFTMkpuaFptWGNOb0UxZEFLcU5PUnBUSnkzSmU1MWJnaGlueDVZSm9scTdYWllnbkpXUWtUMjVCUEhiSnhxQ2hTWmdsdDBXU2l5c1V5cFhSSzRDK3VSRkVxSDE5WFYxTlU5YXZDVWtyY05pOXRWcHRTUlFWMWdVUnRaRjFURHRmRTFaVjg5WGwySVpsTUFnREdtR0dZaTdQWWVub3hDaUozUTdGRzY1R1ZEMUVzMmx3MjRyNkMzVzRKQlBlM1lvdExTeDgxVFN1RGFVWkIyOGk5ZjdGK2ZFcTd5R0xpS1BSMnlvTG01cjg1b3l4ajJ1Z0VmcjMzVTh4a3lsU0tvbXBhaHVQMjk5Y2gvcTR5ZDhWV0p3NG1YMDFpbmo4L2lhck5UZWIwRzJsM092SHdrY0d5WGtGQVBKOUVhSDUxVlZwYk8wa2tmNFZDZGJNZkxrNU96a2dBMk5tSkRnNVNvZ2dBUmo3djU3alp5OHN1aG9tVHBHNnorUUUrUzVJNFByNmdxbmtBSUFIQU1DQ2R2dWF1clB3TzBPeHlmU0tJRWdEQk1KbHlYaWpJWmZNSDA3RkhJS3pwTVp3QUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBWb3BpdW08L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlyZSBjb21lIHVzZXJuYW1lLCBpbCBwcm9wcmlvIG51bWVybyBkaSBjZWxsdWxhcmUgc2VuemEgMzkiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy52b3BpdW0uY29tICAiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgbWV0aG9kPSJQT1NUIiB1cmk9Imh0dHBzOi8vdm9waXVtLmNvbS9kby5waHA/bT1sb2dpbiZhbXA7YT1sb2dpbiI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InRpbWVvZmZzZXQiIHZhbHVlPSItMTIwIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImdvdG8iIHZhbHVlPSIiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJlcnJvcj0xIiBlcnJtc2c9IlVzZXJuYW1lIG8gcGFzc3dvcmQgc2JhZ2xpYXRpIiAvPg0KICAgICAgICAgICAgICAgIDwvZXJyb3JzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3ZvcGl1bS5jb20vai9kYXNoYm9hcmQuaHRtP2xhbmd1YWdlPWVuIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19TT05PIiBsZWZ0PScgICAgICAgICAgICAgICAgICAgICZsdDtkaXYgaWQ9JnF1b3Q7JyByaWdodD0nJnF1b3Q7JyAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly92b3BpdW0uY29tL2ovdXNlcnNlbmRzbXMuaHRtIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19EQUxMQVJBIiBsZWZ0PSdvcHRpb24gdmFsdWU9JnF1b3Q7MycgcmlnaHQ9JyZxdW90OycgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vdm9waXVtLmNvbS9qL2ltYWdlY29udHJvbGxlci5odG0iIGNhcHRjaGE9IjEiIC8+DQogICAgICAgICAgICA8cGFnZSBtZXRob2Q9IlBPU1QiIHVyaT0iaHR0cDovL3ZvcGl1bS5jb20vai91c2Vyc2VuZHNtcy5odG0iPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Im51bWJlciIgdmFsdWU9IjMlJV9fREFMTEFSQSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Im51bWJlckNvZGUiIHZhbHVlPSIzOSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJpZCIgdmFsdWU9IiUlX19TT05PJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZW1haWwiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0b1Bob25lIiB2YWx1ZT0iMzklJWludG51bSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IndvcmQiIHZhbHVlPSIlJWNhcHRjaGFfdmFsdWUlJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9Ik1lc3NhZ2Ugc2VudCBzdWNjZXNzZnVsbHkiIC8+DQogICAgICAgICAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IlZpc3VhbCB3b3JkIGRvZXMgbm90IG1hdGNoIiBlcnJtc2c9IkNvZGljZSBlcnJhdG8uIFJpcHJvdmEiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNzUiIG5hbWU9IlRpdGlTTVMiIHY9IjEuMCIgbWF4c21zPSI1MCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTYwIiByZXNldD0ibW9udGhseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBS1QybERRMUJRYUc5MGIzTm9iM0FnU1VORElIQnliMlpwYkdVQUFIamFuVk5uVkZQcEZqMzMzdlJDUzRpQWxFdHZVaFVJSUZKQ2k0QVVrU1lxSVFrUVNvZ2hvZGtWVWNFUlJVVUVHOGlnaUFPT2pvQ01GVkVzRElvSzJBZmtJYUtPZzZPSWlzcjc0WHVqYTlhODkrYk4vclhYUHVlczg1Mnp6d2ZBQ0F5V1NETlJOWUFNcVVJZUVlQ0R4OFRHNGVRdVFJRUtKSEFBRUFpelpDRnovU01CQVBoK1BEd3JJc0FIdmdBQmVOTUxDQURBVFp2QU1CeUgvdy9xUXBsY0FZQ0VBY0Iwa1RoTENJQVVBRUI2amtLbUFFQkdBWUNkbUNaVEFLQUVBR0RMWTJMakFGQXRBR0FuZitiVEFJQ2QrSmw3QVFCYmxDRVZBYUNSQUNBVFpZaEVBR2c3QUt6UFZvcEZBRmd3QUJSbVM4UTVBTmd0QURCSlYyWklBTEMzQU1ET0VBdXlBQWdNQURCUmlJVXBBQVI3QUdESUl5TjRBSVNaQUJSRzhsYzg4U3V1RU9jcUFBQjRtYkk4dVNRNVJZRmJDQzF4QjFkWExoNG96a2tYS3hRMllRSmhta0F1d25tWkdUS0JOQS9nODh3QUFLQ1JGUkhnZy9QOWVNNE9yczdPTm82MkRsOHQ2cjhHL3lKaVl1UCs1YytyY0VBQUFPRjBmdEgrTEMrekdvQTdCb0J0L3FJbDdnUm9YZ3VnZGZlTFpySVBRTFVBb09uYVYvTncrSDQ4UEVXaGtMbloyZVhrNU5oS3hFSmJZY3BYZmY1bndsL0FWLzFzK1g0OC9QZjE0TDdpSklFeVhZRkhCUGpnd3N6MFRLVWN6NUlKaEdMYzVvOUgvTGNMLy93ZDB5TEVTV0s1V0NvVTQxRVNjWTVFbW96ek1xVWlpVUtTS2NVbDB2OWs0dDhzK3dNKzN6VUFzR28rQVh1UkxhaGRZd1AyU3ljUVdIVEE0dmNBQVBLN2I4SFVLQWdEZ0dpRDRjOTMvKzgvL1VlZ0pRQ0Faa21TY1FBQVhrUWtMbFRLc3ovSENBQUFSS0NCS3JCQkcvVEJHQ3pBQmh6QkJkekJDL3hnTm9SQ0pNVENRaEJDQ21TQUhISmdLYXlDUWlpR3piQWRLbUF2MUVBZE5NQlJhSWFUY0E0dXdsVzREajF3RC9waENKN0JLTHlCQ1FSQnlBZ1RZU0hhaUFGaWlsZ2pqZ2dYbVlYNEljRklCQktMSkNESmlCUlJJa3VSTlVneFVvcFVJRlZJSGZJOWNnSTVoMXhHdXBFN3lBQXlndnlHdkVjeGxJR3lVVDNVRExWRHVhZzNHb1JHb2d2UVpIUXhtbzhXb0p2UWNyUWFQWXcyb2VmUXEyZ1AybzgrUThjd3dPZ1lCelBFYkRBdXhzTkNzVGdzQ1pOank3RWlyQXlyeGhxd1Zxd0R1NG4xWTgreGR3UVNnVVhBQ1RZRWQwSWdZUjVCU0ZoTVdFN1lTS2dnSENRMEVkb0pOd2tEaEZIQ0p5S1RxRXUwSnJvUitjUVlZakl4aDFoSUxDUFdFbzhUTHhCN2lFUEVOeVFTaVVNeUo3bVFBa214cEZUU0V0SkcwbTVTSStrc3FaczBTQm9qazhuYVpHdXlCem1VTENBcnlJWGtuZVRENURQa0crUWg4bHNLbldKQWNhVDRVK0lvVXNwcVNobmxFT1UwNVFabG1ESkJWYU9hVXQyb29WUVJOWTlhUXEyaHRsS3ZVWWVvRXpSMW1qbk5neFpKUzZXdG9wWFRHbWdYYVBkcHIraDB1aEhkbFI1T2w5Qlgwc3ZwUitpWDZBUDBkd3dOaGhXRHg0aG5LQm1iR0FjWVp4bDNHSytZVEtZWjA0c1p4MVF3TnpIcm1PZVpENWx2VlZncXRpcDhGWkhLQ3BWS2xTYVZHeW92VkttcXBxcmVxZ3RWODFYTFZJK3BYbE45cmtaVk0xUGpxUW5VbHF0VnFwMVE2MU1iVTJlcE82aUhxbWVvYjFRL3BINVovWWtHV2NOTXcwOURwRkdnc1YvanZNWWdDMk1aczNnc0lXc05xNFoxZ1RYRUpySE4yWHgyS3J1WS9SMjdpejJxcWFFNVF6TktNMWV6VXZPVVpqOEg0NWh4K0p4MFRnbm5LS2VYODM2SzNoVHZLZUlwRzZZMFRMa3haVnhycXBhWGxsaXJTS3RScTBmcnZUYXU3YWVkcHIxRnUxbjdnUTVCeDBvblhDZEhaNC9PQlozblU5bFQzYWNLcHhaTlBUcjFyaTZxYTZVYm9idEVkNzl1cCs2WW5yNWVnSjVNYjZmZWViM24raHg5TC8xVS9XMzZwL1ZIREZnR3N3d2tCdHNNemhnOHhUVnhiendkTDhmYjhWRkRYY05BUTZWaGxXR1g0WVNSdWRFOG85VkdqVVlQakduR1hPTWs0MjNHYmNhakpnWW1JU1pMVGVwTjdwcFNUYm1tS2FZN1REdE14ODNNemFMTjFwazFtejB4MXpMbm0rZWIxNXZmdDJCYWVGb3N0cWkydUdWSnN1UmFwbG51dHJ4dWhWbzVXYVZZVlZwZHMwYXRuYTBsMXJ1dHU2Y1JwN2xPazA2cm50Wm53N0R4dHNtMnFiY1pzT1hZQnR1dXRtMjJmV0ZuWWhkbnQ4V3V3KzZUdlpOOXVuMk4vVDBIRFlmWkRxc2RXaDErYzdSeUZEcFdPdDZhenB6dVAzM0Y5SmJwTDJkWXp4RFAyRFBqdGhQTEtjUnBuVk9iMDBkbkYyZTVjNFB6aUl1SlM0TExMcGMrTHBzYnh0M0l2ZVJLZFBWeFhlRjYwdldkbTdPYnd1Mm8yNi91TnU1cDdvZmNuOHcwbnltZVdUTnowTVBJUStCUjVkRS9DNStWTUd2ZnJINVBRMCtCWjdYbkl5OWpMNUZYcmRld3Q2VjNxdmRoN3hjKzlqNXluK00rNHp3MzNqTGVXVi9NTjhDM3lMZkxUOE52bmwrRjMwTi9JLzlrLzNyLzBRQ25nQ1VCWndPSmdVR0JXd0w3K0hwOEliK09QenJiWmZheTJlMUJqS0M1UVJWQmo0S3RndVhCclNGb3lPeVFyU0gzNTVqT2tjNXBEb1ZRZnVqVzBBZGg1bUdMdzM0TUo0V0hoVmVHUDQ1d2lGZ2EwVEdYTlhmUjNFTnozMFQ2UkpaRTNwdG5NVTg1cnkxS05TbytxaTVxUE5vM3VqUzZQOFl1WmxuTTFWaWRXRWxzU3h3NUxpcXVObTVzdnQvODdmT0g0cDNpQytON0Y1Z3Z5RjF3ZWFIT3d2U0ZweGFwTGhJc09wWkFUSWhPT0pUd1FSQXFxQmFNSmZJVGR5V09Dbm5DSGNKbklpL1JOdEdJMkVOY0toNU84a2dxVFhxUzdKRzhOWGtreFRPbExPVzVoQ2Vwa0x4TURVemRtenFlRnBwMklHMHlQVHE5TVlPU2taQnhRcW9oVFpPMlorcG41bVoyeTZ4bGhiTCt4VzZMdHk4ZWxRZkphN09RckFWWkxRcTJRcWJvVkZvbzF5b0hzbWRsVjJhL3pZbktPWmFybml2TjdjeXp5dHVRTjV6dm4vL3RFc0lTNFpLMnBZWkxWeTBkV09hOXJHbzVzanh4ZWRzSzR4VUZLNFpXQnF3OHVJcTJLbTNWVDZ2dFY1ZXVmcjBtZWsxcmdWN0J5b0xCdFFGcjZ3dFZDdVdGZmV2YzErMWRUMWd2V2QrMVlmcUduUnMrRlltS3JoVGJGNWNWZjlnbzNIamxHNGR2eXIrWjNKUzBxYXZFdVdUUFp0Sm02ZWJlTFo1YkRwYXFsK2FYRG00TjJkcTBEZDlXdE8zMTlrWGJMNWZOS051N2c3WkR1YU8vUExpOFphZkp6czA3UDFTa1ZQUlUrbFEyN3RMZHRXSFgrRzdSN2h0N3ZQWTA3TlhiVzd6My9UN0p2dHRWQVZWTjFXYlZaZnRKKzdQM1A2NkpxdW40bHZ0dFhhMU9iWEh0eHdQU0EvMEhJdzYyMTduVTFSM1NQVlJTajlZcjYwY094eCsrL3AzdmR5ME5OZzFWalp6RzRpTndSSG5rNmZjSjMvY2VEVHJhZG94N3JPRUgweDkySFdjZEwycENtdkthUnB0VG12dGJZbHU2VDh3KzBkYnEzbnI4UjlzZkQ1dzBQRmw1U3ZOVXlXbmE2WUxUazJmeXo0eWRsWjE5Zmk3NTNHRGJvclo3NTJQTzMyb1BiKys2RUhUaDBrWC9pK2M3dkR2T1hQSzRkUEt5MitVVFY3aFhtcTg2WDIzcWRPbzgvcFBUVDhlN25MdWFycmxjYTdudWVyMjFlMmIzNlJ1ZU44N2Q5TDE1OFJiLzF0V2VPVDNkdmZONmIvZkY5L1hmRnQxK2NpZjl6c3U3MlhjbjdxMjhUN3hmOUVEdFFkbEQzWWZWUDF2KzNOanYzSDlxd0hlZzg5SGNSL2NHaFlQUC9wSDFqdzlEQlkrWmo4dUdEWWJybmpnK09UbmlQM0w5NmZ5blE4OWt6eWFlRi82aS9zdXVGeFl2ZnZqVjY5Zk8wWmpSb1pmeWw1Ty9iWHlsL2VyQTZ4bXYyOGJDeGg2K3lYZ3pNVjcwVnZ2dHdYZmNkeDN2bzk4UFQrUjhJSDhvLzJqNXNmVlQwS2Y3a3htVGsvOEVBNWp6L0dNekxkc0FBQUFnWTBoU1RRQUFlaVVBQUlDREFBRDUvd0FBZ09rQUFIVXdBQURxWUFBQU9wZ0FBQmR2a2wvRlJnQUFBckZKUkVGVWVOcDhrczlMVkZFVXg3L24zSGZmbTJrbUszR2MwZFRLaGYyZ1gxWVd0QW1pRmhXMWFkRkNhdGNpK3JIb0x5Z0tOMEZJNFNacUVRaVJCQkp1UWpkdElpeHJzb0tvYUFJdGNTWnpacHcza3pQdnZYdGE2R2dXZHVEZXd6a2N2dWVlZXo2VUd4ekNWTzhEaExkdWdZcEdVWHd6aXNURjh5aW52aUxJNTFGSnB4SGQyNEg4a3lIb1JEM3N4anFzYWh5ckUxRlRLTTlzWml4anBOUzhaM0E0REFpVWVONU9Ja1JONnVrSTJOcFBxOWMxTEJVZ0FnQ3c0OERQNVpvQXFLRGducHp1Zjl4ZFRDWmYvM3pVUDZ6MWp4MG1PNzdPakQyL1o4YUhTeFlwQlRDRGJCc3dwcGFJbTR1dmtpMlR0M3Z1Snk1ZGFNOCtIbmdrdmcreWJaaXlCd3Btd21BRnlZeHVzZzUzZmJEOGJMWTlLQlQyL1hyMy9sQjVmTHpEYm1qNFBQV3dyellvRnRlWVVpa0dZK1pHQUVEa3diZmJ2anNoWFpLR2c5MEl4ZlBXNUsyZVYyWjJsc3FwRktBVWREeitrWmlJbUNIRzVFMmxBdVU0Y3lNcWhsOVNYa0dPM2ZBenJhT1c1S0RPSlJxdkFBQlpGaUFDRlkxa1k2YzdMeU13VVE2RkJwVGp0SG5wVEp2NFBscXVYK3NnUytIYnpkNjdwYmVqWjBqcnE4eU80NUhXWllqQWpzZGZSUGZzN25LSFgzWjZtY3d1TDUydUQyL2Zkcnk2bGNBdGpLaWFtckNVM1pXa2RaR1VBcTgrZW1TM2pzV2VpVEd3TjZ5L3d5dkMvYm5Cb2JPL1BuMXU5YWVucVpSTUFrb0JSS2hNVG9Jc0Z2RGk4bGpIWXU5QU5EdmZ4UzY5ZVFzVmlSUkpheEJJSUxLVURWbktDOCttVWdEQVZRN0U4eUVFUUFTZ1JUYVdNL2JTbWNWSUJHQUNWY1VFOUhmSGZ3U3F5UDVKNGtLNGNQMUhZTDR6UVFUVkl5SUVZeUJZelAzeEY5VmFBZ0FXWXdEQUFoRWdva0FNSXRaZ2huZytnM2p1WlVUQVhLMC9uN05oRENqM1pCQ0I2eDd3OC9sbXU2bnB1WEhkTDBIQlBTV0JyNTIxYXdkQWxLOU1USFJDaEVLYk52YXFTS1RHZlRGeWdrTk94VzV1NnZzOUFOaXNNbnl0REIrb0FBQUFBRWxGVGtTdVFtQ0MiID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBUaXRpU01TPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwnZW1haWwgZGkgcmVnaXN0cmF6aW9uZSBzZW56YSBAIGUgcHVudG8uIEVzOiB1dGVudGVAcHJvdmlkZXIuaXQgLS0tPiB1dGVudGVwcm92aWRlcml0IiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgaW4gY2FyYXR0ZXJpIG1pbnVzY29saSAgICAgICAgICAgVElUMTIzNCA+IHRpdDEyMzQiIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9InNlbmRlciIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgaWwgbWl0dGVudGUgc2VuemEgKyAoZXMuIDM5MzM4MTIzNDU2NykiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwOi8vaW52aW8udGl0aXNtcy5pdC9wbGFpbi1sb2dpbi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0icmV0dXJuX3RvIiB2YWx1ZT0iaHR0cDovL3d3dy50aXRpc21zLml0Ii8+ICAgICANCiAgICAgICAgPHZhciBuYW1lPSJyZXR1cm5fdG9fbG9nb3V0IiB2YWx1ZT0iaHR0cDovL3d3dy50aXRpc21zLml0Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJzbXN1c2VybmFtZSIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic21zcGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiLz4NCiAgICAgICAgPHZhciBuYW1lPSJJTlZJT1NNUyIgdmFsdWU9IklOVklPIFNNUyIvPg0KICAgICAgPC92YXJzPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJJbnNlcmlyZSBub21lIHV0ZW50ZSBlIHBhc3N3b3JkIiBlcnJtc2c9InVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIi8+DQogICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCgkgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vaW52aW8udGl0aXNtcy5pdC9zZW5kLXNtcy5waHAiPg0KCTxjb250ZW50cz4NCiAgICAgICAgICA8dmFyIG5hbWU9InJlcG9zdCIgbGVmdD0icmVwb3N0X3ByZXZlbnRpb24mcXVvdDsgdHlwZT0mcXVvdDtoaWRkZW4mcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQogICAgPC9jb250ZW50cz4JDQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZGVyIiB2YWx1ZT0iJTJCJSVzZW5kZXIlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ib3BlcmF0aW9uIiB2YWx1ZT0iVEVYVCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VsZWN0bW9kZWwiIHZhbHVlPSIiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBheWxvYWQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icXR5IiB2YWx1ZT0ibCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iZHR5cGUiIHZhbHVlPSIxIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJkZXN0IiB2YWx1ZT0iJTJCJSVpbnRjb2RlJSUlJWludG51bSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzY2hlZHVsZWQiIHZhbHVlPSIwIi8+DQoJCSAgPHZhciBuYW1lPSJTdWJtaXQiIHZhbHVlPSJJbnZpYSIvPg0KICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iSW5zZXJpcmUgbm9tZSB1dGVudGUgZSBwYXNzd29yZCIgZXJybXNnPSJ1c2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIvPg0KICAgICAgPC9lcnJvcnM+CSAgIA0KCQk8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9pbnZpby50aXRpc21zLml0L3NlbmQtc21zLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQoJICAgICA8dmFyIG5hbWU9InJlcG9zdF9wcmV2ZW50aW9uIiB2YWx1ZT0iJSVyZXBvc3QlJSIvPg0KCSAgICAgPHZhciBuYW1lPSJzZW5kZXIiIHZhbHVlPSIlMkIlJXNlbmRlciUlIi8+DQoJICAgICA8dmFyIG5hbWU9Im9wZXJhdGlvbiIgdmFsdWU9IlRFWFQiLz4NCgkgICAgIDx2YXIgbmFtZT0ic2VsZWN0bW9kZWwiIHZhbHVlPSIiLz4NCgkgICAgIDx2YXIgbmFtZT0icGF5bG9hZCIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQoJICAgICA8dmFyIG5hbWU9InF0eSIgdmFsdWU9ImwiLz4NCiAgICAgICAgIDx2YXIgbmFtZT0iZHR5cGUiIHZhbHVlPSIxIi8+DQogICAgICAgICA8dmFyIG5hbWU9ImRlc3QiIHZhbHVlPSIlMkIlJWludGNvZGUlJSUlaW50bnVtJSUiLz4NCiAgICAgICAgIDx2YXIgbmFtZT0ic2NoZWR1bGVkIiB2YWx1ZT0iMCIvPg0KCSAgICAgPHZhciBuYW1lPSJjb25maXJtIiB2YWx1ZT0iMSIvPg0KCSAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICA8dmFyIGVycnN0cj0idW4gY2FtcG8gb2JibGlnYXRvcmlvIiBlcnJtc2c9Ikluc2VyaXJlIGlsIHRlc3RvIGRlbCBtZXNzYWdnaW8iLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICA8dmFyIGFjY2VwdHN0cj0iTWVzc2FnZ2lvIGFjY29kYXRvIGNvbiBzdWNjZXNzbyIvPg0KICAgICAgICA8L2FjY2VwdD4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI3OSIgbmFtZT0iV2ViQ2FsbERpcmVjdCIgdj0iMS40IiBtYXhzbXM9IjQiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE2MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUNiRWxFUVZSNDJxV1N5MHVVVVJqR2YzTys4MTNuUGw3R3kraUVqYVJsUll2RWpDZ2tXclJ4VjlRaVdvbjlFOUVtRU5xMWpGYXQzQlFSMWJiY0JHVmFFWGlwaElSVXZIM09hTTdNTjk5bFdnU2ZpclRxaGJNNHorL2x2TS96Y2lLVnUybzlxTmNCVUNJUjlwZi9EMzAvRTBQRGtwRUxralhIWXQxTGhPZmhNWXNqZCtEQmNaV1ZxaG5xTHhwTk9rYnJITDJ0OEZsWUtHdGozcjJaTm8rQm56clNqaE1FZFp4QU1IS2pSTW53S0NzcS9kTUpSQ1NDRXdqdVgzSDRsbldvbUQ3YXJvVkk3S2dBVExRcUZNc0JkazN3dGlXZ1pIZ0FmRy8wcUxxQzVWMkpYUk5NZGxUREdNcWFodWpZa1FETXhEMXNUMlBUMVhsNllxOXBPKzR5RzQ5Z2V4cWZESVdLNFljc094VkROSmZqQU14MjE5aHhKUnNWbGVsVDVRTUxlOVBxcytOS0ZqcmRVTXN0bTFpN0x1TE1jZ1lBTyswdzBRT1BoMHZobEt0UFdsRTl3ZXRiS3l3NFVWNWUzQTRmR0h5Vlk2RkxJbkxWVkNndXRSZFpQRmtLN3owZnNqUXVtUURNOWEveXE2Mnk1K0JMbEdKS1FiUlhyRkNjSHJLeDB3NEFtUzBkZ0ZoUi9JMXhiZTJBZllEVDh4bEVKL2tRN0Y5US9tc1NnS2F0K0NIVzlDTk9nNkZqV2pGRTNNaFFXTWtlK21sbjM4ZElKbHJvMnNnZFl0M3pTV1M2RXoyUlFxUWJteG1idlhtZ1lYUjhnSUhZWmZvS09hNTc1OE00QU9mbUNsemFIYVEzMzBRaDMwSEVmdmVvdnI2eHhmUHlKTFBaVlhwWHN4Ulc4MmltVG5OTVE1R1NaYkhKczRhUHlHMmZ3Y1UrbW1XU3BsUVVQWm9rVXB3YXIxZXFGZXpmTHFWaUVkLzNVQlNKWmFoRURZbVFHdFZxalhMVndmVUNBRlFwU01WMGhCNUZhbGFNUUVqU2lvdWh5OUNxcW1xWXVnYUFHZld4YWpXQ3dBK1pWQlFNWFVYd24vVUhXYXpuNm42dE5QTUFBQUFBU1VWT1JLNUNZSUk9IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIHRyYW1pdGUgV2ViQ2FsbERpcmVjdC5jb208L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy53ZWJjYWxsZGlyZWN0LmNvbSAiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy53ZWJjYWxsZGlyZWN0LmNvbSAiIC8+CgkJPG9wdGlvbmFsIG49IjMiIG5hbWU9IkNvcnJlemlvbmUiIGRlZmF1bHQ9IiIgZGVzYz0iU2NyaXZlcmUgT04gcGVyIGxhIGNvcnJlemlvbmUgZGVpIGNhcmF0dGVyaSBhY2NlbnRhdGkiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgbWV0aG9kPSJQT1NUIiB1cmk9Imh0dHA6Ly90LmphY2tzbXMuaXQvc29zdGl0dXppb25lTzIucGhwIj4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJDSEVDSyIgdmFsdWU9IiUlY29ycmV6aW9uZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InRleHQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Im1lc3MxIiBsZWZ0PSJUZVh0TWVTc0FnRT06IiByaWdodD0iOlRlWHRNZVNzQWdFIiAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LndlYmNhbGxkaXJlY3QuY29tL215YWNjb3VudC9pbmRleC5waHA/cGFydD10cGxvZ2luIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InVzZXIiIHZhbHVlPSIlJXVzZXJuYW1lJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGFzcyIgdmFsdWU9IiUlcGFzc3dvcmQlJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IlVzZXJuYW1lIGFuZC9vciBwYXNzd29yZCBpbmNvcnJlY3QiIGVycm1zZz0idXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LndlYmNhbGxkaXJlY3QuY29tL215YWNjb3VudC93ZWJzbXMyLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8aGVhZGVycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJSZWZlcmVyIiB2YWx1ZT0iaHR0cHM6Ly93d3cud2ViY2FsbGRpcmVjdC5jb20vbXlhY2NvdW50L2NvbnRhY3RzLnBocD9kbz13ZWJzbXMiIC8+DQogICAgICAgICAgICAgICAgPC9oZWFkZXJzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9InNlbmQiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGFuZWwiIHZhbHVlPSJ0cnVlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkNvdW50cnlMaXN0MSIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJDb3VudHJ5Y29kZTEiIHZhbHVlPSIlMkIlJWludGNvZGUlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJibnJwaG9uZW51bWJlciIgdmFsdWU9IiUlaW50bnVtJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzczElJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IllvdSBhcmUgcmVxdWlyZWQgdG8gZmlsbCIgZXJybXNnPSJTbXMgbm9uIGludmlhdG8sIHNtcyB2dW90byIgLz4NCgkJCQkJPHZhciBlcnJzdHI9IllvdXIgdGV4dCBtZXNzYWdlIGlzIHRvIGxvbmciIGVycm1zZz0iTWVzc2FnZ2lvIHRyb3BwbyBsdW5nbyIvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iU29ycnksIHlvdSBkbyBub3QgaGF2ZSBlbm91Z2ggY3JlZGl0IHRvIGNvbXBsZXRlIHRoaXMgc21zLiIgZXJybXNnPSJDcmVkaXRpIGluc3VmZmljaWVudGkiLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iTWVzc2FnZSBoYXMgYmVlbiBzZW50IiAvPg0KICAgICAgICAgICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9Ijc3IiBuYW1lPSJUZWxibyIgdj0iMS4wIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSI2NDAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQkdkQlRVRUFBTEdPZlB0Umt3QUFBQ0JqU0ZKTkFBQ0hEd0FBakE4QUFQMVNBQUNCUUFBQWZYa0FBT21MQUFBODVRQUFHY3h6UElWM0FBQUtPV2xEUTFCUWFHOTBiM05vYjNBZ1NVTkRJSEJ5YjJacGJHVUFBRWpIblpaM1ZGVFhGb2ZQdlhkNm9jMHdBbEtHM3J2QUFOSjdrMTVGWVpnWllDZ0REak0wc1NHaUFoRkZSSm9pU0ZERWdORlFKRlpFc1JBVVZMQUhKQWdvTVJoRlZDeHZSdGFMcnF5ODkvTHkrK09zYisyejk3bjc3TDNQV2hjQWtxY3ZsNWNHU3dHUXloUHdnenljNlJHUlVYVHNBSUFCSG1DQUtRQk1Wa2E2WDdCN0NCREp5ODJGbmlGeUFsOEVBZkI2V0x3Q2NOUFFNNEJPQi8rZnBGbnBmSUhvbUFBUm03TTVHU3dSRjRnNEpVdVFMcmJQaXBnYWx5eG1HQ1ZtdmloQkVjdUpPV0dSRFQ3N0xMS2ptTm1wUExhSXhUbW5zMVBaWXU0VjhiWk1JVWZFaUsrSUN6TzVuQ3dSM3hLeFJvb3dsU3ZpTitMWVZBNHpBd0FVU1d3WGNGaUpJallSTVlrZkV1UWk0dVVBNEVnSlgzSGNWeXpnWkF2RWwzSkpTOC9oY3hNU0JYUWRsaTdkMU5xYVFmZmtaS1Z3QkFMREFDWXJtY2xuMDEzU1V0T1p2QndBRnUvOFdUTGkydEpGUmJZMHRiYTBORFF6TXYycVVQOTE4MjlLM050RmVobjR1V2NRcmYrTDdhLzgwaG9BWU15SmFyUHppeTJ1Q29ET0xRREkzZnRpMHpnQWdLU29ieDNYdjdvUFRUd3ZpUUpCdW8yeGNWWldsaEdYd3pJU0YvUVAvVStIdjZHdnZtY2tQdTZQOHRCZE9mRk1ZWXFBTHE0Ykt5MGxUY2luWjZReldSeTY0WitIK0I4SC9uVWVCa0djZUE2Znd4TkZoSW1tak10TEVMV2J4K1lLdUdrOE9wZjNuNXI0RDhQK3BNVzVGb25TK0JGUVk0eUExSFVxUUg3dEJ5Z0tFU0RSKzhWZC82TnZ2dmd3SUg1NTRTcVRpM1AvN3pmOVo4R2w0aVdEbS9BNXppVW9oTTRTOGpNWDk4VFBFcUFCQVVnQ0twQUh5a0FkNkFCRFlBYXNnQzF3Qkc3QUcvaURFQkFKVmdNV1NBU3BnQSt5UUI3WUJBcEJNZGdKOW9CcVVBY2FRVE5vQmNkQkp6Z0Z6b05MNEJxNEFXNkQrMkFVVElCbllCYThCZ3NRQkdFaE1rU0I1Q0VWU0JQU2g4d2dCbVFQdVVHK1VCQVVDY1ZDQ1JBUEVrSjUwR2FvR0NxRHFxRjZxQm42SGpvSm5ZZXVRSVBRWFdnTW1vWitoOTdCQ0V5Q3FiQVNyQVVid3d6WUNmYUJRK0JWY0FLOEJzNkZDK0FkY0NYY0FCK0ZPK0R6OERYNE5qd0tQNFBuRUlBUUVScWlpaGdpRE1RRjhVZWlrSGlFajZ4SGlwQUtwQUZwUmJxUlB1UW1Nb3JNSUc5UkdCUUZSVWNab214Um5xaFFGQXUxQnJVZVZZS3FSaDFHZGFCNlVUZFJZNmhaMUVjMEdhMkkxa2Zib0wzUUVlZ0VkQmE2RUYyQmJrSzNveStpYjZNbjBLOHhHQXdObzQyeHduaGlJakZKbUxXWUVzdytUQnZtSEdZUU00Nlp3Mkt4OGxoOXJCM1dIOHZFQ3JDRjJDcnNVZXhaN0JCMkF2c0dSOFNwNE14dzdyZ29IQStYajZ2QUhjR2R3UTNoSm5FTGVDbThKdDRHNzQ5bjQzUHdwZmhHZkRmK09uNEN2MENRSm1nVDdBZ2hoQ1RDSmtJbG9aVndrZkNBOEpKSUpLb1JyWW1CUkM1eEk3R1NlSXg0bVRoR2ZFdVNJZW1SWEVqUkpDRnBCK2tRNlJ6cEx1a2xtVXpXSWp1U284Z0M4ZzV5TS9rQytSSDVqUVJGd2tqQ1M0SXRzVUdpUnFKRFlraml1U1JlVWxQU1NYSzFaSzVraGVRSnlldVNNMUo0S1MwcEZ5bW0xSHFwR3FtVFVpTlNjOUlVYVZOcGYrbFU2UkxwSTlKWHBLZGtzREphTW00eWJKa0NtWU15RjJUR0tRaEZuZUpDWVZFMlV4b3BGeWtUVkF4Vm0rcEZUYUlXVTcrakRsQm5aV1ZrbDhtR3lXYkwxc2llbGgybElUUXRtaGN0aFZaS08wNGJwcjFib3JURWFRbG55ZllsclV1R2xzekxMWlZ6bE9QSUZjbTF5ZDJXZXlkUGwzZVRUNWJmSmQ4cC8xQUJwYUNuRUtpUXBiQmY0YUxDekZMcVV0dWxyS1ZGUzQ4dnZhY0lLK29wQmltdVZUeW8ySzg0cDZTczVLR1VybFNsZEVGcFJwbW03S2ljcEZ5dWZFWjVXb1dpWXEvQ1ZTbFhPYXZ5bEM1TGQ2S24wQ3ZwdmZSWlZVVlZUMVdoYXIzcWdPcUNtclphcUZxK1dwdmFRM1dDT2tNOVhyMWN2VWQ5VmtORncwOGpUNk5GNDU0bVhwT2htYWk1VjdOUGMxNUxXeXRjYTZ0V3A5YVV0cHkybDNhdWRvdjJBeDJ5am9QT0dwMEduVnU2R0YyR2JyTHVQdDBiZXJDZWhWNmlYbzNlZFgxWTMxS2ZxNzlQZjlBQWJXQnR3RE5vTUJneEpCazZHV1lhdGhpT0dkR01mSTN5alRxTm5odHJHRWNaN3pMdU0vNW9ZbUdTWXRKb2N0OVV4dFRiTk4rMDIvUjNNejB6bGxtTjJTMXpzcm03K1Fiekx2TVh5L1NYY1pidFgzYkhnbUxoWjdIVm9zZmlnNldWSmQreTFYTGFTc01xMXFyV2FvUkJaUVF3U2hpWHJkSFd6dFlickU5WnY3V3h0QkhZSExmNXpkYlFOdG4yaU8zVWN1M2xuT1dOeThmdDFPeVlkdlYyby9aMCsxajdBL2FqRHFvT1RJY0doOGVPNm81c3h5YkhTU2RkcHlTbm8wN1BuVTJjK2M3dHp2TXVOaTdyWE02NUlxNGVya1d1QTI0eWJxRnUxVzZQM05YY0U5eGIzR2M5TER6V2VwenpSSHY2ZU83eUhQRlM4bUo1Tlh2TmVsdDVyL1B1OVNINUJQdFUrenoyMWZQbCszYjd3WDdlZnJ2OUhxelFYTUZiMGVrUC9MMzhkL3MvRE5BT1dCUHdZeUFtTUNDd0p2QkprR2xRWGxCZk1DVTRKdmhJOE9zUTU1RFNrUHVoT3FIQzBKNHd5YkRvc09hdytYRFg4TEx3MFFqamlIVVIxeUlWSXJtUlhWSFlxTENvcHFpNWxXNHI5NnljaUxhSUxvd2VYcVc5S252VmxkVUtxMU5XbjQ2UmpHSEduSWhGeDRiSEhvbDl6L1JuTmpEbjRyemlhdU5tV1M2c3ZheG5iRWQyT1h1YVk4Y3A0MHpHMjhXWHhVOGwyQ1hzVHBoT2RFaXNTSnpodW5DcnVTK1NQSlBxa3VhVC9aTVBKWDlLQ1U5cFM4V2x4cWFlNU1ud2tubTlhY3BwMldtRDZmcnBoZW1qYTJ6VzdGa3p5L2ZoTjJWQUdhc3l1Z1JVMGM5VXYxQkh1RVU0bG1tZldaUDVKaXNzNjBTMmREWXZ1ejlITDJkN3ptU3VlKzYzYTFGcldXdDc4bFR6TnVXTnJYTmFWNzhlV2grM3ZtZUQrb2FDRFJNYlBUWWUza1RZbEx6cHAzeVQvTEw4VjV2RE4zY1hLQlZzTEJqZjRyR2xwVkNpa0Y4NHN0VjJhOTAyMURidXRvSHQ1dHVydG44c1loZGRMVFlwcmloK1g4SXF1ZnFONlRlVjMzemFFYjlqb05TeWRQOU96RTdlenVGZERyc09sMG1YNVphTjcvYmIzVkZPTHk4cWY3VW5acytWaW1VVmRYc0plNFY3Unl0OUs3dXFOS3AyVnIydlRxeStYZU5jMDFhcldMdTlkbjRmZTkvUWZzZjlyWFZLZGNWMTd3NXdEOXlwOTZqdmFOQnFxRGlJT1poNThFbGpXR1BmdDR4dm01c1Vtb3FiUGh6aUhSbzlISFM0dDltcXVmbUk0cEhTRnJoRjJESjlOUHJvamU5Y3YrdHFOV3l0YjZPMUZSOER4NFRIbm40ZisvM3djWi9qUFNjWUoxcC8wUHlodHAzU1h0UUJkZVIwekhZbWRvNTJSWFlObnZRKzJkTnQyOTMrbzlHUGgwNnBucW81TFh1NjlBemhUTUdaVDJkeno4NmRTejgzY3o3aC9IaFBUTS85Q3hFWGJ2VUc5ZzVjOUxsNCtaTDdwUXQ5VG4xbkw5dGRQblhGNXNySnE0eXJuZGNzcjNYMFcvUzMvMlR4VS91QTVVREhkYXZyWFRlc2IzUVBMaDg4TStRd2RQNm02ODFMdDd4dVhidTk0dmJnY09qd25aSG9rZEU3N0R0VGQxUHV2cmlYZVcvaC9zWUg2QWRGRDZVZVZqeFNmTlR3cys3UGJhT1dvNmZIWE1mNkh3Yy92ai9PR24vMlM4WXY3eWNLbnBDZlZFeXFURFpQbVUyZG1uYWZ2dkYwNWRPSlorblBGbVlLZjVYK3RmYTV6dk1mZm5QOHJYODJZbmJpQmYvRnA5OUxYc3EvUFBScTJhdWV1WUM1UjY5VFh5L01GNzJSZjNQNExlTnQzN3Z3ZDVNTFdlK3g3eXMvNkg3by91ano4Y0duMUUrZi9nVURtUFA4dXNUbzB3QUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJoMFJWaDBVMjltZEhkaGNtVUFVR0ZwYm5RdVRrVlVJSFl6TGpNMnFlZmlKUUFBQWRCSlJFRlVPRSt0MFU5SUZHRVl4L0d4dFNJUWd5UU1xOFZEYXhzcmFVR2tFaGE1bHczY1N4QllVVUVvZFpDaUlJS3dQMUJJaHdvaU85Z1NwSWZFb0RxWWw2QVFwUGFRMmdZbGtXbTdRcm5Xem02MTg4N3M3TXgrVzk5dU1zWWNldUM1dkx4ODN2ZjNQSXJ5UCt0UlBzSlpvNDFqb29WV281WW1mUzExWWlVQjRhRkdWMlQzNXJ0eGZQTis3aWIrcklld3FLWERDSEV4MTA2UGVabEI4eDRqMWpObTdJK2NNNDRRRWdGbm9FdDBjREM3Q3h1THBTcGlYS2Nwczg0WjZOUHZzQ2RkelVodW1DSGpJV1BtcUhSRVFlTlM5Z1Q3MG40MnA1WVRWUDNPd0VLdXh1L3JxZmlxVUY3c001bERFckFLZVE2b3UvSE9LWnhVdzd6T3ZhajY1OXlIdFVIQ3lUcmE1b3R4Q3JaRU9sUDdhZjYyZ2QvMnp3WlhTN3N3MzA3enJKZU1wVXJnV3VvMDIrT3JpWnRUSGxmQXJSOWRiUDFjUnNLY2xzQ0Q5RzE4bjBxSWlwZnVnQUcxbHkyVEszaWovUjNrODE5UDJmaGU0VW02djh6VkR4WXViWW90WXlneklJRUpMWXJ2blllZXVhdExiMkN4N0JzdkpaSzhJWUdFTWMyMjJCck94NCs3QjNhTVYzTGx5eWtKNkxaZ2I2eUd3NU5COTBCd0xNRFJEeUUwSzh1c1BrUExSSURXdHczdWdidUpidnlqcTlnWnJhTCtWUVdOVVMrUGszM3VBYWRwRjlPVUxENy9BOXc2UitpMkI4MTNBQUFBQUVsRlRrU3VRbUNDIiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIHRyYW1pdGUgVGVsYm88L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSIJSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cudGVsYm8uY29tICIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnRlbGJvLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGlsIG51bWVybyBtaXR0ZW50ZSAoc2VuemEgKyBlczogMzkzMzgxMjM0NTY3KSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly90LmphY2tzbXMuaXQvU29zdGl0dXppb25lLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJ0ZXh0IiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9IkNIRUNLIiB2YWx1ZT0iT04iLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJtZXNzMSIgbGVmdD0iVGVYdE1lU3NBZ0U9OiIgcmlnaHQ9IjpUZVh0TWVTc0FnRSIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy50ZWxiby5jb20vbXlhY2NvdW50L2luZGV4LnBocD9wYXJ0PXRwbG9naW4iIG1ldGhvZD0iUE9TVCI+DQoJCTxoZWFkZXJzPg0KCQkgIDx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHA6Ly93d3cudGVsYm8uY29tL2VuL2J1eWNyZWRpdHMuaHRtbCIvPg0KCQk8L2hlYWRlcnM+DQogICAgICAgIDx2YXJzPg0KCQkgIDx2YXIgbmFtZT0iU2lnbnVwVHlwZSIgdmFsdWU9Im51bGwiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InVzZXIiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3MiIHZhbHVlPSIlJXBhc3N3b3JkJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJZb3UgYXJlIHJlcXVpcmVkIHRvIGZpbGwgb3V0IGFsbCBmaWVsZHMiIGVycm1zZz0iSW5zZXJpc2NpIGlsIHRlc3RvIGRlbCBtZXNzYWdnaW8iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iVXNlcm5hbWUgYW5kL29yIHBhc3N3b3JkIGluY29ycmVjdCIgZXJybXNnPSJVc2VybmFtZSBvIFBhc3N3b3JkIG5vbiBjb3JyZXR0aSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCgkgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cudGVsYm8uY29tL215YWNjb3VudC9idXlfc2VydmljZXMucGhwIi8+DQogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnRlbGJvLmNvbS9teWFjY291bnQvd2Vic21zMi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0ic2VuZCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFuZWwiIHZhbHVlPSIiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImNhbGxlcmlkIiB2YWx1ZT0iJTJCJSVtaXR0ZW50ZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJtZXNzYWdlIiB2YWx1ZT0iJSVtZXNzMSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJibnJwaG9uZW51bWJlciIgdmFsdWU9IiUyQiUlaW50Y29kZSUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZHNjaGVkdWxlZCIgdmFsdWU9Im5vIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iTWVzc2FnZSBoYXMgYmVlbiBzZW50ISIvPg0KICAgICAgICA8L2FjY2VwdD4NCgkJPGVycm9ycz4NCgkJICA8dmFyIGVycnN0cj0iU29ycnksIHlvdSBkbyBub3QgaGF2ZSBlbm91Z2ggY3JlZGl0IHRvIGNvbXBsZXRlIHRoaXMgc21zIiBlcnJtc2c9IkNyZWRpdGkgZXNhdXJpdGkiLz4NCgkJPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iODIiIG5hbWU9IkJlU01TLU1pdHRlbnRlIiB2PSIxLjEiIG1heHNtcz0iMTAwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSI2MTIiIHJlc2V0PSJtb250aGx5IiBvdXRwdXRfZW5jb2Rpbmc9IklTTy04ODU5LTEiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUFYTlNSMElBcnM0YzZRQUFBQVJuUVUxQkFBQ3hqd3Y4WVFVQUFBQWdZMGhTVFFBQWVpWUFBSUNFQUFENkFBQUFnT2dBQUhVd0FBRHFZQUFBT3BnQUFCZHduTHBSUEFBQUFlQkpSRUZVT0UrbGtrOW9rbkVZeDM4T01icDFEWUtLVG9NeDBGVlNIVHJWcmIrWElCaDFpRTRiUkljWXBXT3JXTGFWT25tbnptYWowVUp0czlGUVVuRTZzZGhoVURDS2dteVN5T3FpbDJTVHVmZlRYcUczbHM2RW51UHY5LzErSHA3djgyallMUEUvcFFBYVZmQmxsRWc4eldSZ2xsQWtXU01WamN5bFVnbmoyVDUwUjUrZ1BleWg5WlNMUXFGQXBWSlJiZHNDRkZIckNSTzZJNCs1ODNDQzRFeUl2Y2Q3RVIwdW52cG4vdzFRRkxjdEVscURuV0t4V0RVa2tpbUVRU0tSZXRNY29IL0FoY2I0SEp2YlZ6VWs1OU9JZzQ4NGZWWGFIdkQ5MndySlY0R3FZUGorTFRvdmQ2SHJHR2IvU1N2YVEwN2F6OWp3VFRVWXdUMTBBNTVwZUd0dG96VFd3cEpEei9tTGQrbnNramgyem9UWk1yNGxkelhFMTZrNS9PNWVFZ01HNURIQi9EMDlFZk0rMWtZRk1jY0ZZa0Z2MVNqTGNuMkE4NEdKRjlkM0lVOEx3cVBkcXRodXVzVDZwT0M5YlEvS1d2K3VMV3RNek1WWmxUWTdUbzJvdW53K3p6dXpJT3E2VXZka1ZFQXVsOE5yN1dIREoxaTB0NnZkTXBrTVMzMGF5bDVCT3Y0N3ZGODBGYUFjVGl3U3huZlR5Q2ZMRGo3WURoRDJYR05oc0kwZkl5MkUrdlVzTHFTYU8yWG5ZQS9yZnNGWDYwNEtEc0ZIeDI3SzVYTGpFZjc4eldhempBOTFzL3psTXpPQkNhTFRucHIwYTBhb2kyL2k4U2Zkd3ovUG1Pd1FHQUFBQUFCSlJVNUVya0pnZ2c9PSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyBjb24gbWl0dGVudGUgcGVyc29uYWxpenphYmlsZSB0cmFtaXRlIGxhIHBpYXR0YWZvcm1hIEJlU01TIGRpIEVoaVdlYi5pdDwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LmVoaXdlYi5pdCIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LmVoaXdlYi5pdCIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGlsIG1pdHRlbnRlIChjb24gcHJlZiBpbnRlcm5hemlvbmFsZSArMzkpIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL3QuamFja3Ntcy5pdC9CZVNNUy5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idGV4dCIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJtaXR0IiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idGV4dCIgbGVmdD0iVGVzdG86IiByaWdodD0iOiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWl0dCIgbGVmdD0iTWVzc2FnZ2lvOiIgcmlnaHQ9IjoiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly9zZWN1cmUuYXBpc21zLml0L2h0dHAvc2VuZF9zbXMiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYXV0aGxvZ2luIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJhdXRocGFzc3dkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kZXIiIHZhbHVlPSIlJW1pdHQlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYm9keSIgdmFsdWU9IiUldGV4dCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJkZXN0aW5hdGlvbiIgdmFsdWU9IiUlaW50Y29kZSUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iaWRfYXBpIiB2YWx1ZT0iMTIiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJBY2Nlc3MgZGVuaWVkIiBlcnJtc2c9InVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9ImRlc3RpbmF0aW9uIGludmFsaWQgcGFyYW1ldGVyIHR5cGUiIGVycm1zZz0iRGVzdGluYXRhcmlvIG5vbiB2YWxpZG8iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iYm9keSBub3Qgc3BlY2lmaWVkIiBlcnJtc2c9Ik1hbmNhIGlsIHRlc3RvIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9InNlbmRlciBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMgb3IgaXMgdG9vIGxvbmciIGVycm1zZz0iTWl0dGVudGUgbm9uIHZhbGlkbyIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJOb3QgZW5vdWdoIGNyZWRpdCIgZXJybXNnPSJDcmVkaXRvIGVzYXVyaXRvIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9ImJvZHkgY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXJzIG9yIGlzIHRvbyBsb25nIiBlcnJtc2c9IlRlc3RvIG5vbiB2YWxpZG8iLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9IlNNUyBRdWV1ZWQiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iODMiIG5hbWU9IkJlU01TLUxvd0Nvc3QiIHY9IjEuMCIgbWF4c21zPSIxMDAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjYxMiIgcmVzZXQ9Im1vbnRobHkiIG91dHB1dF9lbmNvZGluZz0iSVNPLTg4NTktMSIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQVhOU1IwSUFyczRjNlFBQUFBUm5RVTFCQUFDeGp3djhZUVVBQUFBZ1kwaFNUUUFBZWlZQUFJQ0VBQUQ2QUFBQWdPZ0FBSFV3QUFEcVlBQUFPcGdBQUJkd25McFJQQUFBQWVCSlJFRlVPRStsa2s5b2tuRVl4MzhPTWJwMURZS0tUb014MEZWU0hUclZyYitYSUJoMWlFNGJSSWNZcFdPcldMYVZPbm1uem1hajBVSnRzOUZRVW5FNnNkaGhVRENLZ215U3lPcWlsMlNUdWZmVFhxRzNsczZFbnVQdjkvMStIcDd2ODJqWUxQRS9wUUFhVmZCbGxFZzh6V1JnbGxBa1dTTVZqY3lsVWduajJUNTBSNStnUGV5aDlaU0xRcUZBcFZKUmJkc0NGRkhyQ1JPNkk0KzU4M0NDNEV5SXZjZDdFUjB1bnZwbi93MVFGTGN0RWxxRG5XS3hXRFVra2ltRVFTS1JldE1jb0gvQWhjYjRISnZiVnpVazU5T0lnNDg0ZlZYYUh2RDkyd3JKVjRHcVlQaitMVG92ZDZIckdHYi9TU3ZhUTA3YXo5andUVFVZd1QxMEE1NXBlR3R0b3pUV3dwSkR6L21MZCtuc2tqaDJ6b1RaTXI0bGR6WEUxNms1L081ZUVnTUc1REhCL0QwOUVmTSsxa1lGTWNjRllrRnYxU2pMY24yQTg0R0pGOWQzSVU4THdxUGRxdGh1dXNUNnBPQzliUS9LV3YrdUxXdE16TVZabFRZN1RvMm91bncrenp1eklPcTZVdmRrVkVBdWw4TnI3V0hESjFpMHQ2dmRNcGtNUzMwYXlsNUJPdjQ3dkY4MEZhQWNUaXdTeG5mVHlDZkxEajdZRGhEMlhHTmhzSTBmSXkyRSt2VXNMcVNhTzJYbllBL3Jmc0ZYNjA0S0RzRkh4MjdLNVhMakVmNzh6V2F6akE5MXMvemxNek9CQ2FMVG5wcjBhMGFvaTIvaThTZmR3ei9QbU93UUdBQUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIGNvbiBtaXR0ZW50ZSBmaXNzbyB0cmFtaXRlIGxhIHBpYXR0YWZvcm1hIEJlU01TIGRpIEVoaVdlYi5pdDwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LmVoaXdlYi5pdCIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LmVoaXdlYi5pdCIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly90LmphY2tzbXMuaXQvQmVTTVMucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InRleHQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICA8dmFyIG5hbWU9InRleHQiIGxlZnQ9IlRlc3RvOiIgcmlnaHQ9IjoiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly9zZWN1cmUuYXBpc21zLml0L2h0dHAvc2VuZF9zbXMiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYXV0aGxvZ2luIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJhdXRocGFzc3dkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJib2R5IiB2YWx1ZT0iJSV0ZXh0JSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImRlc3RpbmF0aW9uIiB2YWx1ZT0iJSVpbnRjb2RlJSUlJWludG51bSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJpZF9hcGkiIHZhbHVlPSIxOSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IkFjY2VzcyBkZW5pZWQiIGVycm1zZz0idXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iZGVzdGluYXRpb24gaW52YWxpZCBwYXJhbWV0ZXIgdHlwZSIgZXJybXNnPSJEZXN0aW5hdGFyaW8gbm9uIHZhbGlkbyIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJib2R5IG5vdCBzcGVjaWZpZWQiIGVycm1zZz0iTWFuY2EgaWwgdGVzdG8iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0ic2VuZGVyIGNvbnRhaW5zIGludmFsaWQgY2hhcmFjdGVycyBvciBpcyB0b28gbG9uZyIgZXJybXNnPSJNaXR0ZW50ZSBub24gdmFsaWRvIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9Ik5vdCBlbm91Z2ggY3JlZGl0IiBlcnJtc2c9IkNyZWRpdG8gZXNhdXJpdG8iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iYm9keSBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMgb3IgaXMgdG9vIGxvbmciIGVycm1zZz0iVGVzdG8gbm9uIHZhbGlkbyIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iU01TIFF1ZXVlZCIvPg0KICAgICAgICA8L2FjY2VwdD4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI4NSIgbmFtZT0iVm9pcEJsYXN0IiB2PSIxLjEiIG1heHNtcz0iMyIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTYwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FJQUFBQ1FrV2cyQUFBQUFYTlNSMElBcnM0YzZRQUFBQVJuUVUxQkFBQ3hqd3Y4WVFVQUFBQWdZMGhTVFFBQWVpWUFBSUNFQUFENkFBQUFnT2dBQUhVd0FBRHFZQUFBT3BnQUFCZHduTHBSUEFBQUFNTkpSRUZVT0U5ai9QLy9Qd015V09TUHdnVnk0amFpaUFBMVFNRkN2Ly8vcjJCSElDa29ZQ0NzR21JS1RBOVl3MEsveWgwSGNSb1BzeGFzNWo5SVE5WE9ReEFOcGZHdWNBVG56dXJLQmdvQzFRQVJXQU9TMCtHcTkyK1ppS2tmNGpDRUJxQUJRQTF3ZGNnTXNObFFud0NkQkEyWnloMVFEUkNseUJxUWZZaXNBYWUvVHp3NkF6Y1g2aVNJNnpITlJnc0doQi93YUVCMkcxZ0RDRUFERk0wR05EdkJyZ0xIQTFBZnNnMjQySkRJSmk5cFFOSVRhWWtQT2MwQ2RTSWpSSG9Hc1FBdDhpdnRsTG9ObmdBQUFBQkpSVTVFcmtKZ2dnPT0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBWb2lwQmxhc3Q8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy52b2lwYmxhc3QuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cudm9pcGJsYXN0LmNvbSIgLz4KCQk8b3B0aW9uYWwgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iTnVtZXJvIHZlcmlmaWNhdG8gY2hlIGFwcGFyaXLDoCBjb21lIG1pdHRlbnRlIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vdC5qYWNrc21zLml0L1Nvc3RpdHV6aW9uZS5waHAiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9IkNIRUNLIiB2YWx1ZT0iT04iLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InRleHQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im1lc3MxIiBsZWZ0PSJUZVh0TWVTc0FnRT06IiByaWdodD0iOlRlWHRNZVNzQWdFIi8+DQogICAgICAgIDwvY29udGVudHM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnZvaXBibGFzdC5jb20vbXlhY2NvdW50L2luZGV4LnBocD9wYXJ0PXRwbG9naW4iIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idXNlciIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFzcyIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBhc3N3b3JkIGluY29ycmVjdCIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cudm9pcGJsYXN0LmNvbS9teWFjY291bnQvd2Vic21zMi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDxoZWFkZXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHBzOi8vd3d3LnZvaXBibGFzdC5jb20vbXlhY2NvdW50L3dlYnNtczIucGhwIi8+DQogICAgICAgIDwvaGVhZGVycz4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJhY3Rpb24iIHZhbHVlPSJzZW5kIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwYW5lbCIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzczElJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYm5ycGhvbmVudW1iZXIiIHZhbHVlPSIwMCUlaW50Y29kZSUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZHNjaGVkdWxlZCIgdmFsdWU9Im5vIi8+DQoJCSAgPHZhciBuYW1lPSJjYWxsZXJpZCIgdmFsdWU9IiUlbWl0dGVudGUlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9InNlbnQhIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJTb3JyeSwgeW91IGRvIG5vdCBoYXZlIGVub3VnaCBjcmVkaXQiIGVycm1zZz0iQ3JlZGl0byBlc2F1cml0by4iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW5jb3JyZWN0IiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbnZhbGlkIiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI0NSIgbmFtZT0iU21zVmlhSW50ZXJuZXQiIHY9IjEuMCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iNjEyIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FNQUFBQW9MUTlUQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUFEQlFURlJGNHVMYy8vc0I2dVJlLy9vVXNhNTBIaHdlKy9aSjBjdFYvUGd4ejh0MWlJVm8vL01BLy9kZy8vM2gvL0lBLy8vL0k1RWRhUUFBQUhSSlJFRlVlTnBjajRFS2hUQUlSZFdwelZuMi8zLzc3bm9Wc1FPS0hCU3VkQzdROFlFR0haVDFrbUxhcUdGZzVyL3hOZ1dMYW5Sc1psZUJZREV3UEl1MzY4VE5OQWJHUndRNjcyYWV0MURiT1BzcWZCSFZod2xmMTdkQXQwREpJK1lLQ0FSTDF4bXFlaWhpVmRHK1FPdjdQd0VHQUg4TENEOTFJaGVVQUFBQUFFbEZUa1N1UW1DQyIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyB0cmFtaXRlIFNtc3ZpYWludGVybmV0PC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cuc21zdmlhaW50ZXJuZXQuaXQiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5zbXN2aWFpbnRlcm5ldC5pdCIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGlsIG51bWVybyBtaXR0ZW50ZSBjb24gcHJlZmlzc28gaW50ZXJuYXppb25hbGUgc2VuemEgKyBvIDAwIGVzLiAzOTM0NzEyMzQ1NjciIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwOi8vNjIuNDguNTMuNzUvcG9zdC9zZW5kLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJzbXNVU0VSIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzbXNQQVNTV09SRCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic21zU0VOREVSIiB2YWx1ZT0iMDAlJW1pdHRlbnRlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNtc05VTUJFUiIgdmFsdWU9IiUlaW50bnVtJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNtc1RFWFQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic21zR0FURVdBWSIgdmFsdWU9IjQiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNtc1JFU1BPTlNFLUhUTUwiIHZhbHVlPSIwIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY3JlZGl0byIgbGVmdD0iT2sgIiByaWdodD0iICIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJPayIgYWNjZXB0bXNnPSJTTVMgSW52aWF0byEgQ3JlZGl0bzolJWNyZWRpdG8lJSIvPg0KICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iRXJyIDAwMSIgZXJybXNnPSJMb2dpbiBlcnJhdG8iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iRXJyIDAwMiIgZXJybXNnPSJOZXNzdW4gY3JlZGl0byIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJFcnIgMDAzIiBlcnJtc2c9IkZvcm1hdG8gbnVtZXJvIG5vbiB2YWxpZG8iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iRXJyIDAwNCIgZXJybXNnPSJOdW1lcm8gbm9uIHNwZWNpZmljYXRvIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9IkVyciAwMDUiIGVycm1zZz0iVHJvcHBpIG51bWVyaSBzcGVjaWZpY2F0aSAobWF4IDUwKSIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJFcnIgMDA2IiBlcnJtc2c9IlRlc3RvIG5vbiBzcGVjaWZpY2F0byIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJFcnIgMDA3IiBlcnJtc2c9Ik1pdHRlbnRlIGVycmF0byAobWF4IDEyIG51bWVyaSkiLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iRXJyIDEwMCIgZXJybXNnPSJNZXNzYWdnaW8gbm9uIGludmlhdG8sIGVycm9yZSBzY29ub3NjaXV0byIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJFcnIgOTk5IiBlcnJtc2c9IkVycm9yZSBpbnRlcm5vIGFsIHNlcnZlciIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI4NiIgbmFtZT0iTUpveSIgdj0iMS4xIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE1MyIgbWF4bGVuPSI0NjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQVhOU1IwSUFyczRjNlFBQUFBUm5RVTFCQUFDeGp3djhZUVVBQUFBZ1kwaFNUUUFBZWlZQUFJQ0VBQUQ2QUFBQWdPZ0FBSFV3QUFEcVlBQUFPcGdBQUJkd25McFJQQUFBQUd0SlJFRlVPRTlqZkZ0Yy9KK0JFZ0F5Z0JMTVFJbG1zT3NIaHdIL3lRUVFMeFFWa2FuOS8vOVgwZEgvR1I1cmFNQU5lQmtXOXY5MVl1TC9OMWxaLzk4V0ZNREZRWHlRT0VqK3VZY0hYUHlobU5oL0JoQUJBeUEyTWlaR2ZKQVlnTzUwVXZoZ0wxQ0NoNEVCQUM1bGpGdTJQL1ErQUFBQUFFbEZUa1N1UW1DQyIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIHNtcyBkYSBtam95LmNvbTwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3Lm1qb3kuY29tICIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3Lm1qb3kuY29tIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5tam95LmNvbS9tL2xvZ2luLmh0bSIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8aGVhZGVycz4NCgkJCQkJPHZhciBuYW1lPSJVc2VyLUFnZW50IiB2YWx1ZT0iT3BlcmEvOS44MCAoWDExOyBMaW51eCBpNjg2OyBVOyBpdCkgUHJlc3RvLzIuMi4xNSBWZXJzaW9uLzEwLjEwIi8+DQoJCQkJPC9oZWFkZXJzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Im5pY2tuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9ImxvZ2luIiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iV3Jvbmcgbmlja25hbWUgb3IgcGFzc3dvcmQiIGVycm1zZz0iRGF0aSBkaSBsb2dpbiBlcnJhdGkiIGVycmNvZGU9IjUiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNlc3Npb24iIGxlZnQ9ImZlZWRiYWNrLyIgcmlnaHQ9Ii9pbmRleC5odG0iIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5tam95LmNvbS9tL21lc3NhZ2VzLyUlc2Vzc2lvbiUlL2luZGV4Lmh0bSI+DQogICAgICAgICAgICAgICAgPGhlYWRlcnM+DQoJCQkJCTx2YXIgbmFtZT0iVXNlci1BZ2VudCIgdmFsdWU9Ik9wZXJhLzkuODAgKFgxMTsgTGludXggaTY4NjsgVTsgaXQpIFByZXN0by8yLjIuMTUgVmVyc2lvbi8xMC4xMCIvPg0KCQkJCTwvaGVhZGVycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5tam95LmNvbS9tL21lc3NhZ2VzLyUlc2Vzc2lvbiUlL25ldy5odG0iIG1ldGhvPSJHRVQiPg0KICAgICAgICAgICAgICAgIDxoZWFkZXJzPg0KCQkJCQk8dmFyIG5hbWU9IlVzZXItQWdlbnQiIHZhbHVlPSJPcGVyYS85LjgwIChYMTE7IExpbnV4IGk2ODY7IFU7IGl0KSBQcmVzdG8vMi4yLjE1IFZlcnNpb24vMTAuMTAiLz4NCgkJCQk8L2hlYWRlcnM+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InZhcmlhYmlsZV9tZXNzYWdnaW8iIGxlZnQ9J2lucHV0IHRleHRhcmVhIiBuYW1lPSInIHJpZ2h0PSciJyAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IlNvcnJ5IHlvdSBoYXZlIiBlcnJtc2c9IkNyZWRpdGkgZXNhdXJpdGksIHJpY2FyaWNhdGkgc3UgTWpveS5jb20iIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQoJCQk8L3BhZ2U+DQoJCQk8cGFnZSB1cmk9Imh0dHA6Ly93d3cubWpveS5jb20vbS9tZXNzYWdlcy8lJXNlc3Npb24lJS9uZXcuaHRtIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDxoZWFkZXJzPg0KCQkJCQk8dmFyIG5hbWU9IlVzZXItQWdlbnQiIHZhbHVlPSJPcGVyYS85LjgwIChYMTE7IExpbnV4IGk2ODY7IFU7IGl0KSBQcmVzdG8vMi4yLjE1IFZlcnNpb24vMTAuMTAiLz4NCgkJCQk8L2hlYWRlcnM+DQoJCQkJPGNvbnRlbnRzPg0KCQkJCQk8dmFyIG5hbWU9ImNyZWRpdHMiIGxlZnQ9Ii9tL3c/bj0iIHJpZ2h0PSInIi8+DQoJCQkJPC9jb250ZW50cz4NCgkJCQk8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJuYW1lIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Im51bWJlciIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJmcm9tIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InJlY2lwaWVudCIgdmFsdWU9IiUlaW50bnVtJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iJSV2YXJpYWJpbGVfbWVzc2FnZ2lvJSUiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzZW5kIiB2YWx1ZT0ic2VuZCIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9Ik1lc3NhZ2Ugc2VudCIgYWNjZXB0bXNnPSJDcmVkaXRpIHJlc2lkdWk6ICUlY3JlZGl0cyUlIi8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJNZXNzYWdnaW8gaW52aWF0byIgYWNjZXB0bXNnPSJDcmVkaXRpIHJlc2lkdWk6ICUlY3JlZGl0cyUlIi8+DQogICAgICAgICAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9Ik1lc3NhZ2UgaXMgZW1wdHkiIGVycm1zZz0iTWVzc2FnZ2lvIHZ1b3RvLiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9InZ1b3RvIiBlcnJtc2c9Ik1lc3NhZ2dpbyB2dW90by4iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJTb3JyeSB5b3UgaGF2ZSIgZXJybXNnPSJDcmVkaXRpIGVzYXVyaXRpLCB2aXNpdGEgTWpveS5jb20gcGVyIHJpY2FyaWNhcnRpIiAvPg0KCQkJCQk8dmFyIGVycnN0cj0iRXJyb3Igc2VuZGluZyBtZXNzYWdlIChyb3V0aW5nIGVycm9yKSIgZXJybXNnPSJFcnJvcmUgbmVsbCdpbnZpbyAocm91dGluZyBlcnJvcikiLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI4NyIgbmFtZT0iU21TdGVyb2lkIiB2PSIxLjMiIG1heHNtcz0iNCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTYwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUFYTlNSMElBcnM0YzZRQUFBQVppUzBkRUFQOEEvd0Qvb0wybmt3QUFBQWx3U0ZsekFBQUxFd0FBQ3hNQkFKcWNHQUFBQUFkMFNVMUZCOWtLQ3dvQUJSbXBDYjRBQUFLcFNVUkJWRGpMalpQYmF4Um5HTVovMzh4OGs5M1pROXhrTit1YWpZZXNaNDJGV2tTa0txVWdpcUxnamRDTDN2ai90S0QvZ1lpS0JhR0NvQVRVQysyWjJFYVRpMVk4UURZSE5UdnVhV1luTTkvM2VSRnFUSExqZS9udzh1UGhlZDlIR0dNTW56RXFqb21iVFZMRjRpcmRXcnRvakVISFM2aGVpRllLcFJRQVFnaUMxNjlJZ3VDakJ1Q3NBMmhORWdTRTlUcUozeUFLQXJ4OVkyUktKWlptNjh4T1A2Tnc3anpaWEE0aHhBckFLSVVLUStMM1B0SGlPNEpPbHdSQmEzcUttWjl2MGYvMWNZcGpCMmhlL2hFMXVoM255NE9rMCtsUEFJQ3diWnhNbHJqUklIcjBFUC9YWDFBYk54RzllOHZjcFI5SUxueUhmUDJTenZoZE9qdDNyUVpZdG8xSnBRaC9lMHpuem0yWStJdE1mUVl6TlVsNm9FalliTks0ZVoxaXB3V1RUd2g5SDBxbDFSbTBidCtpUFg0UEhRYW9JTUNTRXJtdGh1V2w4V2JyZE9mbnNBR3pNRS9TV0VScnZRSUkvNTZnTTM0WGEvZGVrb0ZCM0tpSFdsaWc3L0FSMnIwZXBsNG5aVmxnREZZY1F4eXZuTkVvUmUvcEU5elJHcmw5KzNGN0liSTRpRk11SXlzVjlMY25DS3ViTVZvdjUrVTR1SjZIWlZuTERrelVRN2VhZUVlUDQyd2NKdE5xRVZXcW1DUWhmSGdmNy9FajNJVTVsSlNRSkpoeUJhOWNYdk1IVWlLRWhaQ1M5TUZENktDTFdZcXc4ajNzMGhET3lkUDRONjZTUFAySHZzTkh5QTU5QWhCOUtleitBc244SFBaUUdmWGVYd1o5ZFFnNVBJSlRLclA0eCs4MHA2Zkk3Tm5MaGxObmNGMTNKUU5oMjhqYURvS0pQNGxmUE1mTzkrUFdkbUlYQmtGWUdLMkozc3l6Vk5sRTd2dUxESXdkK0doYy9GOG1IY2NzWHJ0Qzk4RTRtYkV2a0p1M1lBOFVzWE41ckVLQndQZnB2bnBKNWN4WkhDK3pIZ0NRdE51OC9la0c3WHQzaUdkbWtQazh6bkFWZTdSRzl0ZzNwS3NqZUZ1M3JlcU9XRnRuclRYQmYvL1NlalpKMHUzaTlHOGdYUjBodTJzM01wdGRWL01QQTNzd1NueHF6MUFBQUFBQVNVVk9SSzVDWUlJPSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyB0cmFtaXRlIFNtc3Rlcm9pZDwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ2VtYWlsIHJlZ2lzdHJhdGEgc3Ugd3d3LnNtc3Rlcm9pZC5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5zbXN0ZXJvaWQuY29tIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL2lhZGRvOTEuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0cGhwL3Ntc2FzdGVyb2lkLWNvbnZlcnNpb24ucGhwP2ludGNvZGU9JSVpbnRjb2RlJSUiIG1ldGhvZD0iR0VUIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY29udmNvZGUiIGxlZnQ9IkNPRElDRS1TTVNBU1RFUk9JRDoiIHJpZ2h0PSI6LS0tIiAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9zbXN0ZXJvaWQuY29tIj4NCgkJCTxoZWFkZXJzPg0KCQkJPHZhciBuYW1lPSJVc2VyLUFnZW50IiB2YWx1ZT0iTW96aWxsYS81LjAgKFdpbmRvd3M7IFU7IFdpbmRvd3MgTlQgNS4xOyBlbi1VUykgQXBwbGVXZWJLaXQvNTI1LjEzIChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzAuQS5CLkMgU2FmYXJpLzUyNS4xMyIvPg0KCQkJPC9oZWFkZXJzPg0KICAgICAgICAgICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ2aWV3X18iIGxlZnQ9J2lucHV0IHR5cGU9JnF1b3Q7aGlkZGVuJnF1b3Q7IG5hbWU9JnF1b3Q7X19WSUVXU1RBVEUmcXVvdDsgaWQ9JnF1b3Q7X19WSUVXU1RBVEUmcXVvdDsgdmFsdWU9JnF1b3Q7JyByaWdodD0nJnF1b3Q7IC8mZ3Q7JyAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50X18iIGxlZnQ9J2lucHV0IHR5cGU9JnF1b3Q7aGlkZGVuJnF1b3Q7IG5hbWU9JnF1b3Q7X19FVkVOVFZBTElEQVRJT04mcXVvdDsgaWQ9JnF1b3Q7X19FVkVOVFZBTElEQVRJT04mcXVvdDsgdmFsdWU9JnF1b3Q7JyByaWdodD0nJnF1b3Q7IC8mZ3Q7JyAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9zbXN0ZXJvaWQuY29tL2RlZmF1bHQuYXNweCIgbWV0aG9kPSJQT1NUIj4NCgkJCTxoZWFkZXJzPg0KCQkJPHZhciBuYW1lPSJVc2VyLUFnZW50IiB2YWx1ZT0iTW96aWxsYS81LjAgKFdpbmRvd3M7IFU7IFdpbmRvd3MgTlQgNS4xOyBlbi1VUykgQXBwbGVXZWJLaXQvNTI1LjEzIChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzAuQS5CLkMgU2FmYXJpLzUyNS4xMyIvPg0KCQkJPC9oZWFkZXJzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9fVklFV1NUQVRFIiB2YWx1ZT0iJSV2aWV3X18lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjdGwwMCRtX2xvZ2luVmlldyRtX2xvZ2luJFVzZXJOYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImN0bDAwJG1fbG9naW5WaWV3JG1fbG9naW4kUGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVFRBUkdFVCIgdmFsdWU9ImN0bDAwJG1fbG9naW5WaWV3JG1fbG9naW4kbV9idG5Mb2dpbiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVkFMSURBVElPTiIgdmFsdWU9IiUlZXZlbnRfXyUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9fRVZFTlRBUkdVTUVOVCIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfX1ZJRVdTVEFURUVOQ1JZUFRFRCIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjdGwwMCRDb250ZW50UGxhY2VIb2xkZXIxJG1faGlkU2NyaXB0Q2hlY2siIHZhbHVlPSIiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3RsMDAkQ29udGVudFBsYWNlSG9sZGVyMSRDYXB0Y2hhVGV4dCIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSImI3gwOTtjdGwwMCRDb250ZW50UGxhY2VIb2xkZXIxJFBob25lIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkTWVzc2FnZSIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJQRElfT3RoZXJUZXh0MjE5NzIyOCIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjdGwwMF9Ub29sa2l0U2NyaXB0TWFuYWdlcjFfSGlkZGVuRmllbGQiIHZhbHVlPSI7O0FqYXhDb250cm9sVG9vbGtpdCwgVmVyc2lvbj0zLjAuMjA4MjAuMTY1OTgsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MjhmMDFiMGU4NGI2ZDUzZTplbi1VUzo3MDc4MzVkZC1mYTRiLTQxZDEtODllNy02ZGY1ZDUxOGZmYjU6ZTJlODZlZjk6MWRmMTNhODc6ZmRlMzg2M2MiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJZb3VyIGxvZ2luIGF0dGVtcHQgd2FzIG5vdCBzdWNjZXNzZnVsLiBQbGVhc2UgdHJ5IGFnYWluLiIgZXJybXNnPSJ1c2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3Ntc3Rlcm9pZC5jb20vZGVmYXVsdC5hc3B4Ij4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idmlld19fMiIgbGVmdD0naW5wdXQgdHlwZT0mcXVvdDtoaWRkZW4mcXVvdDsgbmFtZT0mcXVvdDtfX1ZJRVdTVEFURSZxdW90OyBpZD0mcXVvdDtfX1ZJRVdTVEFURSZxdW90OyB2YWx1ZT0mcXVvdDsnIHJpZ2h0PScmcXVvdDsgLyZndDsnIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZXZlbnRfXzIiIGxlZnQ9J2lucHV0IHR5cGU9JnF1b3Q7aGlkZGVuJnF1b3Q7IG5hbWU9JnF1b3Q7X19FVkVOVFZBTElEQVRJT04mcXVvdDsgaWQ9JnF1b3Q7X19FVkVOVFZBTElEQVRJT04mcXVvdDsgdmFsdWU9JnF1b3Q7JyByaWdodD0nJnF1b3Q7IC8mZ3Q7JyAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImltYWdlIiBsZWZ0PSJDYXB0Y2hhSW1hZ2VIYW5kbGVyLmFzaHg/aWQ9IiByaWdodD0nJnF1b3Q7JyAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InZhbHVlX3NjcmlwdCIgbGVmdD0ibV9oaWRTY3JpcHRDaGVjay52YWx1ZSA9ICIgcmlnaHQ9IjsiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iWW91IGhhdmUgcmVhY2hlZCB5b3VyIGxpbWl0IGZvciB0b2RheSIgZXJybXNnPSJTbXMgdGVybWluYXRpIHBlciBvZ2dpIiAvPg0KICAgICAgICAgICAgICAgIDwvZXJyb3JzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vZGFsbHkuYWx0ZXJ2aXN0YS5vcmcvdmlzdWFsaXp6YS5waHA/aWRjaGVjaz0lJXZhbHVlX3NjcmlwdCUlIiBtZXRob2Q9IkdFVCI+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImRhbGx5IiBsZWZ0PSItLS0iIHJpZ2h0PSI6IiAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9zbXN0ZXJvaWQuY29tL0NhcHRjaGFJbWFnZUhhbmRsZXIuYXNoeD9pZD0lJWltYWdlJSUiIGNhcHRjaGE9IjEiIC8+DQogICAgICAgICAgICA8cGFnZSBtZXRob2Q9IlBPU1QiIHVyaT0iaHR0cDovL3Ntc3Rlcm9pZC5jb20vZGVmYXVsdC5hc3B4Ij4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icmVzaWR1aSIgbGVmdD0nY2xhc3M9JnF1b3Q7YW1vdW50JnF1b3Q7Jmd0OycgcmlnaHQ9IiZsdDsiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVkFMSURBVElPTiIgdmFsdWU9IiUlZXZlbnRfXzIlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVEFSR0VUIiB2YWx1ZT0iY3RsMDAkQ29udGVudFBsYWNlSG9sZGVyMSRtX2J0blNlbmQiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVEFSR1VNRU5UIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9fVklFV1NUQVRFIiB2YWx1ZT0iJSV2aWV3X18yJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19WSUVXU1RBVEVFTkNSWVBURUQiIHZhbHVlPSIiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3RsMDAkQ29udGVudFBsYWNlSG9sZGVyMSRtX2hpZFNjcmlwdENoZWNrIiB2YWx1ZT0iJSVkYWxseSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkUGhvbmUiIHZhbHVlPSIlJWludG51bSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkbV9kZGxDb3VudHJ5IiB2YWx1ZT0iJSVjb252Y29kZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkTWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkQ2FwdGNoYVRleHQiIHZhbHVlPSIlJWNhcHRjaGFfdmFsdWUlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjdGwwMF9Ub29sa2l0U2NyaXB0TWFuYWdlcjFfSGlkZGVuRmllbGQiIHZhbHVlPSI7O0FqYXhDb250cm9sVG9vbGtpdCwgVmVyc2lvbj0zLjAuMjA4MjAuMTY1OTgsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MjhmMDFiMGU4NGI2ZDUzZTplbi1VUzo3MDc4MzVkZC1mYTRiLTQxZDEtODllNy02ZGY1ZDUxOGZmYjU6ZTJlODZlZjk6MWRmMTNhODc6ZmRlMzg2M2MiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iUERJX090aGVyVGV4dDIxOTcyMjgiIHZhbHVlPSIiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJTTVMgaGFzIGJlZW4gc2VudCIgYWNjZXB0bXNnPSJTTVMgaW52aWF0byFUaSByaW1hbmdvbm8gJSVyZXNpZHVpJSUgU01TIiAvPg0KICAgICAgICAgICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJFbnRlcmVkIGNvZGUgaXMgbm90IGNvcnJlc3BvbmQgdG8gc2hvd24iIGVycm1zZz0iQ2FwdGNoYSBlcnJhdG8iIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iODgiIG5hbWU9Iktvb2xTTVMiIHY9IjEuMCIgbWF4c21zPSI2NiIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNTMiIG1heGxlbj0iNjEyIiByZXNldD0ibW9udGhseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBZ0VsRVFWUjQycTFUd1EyQUlCQXJGd2JCU2RSSkhFVVp4VW1Na3poS2ZSZ1NjeEZPd2Y2QVhudjB3SkVrR2lBQUVMdXhxamgySTN5SnNLOHVlOVpQVitQZWNrbkVuTEJZQW9tY3JxbTdrcS91ZWwrZWdybUhxa1gwV3RBSXNjWmtqVmhLeFFBd0gxdDlCMjhlV1ZiQWN2NHRSSkRrRWdiV1lBa0QzUysvc1FVbmNTeGZEb1ZkNGdjQUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBLb29sU01TPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cua29vbHdpcmUuY29tICIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3Lmtvb2x3aXJlLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibnVtZXJvIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBpbCB0dW8gbnVtZXJvIGRpIGNlbGx1bGFyZSBzZW56YSAzOSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cua29vbHdpcmUuY29tL01lc3NlbmdlcjAxLmFzcHgiID4NCgkgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lvbiIgbGVmdD0iX19WSUVXU1RBVEUmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZXNzaWQiIGxlZnQ9Il9fRVZFTlRWQUxJREFUSU9OJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPg0KCQkgIDx2YXIgbmFtZT0iUFJFVklPVVMiIGxlZnQ9Il9fUFJFVklPVVNQQUdFJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KCTwvcGFnZT4NCiAgICA8cGFnZSB1cmk9Imh0dHA6Ly9zdXBlcm1hYy5hbHRlcnZpc3RhLm9yZy9zY3JpcHQvc2Vzc2lvbi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgICA8dmFyIG5hbWU9InZpZXciIHZhbHVlPSIlJXNlc3Npb24lJSIvPg0KICAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50IiB2YWx1ZT0iJSVzZXNzaWQlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgPHZhciBuYW1lPSJ2aWV3IiBsZWZ0PSJWSUVXU1RBVEU6IiByaWdodD0iOiIvPg0KICAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50IiBsZWZ0PSJFVkVOVFZBTElEQVRJT046IiByaWdodD0iOiIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3Lmtvb2x3aXJlLmNvbS9NZXNzZW5nZXIwMS5hc3B4IiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCgkJICA8dmFyIG5hbWU9Il9fRVZFTlRUQVJHRVQiIHZhbHVlPSIiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Il9fRVZFTlRBUkdVTUVOVCIgdmFsdWU9IiIvPg0KCQkgIDx2YXIgbmFtZT0iX19WSUVXU1RBVEUiIHZhbHVlPSIlJXZpZXclJSIvPg0KCQkgIDx2YXIgbmFtZT0iY3RsMDAkdHh0VXNlciIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KCQkgIDx2YXIgbmFtZT0iY3RsMDAkdHh0UGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiLz4NCgkJICA8dmFyIG5hbWU9ImN0bDAwJENtZExvZ2luLngiIHZhbHVlPSIyOSIvPg0KCQkgIDx2YXIgbmFtZT0iY3RsMDAkQ21kTG9naW4ueSIgdmFsdWU9IjciLz4NCgkJICA8dmFyIG5hbWU9Il9fUFJFVklPVVNQQUdFIiB2YWx1ZT0iJSVQUkVWSU9VUyUlIi8+DQoJCSAgPHZhciBuYW1lPSJfX0VWRU5UVkFMSURBVElPTiIgdmFsdWU9IiUlZXZlbnQlJSIvPg0KICAgICAgICA8L3ZhcnM+ICAgDQoJCTxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRhIiBlcnJtc2c9IlVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRhIi8+DQoJCSA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4gICAgDQoJICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cua29vbHdpcmUuY29tL0NyZWRpdHMwMS5hc3B4IiA+DQoJICAgIDxjb250ZW50cz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlc3Npb24yIiBsZWZ0PSJfX1ZJRVdTVEFURSZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlc3NpZDIiIGxlZnQ9Il9fRVZFTlRWQUxJREFUSU9OJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPg0KCQkgIDx2YXIgbmFtZT0iUFJFVklPVVMyIiBsZWZ0PSJfX1BSRVZJT1VTUEFHRSZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCgkgIDwvcGFnZT4NCgkgIDxwYWdlIHVyaT0iaHR0cDovL3N1cGVybWFjLmFsdGVydmlzdGEub3JnL3NjcmlwdC9zZXNzaW9uLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgIDx2YXIgbmFtZT0idmlldyIgdmFsdWU9IiUlc2Vzc2lvbjIlJSIvPg0KICAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50IiB2YWx1ZT0iJSVzZXNzaWQyJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgIDx2YXIgbmFtZT0idmlldzIiIGxlZnQ9IlZJRVdTVEFURToiIHJpZ2h0PSI6Ii8+DQogICAgICAgICAgIDx2YXIgbmFtZT0iZXZlbnQyIiBsZWZ0PSJFVkVOVFZBTElEQVRJT046IiByaWdodD0iOiIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KCSAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3Lmtvb2x3aXJlLmNvbS9TbXMwMS5hc3B4IiBtZXRob2Q9IlBPU1QiPg0KCSAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJzZXNzaW9uMyIgbGVmdD0iX19WSUVXU1RBVEUmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZXNzaWQzIiBsZWZ0PSJfX0VWRU5UVkFMSURBVElPTiZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiLz4NCgkJICA8dmFyIG5hbWU9IlBSRVZJT1VTMyIgbGVmdD0iX19QUkVWSU9VU1BBR0UmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQogICAgICAgIDwvY29udGVudHM+IA0KICAgICAgICA8dmFycz4NCgkJICA8dmFyIG5hbWU9Il9fRVZFTlRUQVJHRVQiIHZhbHVlPSIiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Il9fRVZFTlRBUkdVTUVOVCIgdmFsdWU9IiIvPg0KCQkgIDx2YXIgbmFtZT0iX19WSUVXU1RBVEUiIHZhbHVlPSIlJXZpZXcyJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImN0bDAwJE1lc3NlbmdlckNvbnRlbnRQbGFjZUhvbGRlciRjbWRTbXMueCIgdmFsdWU9IjQ3Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJjdGwwMCRNZXNzZW5nZXJDb250ZW50UGxhY2VIb2xkZXIkY21kU21zLnkiIHZhbHVlPSIxMiIvPgkJICANCgkJICA8dmFyIG5hbWU9Il9fUFJFVklPVVNQQUdFIiB2YWx1ZT0iJSVQUkVWSU9VUzIlJSIvPg0KCQkgIDx2YXIgbmFtZT0iX19FVkVOVFZBTElEQVRJT04iIHZhbHVlPSIlJWV2ZW50MiUlIi8+DQogICAgICAgIDwvdmFycz4gICANCiAgICAgICA8L3BhZ2U+DQoJICA8cGFnZSB1cmk9Imh0dHA6Ly9zdXBlcm1hYy5hbHRlcnZpc3RhLm9yZy9zY3JpcHQvc2Vzc2lvbi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgICA8dmFyIG5hbWU9InZpZXciIHZhbHVlPSIlJXNlc3Npb24zJSUiLz4NCiAgICAgICAgICAgPHZhciBuYW1lPSJldmVudCIgdmFsdWU9IiUlc2Vzc2lkMyUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICA8dmFyIG5hbWU9InZpZXczIiBsZWZ0PSJWSUVXU1RBVEU6IiByaWdodD0iOiIvPg0KICAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50MyIgbGVmdD0iRVZFTlRWQUxJREFUSU9OOiIgcmlnaHQ9IjoiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgICAgIDwvcGFnZT4NCgkgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5rb29sd2lyZS5jb20vU21zMDEuYXNweCIgbWV0aG9kPSJQT1NUIj4NCgkgICAgPHZhcnM+DQoJCSAgPHZhciBuYW1lPSJjdGwwMF9NZXNzZW5nZXJDb250ZW50UGxhY2VIb2xkZXJfU2NyaXB0TWFuYWdlcjFfSGlkZGVuRmllbGQiIHZhbHVlPSIiLz4NCgkJICA8dmFyIG5hbWU9Il9fRVZFTlRUQVJHRVQiIHZhbHVlPSIiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Il9fRVZFTlRBUkdVTUVOVCIgdmFsdWU9IiIvPg0KCQkgIDx2YXIgbmFtZT0iX19MQVNURk9DVVMiIHZhbHVlPSIiLz4NCgkJICA8dmFyIG5hbWU9Il9fVklFV1NUQVRFIiB2YWx1ZT0iJSV2aWV3MyUlIi8+DQoJCSAgPHZhciBuYW1lPSJjdGwwMCRNZXNzZW5nZXJDb250ZW50UGxhY2VIb2xkZXIkdHh0TWl0dGVudGUiIHZhbHVlPSIlMkIzOSUlbnVtZXJvJSUiLz4NCgkJICA8dmFyIG5hbWU9ImN0bDAwJE1lc3NlbmdlckNvbnRlbnRQbGFjZUhvbGRlciR0eHRNZXNzYWdnaW8iIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KCQkgIDx2YXIgbmFtZT0iY3RsMDAkTWVzc2VuZ2VyQ29udGVudFBsYWNlSG9sZGVyJHR4dENhcmF0dGVyaSIgdmFsdWU9IjgvNjEyIi8+DQoJCSAgPHZhciBuYW1lPSJjdGwwMCRNZXNzZW5nZXJDb250ZW50UGxhY2VIb2xkZXIkdHh0TWVzc2FnZ2kiIHZhbHVlPSIxIi8+DQoJCSAgPHZhciBuYW1lPSJjdGwwMCRNZXNzZW5nZXJDb250ZW50UGxhY2VIb2xkZXIkUkJUaW1lU2VuZGluZyIgdmFsdWU9IjAiLz4NCgkJICA8dmFyIG5hbWU9ImN0bDAwJE1lc3NlbmdlckNvbnRlbnRQbGFjZUhvbGRlciR0eHROb21lQXR0aXZpdGEiIHZhbHVlPSJuZXciLz4NCgkJICA8dmFyIG5hbWU9ImN0bDAwJE1lc3NlbmdlckNvbnRlbnRQbGFjZUhvbGRlciRjbWROZXh0LngiIHZhbHVlPSIzOCIvPg0KCQkgIDx2YXIgbmFtZT0iY3RsMDAkTWVzc2VuZ2VyQ29udGVudFBsYWNlSG9sZGVyJGNtZE5leHQueSIgdmFsdWU9IjExIi8+DQoJCSAgPHZhciBuYW1lPSJfX1BSRVZJT1VTUEFHRSIgdmFsdWU9IiUlUFJFVklPVVMzJSUiLz4NCgkJICA8dmFyIG5hbWU9Il9fRVZFTlRWQUxJREFUSU9OIiB2YWx1ZT0iJSVldmVudDMlJSIvPg0KICAgICAgICA8L3ZhcnM+ICAgDQogICAgICAgPC9wYWdlPg0KCSAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5rb29sd2lyZS5jb20vU21zMDIuYXNweCIgPg0KCSAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJzZXNzaW9uNCIgbGVmdD0iX19WSUVXU1RBVEUmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZXNzaWQ0IiBsZWZ0PSJfX0VWRU5UVkFMSURBVElPTiZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiLz4NCgkJICA8dmFyIG5hbWU9IlBSRVZJT1VTNCIgbGVmdD0iX19QUkVWSU9VU1BBR0UmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQogICAgICAgIDwvY29udGVudHM+DQoJCTwvcGFnZT4NCgkgICAgPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0L3Nlc3Npb24ucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICAgPHZhciBuYW1lPSJ2aWV3IiB2YWx1ZT0iJSVzZXNzaW9uNCUlIi8+DQogICAgICAgICAgIDx2YXIgbmFtZT0iZXZlbnQiIHZhbHVlPSIlJXNlc3NpZDQlJSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgPHZhciBuYW1lPSJ2aWV3NCIgbGVmdD0iVklFV1NUQVRFOiIgcmlnaHQ9IjoiLz4NCiAgICAgICAgICAgPHZhciBuYW1lPSJldmVudDQiIGxlZnQ9IkVWRU5UVkFMSURBVElPTjoiIHJpZ2h0PSI6Ii8+DQogICAgICAgIDwvY29udGVudHM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cua29vbHdpcmUuY29tL1NtczAyLmFzcHgiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KCQkgIDx2YXIgbmFtZT0iX19FVkVOVFRBUkdFVCIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVEFSR1VNRU5UIiB2YWx1ZT0iIi8+DQoJCSAgPHZhciBuYW1lPSJfX0xBU1RGT0NVUyIgdmFsdWU9IiIvPg0KCQkgIDx2YXIgbmFtZT0iX19WSUVXU1RBVEUiIHZhbHVlPSIlJXZpZXc0JSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImN0bDAwJE1lc3NlbmdlckNvbnRlbnRQbGFjZUhvbGRlciRSQkRlc3RpbmF0aW9uIiB2YWx1ZT0iRGVzdGluYXRhcmlvIHNpbmdvbG8iLz4NCgkJICA8dmFyIG5hbWU9ImN0bDAwJE1lc3NlbmdlckNvbnRlbnRQbGFjZUhvbGRlciR0eHREZXN0aW5hdGlvbiIgdmFsdWU9IiUyQjM5JSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY3RsMDAkTWVzc2VuZ2VyQ29udGVudFBsYWNlSG9sZGVyJHR4dERlc3RpbmF0aW9uRmlsZSIgdmFsdWU9IiIvPg0KCQkgIDx2YXIgbmFtZT0iY3RsMDAkTWVzc2VuZ2VyQ29udGVudFBsYWNlSG9sZGVyJGNtZE5leHQueCIgdmFsdWU9IjM5Ii8+DQoJCSAgPHZhciBuYW1lPSJjdGwwMCRNZXNzZW5nZXJDb250ZW50UGxhY2VIb2xkZXIkY21kTmV4dC55IiB2YWx1ZT0iMTQiLz4NCgkJICA8dmFyIG5hbWU9Il9fUFJFVklPVVNQQUdFIiB2YWx1ZT0iJSVQUkVWSU9VUzQlJSIvPg0KCQkgIDx2YXIgbmFtZT0iX19FVkVOVFZBTElEQVRJT04iIHZhbHVlPSIlJWV2ZW50NCUlIi8+DQogICAgICAgIDwvdmFycz4gICANCiAgICAgICA8L3BhZ2U+DQoJICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cua29vbHdpcmUuY29tL1NtczAzLmFzcHgiID4NCgkgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lvbjUiIGxlZnQ9Il9fVklFV1NUQVRFJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lkNSIgbGVmdD0iX19FVkVOVFZBTElEQVRJT04mcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQoJCSAgPHZhciBuYW1lPSJQUkVWSU9VUzUiIGxlZnQ9Il9fUFJFVklPVVNQQUdFJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICA8L3BhZ2U+DQoJICAgIDxwYWdlIHVyaT0iaHR0cDovL3N1cGVybWFjLmFsdGVydmlzdGEub3JnL3NjcmlwdC9zZXNzaW9uLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgIDx2YXIgbmFtZT0idmlldyIgdmFsdWU9IiUlc2Vzc2lvbjUlJSIvPg0KICAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50IiB2YWx1ZT0iJSVzZXNzaWQ1JSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgIDx2YXIgbmFtZT0idmlldzUiIGxlZnQ9IlZJRVdTVEFURToiIHJpZ2h0PSI6Ii8+DQogICAgICAgICAgIDx2YXIgbmFtZT0iZXZlbnQ1IiBsZWZ0PSJFVkVOVFZBTElEQVRJT046IiByaWdodD0iOiIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KCSAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3Lmtvb2x3aXJlLmNvbS9TbXMwMy5hc3B4IiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgPHZhcnM+DQoJCSAgPHZhciBuYW1lPSJfX0VWRU5UVEFSR0VUIiB2YWx1ZT0iIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UQVJHVU1FTlQiIHZhbHVlPSIiLz4NCgkJICA8dmFyIG5hbWU9Il9fVklFV1NUQVRFIiB2YWx1ZT0iJSV2aWV3NSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJjdGwwMCRNZXNzZW5nZXJDb250ZW50UGxhY2VIb2xkZXIkY21kU3RhcnQueCIgdmFsdWU9IjM0Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJjdGwwMCRNZXNzZW5nZXJDb250ZW50UGxhY2VIb2xkZXIkY21kU3RhcnQueSIgdmFsdWU9IjYiLz4JCSAgDQogICAgICAgICAgPHZhciBuYW1lPSJfX1BSRVZJT1VTUEFHRSIgdmFsdWU9IiUlUFJFVklPVVM1JSUiLz4NCgkJICA8dmFyIG5hbWU9Il9fRVZFTlRWQUxJREFUSU9OIiB2YWx1ZT0iJSVldmVudDUlJSIvPg0KICAgICAgICA8L3ZhcnM+ICAgDQogICAgICA8L3BhZ2U+DQoJICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cua29vbHdpcmUuY29tL3NtczA0LmFzcHgiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9IllvdXIgdGV4dCBtZXNzYWdlIGhhcyBiZWVuIHNlbnQiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQoJCTwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI5MCIgbmFtZT0iMTJ2b2lwIiB2PSIxLjAiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjY0MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBSUFBQUNRa1dnMkFBQUFBWE5TUjBJQXJzNGM2UUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUFnWTBoU1RRQUFlaVlBQUlDRUFBRDZBQUFBZ09nQUFIVXdBQURxWUFBQU9wZ0FBQmR3bkxwUlBBQUFBZmhKUkVGVU9FK1ZVdHRxR2xFVVBmMmxQdllUK2hHQ2VDMktFUlVxRlRHUzBhQnhkR3h0Um94TnNWQktEU01WY1h4UURCWmpTdnBTK3RTTDJNYjcvUzZLR3FkTHB5MTVkVDNzczgvYWE2Kzl6ekFQU3FVUzJRdS85Z1M1dllkMnUxMnYxKzh6MVdxMTJXeVd5K1gvSktuOFE2dlZjamdjNlhRYUNwRkQ4ODNONTNBNFhLdlYwQ21TQkJjQTNqelBTNlZTaFVJeEdvMUVFb25GWXBGSUpCekhkVG9ka1NTTkhicmRiajZmVjZsVU1wa01qOEkwekFGbzJxdFVLcVBSNkdBd0VKVUVOV0E4SHNOR3JWWnJ0ZHJWYWdVR000ZkRvZHZ0eHN4WUxEYVpURVFsZ1hldjEwUE5hclhTTkEyLytYdytuVTVoS1FpQ3grT2hLQXFMWWZ0K3Z3OHh3WUZ5b1ZBd21Vd29HSTFHalVhVHlXU3dyczFtMCtsMFpyTVpTVGFibmMxbUVCTzhERTRzeStvT0RxQTJHZ3dJV0F4dGVyMStSeGlRZUwxZXlDQW1XQURqNUhMNW9mM28wSDRjWkU5ZFRncVdQcC9QNy9makRhRlFDTU1od0Q4Qk1VRWZDaytmMmErU3p4dVhUeDRtaE5kY2tvdStqOGZqRE1Qa2NybEFJQkFNQmwvNG1XT25FK0p0dzJud0xQdUJpVjV3MXk4ZlBYNVhQbnQxVHArY1JDSVJmSU5FSXVGeXVSelUwVnYra2oxL3MyMVlMcGM0T2ovNTM3ZVZTZk9MNTJPbFAxMzgrUDV0c1Zpa1VxbGlzWWhOSUVoKyt0cm9UKzdXYTdMZVlRTk9FTVFvYk82MllmUDNoaHdDa1VkQ1VOZ0xmd0F6RFRUZ3NCWmNPd0FBQUFCSlJVNUVya0pnZ2c9PSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkFjcXVpc3RhIGVkIGludmlhIHNtcyB0cmFtaXRlIDEyVm9pcDwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LjEydm9pcC5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy4xMnZvaXAuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIzIiBuYW1lPSJtaXR0ZW50ZSIgZGVmYXVsdD0iIiBkZXNjPSJOdW1lcm8gdmVyaWZpY2F0byAoIGNvbXByZW5zaXZvIGRpICszOSkgY2hlIHZlcnJhJyB2aXN1YWxpenphdG8gY29tZSBtaXR0ZW50ZS4gZXMuICszOTM5Mnh4eHh4eHgiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy4xMnZvaXAuY29tL215YWNjb3VudC9pbmRleC5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGFzc3dvcmQgaW5jb3JyZWN0IiBlcnJtc2c9IlVzZXJuYW1lIG8gcGFzc3dvcmQgZXJyYXRpIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy4xMnZvaXAuY29tL215YWNjb3VudC93ZWJzbXMyLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJhY3Rpb24iIHZhbHVlPSJzZW5kIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJwYW5lbCIgdmFsdWU9InRydWUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImNhbGxlcmlkIiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJtZXNzYWdlIiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImJucnBob25lbnVtYmVyIiB2YWx1ZT0iMDAlJWludHByZWYlJSUlaW50bnVtJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlbmRzY2hlZHVsZWQiIHZhbHVlPSJubyIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9InNlbnQhIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJTb3JyeSwgeW91IGRvIG5vdCBoYXZlIGVub3VnaCBjcmVkaXQiIGVycm1zZz0iQ3JlZGl0byBlc2F1cml0by4iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW5jb3JyZWN0IiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbnZhbGlkIiBlcnJtc2c9Ik51bWVybyBub24gdmFsaWRvLiIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI4IiBuYW1lPSJWb2RhZm9uZS1JcmVsYW5kIiB2PSIxLjIiIG1heHNtcz0iNjAwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSI0NzAiIHJlc2V0PSJtb250aGx5IiBvdXRwdXRfZW5jb2Rpbmc9IkFDQ0VOVCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQVhOU1IwSUFyczRjNlFBQUFBUm5RVTFCQUFDeGp3djhZUVVBQUFBZ1kwaFNUUUFBZWlZQUFJQ0VBQUQ2QUFBQWdPZ0FBSFV3QUFEcVlBQUFPcGdBQUJkd25McFJQQUFBQUFsd1NGbHpBQUFMRVFBQUN4RUJmMlJma1FBQUFCaDBSVmgwVTI5bWRIZGhjbVVBVUdGcGJuUXVUa1ZVSUhZekxqTTJxZWZpSlFBQUF5UkpSRUZVT0U5VmsrdFAyMlVVeDMrKzREL2dUZnZyZW1GWE5Wa1RZOHpZTUpaMVptTUpyV1NiTWhnTUxKMEJnVzBRTlhQWlhpd3MwOFJrWGtKZ0RpbTBFT01idVJpTkpFUmQ0Z3ZGcURUQjZFaExnWEpwOXl0akhZT1JjZmw0bmhiSlBNazNlWExPOC8yZTcza3V6eUNoU1JpR29ZMk9qbXJKWkZKYlcxdlR0dEtxdEIwNU9UbGFibTZ1NW5RNk5iUFpuTTByZ2ZIeGNZTEJJRTFOVFhpOVJaU1Z2a3BWWmFIZ2dHQS9WV2QyVTE2NkM2L25SZXJyR3dnRUFvVERZVVZGZFNZVUNsSGo4L0hCalV0TVR2NUErdDRnaTZQWE1iNHRGN2hZRE84alBXTm5ObWJqczV0bXlzcEs2T3pzWkdwcUNtMTRlSmptNW1hdXQ3ekQ2b3JCOHE4L010dFFROHpqSnRsU3pLT2Zqek43WVRmVFp5Mmt2N2F4bW5Md2Vhc0p2OS9Qd01BQVdtOXZMeDdQTVdJVDMvUG9wKytJRlo4aVd1aG04Y3Z6YkN5L3o5SlFFWkdEVmlLSGRLSXVuY1dnRFdQR3htdkZ6OVBkM1kybTVubmo5U1Bjbi94S3Vwd204cktMK2N0bmhYeFQwTWpLNzI1bTZ1eVMxek1pTVkrRnBiL3NuS3UyME41K0MwM05VbEhoSXZuTlJTS3VRMFNQRkxEeTIzdENmcGVOaDZkWlQrZXpadXhrL2tyV2hZTHhxWlhHdHkyMHRiVnZDVlRtTS9maE1TazZpWGxmNHNtMG40MmxVdFlmdk1MNi9UMkNQSlovc1JNOUxBSUhkZUoxRmhycTlLY0ZuTXhjZTBHS2U1a29lcGJWZjl4Q1ByQk5WZ0lyZnpqRW5TWGpJSDd1ZndJQktzcjNrdWpPSTFJZ05nWEdKenRGUUNCRWhZMTBIaW14SFNuSU9raGNreEhxdDBjSVVIcHlENm13VFc1QU9zaW1hS0ZPcWxXdTdHOEhxM2NkTE55eVplMnJtbHZud1IwN2IvbjA3Q0gyOVBUZ0tjNW5ldHdxcEswdTZyQms4MFNSaFluaklxcHU0TC91VjYwc3hPMlVlUGZSMWRXRk5qUTBST1A1aTN4MHc4VGplZW5XSms2OFdTZktiZ1lpcU1TU0xWWWVUem9JZldHaXVycUsvdjUrdEVRaWtWRTZVMzZLMW85TkpLZHRQQlRycVM0YmMxZDJNSGQ1QjBhN2xmU2ZkaFptN1lRNlRadzhjWlRidHp1SVJxTmtQdFBZMkZqbWc5VFcxb3ExL2J4WmFjSHZNK092MllLc2E2cDBUcFE4aDg5WFRVZEhCeU1qSTJ4dWJtWUZWTVRqY1FZSEIrVjVCak9Ib3g3SjAxQTU1YlN2cnkvVFdaRlYvQXU4WG8vb2t4Ukt1Z0FBQUFCSlJVNUVya0pnZ2c9PSIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIDYwMCBTTVMgYWwgbWVzZSBjb24gVm9kYWZvbmUgSXJlbGFuZDwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnZvZGFmb25lLmllICIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnZvZGFmb25lLmllIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cudm9kYWZvbmUuaWUvaW5kZXguanNwIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idHMiIGxlZnQ9InZvZGFmb25lLmllL215di9zZXJ2aWNlcy9sb2dpbi9Mb2dpbi5zaHRtbD90cz0iIHJpZ2h0PScmcXVvdDsnIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cudm9kYWZvbmUuaWUvbXl2L3NlcnZpY2VzL2xvZ2luL0xvZ2luLnNodG1sP3RzPSUldHMlJSIgbWV0aG9kPSJwb3N0Ij4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJhY2MtcGFzc3dvcmQtdHh0IiB2YWx1ZT0iUGFzc3dvcmQiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJQbGVhc2UgY2hlY2sgeW91ciBkZXRhaWxzIiBlcnJtc2c9IlVzZXJuYW1lIG8gUGFzc3dvcmQgZXJyYXRpIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iQ3VycmVudCBjdXN0b21lcnMgbWF5IG5lZWQgdG8gcmVhY3RpdmF0ZSB0aGVpciBtb2JpbGVzIGJ5IFRvcHBpbmcgVXAgeW91ciBDYWxsIENyZWRpdCIgZXJybXNnPSJEZXZpIHJpY2FyaWNhcmUgbGEgc2ltIHBlciB0b3JuYXJlIGFkIGludmlhcmUgU01TIGdyYXRpcyIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cudm9kYWZvbmUuaWUvbXl2L21lc3NhZ2luZy93ZWJ0ZXh0L2luZGV4LmpzcCI+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InRva2VuIiBsZWZ0PSdUT0tFTiZxdW90OyB2YWx1ZT0mcXVvdDsnIHJpZ2h0PScmcXVvdDsnIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zcmVzaWR1aSIgbGVmdD0ncmVtYWluaW5nJnF1b3Q7Jmd0OyZsdDtzdHJvbmcmZ3Q7JyByaWdodD0iJmx0OyIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgbWV0aG9kPSJQT1NUIiB1cmk9Imh0dHA6Ly9pYWRkbzkxLmFsdGVydmlzdGEub3JnL3NjcmlwdHBocC9yaW12b2RhLnBocCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idGV4dCIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJjcmVkaXRzIiB2YWx1ZT0iJSVzbXNyZXNpZHVpJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJyZXNpZHVpIiBsZWZ0PSJzbXM6IiByaWdodD0iOnJpbWFuZW50aSIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0L2RlbGF5LnBocD9kZWxheT0yIj4NCiAgICAgICAgICAgICAgICA8aGVhZGVycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJSZWZlcmVyIiB2YWx1ZT0iaHR0cHM6Ly93d3cudm9kYWZvbmUuaWUvbXl2L21lc3NhZ2luZy93ZWJ0ZXh0L2luZGV4LmpzcCIgLz4NCiAgICAgICAgICAgICAgICA8L2hlYWRlcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnZvZGFmb25lLmllL215di9tZXNzYWdpbmcvd2VidGV4dC9Qcm9jZXNzLnNodG1sIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDxoZWFkZXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwczovL3d3dy52b2RhZm9uZS5pZS9teXYvbWVzc2FnaW5nL3dlYnRleHQvaW5kZXguanNwIiAvPg0KICAgICAgICAgICAgICAgIDwvaGVhZGVycz4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJvcmcuYXBhY2hlLnN0cnV0cy50YWdsaWIuaHRtbC5UT0tFTiIgdmFsdWU9IiUldG9rZW4lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJtZXNzYWdlIiB2YWx1ZT0iJSVtZXNzYWdlJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icmVjaXBpZW50c1swXSIgdmFsdWU9IjAwJSVpbnRjb2RlJSUlJWludG51bSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InJlY2lwaWVudHNbMV0iIHZhbHVlPSIiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icmVjaXBpZW50c1syXSIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJyZWNpcGllbnRzWzNdIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InJlY2lwaWVudHNbNF0iIHZhbHVlPSIiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZnV0dXJlZGF0ZSIgdmFsdWU9ImZhbHNlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImZ1dHVyZXRpbWUiIHZhbHVlPSJmYWxzZSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9Ik9uZSBvciBtb3JlIE51bWJlcnMgaXMgcmVxdWlyZWQiIGVycm1zZz0iTnVtZXJvIGRlbCBkZXN0aW5hdGFyaW8gbWFuY2FudGUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJNZXNzYWdlIGlzIHJlcXVpcmVkIiBlcnJtc2c9IlRlc3RvIGRlbCBtZXNzYWdnaW8gbWFuY2FudGUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJXZSZhcG9zO3JlIHNvcnJ5LCBhbiBlcnJvciBoYXMgb2NjdXJyZWQiIGVycm1zZz0iRXJyb3JlIGRlbCBzZXJ2ZXIiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9Ik1lc3NhZ2Ugc2VudCEiIGFjY2VwdG1zZz0iU01TIEludmlhdG8hIFNNUyByZXNpZHVpOiAlJXJlc2lkdWklJSIgLz4NCiAgICAgICAgICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSIxMCIgbmFtZT0iSmFqYWgiIHY9IjEuMiIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxMjMiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTIzIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FNQUFBQW9MUTlUQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUFnMVFURlJGeXBLL28wR1BzRmlibzBLUGloUjhtVENJd1hpdG9EeU14SVczcEVXUXQyV2kyN1hUb0QyTXlwRytoQXQ2MEkrNTd0L3V2bjI0eW9hMHIxMmh6WnpKMmJQVnVXYWkyTExWZ2d0M3IxdWhyMXFkeDR5ODdkdnF2bis1NThuZXFsQ1kzNzNZZ3dkMHZYZXVvRHVLbXpLSHZuQ28vdjMrL2Z6OWhBcDU3K0R2cFV1ZXpvdTNwRVNRb0R5TnEwNlZ5NGUwc1ZtY3k1VEFzRm1iM2J6YWZnRno3ZHJwNnRUbXpJaTFyMWVhNnRQbGh3OTh5NDI1aUJKK3FrK1hpUko3NnRIanZuR3B5WlRGNXN6anExS1k5dTMxNWN6amhReDY0Y1Bjb0VPWTgrZngwNmZQNzk3czM4SGQ1ODNoeVpHK3dvUzM3dHpxb0QyTjJiVFgrZlQ1dEdxdS9mcjgvUG43dW5lMG9ENlFxbEdZd0hhcndIV3J3WGV0dTNlMXdIZXUxYXZSN3Q3dHpJZTB1MnltdjNldDhlUHdnZ2h6enB6SXhZZTQ4T1B3bWpHR3czMndwa21VdTNPdGloVjg1TWpoNjlibnBFT1EzTHJheDR1N3FVMld6b3kzekllMXJWS1grUEgzNTgva3FGS2duamVJOGVUd3lwTy91M1d2MTZ6T2xTaUR4SWE0d29hOXdvRzJwa3FWdDJ1bzJiSFJ2WHUzb2tHT25qaUpybGljbVMrSHUzbTFtVENIeDR5NzVNcmluenFLb0QrUHUzS3JuejJRdG1TaXdYaXUwS0RNcFVXUnRXeXRvRDJRcVUrV3YzdXg3K0R1bzBpYzNMald5STY4Nk0vano0KzUxNmpLOHVYeDcrSHZ2RzJtcFVXUTFxM1QzYmpVd0hxdnFVK1hsQ1dCMTYvVDFxelMvLy8vLy8vLytzeVBXUUFBQUs5MFVrNVQvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vQUgrMEE0RUFBQUVDU1VSQlZIamFGSS9EZGtWUkZBUTc5eVo1Vm16YmR2SmkyN1p0MjdadFozOWp6cWxaMWVwSmc2aHdkZzlRcVFEYi9BRWlrRk5COHN1TnRsSHIzZGs2dWFnZzVQUVd2NXZuN3FmMWh6WmtXdzdOUldDNHdtekc4NDlSOXZ4VFo2OWJodWx0YWRMU3V1NnNoTFhmVEI5clhNYkZlS25UMVdFN2ZEVmxkWXpEQkVOR24vTUZEKzF0bGVqWk5tTHNMbVR3Y1BlOWdoRi9pVVJTNUxicXdVTndWenkrREJqS1FUdnVxWTdLRkZ5Sm9yZ3h2Y2E5M0dWVHJJTE51Wi9NOVo1NzF0R0I3RzBMMGloaC9KUHB4TWRKZ0NBSTF3Z1Bxbm1OMVRzOGRWczB1eWRXaHp5QUZISVQzOGl4cGxHTjVqRlFQcy9lVW5SSHkybXRNYU5lbWtmMEw4QUEyQ0ZjdncxRlRwOEFBQUFBU1VWT1JLNUNZSUk9IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIHRyYW1pdGUgSmFqYWg8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5qYWphaC5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5qYWphaC5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBpbCBudW1lcm8gcmVnaXN0cmF0byBpbiBmb3JtYXRvIGludGVybmF6aW9uYWxlIChlczogMzkzMzgxMjM0NTY3KSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly90LmphY2tzbXMuaXQvRnJlbmdvLnBocCIgbWV0aG9kPSJwb3N0Ij4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ1c2VybmFtZSIgdmFsdWU9IiUlbWl0dGVudGUlJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNjb2RlIiBsZWZ0PSJuYXppb25hbGU6IiByaWdodD0iOiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJsb2dpbiIgbGVmdD0iTnVtZXJvOiIgcmlnaHQ9IjoiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5qYWphaC5jb20vb3ZlcnZpZXcvIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19WSUVXU1RBVEUxIiBsZWZ0PSdpbnB1dCB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyBuYW1lPSZxdW90O19fVklFV1NUQVRFJnF1b3Q7IGlkPSZxdW90O19fVklFV1NUQVRFJnF1b3Q7IHZhbHVlPSZxdW90OycgcmlnaHQ9JyZxdW90OycgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3NlY3VyZS5qYWphaC5jb20vaW5kZXguYXNweCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfX1ZJRVdTVEFURSIgdmFsdWU9IiUlX19WSUVXU1RBVEUxJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVEFSR1VNRU5UIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9fRVZFTlRUQVJHRVQiIHZhbHVlPSJjdGwwMCRMb2dpbkJveFJpZ2h0JExvZ2luQm94JExvZ2luQnV0dG9uIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImN0bDAwJExvZ2luQm94UmlnaHQkTG9naW5Cb3gkRW1haWwiIHZhbHVlPSIlJXVzZXJuYW1lJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3RsMDAkTG9naW5Cb3hSaWdodCRMb2dpbkJveCRQd2QiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3RsMDAkTG9naW5Cb3hSaWdodCRMb2dpbkJveCRQd2RGb3Jnb3RFbWFpbCIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjdGwwMCRMb2dpbkJveFJpZ2h0JExvZ2luQm94JFJlc2VuZEFjdEVtYWlsIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iTG9naW4gZmFpbGVkISIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIG5vbiB2YWxpZGkiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuamFqYWguY29tL2NhbGwvIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic2lkdmFsdWUiIGxlZnQ9J3NjcmlwdCB0eXBlPSZxdW90O3RleHQvamF2YXNjcmlwdCZxdW90OyZndDt2YXIgJHNpZD0mYXBvczsnIHJpZ2h0PSImYXBvczsiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5qYWphaC5jb20vZW5naW5lL2FqYXgvc2VydmljZXMvc21zLmFzaHgiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX3NmIiB2YWx1ZT0iU2VuZFNNUyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfc2lkIiB2YWx1ZT0iJSVzaWR2YWx1ZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNyYyIgdmFsdWU9IiUlY2NvZGUlJS0lJWxvZ2luJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZGVzdCIgdmFsdWU9IiUlaW50Y29kZSUlLSUlaW50bnVtJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZGVzdHR5cGUiIHZhbHVlPSIwIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InRpbWVvdXQiIHZhbHVlPSJ0cnVlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtcyIgdmFsdWU9IiUlbWVzc2FnZSUlJTBBJTJCJSVjY29kZSUlJSVsb2dpbiUlJTBBc2VudCB2aWEgd3d3LmphamFoLmNvbSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0eXBlIiB2YWx1ZT0iMCIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9Ik1lc3NhZ2dpbyBpbiBmYXNlIiAvPg0KICAgICAgICAgICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjE1IiBuYW1lPSJSb21hZ25hRXN0IiB2PSIxLjAiIG1heHNtcz0iMSIgc2luZ2xlbGVuPSIxNDQiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTQ0IiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FJQUFBQ1FrV2cyQUFBQUFYTlNSMElBcnM0YzZRQUFBQVJuUVUxQkFBQ3hqd3Y4WVFVQUFBQWdZMGhTVFFBQWVpWUFBSUNFQUFENkFBQUFnT2dBQUhVd0FBRHFZQUFBT3BnQUFCZHduTHBSUEFBQUFBbHdTRmx6QUFBQUpnQUFBQ1lCK0U1enF3QUFBQmgwUlZoMFUyOW1kSGRoY21VQVVHRnBiblF1VGtWVUlIWXpMak0ycWVmaUpRQUFBc0JKUkVGVU9FOWpQSGJzMk1JRkMzZ1pHZGpaMkJnWkdINy8vdjN0KzNjSSt2SGp4eThnK1AwSENQNHpNdnhqNTVDVWxHUndkWEcrNldUMFA5enhmNkxYL3lUdi8xRXUvLzBzL3p2cS9qZFQvcXNuODBGRC9MR0s4QTBGd1hOeS9HMGlYSnljbkF4QmJxNy9RK3ovcHdmOEw0MzlYeDczUHp2a2Y1VHpmMC9qLzZtaC94Zk4vSGYrOUplblQ1NGQySHZGUk8yQW5JQ0V1RGhEaExjWHlOU0NpUDhOR2YrYnMwRGFGazc2Ly9MSmZ4ajQvdjM3eTVjdmI4K2JlVkJPVUZaR2hpSGN5L04vaE5QL25ORC9OY24vRjAvOC8rNFZYQ21FOGUzYk42Q0dlMWV2SE5KVkFHa0ljblg1NzIvMVA5N2ovNDZWS0VydjMvbWZuL2dqMlBYTDU4L1BueisvZS9mdUlYZGJrQVp2Tzl2L0xnYi9sODlDVWIxeS9uOXoxWCs2MHA4c05ENjhmZnYwNmRQYnQyOGZEUFlDYVhBMk4vdWZGSVNpK3RMWi8xMjEveHRLZnBmbmZKalM4L3IxNjRjUEg5NjRjV08vbXcxSWc0MkIvdjl0RzlEY0RlSCsvUG56L2Z2M1FPUHYzTGx6ZWRQNlhVcWlNdExTREdiYVduOHVuRUZvZVBiay8rMGJmMjVkLzM3ajJ0c0w1NTZlT0haMzc2N0xmUjBuOUpXMnkvQkxBelVZcXF1OW45d05qTXUvWVBDOW9leXRtdGdMVlpHSHlrSzNGUVd2eVBPZmt4YzRLUzl3V0pwbml6U2Z0SlFVZzU2SzhsMGQyYmVuVDN3RWcvY1BIenlKOEwyckpIUkRRL0pHZGZIMS9Yc3ZIejF5N3VDQjR5dVdialpVa3dKcTBGWlV2Q1F2Y0ZOUDRlSGl1VStmZ01Damh3L3ZuajUxKzlMRjY5ZXZYNzU4K2R5NWM2ZU9Iam1ZbDc1ZW1sOEttSmEwbEJSUHkvS2RsK08vSU1kL3ljbnNXbnZEOVMwYnI1MDZlZm5NbWZOSGo1eGV0dWhJVWM1ZVhZVWRFdHhycFhobGdLR2tycVkyWFlyL21DemZjUmc2S3N0M1JJYnZvQXp2Zm1uZVBWSzh1NlI0dGt2eWJKSGttVzZvSVNFaHdlRHU3aTRnSUdDb3FXR21wd3RDdWtDa1l3cEVPam9tMnRyRzJscEdXcHBHbXBwQUVwaTJIUndjQURXbXZDR1U3TVd5QUFBQUFFbEZUa1N1UW1DQyIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIDEgU01TIGFsIGdpb3JubyBjb24gUm9tYWduYUVzdDwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnJvbWFnbmFlc3QuaXQiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5yb21hZ25hZXN0Lml0IiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICAgICAgICA8cHJvY2VkdXJlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cucm9tYWduYWVzdC5pdC9wb3J0YWwvcGFnZT9fcGFnZWlkPTc4MSwyMTA5NDAyJmFtcDtfZGFkPXBvcnRhbCZhbXA7X3NjaGVtYT1QT1JUQUwiPgogICAgICAgICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idG9rZW4iIGxlZnQ9J3NpdGUycHN0b3JldG9rZW4mcXVvdDsgdHlwZT0mcXVvdDtoaWRkZW4mcXVvdDsgdmFsdWUgPSZxdW90OycgcmlnaHQ9JyZxdW90OycgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vcG9ydGFsbG9naW4uY2VkZWNyYS5pdC9zc28vYXV0aCIgbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic2l0ZTJwc3RvcmV0b2tlbiIgdmFsdWU9IiUldG9rZW4lJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNzb3VzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJMb2dpbiIgdmFsdWU9IkxvZ2luIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic3Vic2NyaWJlcm5hbWUiIHZhbHVlPSJyb21hZ25hZXN0IiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icF9zdWJtaXRfdXJsIiB2YWx1ZT0iaHR0cDovL3BvcnRhbGxvZ2luLmNlZGVjcmEuaXQvc3NvL2F1dGgiIC8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CiAgICAgICAgICAgICAgICA8ZXJyb3JzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJMYSBjb21iaW5hemlvbmUgdXRlbnRlIGUgcGFzc3dvcmQgaW5zZXJpdGEgbm9uIGUmYXBvczsgY29ycmV0dGEiIGVycm1zZz0idXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiIC8+CiAgICAgICAgICAgICAgICA8L2Vycm9ycz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cucm9tYWduYWVzdC5pdC9wbHMvcG9ydGFsL3BvcnRhbF9yb21hZ25hZXN0LmludmlhX21lc3NhZ2dpb19leHQiIG1ldGhvZD0iUE9TVCI+CiAgICAgICAgICAgICAgICA8dmFycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlRJUE9fTUVTU0FHR0lPIiB2YWx1ZT0iU01TIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iUENPRElDRV9BQkkiIHZhbHVlPSIwODg1MiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlBfQkFDS19VUkwiIHZhbHVlPSIvcGxzL3BvcnRhbC91cmwvcGFnZS9zaXRvX2hvbWUvc21zL2ludmlvX3NtcyIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkRFU1RJTkFUQVJJTyIgdmFsdWU9IiUlaW50bnVtJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0ZXN0byIgdmFsdWU9IiUyMCUlbWVzc2FnZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icmltYXN0aSIgdmFsdWU9IiIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KICAgICAgICAgICAgICAgIDxlcnJvcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9Ik1heCBkaSBtZXNzYWdnaSBjb25zZW50aXRvIHBlciBpbCBwb3J0YWxlIiBlcnJtc2c9IlNNUyBlc2F1cml0aSBwZXIgb2dnaSIgLz4KICAgICAgICAgICAgICAgIDwvZXJyb3JzPgogICAgICAgICAgICAgICAgPGFjY2VwdD4KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iTWVzc2FnZ2lvIGlub2x0cmF0byBjb3JyZXR0YW1lbnRlIiAvPgogICAgICAgICAgICAgICAgPC9hY2NlcHQ+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICA8L3Byb2NlZHVyZT4gPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjM0MCIgbmFtZT0iRmFjZWJvb2siIHY9IjEuMSIgbWF4c21zPSIxMDAiIHNpbmdsZWxlbj0iNDAwIiBzbXNfZGl2aXNvcj0iNDAwIiBtYXhsZW49IjQwMCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFBWE5TUjBJQXJzNGM2UUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUFnWTBoU1RRQUFlaVlBQUlDRUFBRDZBQUFBZ09nQUFIVXdBQURxWUFBQU9wZ0FBQmR3bkxwUlBBQUFBQWx3U0ZsekFBQU94QUFBRHNRQmxTc09Hd0FBQVpWSlJFRlVPRTkxVXoxTEEwRVFuVm5PbU9MK2dKVzFiY0JDc0JKSm9XQ1h4ZzlJSWFRU0VjVEdWaFFzN1lJS2dpQm9zQkNDaFNLa3NESmdKZm9mQXBHTFl1NjhPeS91ek41Y2xoeFplTXpNMjUyWk43dDNPTkRyN3VrZEVCRm82WkN0dldSdmxGOVptQUc4ZlhqakRFclBwNXFVOHR3MDIyS3hDRW1TUUtmVGdmWkhqem4xRy8xQkdNVVFoTEcyNUZzSXRhL2h1aTdEY1J3b0ZBcXNNdEE4QVU5dlhzWTF6aFJ2Vm1iWlAydTBjK09wcnVmRFoyK0lydGNIZ2ZDU1paOFRIM2VPbW1NVnJKZW5PTGRVS3JGdHRWb1F4ekU4dnY1QWxEak00ZHJ1OWRnQ2w4ZVZuR1FpTnZZYUdZK0wxZk1CUHdFdGVzTDBPU21jbkZCTU4rdFZ0c3UxQzdaaGxHUUZWRDhJd2ZkRDZBY1J3N2ZnZlFkQW9Gc25lRjg2MXBDelpCVTNwNjR5Q05rVUpNaUlRdk9ocFVCTkNoU1JWSjJWVy9KTlhaTW9DckxLVmpFelpKcUkxSmtMcGNnbUZTZS9nVnNINWhtTkNybE5reUMveGNuK0VzZmJoL2U1a2taQktsZWtpaFdsY21aMG4ySTFuTS9NYk05Zzc5bXQ1VzdZMHU4OHYxclBTWk94N0R1eWI0TDg1NnNhL0FOTTNRcFNIUUltOGdBQUFBQkpSVTVFcmtKZ2dnPT0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BZ2dpb3JuYSBpbCB0dW8gc3RhdG8gZGkgRmFjZWJvb2sgdHJhbWl0ZSBpbCB0dW8gaW5kaXJpenpvIG1haWwgcGVyc29uYWxpenphdG8uPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0iaW5kX21haWwiIGRlZmF1bHQ9IiIgZGVzYz0iZW1haWwgZGVsIHNlcnZpemlvIGNhcmljYSB2aWEgbWFpbCBzZW56YSBAbS5mYWNlYm9vay5jb20uc2kgdHJvdmEgaW4gcXVlc3RhIHBhZ2luYSBodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9tb2JpbGUvIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL3QuamFja3Ntcy5pdC9GYWNlYm9vay5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImRlc3RpbmF0YXJpbyIgdmFsdWU9IiUlaW5kX21haWwlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJvZ2dldHRvIiB2YWx1ZT0iJSVtZXNzYWdlJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idGVzdG8iIHZhbHVlPSJqYWNrc21zIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InN1Ym1pdCIgdmFsdWU9IkludmlhIiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iTWFpbCBpbnZpYXRhIGNvcnJldHRhbWVudGUiIGFjY2VwdG1zZz0iUHJvZmlsbyBhZ2dpb3JuYXRvISEiIC8+DQogICAgICAgICAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMzAyIiBuYW1lPSJSZWRveHlnZW4iIHY9IjEuMCIgbWF4c21zPSIyNSIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNTMiIG1heGxlbj0iNjQwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQTQwbEVRVlI0MnJWVHdXMEVJUXdjb3ZUQnBwTXJJZGVCcnhLY1NyZ09UQWRMSjltdFpQS0lITEhBM2ltS2dqUVNzZ2VEUFVNZ2liK3NsMW13bEtJSWdTMUtLVHF0UVBJSWdBUzRpZERNdE5iS1RZUWU3L25ENFUxa0lEbCtDald4NERQWWJ6Y0NRTXc1UE9wNTRKR0VtU2tCbXBtZTNlN291U0NKTlNXdGx3dWZIVzViWFZOU2t0OHF2TzE3V3BibDlObXVTbFZWQU5oRmpqSit4dmp4cU8vMzZ6V2Q1VjU5RSs5M0lPZVJFUUxiRzMyQWNmQkIwOWNnMnd5OUQ5YVVCaVhjU0c2bVRZUzExZ05uYXBUK0paNmJ4VTkxYnBGelZyZDJ6dy8vOGh0L3M3NEFoQTZKN2FKR3JENEFBQUFBU1VWT1JLNUNZSUk9IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIHRyYW1pdGUgUmVkb3h5Z2VuPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIG1haWwgZGkgbG9naW4gYSB3d3cucmVkb3h5Z2VuLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgd3d3LnJlZG94eWdlbi5jb20iIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy5yZWRveHlnZW4ubmV0L3dlYl9zbXMvRGVmYXVsdC5hc3B4IiBtZXRob2Q9IkdFVCI+DQoJICAgICA8Y29udGVudHM+DQoJCSAgICAgPHZhciBuYW1lPSJfX1ZJRVdTVEFURSIgbGVmdD0ibmFtZT0mcXVvdDtfX1ZJRVdTVEFURSZxdW90OyBpZD0mcXVvdDtfX1ZJRVdTVEFURSZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiLz4NCgkJIDwvY29udGVudHM+DQoJICA8L3BhZ2U+CSANCgkgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cucmVkb3h5Z2VuLm5ldC93ZWJfc21zL0RlZmF1bHQuYXNweCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVEFSR0VUIiB2YWx1ZT0iIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UQVJHVU1FTlQiIHZhbHVlPSIiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Il9fTEFTVEZPQ1VTIiB2YWx1ZT0iIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJfX1ZJRVdTVEFURSIgdmFsdWU9IiUlX19WSUVXU1RBVEUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idHh0RW1haWxBZGRyZXNzIiB2YWx1ZT0iJSV1c2VybmFtZSUlIi8+DQoJCSAgPHZhciBuYW1lPSJ0eHRQYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYnRuTG9naW4iIHZhbHVlPSJMb2dpbiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibHN0TGFuZ3VhZ2UiIHZhbHVlPSJlbiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibHN0VGhlbWUiIHZhbHVlPSJNZXRhbCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY2xpZW50VGltZXpvbmUiIHZhbHVlPSItMiIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IkxvZ2luIGZhaWxlZCIgZXJybXNnPSJEYXRpIGRpIGxvZ2luIGVycmF0aSIgZXJyY29kZT0iNSIvPg0KICAgICAgICA8L2Vycm9ycz4NCiAgICAgIDwvcGFnZT4NCgkgIDxwYWdlIHVyaT0iaHR0cHM6Ly93d3cucmVkb3h5Z2VuLm5ldC93ZWJfc21zL0FwcC9JbmJveC5hc3B4IiBtZXRob2Q9IkdFVCIvPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy5yZWRveHlnZW4ubmV0L3dlYl9zbXMvQXBwL05ld19NZXNzYWdlLmFzcHgiIG1ldGhvZD0iR0VUIj4NCgkgICAgPGNvbnRlbnRzPg0KCQkgICAgPHZhciBuYW1lPSJfX1ZJRVdTVEFURTIiIGxlZnQ9Im5hbWU9JnF1b3Q7X19WSUVXU1RBVEUmcXVvdDsgaWQ9JnF1b3Q7X19WSUVXU1RBVEUmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQoJCQk8dmFyIG5hbWU9InR4dFNjaGVkdWxlTWVzc2FnZSIgbGVmdD0ibmFtZT0mcXVvdDt0eHRTY2hlZHVsZU1lc3NhZ2UmcXVvdDsgdHlwZT0mcXVvdDt0ZXh0JnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPg0KCQk8L2NvbnRlbnRzPg0KCSAgPC9wYWdlPg0KICAJICA8cGFnZSB1cmk9Imh0dHA6Ly9zdXBlcm1hYy5hbHRlcnZpc3RhLm9yZy9zY3JpcHQvc2Vzc2lvbi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idmlldyIgdmFsdWU9IiUlX19WSUVXU1RBVEUyJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJ2aWV3IiBsZWZ0PSJWSUVXU1RBVEU6IiByaWdodD0iOiIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy5yZWRveHlnZW4ubmV0L3dlYl9zbXMvQXBwL05ld19NZXNzYWdlLmFzcHgiIG1ldGhvZD0iUE9TVCI+ICAgDQoJCTx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVFRBUkdFVCIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVEFSR1VNRU5UIiB2YWx1ZT0iIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJfX1ZJRVdTVEFURSIgdmFsdWU9IiUldmlldyUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJ0eHRSZWNpcGllbnRzIgl2YWx1ZT0iJTJCJSVpbnRjb2RlJSUlJWludG51bSUlIi8+DQoJCSAgPHZhciBuYW1lPSJ0eHRTY2hlZHVsZU1lc3NhZ2UiIHZhbHVlPSIlJXR4dFNjaGVkdWxlTWVzc2FnZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJ0eHRNZXNzYWdlIiB2YWx1ZT0iJSVtZXNzYWdlJSUiLz4gIA0KICAgICAgICA8L3ZhcnM+CSAgCQkNCgkJPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iWW91ciBtZXNzYWdlIHdhcyBzdWNjZXNzZnVsbHkgc2VudCB0byBhbGwgb2YgaXRzIHJlY2lwaWVudHMiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMjIiIG5hbWU9IkNlbGx1bGFybWFnYXppbmUiIHY9IjEuMCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxMzkiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTM5IiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUJHZEJUVUVBQUxHUEMveGhCUUFBQWZOSlJFRlVPRStOVTcxcUcwRVF2a0FLbHk1ZHBORWp1SFNyUjFDcFYxQ3AwbThRaEFweHVEQkhDb05TQ0M2RllWVVkxbzFoVlJ5c0NzR3FFS3dMRjFjNHNBRUgxdURpeXpkN1owbVdjZkRBc0J5NzgvM016SDBCSS90ay9QbjluSVcvejFubjIzR1dmVzJMQk9Bd1lvenc5elhxaHdDODdHN3Rzb1piaDNUM0d0bTdhaGI0VFlCYjhlRW1wbE9BL0wyY0VlYk9Jb1Q0TVlBODFuT1hIb2ZIQmt6UzNIbW1vd0wvaHZPZGd1bE1venZ1b0gvUlJUbFhaSTRKckdGM2lFODc5dFMvZmJpYU1zOW5RNXhPam5BNlBzTFo1QmlEcXg1MHBaTWFzL0QvQWFCM2Myc3hxTHJvcnp2b1NTNVAwS3RPVUN4eUJQYk5WbFRBQnUvSFZvRjR0d3VIUEF4UXhDSEttS040R3VKODAwOWRkeXZKdC81M0ZzZ3VENlJSZGwxRExUWHNnNEYvc2RCclEvYUE4cGVCWFRxQ2VVNkI0MjBqS1FpUDdQd051N3lvbTNFeDdjcEJWUXAxelZGeS92cUdvQlZCTjU0TnJiY2dDVUM4RlpjV2F1N2JSV2xBbWhIR3hLNXZOUWtNbFlvS0FwQTBXWkN4RkpjYTA2c0dRR3lrUWdMSTFzbjM5R2ZKTzAwUWswQkV4ZXN5WlRYOWpjWUsrWVdDdW5aODFLcG90ekdmS0FKTXFhSnNiZGlrUWxaY3lKTUYyYTdpaDJhSzFBWkFzcHdaakw2UHlLNVNzUlJLQS9kSHVSMmplRkx6eG9hQXlEbWFGRlFsMjhnRk9wai9oeitUN0lPTTFGWlVRc2JEMVQzOCtmNEI2dFppK0lrcWFEa0FBQUFBU1VWT1JLNUNZSUk9IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgU01TIHRyYW1pdGUgQ2VsbHVsYXJtYWdhemluZSBhdmVuZG8gQ01ldXJpIGRpc3BvbmliaWxpLjwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LmNlbGx1bGFybWFnYXppbmUuaXQiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5jZWxsdWxhcm1hZ2F6aW5lLml0IiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5jZWxsdWxhcm1hZ2F6aW5lLml0L2ZvcnVtL2xvZ2luX2lwLnBocCIgbWV0aG9kPSJQT1NUIj4NCgkJCQk8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idGltZSIgbGVmdD0ic21zX3RpbWUmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJyZWRpcmVjdCIgdmFsdWU9InNtcy5waHAiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibG9naW4iIHZhbHVlPSJMb2dpbiIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuY2VsbHVsYXJtYWdhemluZS5pdC9mb3J1bS9zbXMucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc190aW1lIiB2YWx1ZT0iJSV0aW1lJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY2hlY2tpbiIgdmFsdWU9IlZhaSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9Ik5vbiBoYWkgcHVudGkgc3VmZmljaWVudGkgcGVyIHByb2NlZGVyZSEiIGVycm1zZz0iQ3JlZGl0aSBFc2F1cml0aSIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5jZWxsdWxhcm1hZ2F6aW5lLml0L2ZvcnVtL3Ntc19zZW5kaW5nLnBocD9zbXNfc2VudD10cnVlIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkdzbUNvZGUiIHZhbHVlPSIlJXByZWYlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJQaG9uZU51bWJlciIgdmFsdWU9IiUlbnVtJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iVGV4dE1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJDb3VudHJ5Q29kZSIgdmFsdWU9IiUlaW50Y29kZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNoZWNraW4iIHZhbHVlPSJ0cnVlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc190aW1lIiB2YWx1ZT0iJSV0aW1lJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KCQkJIDxlcnJvcnM+DQoJCQkgIDx2YXIgZXJyc3RyPSJjZXJjaGlhbW8gZGkgZXNzZXJlIG9uZXN0aSEhISIgZXJybXNnPSJTTVMgZ2lhJyBpbnZpYXRvISIvPg0KICAgICAgICAgICA8L2Vycm9ycz4JCQkgIA0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnNtc2hvc3RpbmcuaXQvc21zTWFzdGVyL3NwZWRpemlvbmUuZG8iIG1ldGhvZD0iUE9TVCI+DQoJCQk8aGVhZGVycz4NCgkJCTx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHA6Ly93d3cuY2VsbHVsYXJtYWdhemluZS5pdC9mb3J1bS9zbXNfc2VuZGluZy5waHA/c21zX3NlbnQ9dHJ1ZSIvPg0KCQkJPC9oZWFkZXJzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkdzbUNvZGUiIHZhbHVlPSIlJXByZWYlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJQaG9uZU51bWJlciIgdmFsdWU9IiUlbnVtJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iVGV4dE1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJDb3VudHJ5Q29kZSIgdmFsdWU9IiUlaW50Y29kZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNoZWNraW4iIHZhbHVlPSJ0cnVlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc190aW1lIiB2YWx1ZT0iJSV0aW1lJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJTTVMgaW52aWF0byBjb24gc3VjY2Vzc28iIC8+DQogICAgICAgICAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMjIzIiBuYW1lPSJUd2l0dGVyIiB2PSIxLjAiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTQwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE0MCIgcmVzZXQ9Im1vbnRobHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUFYTlNSMElBcnM0YzZRQUFBQVppUzBkRUFQOEEvd0Qvb0wybmt3QUFBQWx3U0ZsekFBQUxFd0FBQ3hNQkFKcWNHQUFBQUFkMFNVMUZCOWdLQ3hNNEJrK1VyNlVBQUFIRlNVUkJWRGpMalpNeGJoUkJFRVZmZGZmT2pMd1dCbW1GTUpnQVNEaUFBOFJodUFFa1NBUmNnQXVRY3g4Q01qQWkyY0FCOHNyWWxnR3ZkMmE2UHNITWptYTlnU21wc3VyLzYvLzZiZlRWNUt3Nk96SWpJSUlaVlVyR0xaVUFYTklxWitadW5MVmlHbzNuRThqdWlpSFlyUUJJWERwOFhiVlV3SEVMczVCNGdQTmZHd0RVRXIreVNNQUt5SURKdVc0YWRTUmdac1JncEJodEM4Q0J2eTRtQnEzZ1c1MDVqUUh2M2dKZ2lJY0o2amFyU0IxSUFnZ2gyUHk2MFI4WEV6TU04WG5aamdUWUFKT0ExL2VxYlFrWnVCUVVDR25ZR3N3d0NSQm14aUk3QzllTks3anJ4eXB6N2s0MUlsUy85bnE4bFhoYUJKNU13aWFBQVJseDRVNWx4bFVXYis1V0hKYUpsVFFJeUloWmpCU2owNmExeEZxd2NMRnI4TnZGVGpDbUp1NmtDTDBrQjlLTlhJUStCa3lBRXhmSEx1WXV2amRPTXBCN055Q0JPNjZSQVdNVEgwK013b3lqTERCNGQ3N2tOSmNjeEVDN1pnZGVWbWtqU01NNnlxMCtYTlM4UDd1QzJKdTBRU2FRc1IrTkx3ZDc3QmRkRGdZNzNRSnY5MHBlN1piUWV1ZGFzRkVIaU1iUDFqbHE4cVlIQURFRWl3YWY3dS93Y1RibFdUSktpVktpNmhzWEw2ckVZUm0zSlF5QmNsZHVHNVpFVGx6NGFFakFvMmdVQm1YLzFmOEJvUVRpU1BWd2JSb0FBQUFBU1VWT1JLNUNZSUk9IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWdnaW9ybmEgaWwgdHVvIHN0YXRvIGRpIFR3aXR0ZXI8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VyIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnR3aXR0ZXIuY29tICIgLz4KCQk8cmVxdWlyZWQgbj0iMiIgbmFtZT0icHN3IiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy50d2l0dGVyLmNvbSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly90d2l0dGVyLmNvbS8iPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJhdXRoZW50IiBsZWZ0PSJuYW1lPSZxdW90O2F1dGhlbnRpY2l0eV90b2tlbiZxdW90OyB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsgLz4iLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwczovL3R3aXR0ZXIuY29tL3Nlc3Npb25zIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJhdXRoZW50aWNpdHlfdG9rZW4iIHZhbHVlPSIlJWF1dGhlbnQlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lvblt1c2VybmFtZV9vcl9lbWFpbF0iIHZhbHVlPSIlJXVzZXIlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lvbltwYXNzd29yZF0iIHZhbHVlPSIlJXBzdyUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iV3JvbmcgVXNlcm5hbWUvRW1haWwgYW5kIHBhc3N3b3JkIGNvbWJpbmF0aW9uLiIgZXJybXNnPSJOb21lIHV0ZW50ZSBvIFBhc3N3b3JkIGVycmF0aS4iLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSBtZXRob2Q9IlBPU1QiIHVyaT0iaHR0cDovL3R3aXR0ZXIuY29tL3N0YXR1cy91cGRhdGUiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImF1dGhlbnRpY2l0eV90b2tlbiIgdmFsdWU9IiUlYXV0aGVudCUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzdGF0dXMiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idHd0dHIiIHZhbHVlPSJ0cnVlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJyZXR1cm5fcmVuZGVyZWRfc3RhdHVzIiB2YWx1ZT0idHJ1ZSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgPHZhciBhY2NlcHRzdHI9InNlY29uZHMgYWdvIiBhY2NlcHRtc2c9IlByb2ZpbG8gQWdnaW9ybmF0byEiLz4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0ic2Vjb25kaSBmYSIgYWNjZXB0bXNnPSJQcm9maWxvIEFnZ2lvcm5hdG8hIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjUiIG5hbWU9IkthbGFTTVMiIHY9IjEuMSIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMzE4IiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUFYTlNSMElBcnM0YzZRQUFBQVJuUVUxQkFBQ3hqd3Y4WVFVQUFBQUpjRWhaY3dBQURzUUFBQTdFQVpVckRoc0FBQUtZU1VSQlZEaFBqWlBMVHhOUkZNWnZLUzEwU3NJck1hQ3BpUVlrdW1Gbll0eTRNQ2E2MHhnWHhyL0F2OEdGZTJOTVMyYzZsSUl4ckZ5QUN6ZXNKWEhoUW1Oa1UxREFnSUh5NklOTzIrbThmcDRPSklZRmhrbk9uVHQzN3ZuTzk1Mkh3ckdoRGJpZUxPZDlmQWc2ZDMxVXVTbTcyanFXbU92djRnV2xjOWpKUGIrQ3NpUnlaZkVaOVprVVZUMU96VWlJOVp4dHVSaFZvNDhqSTBaSlQ2RUN6NmNaQkd5YU4vQ21MaEFZQ3RlSW4yMjVLSzZwcU9ZMTZxMGF5bTl2Z3JXTWExZllXbnowZjJjQnRqTUpkdWZ2c2JId0hMZXgxUUdvME1nT1NVS0tLSlZndjNDTmxxa1JpSnhXUG9JamxGMkpHdWd4Mm9VSTJ4K2ZjUERoTVc2bUM0c3FDdWRBNlBTeDluYVNWSTlHSktsUk5sUDR1VzdRb3ppbU9HZTdjUElEdU44eS9DbmNETUdieHJBa3ZZeHkzRExXZElMRC9BZ3hiWUtFaWhLSmo4RzdjUnE1Zm9rZXdkS0g0ZnNMMWw5ZnBXMG1xYzNFWVNwR1hUZ29SMHBoNXhLU3ZDaTF3aVIzcnlqYU96OW80ckNUMWtUR3FNajdCUGtVanA0SWMyU2JjZnhzSDYzZzZCK0FwL2RDT29tVEhjR1pTMHFQV05KZzBtVE9XcGdUUWphU0Q2UDNOSURYcmxFdUpNUFNOS1o3c1VSckk1K2tZb29NYWF4eWJrZ2NwSFI2bi96WGNMT0R3bGpEbDRDdHdFWjU3bzdrUUtNNGV4dTdvQ2pPVDRSVTk0M3JPRzlpL0NyY29TNDE3emlqSzFabUg1d0c4UDFWUEhFSWpsWkY2MDkyOG1NU3JSK2FKV2g5cGJqMGtPM01mZW0rUzJ3czNhSm1MUndEWkU4WVlOa0VVNFBncmJHNytKVFd5a3UyWnNhRmZsa0dabGUwWDVhNXFVRjlXUUMvWVBtZkNYNi94NWthQU5zVkNWVXBZelpLU1doV0JMV2Nqck9YajhwY0RMTm5kbU9aTVE2bEQvYU1pMVRUZzJ6TnhjSnVERjZOY3RCcUNBQ3VSRGdlNVhCQ1Q5NmRrMERHTlR6ckxPRkdxaUpQZUZ1KzIxTHF2d1luRVgxSEJ3Z2FBQUFBQUVsRlRrU3VRbUNDIiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIHRyYW1pdGUgS2FsYVNNUzwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBpbCBudW1lcm8gZGkgdGVsZWZvbm8gY29uIGlsIHByZWZpc3NvIHNlbnphICsuIGVzLjM5WFhYWFhYWFhYIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cua2FsYXNtcy5jb20iIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmthbGFzbXMuY29tL0xvZ2luLmFzcHgiIG1ldGhvZD0iR0VUIj4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lvbiIgbGVmdD0nX19WSUVXU1RBVEUmcXVvdDsgdmFsdWU9JnF1b3Q7JyByaWdodD0nJnF1b3Q7JyAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNlc3NpZCIgbGVmdD0nX19FVkVOVFZBTElEQVRJT04mcXVvdDsgdmFsdWU9JnF1b3Q7JyByaWdodD0nJnF1b3Q7JyAvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9zdXBlcm1hYy5hbHRlcnZpc3RhLm9yZy9zY3JpcHQvc2Vzc2lvbi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idmlldyIgdmFsdWU9IiUlc2Vzc2lvbiUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50IiB2YWx1ZT0iJSVzZXNzaWQlJSIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InZpZXciIGxlZnQ9IlZJRVdTVEFURToiIHJpZ2h0PSI6IiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50IiBsZWZ0PSJFVkVOVFZBTElEQVRJT046IiByaWdodD0iOiIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmthbGFzbXMuY29tL0xvZ2luLmFzcHgiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVFRBUkdFVCIgdmFsdWU9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UQVJHVU1FTlQiIHZhbHVlPSIiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19WSUVXU1RBVEUiIHZhbHVlPSIlJXZpZXclJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVkFMSURBVElPTiIgdmFsdWU9IiUlZXZlbnQlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJMb2dpbjEkVXNlck5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iTG9naW4xJFBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkxvZ2luMSRMb2dpbkJ1dHRvbiIgdmFsdWU9IkxvZyBJbiIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9IllvdXIgbG9naW4gYXR0ZW1wdCB3YXMgbm90IHN1Y2Nlc3NmdWwuIFBsZWFzZSB0cnkgYWdhaW4uIiBlcnJtc2c9ImRhdGkgZGkgTG9naW4gRXJyYXRpIiAvPg0KICAgICAgICAgICAgICAgIDwvZXJyb3JzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmthbGFzbXMuY29tL21lbWJlcnMvZGVmYXVsdC5hc3B4IiBtZXRob2Q9IkdFVCI+DQogICAgICAgICAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNlc3Npb24yIiBsZWZ0PSdfX1ZJRVdTVEFURSZxdW90OyB2YWx1ZT0mcXVvdDsnIHJpZ2h0PScmcXVvdDsnIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icHJldmlvdXMiIGxlZnQ9J19fUFJFVklPVVNQQUdFJnF1b3Q7IHZhbHVlPSZxdW90OycgcmlnaHQ9JyZxdW90OycgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzZXNzaWQyIiBsZWZ0PSdfX0VWRU5UVkFMSURBVElPTiZxdW90OyB2YWx1ZT0mcXVvdDsnIHJpZ2h0PScmcXVvdDsnIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iY3JlZGl0cyIgbGVmdD0nQ3JlZGl0c0xhYmVsJnF1b3Q7IHN0eWxlPSZxdW90O2ZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtc2l6ZToxMHB0O2ZvbnQtd2VpZ2h0OmJvbGQ7JnF1b3Q7Jmd0OycgcmlnaHQ9IiZsdDsiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3N1cGVybWFjLmFsdGVydmlzdGEub3JnL3NjcmlwdC9zZXNzaW9uLnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ2aWV3IiB2YWx1ZT0iJSVzZXNzaW9uMiUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50IiB2YWx1ZT0iJSVzZXNzaWQyJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ2aWV3MiIgbGVmdD0iVklFV1NUQVRFOiIgcmlnaHQ9IjoiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZXZlbnQyIiBsZWZ0PSJFVkVOVFZBTElEQVRJT046IiByaWdodD0iOiIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmthbGFzbXMuY29tL21lbWJlcnMvZGVmYXVsdC5hc3B4IiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9fRVZFTlRUQVJHRVQiIHZhbHVlPSIiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVEFSR1VNRU5UIiB2YWx1ZT0iIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9fVklFV1NUQVRFIiB2YWx1ZT0iJSV2aWV3MiUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9fUFJFVklPVVNQQUdFIiB2YWx1ZT0iJSVwcmV2aW91cyUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Il9fRVZFTlRWQUxJREFUSU9OIiB2YWx1ZT0iJSVldmVudDIlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJBdXRvU3VnZ2VzdFRleHRCb3gyIiB2YWx1ZT0iJSVpbnRjb2RlJSUlJWludG51bSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InR4dE1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJCdXR0b24xIiB2YWx1ZT0iU2VuZCIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9IlByZVNlbmQiIGFjY2VwdG1zZz0iU01TIEludmlhdG8hIENyZWRpdGkgcmVzaWR1aSBwcmltYSBkZWxsJmFwb3M7aW52aW86ICUlY3JlZGl0cyUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iUGVuZGluZyIgYWNjZXB0bXNnPSJTTVMgSW52aWF0byEgQ3JlZGl0aSByZXNpZHVpIHByaW1hIGRlbGwmYXBvcztpbnZpbzogJSVjcmVkaXRzJSUiIC8+DQogICAgICAgICAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgICAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBlcnJzdHI9Ik5vIHN1ZmZpY2llbnQgY3JlZGl0cyIgZXJybXNnPSJDcmVkaXRpIGluc3VmZmljaWVudGkgcGVyIGwmYXBvcztpbnZpbyEiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMjciIG5hbWU9IlJ5bmdhIiB2PSIxLjAiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE2MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBSUFBQUNRa1dnMkFBQUFDWEJJV1hNQUFBc1RBQUFMRXdFQW1wd1lBQUFBQkdkQlRVRUFBTEdPZlB0Umt3QUFBQ0JqU0ZKTkFBQjZKUUFBZ0lNQUFQbi9BQUNBNlFBQWRUQUFBT3BnQUFBNm1BQUFGMitTWDhWR0FBQUN6MGxFUVZSNDJnVEJUVzlVVlJnQTRQYzk1OXh6Nzh5NTg5RXB0MU1wd3JTVUl1d2syaEtqTzFuUVdORS93TXJFaEw5QTJKaTRjaWVKQytOQ2pRc0RpUVNDY1NFbWZtQUNJVEZwa0E1YUpvekQyUG5xM1BiT3pQMDY5NXg3ZUI3ODRNYkRYMW9yWVoyS3lVUm1lNHZIMk5aUjd4eTg2Rm84U1FzL2p2SnRuME5lUjRhWTdtM1dDY0tYTzdTNHB0bnpoWEgvNmh1Tjk5YVBNUTE1YkFSZ2xVT2Z3M2ROLzZ1NzdmK2NTdTdWVEtCWU9kYVJHaDVWLzN6eS92bU5tdmppM3M3dGxqdWdBenNybmlObTQ0eTErZGJxYTV2TG45NSt0QU1oNUVjb1hMcGNuZ2FmdjcxNlpLRjg5ZXMvdmg4Yyt0YXFCRGVxenJXaTdINnIvYlRkMlhxekVWcndvRGVnbkRNSk5YRmk3dFNhOS9ITnA3dkpLN0FRb2ZaZEZjeVVvWlRyc3ZkbjE3LzFlRmcrdWFKM1FPYzFWZzRqKzFVNmx0VW1PZ2svRHJJSFZJU1dJclBVaWNYTUVtQUpZeHdSeTBxU0VEMWxrMEpjNFltTEh0aWhRU0NhbzZ3SzVhS2Uycm1RQ0ZMOUQyaW51Ui95SVVHTG1leHNPUmczaG1ZSjAzWmxLRVVQUXdtQm1TN0VRVGdHUVN0elV5UThucmxaNUVIaERBSGFYOU9CTDZKdkx5eGZYTXpnWU00WUVkcUVKaE1rcmhXNzE4K3ZYMnpNRnc4NXQydG9Hd2FaUEgzS085RlluQUdDN29FeVFEUENjZ1ZWazVlTUN1cEVYVmhhUEYyTmJ6VHZkOEo5Z3BSdnQvMmZuL1g3QUdDWFFHVm9NbFF4eVdaRVRRb1lXN2JWbWdYTkF6bG1Yc2c5eWo2ODFodU1IajcrOS9rMGZ6STIrOXBCZ29RWWpVNXVLc0FvR1hXMkQvYjJyZU0vZFlRbVZhWU1qMFQ5QmFHZFpweHlHNWhyakpRbUExVUVLS1VLZm0vMlB0cDQvVmwza2lmOUFxR01hS21BNkZJZE5CakZBU2dZNUJUZW5mZjM0eWh4clN0Yjd3eXB2dmZvYjh0eXlwQ2g4OWtUNDFvcEFsZ0NZN1JObnNoZytlVDhyNWZxdXpQencyNC82UjNlYkkya2FhaVNUUTk3YkgyRlAraE9zQ2pBS0tLVVl6UWw2V1RVL2VhM3dWOUQrMDVYbGFTYzFwWlFsa3c4WFY4cHZod0EzK2x5Y25yalNQTUFBQUFBU1VWT1JLNUNZSUk9IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+QWNxdWlzdGEgZWQgaW52aWEgc21zIHRyYW1pdGUgUnluZ2E8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5yeW5nYS5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5yeW5nYS5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSIiIGRlc2M9Ik51bWVybyB2ZXJpZmljYXRvIGNoZSB2ZXJyw6AgdmlzdWFsaXp6YXRvIGNvbWUgbWl0dGVudGUiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwczovL3d3dy5yeW5nYS5jb20vbXlhY2NvdW50L2luZGV4LnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJ1c2VybmFtZSIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwYXNzd29yZCBpbmNvcnJlY3QiIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnJ5bmdhLmNvbS9teWFjY291bnQvd2Vic21zMi5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0ic2VuZCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFuZWwiIHZhbHVlPSJ0cnVlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJjYWxsZXJpZCIgdmFsdWU9IiUlbWl0dGVudGUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJibnJwaG9uZW51bWJlciIgdmFsdWU9IjAwJSVpbnRwcmVmJSUlJWludG51bSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZW5kc2NoZWR1bGVkIiB2YWx1ZT0ibm8iLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJzZW50ISIvPg0KICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iU29ycnksIHlvdSBkbyBub3QgaGF2ZSBlbm91Z2ggY3JlZGl0IiBlcnJtc2c9IkNyZWRpdG8gZXNhdXJpdG8uIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBob25lbnVtYmVyIGlzIGluY29ycmVjdCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iLz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0icGhvbmVudW1iZXIgaXMgaW52YWxpZCIgZXJybXNnPSJOdW1lcm8gbm9uIHZhbGlkby4iLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iNTkiIG5hbWU9IlNtYXJ0Vm9pcCIgdj0iMS4wIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSI2NDAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQUlBQUFDUWtXZzJBQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUlHTklVazBBQUhvbEFBQ0Fnd0FBK2Y4QUFJRHBBQUIxTUFBQTZtQUFBRHFZQUFBWGI1SmZ4VVlBQUFKUlNVUkJWSGphbEpOUFR4TlJGTVh2bTNrelErbWIwazViQ3FJVUZGQlFxc0VGWW94dVRIUkJnbTdjRzJQY3VETHNYUGdOV09CQ0kzNEFUVXlJQzlRZENFRmpFRXdKdEtTQVdOcUNaVXJiNmRqT2RQNjg1d0lUZHpYZXpkM2NYMDV1emptSU1RYi9NL2hvWmJPWjdhMU5qdVBQeFdJQmY2QUJ3QUZBTXBtWW4xOXdHYzN0WmJjMlU2N3JOZ0pzMjlsTi94ZzZyWndNdXIwUmxOcElxS3JhQ0dDTVZjcEZhaFlZdFlqWEEwN05jUm9xaUtKd3FydlQwZzg5RXBCbXBoQVJDK0kvbmg0YzZNc25VdTgrZlBVcmNxVHJRcE5Nd0xhaHJER2VvNWJGUlNJMG4yZHFnUi9vZDFiWE1LT09XeTlUWHBiclRrZzVGcnQ4emJPMFhKaVl0QWJQUW5zYi8vUjVZR2E2TmpGcHpDOG9zKzlMRHg5eHRwNUR4azY0bzdVL2RJTDRPamxCMEYrOU1YdysrY25qNXRoZ0pidHZKamNxaVEwakhEWjMwbVc5eW9GcklNUjRacmxFRWduNXBWZE15NjRmcU5hektacmJxMkNzZjF2Vjlhb2RESlUrTDhHVkVZeUVGdGVod1BOY0lPUWgzcnBSdHd5ak9MZW94ZGRDRCs1WlNyQzRFcmNKb1lDcThYVkV2RmlRMngwOC9ET2R3ZEVXeEZOV08zRDlBZWpyZFNpMWVFeTdPdFgxcFA5OHpBSnd6L1MyM3hybDcwYWoybllPT3FLaVIvSUluTHErVWxQTDlXZ0hPdFNrL2o0bXk2WWtjaU5EcWxuRm1KRnlFYjBFa0FFS1U5TXpiUmM5c25mc3hUaDYrL3I0NkcwT04zdXZEaDkrV2l4dGJWWlc0NkRySW9BTGdKWUJwTzZ1OFp0M3JKNUxlNFo1bjJYR2ZHUTNuYUdwaExUd2tkYzA0U2h3Z0k2TVF3Y0FTQWwrdVhHOVplZDdxNEQzdTN0SVNXdWFtdzNyT2dmQS9weityY0R2QVFCUTVoVCtxUEt4V1FBQUFBQkpSVTVFcmtKZ2dnPT0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBTbWFydFZvaXA8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5zbWFydHZvaXAuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cuc21hcnR2b2lwLmNvbSIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iTnVtZXJvIHZlcmlmaWNhdG8gY2hlIHZlcnJhJyB2aXN1YWxpenphdG8gY29tZSBtaXR0ZW50ZSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnNtYXJ0dm9pcC5jb20vbXlhY2NvdW50L2luZGV4LnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJ1c2VybmFtZSIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwYXNzd29yZCBpbmNvcnJlY3QiIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd3d3LnNtYXJ0dm9pcC5jb20vbXlhY2NvdW50L3dlYnNtczIucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImFjdGlvbiIgdmFsdWU9InNlbmQiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhbmVsIiB2YWx1ZT0idHJ1ZSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY2FsbGVyaWQiIHZhbHVlPSIlJW1pdHRlbnRlJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iYm5ycGhvbmVudW1iZXIiIHZhbHVlPSIwMCUlaW50cHJlZiUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2VuZHNjaGVkdWxlZCIgdmFsdWU9Im5vIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0ic2VudCEiLz4NCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlNvcnJ5LCB5b3UgZG8gbm90IGhhdmUgZW5vdWdoIGNyZWRpdCIgZXJybXNnPSJDcmVkaXRvIGVzYXVyaXRvLiIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJwaG9uZW51bWJlciBpcyBpbmNvcnJlY3QiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9InBob25lbnVtYmVyIGlzIGludmFsaWQiIGVycm1zZz0iTnVtZXJvIG5vbiB2YWxpZG8uIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjkzIiBuYW1lPSJDaGVhc3kiIHY9IjEuMCIgbWF4c21zPSIxIiBzaW5nbGVsZW49IjEyMCIgc21zX2Rpdmlzb3I9IjEyMCIgbWF4bGVuPSIxMjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQUlBQUFDUWtXZzJBQUFBQVhOU1IwSUFyczRjNlFBQUFBUm5RVTFCQUFDeGp3djhZUVVBQUFBSmNFaFpjd0FBRHNNQUFBN0RBY2R2cUdRQUFBRUFTVVJCVkRoUFkvajU4MmZHSWdZaUVWQXhkcVdyVHVYUE9oaUMxUlFzR2dxWDgvLy8vLy9qdCtmNE5HUXRacjc3NnRqbEoxdHlsM0lDMmIvK2ZIdjQ1Z3hRUTlscUNTRGo0TTFwY00xUUc0Q0tYbisrQnpSNDE1VXVvTnp1cTcwTGp5WUFHUmNmYndRS25uKzREbDBEeExERHQyWStlWDhKTHBlL2pPZjkxeWZiTHJVQXJjV2lnY2lBQWpscC9ibUszMzkvQXMwR0JnNmF0cHdsYkh1dlQzajE2ZmFQMzU4aDRZYWlZY254TkRRTlFML3R1TndPMFREblVEaFVBNUdPZ1NoRHhBTnBuZ1phRGJRWEhxekF3SVVFS3pCbXNBY3JKT0t1UE4yT0ZuRVZhNlFmdnoxLzVQWWNmTUVLREg3Q1NRUE4zL2dTMzVzM2I0Z1BKYUJpQUxQWlpjaUt2a0NwQUFBQUFFbEZUa1N1UW1DQyIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIFNNUyB0cmFtaXRlIGNoZWFzeSAgYWNjdW11bGFuZG8gZGVpIGNyZWRpdGkgc3VsIHNpdG8uPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cuY2hlYXN5Lml0IiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cuY2hlYXN5Lml0IiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5jaGVhc3kuaXQvIj4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic2Vzc2lvbiIgbGVmdD0iX19WSUVXU1RBVEUmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJzZXNzaWQiIGxlZnQ9Il9fRVZFTlRWQUxJREFUSU9OJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0L3Nlc3Npb24ucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InZpZXciIHZhbHVlPSIlJXNlc3Npb24lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iZXZlbnQiIHZhbHVlPSIlJXNlc3NpZCUlIi8+DQogICAgICAgIDwvdmFycz4NCiAgICAgICAgPGNvbnRlbnRzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idmlldyIgbGVmdD0iVklFV1NUQVRFOiIgcmlnaHQ9IjoiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50IiBsZWZ0PSJFVkVOVFZBTElEQVRJT046IiByaWdodD0iOiIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmNoZWFzeS5pdC9ob21lLmFzcHgiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDxoZWFkZXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHA6Ly93d3cuY2hlYXN5Lml0Ii8+DQogICAgICAgIDwvaGVhZGVycz4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJfX1ZJRVdTVEFURSIgdmFsdWU9IiUldmlldyUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVkFMSURBVElPTiIgdmFsdWU9IiUlZXZlbnQlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iQ09NX0JveF9Mb2dpbjEkdHh0X1VTUiIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iQ09NX0JveF9Mb2dpbjEkdHh0X1BXRCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iQ09NX0JveF9Mb2dpbjEkY21kX0xvZ2luIiB2YWx1ZT0iRU5UUkEiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJsb2dpbiBlcnJhdGEiIGVycm1zZz0iQXR0ZW56aW9uZSwgdXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuY2hlYXN5Lml0L21lc3Nlbmdlcj9zPXNtcyI+DQogICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlc3Npb24xIiBsZWZ0PSJfX1ZJRVdTVEFURSZxdW90OyB2YWx1ZT0mcXVvdDsiIHJpZ2h0PSImcXVvdDsiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InNlc3NpZDEiIGxlZnQ9Il9fRVZFTlRWQUxJREFUSU9OJnF1b3Q7IHZhbHVlPSZxdW90OyIgcmlnaHQ9IiZxdW90OyIvPg0KICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgPC9wYWdlPg0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vc3VwZXJtYWMuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0L3Nlc3Npb24ucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICA8dmFycz4NCiAgICAgICAgICA8dmFyIG5hbWU9InZpZXciIHZhbHVlPSIlJXNlc3Npb24xJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50IiB2YWx1ZT0iJSVzZXNzaWQxJSUiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJ2aWV3MSIgbGVmdD0iVklFV1NUQVRFOiIgcmlnaHQ9IjoiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImV2ZW50MSIgbGVmdD0iRVZFTlRWQUxJREFUSU9OOiIgcmlnaHQ9IjoiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5jaGVhc3kuaXQvbWVzc2VuZ2VyLmFzcHg/cz1zbXMiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgIDxoZWFkZXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHA6Ly93d3cuY2hlYXN5Lml0L21lc3Nlbmdlcj9zPXNtcyIvPg0KICAgICAgICA8L2hlYWRlcnM+DQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0iU2NyaXB0TWFuYWdlcjEiIHZhbHVlPSJVcGRhdGVQYW5lbFNNU3xjbWRfSU5WSUFfU01TIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UVEFSR0VUIiB2YWx1ZT0iIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJfX0VWRU5UQVJHVU1FTlQiIHZhbHVlPSIiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InR4dF9TTVNfTnVtZXJvIiB2YWx1ZT0iJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idHh0X1NNU19NU0ciIHZhbHVlPSIlJW1lc3NhZ2UlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iY2hrX0NvcHlFbWFpbFNtcyIgdmFsdWU9Im9uIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJfX1ZJRVdTVEFURSIgdmFsdWU9IiUldmlldzElJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iX19FVkVOVFZBTElEQVRJT04iIHZhbHVlPSIlJWV2ZW50MSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJfX0FTWU5DUE9TVCIgdmFsdWU9InRydWUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImNtZF9JTlZJQV9TTVMiIHZhbHVlPSJJbnZpYSBTTVMiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJtZXNzZW5nZXI/Zj1zaSIvPg0KICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgPGVycm9ycz4NCiAgICAgICAgICA8dmFyIGVycnN0cj0iTnVtZXJvIGRpIGNlbGx1bGFyZSBOT04gdmFsaWRvIiBlcnJtc2c9Ik51bWVybyBkaSBjZWxsdWxhcmUgTk9OIHZhbGlkbyIvPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJNZXNzYWdnaW8gTk9OIHZhbGlkbyIgZXJybXNnPSJUZXN0byBub24gdmFsaWRvLCBjb250aWVudGUgY2FyYXR0ZXJpIG5vbiBhbW1lc3NpIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9IkhBSSBGSU5JVE8gSUwgVFVPIENSRURJVE8gU01TIiBlcnJtc2c9IkNyZWRpdGkgc21zIGVzYXVyaXRpIi8+DQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9Ijk1IiBuYW1lPSJTbXNQZXJ0eSIgdj0iMS4wIiBtYXhzbXM9IjMiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE2MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFBWE5TUjBJQXJzNGM2UUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUFnWTBoU1RRQUFlaVlBQUlDRUFBRDZBQUFBZ09nQUFIVXdBQURxWUFBQU9wZ0FBQmR3bkxwUlBBQUFBd0JRVEZSRkFBQUEvLy8vWE5GUkJZVVZxdUd0UUlORmp1OXkwdXZVaDcyS05iZ3lyLzZMVTZoYkFHUUFKSkluYmN0MWtkcVlScUZCZWZKZ1M3NUc0L2ZtYnJSbUphMGh1dC9CYnR0ZVQ0OVRMNTQ0RVpnVlU3NWFBSEVRTzU1U0ZZWWhac2hmUHNnMk1Zd3pQTE5GZnN5RThQdnlwdStMbjlxaWtzbVlhN3g4VHExSllMTnVRS3c0T1pVL3IrcTRDM2NYUkpCSlJhUmFvLytFVnNaSk42ZEJYYlZhMi9YY1E2ZE1WcTVtSHFNbEdaUWhndTVvTnFzeWRzbDhac3RzS29RdlZiSlFIWWtvTzU0NVdiMVJZYjlabU5PY1pOWldQYUJHSzVReVdNbFZjOGR2emViT05xSXpRcmhCS2Fvb1RhbFZpL1Z0T3NFMFBLbElUTFZJUHFRK05wRTNjTUdBVXI1Tm4rR21Xc05hOXZ6MzBlUFVScXRTWWN0Uk1hOHVTSXBMQUdZSCsvcjhYY1pLZ2M2S0NIZ1JKcFl1RkpFa2ZQVmxSYVpGUDZOVHBmV0pDNGNWUk1nNFBKQkJTTGRDUzY5RVQ3dERDWE1VQ1hzYW05NmtHWWdrZSs1alBxdzlWTXRKYWJSb1Y3dGNPTGsyUDZWSWh2QnFPYUk0T0s4eVE2dEtxK1N3UktKR1JheE9MSWN4UXFWVldiVlpIWVVvTktZL09xbEMrLzM4TnA4elNyZEowT1hWYmIxOVBxSlJQS2RIWDc5WjcvdnhBR1VBWE5CUlJhdwQWZadlFBQUFzNUpSRUZVT0U5bFUzdEkwMUVVdnBWaElvU0NFZ29HZ3BZOVVKdzJwODc1MnRibXM3bTB0alNWZE5oRGUwZ3Z0T2poSXpWS3hVSW90T1lyVXh1a29tVXVKRERGRWkzcmo0d2lKT2tCbW9VS09mM3lIcDFhSGZoKzk5eHp6L25PNDNmdktzd0xXeFRUM0N5eldMMkdUWmgrc1k2dlJqWTY5WVZPSEN6dG1jeFJ5bXdzMXB0ZGwxZE9ZSllwMHpRdTloZkNweTRZNG5vRlpBMHhCSEhkVG5qWEJ1TDhpeHh3bjVYQ3pKdVI2VkVFM0pIRHFjQU5TYzBaU084OGgyTmRGd2lIbjJRajdvRU85bm5PaUt5UHhmak14QklIRWN6TW1palkrdlFHeUtxMUNLeFNRNkpYSWFRbWxzQjFEditLR0ZobDJoRUpqNkgyK1NlL3N4QXNoVUcrV0hKb1hRUTVxZS90STNDZDIyU05VUWlzVVlDbE1wVDJsaThRY0thdE9SNWd4MjJRMEtwRlJvc09RWmRsaUw2dWhyUllTU3ZIOW54UEpEN1Y0R0JMR3BqT0VyNDNBaGNJWG83Mlk5MFpXNnpOdFlld3hBZUt3bkJ5OHFnUUliUWhqQWJvVng4Q1RhdUdTS1I2T2JWaGxlV0lWOStId0c1OXFLWmdidkN2OElXNE9CaVNhZ2t5bngrbGpMcWVST3p0allYblZTODZselFHMEt4NFRQbnIyMkNHYisyd0szR0J3eFVYQ0N1OUlMOGJqT2lPVUVRMUtiRzdUd2xKajVEMGNJTVVpcllRQ0JzRWNNcDFnM1crUFNyZjZjR0dKOTlqMDAxM2dsRHZoZGlIdStCcGNFZEVxd0xKZlNvaVMrZ09RL0o4TlpwT0ZVUUdBYmFWQ2VCUTVyelFBaC9Fbm81NHVKUnVodWlSRUxKYUdZSWFSVGo3TXdtWHh0S1E5K01RclhIZFNvUzFLUkhTSGt5KzRtYlo4bS9rYld5c2NxWHl6Tm5EalhJS2lqRkd3cS9MbThpMzNIZURyMTRFMi9MNThqL1ZMaE53VGRkM2hJSlQzc1pSOW12akoxQTdYb1NheVFJVVRhWWphK3dBTW9iM3c3WEpHV3FqOXUrYmFONmQ2czNHam5ZQnNpZFRpY0F3VjBTb1FnN1pwRDBpcFBlZC9QOHFyM3djZkxKOEp2RURLc3JJRVQrb2d2YVpscVp1dnZybW1LWEh0UEpnNXJjSmd5TkRlUHl4aXpEdytRMjQ3ZDlndnY4RHFRZWRiNGJXaUU4QUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSAyIHNtcyBhIHNldHRpbWFuYSB2ZXJzbyB0dXR0aS48L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJsb2dpbiIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5zbXNwZXJ0eS5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy5zbXNwZXJ0eS5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBpbCBudW1lcm8gbWl0dGVudGUgaW4gZm9ybWF0byBpbnRlcm5hemlvbmFsZSAoc2VuemEgKykiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogIDxwcm9jZWR1cmU+CiAgICAgPHBhZ2UgdXJpPSJodHRwOi8vaWFkZG85MS5hbHRlcnZpc3RhLm9yZy9zY3JpcHRwaHAvc21zcGVydHkucGhwIiBtZXRob2Q9IlBPU1QiPg0KCSAgPHZhcnM+DQoJICAgPHZhciBuYW1lPSJjb3IiIHZhbHVlPSIlJWNvcnJlemlvbmUlJSIgLz4NCgkgICA8dmFyIG5hbWU9Im1lc3MiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCgkgIDwvdmFycz4gDQoJICA8Y29udGVudHM+DQogICAgICAgPHZhciBuYW1lPSJtZXNzMSIgbGVmdD0ibWVzc2FnZ2lvOiIgcmlnaHQ9IjpmaW5pdG8iIC8+DQogICAgICA8L2NvbnRlbnRzPg0KCSA8L3BhZ2U+IA0KICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnNtc3BlcnR5LmNvbS9pbmRleC5waHAiIG1ldGhvZD0iUE9TVCI+DQogICAgICAgPGNvbnRlbnRzPg0KICAgICAgICA8dmFyIG5hbWU9InNvbm9kYWxsYXJhIiBsZWZ0PSJpbnB1dCB0eXBlPSZxdW90O2hpZGRlbiZxdW90OyBuYW1lPSZxdW90O2oiIHJpZ2h0PSImcXVvdDsiIC8+DQogICAgICAgPC9jb250ZW50cz4JICANCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5zbXNwZXJ0eS5jb20vaW5kZXgucGhwIiBtZXRob2Q9IlBPU1QiPiAgDQogICAgICAgIDx2YXJzPg0KICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJWxvZ2luJSUiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3ZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iU3VibWl0IiB2YWx1ZT0iTG9naW4iLz4NCiAgICAgICAgICA8dmFyIG5hbWU9Im9wdGlvbiIgdmFsdWU9ImxvZ2luIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJvcDIiIHZhbHVlPSJsb2dpbiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibGFuZyIgdmFsdWU9ImVuZ2xpc2giLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InJldHVybiIgdmFsdWU9Imh0dHA6Ly93d3cuc21zcGVydHkuY29tL2luZGV4LnBocCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IjAiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImZvcmNlX3Nlc3Npb24iIHZhbHVlPSIxIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJqJSVzb25vZGFsbGFyYSUlIiB2YWx1ZT0iMSIvPg0KICAgICAgICA8L3ZhcnM+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IkluY29ycmVjdCB1c2VybmFtZSBvciBwYXNzd29yZC4gUGxlYXNlIHRyeSBhZ2Fpbi4iIGVycm1zZz0iVXNlcm5hbWUgbyBQYXNzd29yZCBzYmFnbGlhdGkiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+DQogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuc21zcGVydHkuY29tL2luZGV4LnBocCIgbWV0aG9kPSJQT1NUIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJ0byIgdmFsdWU9IiUyQiUlaW50Y29kZSUlJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVtYmVyX2lkIiB2YWx1ZT0iMCIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iZ3JvdXBfaWQiIHZhbHVlPSIwIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJncm91cGJveCIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iZnJvbSIgdmFsdWU9IiUlbWl0dGVudGUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzczElJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ib3B0aW9uIiB2YWx1ZT0iY29tX3NtcyIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0idGFzayIgdmFsdWU9InNlbmRNZXNzYWdlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJpZCIgdmFsdWU9IjEiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImdpZCIgdmFsdWU9IiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0ic3VjY2Vzc01lc3NhZ2UiIHZhbHVlPSIiLz4NCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJzbXNzdWNjZXNzIi8+DQogICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgIDx2YXIgZXJyc3RyPSJQbGVhc2UgZW50ZXIgdGhlIGludGVybmF0aW9uYWwgbW9iaWxlIG51bWJlciBvciBncm91cCB5b3Ugd2FudCB0byBzZW5kIGFuIFNNUyBtZXNzYWdlIiBlcnJtc2c9Ikluc2VyaXNjaSBpbCBudW1lcm8gZGVsIGRlc3RpbmF0YXJpbyBpbiBmb3JtYXRvIGludGVybmF6aW9uYWxlIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlBsZWFzZSBlbnRlciB0aGUgbWVzc2FnZSB5b3Ugd2FudCB0byBzZW5kIiBlcnJtc2c9Ikluc2VyaXNjaSBpbCB0ZXN0byBkZWwgbWVzc2FnZ2lvIi8+DQogICAgICAgICAgPHZhciBlcnJzdHI9Im5vY3JlZGl0IiBlcnJtc2c9IkNyZWRpdGkgZXNhdXJpdGkiLz4NCiAgICAgICAgPC9lcnJvcnM+DQogICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iOTciIG5hbWU9IkNoZWFwVm9pcC1TTVMiIHY9IjEuMSIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMTYwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUtUMmxEUTFCUWFHOTBiM05vYjNBZ1NVTkRJSEJ5YjJacGJHVUFBSGphblZOblZGUHBGajMzM3ZSQ1M0aUFsRXR2VWhVSUlGSkNpNEFVa1NZcUlRa1FTb2dob2RrVlVjRVJSVVVFRzhpZ2lBT09qb0NNRlZFc0RJb0syQWZrSWFLT2c2T0lpc3I3NFh1amE5YTg5K2JOL3JYWFB1ZXM4NTJ6endmQUNBeVdTRE5STllBTXFVSWVFZUNEeDhURzRlUXVRSUVLSkhBQUVBaXpaQ0Z6L1NNQkFQaCtQRHdySXNBSHZnQUJlTk1MQ0FEQVRadkFNQnlIL3cvcVFwbGNBWUNFQWNCMGtUaExDSUFVQUVCNmprS21BRUJHQVlDZG1DWlRBS0FFQUdETFkyTGpBRkF0QUdBbmYrYlRBSUNkK0psN0FRQmJsQ0VWQWFDUkFDQVRaWWhFQUdnN0FLelBWb3BGQUZnd0FCUm1TOFE1QU5ndEFEQkpWMlpJQUxDM0FNRE9FQXV5QUFnTUFEQlJpSVVwQUFSN0FHRElJeU40QUlTWkFCUkc4bGM4OFN1dUVPY3FBQUI0bWJJOHVTUTVSWUZiQ0MxeEIxZFhMaDRvemtrWEt4UTJZUUpobWtBdXdubVpHVEtCTkEvZzg4d0FBS0NSRlJIZ2cvUDllTTRPcnM3T05vNjJEbDh0NnI4Ry95SmlZdVArNWMrcmNFQUFBT0YwZnRIK0xDK3pHb0E3Qm9CdC9xSWw3Z1JvWGd1Z2RmZUxacklQUUxVQW9PbmFWL053K0g0OFBFV2hrTG5aMmVYazVOaEt4RUpiWWNwWGZmNW53bC9BVi8xcytYNDgvUGYxNEw3aUpJRXlYWUZIQlBqZ3dzejBUS1VjejVJSmhHTGM1bzlIL0xjTC8vd2QweUxFU1dLNVdDb1U0MUVTY1k1RW1venpNcVVpaVVLU0tjVWwwdjlrNHQ4cyt3TSszelVBc0dvK0FYdVJMYWhkWXdQMlN5Y1FXSFRBNHZjQUFQSzdiOEhVS0FnRGdHaUQ0YzkzLys4Ly9VZWdKUUNBWmttU2NRQUFYa1FrTGxUS3N6L0hDQUFBUktDQktyQkJHL1RCR0N6QUJoekJCZHpCQy94Z05vUkNKTVRDUWhCQ0NtU0FISEpnS2F5Q1FpaUd6YkFkS21BdjFFQWROTUJSYUlhVGNBNHV3bFc0RGoxd0QvcGhDSjdCS0x5QkNRUkJ5QWdUWVNIYWlBRmlpbGdqamdnWG1ZWDRJY0ZJQkJLTEpDREppQlJSSWt1Uk5VZ3hVb3BVSUZWSUhmSTljZ0k1aDF4R3VwRTd5QUF5Z3Z5R3ZFY3hsSUd5VVQzVURMVkR1YWczR29SR29ndlFaSFF4bW84V29KdlFjclFhUFl3Mm9lZlFxMmdQMm84K1E4Y3d3T2dZQnpQRWJEQXV4c05Dc1Rnc0NaTmp5N0VpckF5cnhocXdWcXdEdTRuMVk4K3hkd1FTZ1VYQUNUWUVkMElnWVI1QlNGaE1XRTdZU0tnZ0hDUTBFZG9KTndrRGhGSENKeUtUcUV1MEpyb1IrY1FZWWpJeGgxaElMQ1BXRW84VEx4QjdpRVBFTnlRU2lVTXlKN21RQWtteHBGVFNFdEpHMG01U0kra3NxWnMwU0Jvams4bmFaR3V5QnptVUxDQXJ5SVhrbmVURDVEUGtHK1FoOGxzS25XSkFjYVQ0VStJb1VzcHFTaG5sRU9VMDVRWmxtREpCVmFPYVV0Mm9vVlFSTlk5YVFxMmh0bEt2VVllb0V6UjFtam5OZ3haSlM2V3RvcFhUR21nWGFQZHByK2gwdWhIZGxSNU9sOUJYMHN2cFIraVg2QVAwZHd3TmhoV0R4NGhuS0JtYkdBY1laeGwzR0srWVRLWVowNHNaeDFRd056SHJtT2VaRDVsdlZWZ3F0aXA4RlpIS0NwVktsU2FWR3lvdlZLbXFwcXJlcWd0VjgxWExWSStwWGxOOXJrWlZNMVBqcVFuVWxxdFZxcDFRNjFNYlUyZXBPNmlIcW1lb2IxUS9wSDVaL1lrR1djTk13MDlEcEZHZ3NWL2p2TVlnQzJNWnMzZ3NJV3NOcTRaMWdUWEVKckhOMlh4MktydVkvUjI3aXoycXFhRTVRek5LTTFlelV2T1VaajhINDVoeCtKeDBUZ25uS0tlWDgzNkszaFR2S2VJcEc2WTBUTGt4WlZ4cnFwYVhsbGlyU0t0UnEwZnJ2VGF1N2FlZHByMUZ1MW43Z1E1Qngwb25YQ2RIWjQvT0JaM25VOWxUM2FjS3B4Wk5QVHIxcmk2cWE2VWJvYnRFZDc5dXArNllucjVlZ0o1TWI2ZmVlYjNuK2h4OUwvMVUvVzM2cC9WSERGZ0dzd3drQnRzTXpoZzh4VFZ4Ynp3ZEw4ZmI4VkZEWGNOQVE2VmhsV0dYNFlTUnVkRThvOVZHalVZUGpHbkdYT01rNDIzR2JjYWpKZ1ltSVNaTFRlcE43cHBTVGJtbUthWTdURHRNeDgzTXphTE4xcGsxbXoweDF6TG5tK2ViMTV2ZnQyQmFlRm9zdHFpMnVHVkpzdVJhcGxudXRyeHVoVm81V2FWWVZWcGRzMGF0bmEwbDFydXR1NmNScDdsT2swNnJudFpudzdEeHRzbTJxYmNac09YWUJ0dXV0bTIyZldGblloZG50OFd1dys2VHZaTjl1bjJOL1QwSERZZlpEcXNkV2gxK2M3UnlGRHBXT3Q2YXpwenVQMzNGOUpicEwyZFl6eERQMkRQanRoUExLY1JwblZPYjAwZG5GMmU1YzRQemlJdUpTNExMTHBjK0xwc2J4dDNJdmVSS2RQVnhYZUY2MHZXZG03T2J3dTJvMjYvdU51NXA3b2Zjbjh3MG55bWVXVE56ME1QSVErQlI1ZEUvQzUrVk1HdmZySDVQUTArQlo3WG5JeTlqTDVGWHJkZXd0NlYzcXZkaDd4Yys5ajV5bitNKzR6dzMzakxlV1YvTU44QzN5TGZMVDhOdm5sK0YzME4vSS85ay8zci8wUUNuZ0NVQlp3T0pnVUdCV3dMNytIcDhJYitPUHpyYlpmYXkyZTFCaktDNVFSVkJqNEt0Z3VYQnJTRm95T3lRclNIMzU1ak9rYzVwRG9WUWZ1alcwQWRoNW1HTHczNE1KNFdIaFZlR1A0NXdpRmdhMFRHWE5YZlIzRU56MzBUNlJKWkUzcHRuTVU4NXJ5MUtOU28rcWk1cVBObzN1alM2UDhZdVpsbk0xVmlkV0Vsc1N4dzVMaXF1Tm01c3Z0Lzg3Zk9INHAzaUMrTjdGNWd2eUYxd2VhSE93dlNGcHhhcExoSXNPcFpBVEloT09KVHdRUkFxcUJhTUpmSVRkeVdPQ25uQ0hjSm5JaS9STnRHSTJFTmNLaDVPOGtncVRYcVM3Skc4Tlhra3hUT2xMT1c1aENlcGtMeE1EVXpkbXpxZUZwcDJJRzB5UFRxOU1ZT1NrWkJ4UXFvaFRaTzJaK3BuNW1aMnk2eGxoYkwreFc2THR5OGVsUWZKYTdPUXJBVlpMUXEyUXFib1ZGb28xeW9Ic21kbFYyYS96WW5LT1phcm5pdk43Y3l6eXR1UU41enZuLy90RXNJUzRaSzJwWVpMVnkwZFdPYTlyR281c2p4eGVkc0s0eFVGSzRaV0Jxdzh1SXEyS20zVlQ2dnRWNWV1ZnIwbWVrMXJnVjdCeW9MQnRRRnI2d3RWQ3VXRmZldmMxKzFkVDFndldkKzFZZnFHblJzK0ZZbUtyaFRiRjVjVmY5Z28zSGpsRzRkdnlyK1ozSlMwcWF2RXVXVFBadEptNmViZUxaNWJEcGFxbCthWERtNE4yZHEwRGQ5V3RPMzE5a1hiTDVmTktOdTdnN1pEdWFPL1BMaThaYWZKenMwN1AxU2tWUFJVK2xRMjd0TGR0V0hYK0c3UjdodDd2UFkwN05YYlc3ejMvVDdKdnR0VkFWVk4xV2JWWmZ0Sis3UDNQNjZKcXVuNGx2dHRYYTFPYlhIdHh3UFNBLzBISXc2MjE3blUxUjNTUFZSU2o5WXI2MGNPeHgrKy9wM3ZkeTBOTmcxVmpaekc0aU53UkhuazZmY0ozL2NlRFRyYWRveDdyT0VIMHg5MkhXY2RMMnBDbXZLYVJwdFRtdnRiWWx1NlQ4dyswZGJxM25yOFI5c2ZENXcwUEZsNVN2TlV5V25hNllMVGsyZnl6NHlkbFoxOWZpNzUzR0Rib3JaNzUyUE8zMm9QYisrNkVIVGgwa1gvaStjN3ZEdk9YUEs0ZFBLeTIrVVRWN2hYbXE4NlgyM3FkT284L3BQVFQ4ZTduTHVhcnJsY2E3bnVlcjIxZTJiMzZSdWVOODdkOUwxNThSYi8xdFdlT1QzZHZmTjZiL2ZGOS9YZkZ0MStjaWY5enN1NzJYY243cTI4VDd4ZjlFRHRRZGxEM1lmVlAxdiszTmp2M0g5cXdIZWc4OUhjUi9jR2hZUFAvcEgxanc5REJZK1pqOHVHRFlicm5qZytPVG5pUDNMOTZmeW5RODlrenlhZUYvNmkvc3V1RnhZdmZ2alY2OWZPMFpqUm9aZnlsNU8vYlh5bC9lckE2eG12MjhiQ3hoNit5WGd6TVY3MFZ2dnR3WGZjZHgzdm85OFBUK1I4SUg4by8yajVzZlZUMEtmN2t4bVRrLzhFQTVqei9HTXpMZHNBQUFBZ1kwaFNUUUFBZWlVQUFJQ0RBQUQ1L3dBQWdPa0FBSFV3QUFEcVlBQUFPcGdBQUJkdmtsL0ZSZ0FBQWk1SlJFRlVlTnFrMDAxdkcxVVV4dkhmbmZFNDQ3elVjUnJpdG9MRUZXMVZpUVhLb2xXWC9neVZnRS9EaW8vRGdnVUxOaXpNQjBDUlVJVzZxWlRRQk1XaWljYzR3Vy9qdVN5bUpRV0pWZS9xU0VmNm4zT2U1N2toeHVoRFhnTlczMzU5b0Z3TTBMYTVQVmFjOTAwdWZwTWtrY0RPeDRRVS94NldmdkZORFZET0IzNytybWR5U1dPdDQ4R3pnYXg1cUZ3VjhpMlNsQmdKeVRZQ29sZ1YvMnlnWEhSTkxwai94WExHeTUrNlNNVElrK2NraldDMTNGZk9CNnBWV3doaldkN0hTUTI0dFR1VXRYb1djOUlHV1hPSVNwYXowYUVxMjViemdWOSs2Qm1kc2RicWVQcmxBUGVUdHlmMGZmcjBXRE1mMmR3NTFsenZZeXpmWlBLR3k5ZUp5OU91MFNtTEtkZC84dUxIN3MwSjE4V0p0SEZJQ0VJYWhWQklNM2J2RXl0aVZSR0hRdG9Ua2xxVHhYUjRBd2dKTVJaRUdrM2FlK3gvVHBJeFBpZEp4MlpYZlZ1N0E4VjVXOTRhRS9zM2dLcWtXdkpabjUxUG1GNlIzM3FyL2g1WEY5SDE2QVNIZ2lBa1VWd1ZVR3Z3eHlzV0U5cGRzbnhiakIweGJxdXFHclQxVVcxampBVkdLTjVsb1FiRUZTRUpyaThPekNaSGxyTlhsdE1qSEloVjBOcmk3cVAvVDZMVmtoRGFMazhIWGd4NmxuUHl6WTVuWHcwMDF3K1ZpOEx1UHNVWkY2L0pOLzRET0h2NWJwdXUyVFhWcXU3T1JsM2xOQkdyV3VnN0R4Z1BLWDRuemQ0RHJOOUdxTVJ5YUw3b0tSZmttK3c5SE1wYVZXMWxKRW00ODVpajd6bjc5VDBOSkFoamF4dDlkeDhldTMxdjVNbnpZMG5XcHhyWFZvYzZFMm5LdlVkMWpmQ2gzL252QVFBdHZ1ajhXa1YwVHdBQUFBQkpSVTVFcmtKZ2dnPT0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBDaGVhcFZvaXA8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbCd1c2VybmFtZSBkaSByZWdpc3RyYXppb25lIGRpIHd3dy5jaGVhcHZvaXAuY29tIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cuY2hlYXB2b2lwLmNvbSIgLz4KCQk8b3B0aW9uYWwgbj0iMyIgbmFtZT0ibWl0dGVudGUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGlsIG51bWVybyByZWdpc3RyYXRvIHN1IHd3dy5jaGVhcHZvaXAuY29tICIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuY2hlYXBuZXQuaXQvYXJlYXV0ZW50aS92b2lwL3Ntcy9pbnZpYS1zbXMtYXBpLnBocCIgbWV0aG9kPSJQT1NUIj4NCgkJCTx2YXJzPg0KCQkJCTx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiIC8+DQoJCQkJPHZhciBuYW1lPSJwYXNzd29yZCIgdmFsdWU9IiUlcGFzc3dvcmQlJSIgLz4NCgkJCQk8dmFyIG5hbWU9Im1pdHRlbnRlIiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIiAvPg0KCQkJCTx2YXIgbmFtZT0ic24iIHZhbHVlPSJ8JSVpbnRudW0lJXwiIC8+DQoJCQkJPHZhciBuYW1lPSJ0ZXN0byIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KCQkJCTx2YXIgbmFtZT0iU3VibWl0IiB2YWx1ZT0iSW52aWEiIC8+DQoJCQk8L3ZhcnM+DQoJCQk8ZXJyb3JzPg0KCQkJCTx2YXIgZXJyc3RyPSJQcm9iYWJpbGUgZXJyYXRhIHVzZXJuYW1lIG8gcGFzc3dvcmQiIGVycm1zZz0iSW52YWxpZCB1c2VybmFtZSBvciBwYXNzd29yZCIgLz4NCgkJCQk8dmFyIGVycnN0cj0iaWwgdGVzdG8gbm9uIiBlcnJtc2c9Ik1pc3NpbmcgbWVzc2FnZSB0ZXh0IiAvPg0KCQkJCTx2YXIgZXJyc3RyPSJpbCBkZXN0aW5hdGFyaW8gbm9uIiBlcnJtc2c9Ik1pc3NpbmcgcmVjaXBpZW50IG51bWJlciIgLz4NCgkJCQk8dmFyIGVycnN0cj0iaWwgbWl0dGVudGUgc3BlY2lmaWNhdG8gbm9uIiBlcnJtc2c9IlVuYXV0aG9yaXplZCBzZW5kZXIgbnVtYmVyIiAvPg0KCQkJCTx2YXIgZXJyc3RyPSJJbnNlcml0aSBjYXJhdHRlcmkgbm9uIHZhbGlkaSIgZXJybXNnPSJJbnZhbGlkIHJlY2lwaWVudCBudW1iZXIiIC8+DQoJCQk8L2Vycm9ycz4NCgkJCTxhY2NlcHQ+DQoJCQkJPHZhciBhY2NlcHRzdHI9InN0YXRvIHNwZWRpdG8gY29uIHN1Y2Nlc3NvIiAvPg0KCQkJPC9hY2NlcHQ+DQoJCTwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI5OCIgbmFtZT0iU01TY2l0eS1GcmVlIiB2PSIxLjAiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTIwIiBzbXNfZGl2aXNvcj0iMTIwIiBtYXhsZW49IjEyMCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFCM1JKVFVVSDF3VUlEUklBdnBmQ0tBQUFBQWx3U0ZsekFBQU93d0FBRHNNQngyK29aQUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUZiU1VSQlZIamFuWlBQU2dKUkdNWFB2VE5wYWlVdGxJSUllb0ZvMlNZaUJ3cUQxZ1U5Z05EcnRPMEpXclpwRVNiVVNsclZBeFFSSldvWWF1Yjh1WE8vN2x5WmFQcWpqaDhNY3pmbk45ODU1dzdEdHltdmJoSEdHT3V1d3NJeml5ditDZUZhdkdZUkdJdWovL29ncTZ6dkV2ayt5SEZqQWNMaFJqSUJ4dmxFWWcwZ3RZaTBuY2tCZnI4UFVLejhJbVArOHE3Q0hGZ2lrS1NSY0RPaU5ReE16V2VSV1ZtRzlBUjZENDhRM1o3eUtNY0Q4TlEwRnZkMmtDOWFLcGMrbmsvUDBMaTRnblQrejRnYm1UVENPNURJemlHM3ZZblUwZ0xTYW90OHNRQ3VXaG9hb2dad3BpRkJvSGF0b2Q2MmJzWitlZ0VKTVR5REFKQlUzdDNYRmtUdkEvZkhKOGhaR3hyUUxGOUR1dDVRZ042OWVsQWlyOTJCMTJ5cDBPV2doYUNBNElhcVp5UWdtSnZESTNMZjJuQnFkVldmL0xzK05yQUt0VEdVTmV2Mk12b0hWZmRMSkxwZGlNNDdnamNvS2pablovVFI5endVcXVkYSt3blFYcGJaOTI0a0d3QUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgc21zIHZlcnNvIHR1dHRpIHV0aWxpenphbmRvIGkgcHVudGkgc21zIGdyYXR1aXRpIGRlbCB0dW8gYWNjb3VudC48L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJuYXRjb2RlIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBpbCBwcmVmaXNzbyBpbnRlcm5hemlvbmFsZSBkZWwgbnVtZXJvIHJlZ2lzdHJhdG8gKHNlbnphICsgbyAwMCkiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9Im1pdHRlbnRlIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBpbCBudW1lcm8gZGkgY2VsbHVsYXJlIHJlZ2lzdHJhdG8gc3Ugd3d3LnNtc2NpdHkuY29tIHNlbnphIHByZWZpc3NvIGludGVybmF6aW9uYWxlICIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0icGFzc3dvcmQiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGxhIHBhc3N3b3JkIGRpIGFjY2Vzc28gZGkgIHd3dy5zbXNjaXR5LmNvbSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSBtZXRob2Q9IlBPU1QiIHVyaT0iaHR0cDovL2RhbGx5LmFsdGVydmlzdGEub3JnL3NjcmlwdGRhbGx5L1Nvc3RpdHV6aW9uZUFjY2VudGF0ZS5waHAiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IkNIRUNLIiB2YWx1ZT0iT04iIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idGV4dCIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibWVzczEiIGxlZnQ9IlRlWHRNZVNzQWdFPToiIHJpZ2h0PSI6VGVYdE1lU3NBZ0UiIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vaWFkZG85MS5hbHRlcnZpc3RhLm9yZy9zY3JpcHRwaHAvc21zY2l0eS1jb2RlLWNvbnZlcnNpb24ucGhwP2ludGNvZGU9JSVuYXRjb2RlJSUiPg0KICAgICAgICAgICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ2YWxvcmVwYWVzZTEiIGxlZnQ9IkNPRElDRS1TTVNDSVRZOiIgcmlnaHQ9IjotLS0iIC8+DQogICAgICAgICAgICAgICAgPC9jb250ZW50cz4NCiAgICAgICAgICA8L3BhZ2U+DQoJCSAgPHBhZ2UgdXJpPSJodHRwOi8vaWFkZG85MS5hbHRlcnZpc3RhLm9yZy9zY3JpcHRwaHAvc21zY2l0eS1jb2RlLWNvbnZlcnNpb24ucGhwP2ludGNvZGU9JSVpbnRjb2RlJSUiPg0KICAgICAgICAgICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ2YWxvcmVwYWVzZSIgbGVmdD0iQ09ESUNFLVNNU0NJVFk6IiByaWdodD0iOi0tLSIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9pdC5zbXNjaXR5LmNvbS8iIG1ldGhvZD0iUE9TVCI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iZmlyc3RMb2dpbl9hY3Rpb24iIHZhbHVlPSJsb2dpbiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJmaXJzdExvZ2luX2NvdW50cnkiIHZhbHVlPSIlJXZhbG9yZXBhZXNlMSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImZpcnN0TG9naW5fZ3NtTnVtYmVyIiB2YWx1ZT0iJSVtaXR0ZW50ZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImZpcnN0TG9naW5fcGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJJIGRhdGkgaW5zZXJpdGkgc29ubyBlcnJhdGkhIiBlcnJtc2c9IkRhdGkgZGkgbG9naW4gZXJyYXRpIiBlcnJjb2RlPSI1IiAvPg0KICAgICAgICAgICAgICAgIDwvZXJyb3JzPg0KICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly9pdC5zbXNjaXR5LmNvbS9zbXMvZ3JhdGlzLyIgbWV0aG9kPSJHRVQiPg0KCQkJICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNVbmlxdWVJZCIgbGVmdD0iaWQ9JnF1b3Q7c21zVW5pcXVlSWQmcXVvdDsgdmFsdWU9JnF1b3Q7IiByaWdodD0iJnF1b3Q7Ii8+DQoJCQkgICA8L2NvbnRlbnRzPg0KCQkgIDwvcGFnZT4NCgkJICA8cGFnZSB1cmk9Imh0dHA6Ly9pdC5zbXNjaXR5LmNvbS9zbXMvZ3JhdGlzLyIgbWV0aG9kPSJQT1NUIj4NCgkJCSAgPGNvbnRlbnRzPg0KCQkJICAgICAgIDx2YXIgbmFtZT0iY3JlZGl0cyIgbGVmdD0iZ3JhdHVpdGk6Jmx0Oy9hJmd0OyZsdDsvZGl2Jmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O2NvbG9yRm9udEJsYWNrJnF1b3Q7Jmd0OyIgcmlnaHQ9IiZsdDsiIC8+DQoJCQkgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KCQkJCSAgICA8dmFyIG5hbWU9InNtc1VuaXF1ZUlkIiB2YWx1ZT0iJSVzbXNVbmlxdWVJZCUlIiAvPg0KCQkJCSAgICA8dmFyIG5hbWU9InNtc01lc3NhZ2VUeXBlIiB2YWx1ZT0iOCIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNBY3Rpb24iIHZhbHVlPSJzZW5kIiAvPg0KCQkJCQk8dmFyIG5hbWU9InNtc1RleHRhcmVhIiB2YWx1ZT0iJSVtZXNzMSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNtc1Bob25lYm9va1NlbGVjdCIgdmFsdWU9ImNob29zZSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzbXNDb3VudHJ5U2VsZWN0IiB2YWx1ZT0iJSV2YWxvcmVwYWVzZSUlIiAvPg0KCQkJCQk8dmFyIG5hbWU9InNtc0dzbU51bWJlciIgdmFsdWU9IiUlaW50bnVtJSUiIC8+DQoJCQkJCTx2YXIgbmFtZT0ic21zQ3VycmVudFNlbmRlciIgdmFsdWU9IiUyQiUlbmF0Y29kZSUlJSVtaXR0ZW50ZSUlIiAvPg0KCQkJCQk8dmFyIG5hbWU9InNtc1NlbmRlclR5cGUiIHZhbHVlPSJnc20iIC8+DQoJCQkJCTx2YXIgbmFtZT0ic3VibWl0U21zIiB2YWx1ZT0iSW52aWEgU01TIiAvPg0KCQkJCQk8dmFyIG5hbWU9InNtc1BvaW50Q29zdCIgdmFsdWU9IjEiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic21zQ3JlZGl0Q29zdCIgdmFsdWU9IkdSQVRJUyIgLz4NCgkJCQkJPHZhciBuYW1lPSJjdXN0b21TZW5kZXJWYWxpZGF0ZU5vTnVtYmVycyIgdmFsdWU9IjEiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KCQkJCTxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJQZXIgZmF2b3JlIGluc2VyaXNjaSBpbCBtZXNzYWdnaW8uIiBlcnJtc2c9Ikluc2VyaXNjaSBpbCB0ZXN0byBkZWwgbWVzc2FnZ2lvIiAvPg0KCQkJCQk8dmFyIGVycnN0cj0iSW5zZXJpc2NpIHVuIG51bWVybyBkaSBjZWxsdWxhcmUgKHZhbGlkbykuIiBlcnJtc2c9IkRlc3RpbmF0YXJpbyBub24gdmFsaWRvIiAvPg0KICAgICAgICAgICAgICAgIDwvZXJyb3JzPg0KICAgICAgICAgICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJzdGF0byBpbnZpYXRvIGEiIGFjY2VwdG1zZz0iTWVzc2FnZ2lvIEludmlhdG8hIFNtcyByZXNpZHVpOiAlJWNyZWRpdHMlJSIgLz4NCiAgICAgICAgICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMTAwIiBuYW1lPSJWb2xhIiB2PSIxLjEiIG1heHNtcz0iMTAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE2MCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IlVURi04IiBpY29uPSJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBSUFBQUNRa1dnMkFBQUFCR2RCVFVFQUFMR1BDL3hoQlFBQUFnaEpSRUZVT0U5ZGt0OXIwMUFVeC9kUERQOEhYM3dwOURGOTY4eEx3UzBFQm5xZlprWmZBdHBOVWJhQUQwNzNNRGZaZkNtdVVOZUZCV3hZeVRvWWFCNnN6aUx0blhoWGNiSkVwYVJlaW91V3pqeGMyUFZray83SUllVCtPcDl6T045elJqam4xS2V1NjNZRFRqQ0JmV2IydnI2NUFmZUpSSUtmTWRJNDBPYnVXdVZ0LzdRTmx5TWgwS0lJb1ZKeEk3ZWVSYktFRHovY1VxZHh2UUpBOXpRWUc3dHEyL2JvcGRIbWlmOGZnQVdpaWlrUmtnaEpFYUl1THExWXBnVUFSSjI4TVhtUnpSOEVjQU92UHN2Q1ErNWxidXJtbENRai82OFBhU0dxcG1uWDVmRnI4cmpya240RzJQWHRqUG5kbG52c3duL28vdndRMWhBeDhHdDlaOVJqQkZPN1prZGVvMERuZDlCMGZQb3JjQUJvZmkzcHIxcGVjNURwQTFEZjUyL3RuYmM3bFhjMWN1eCtjWHg3bjFUc2ozdXZLNkIxandtQkkrY0lIell3QlBhWTQzS3pXRkNVMnhsVlcxaVl6MisrMkN1YmhtNkFkQmRNQ0lCM3lYeS9XMzZ6VmxpYlUrY24wSXlZRklXa0ZMc2lTQ21FbEpubDVhY2hNMWcwaUxpbEc0OGZydHliVlJWMVdrSnBNU1dFRmhkaXd1VllYQkJUVXJWK0VGWHA1eDlXM2VjOGdON3pUb2QzVHhpdXRRdjVUOUJweXpTTTRuWVVRRExaMGluMEd5R2FXL2VzTWhPUzFOcWx2UUtpUUxYTzBvaFlKby9GU1JyUnhTWFBLdnhBU2wraUtLRG42WVJNTTNkSTlqbGRmVUxCOWRFRG1NdHdJb1pramN4RmVBUVJlOTl3cS84QnhTUnBEYS8zUE80QUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSAxIFNNUyBhbCBnaW9ybm8gY29uIFZvbGEsIGlub2x0cmUgw6ggcG9zc2liaWxlIGFjcXVpc3RhcmUgcGFjY2hldHRpIHNtczwvaW5mbz4KCTxjb25maWc+CgkJPHJlcXVpcmVkIG49IjEiIG5hbWU9InVzZXJuYW1lIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsJ3VzZXJuYW1lIGRpIHJlZ2lzdHJhemlvbmUgZGkgd3d3LnZvbGEuaXQiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy52b2xhLml0IiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vZGFsbHkuYWx0ZXJ2aXN0YS5vcmcvc2NyaXB0ZGFsbHkvU29zdGl0dXppb25lQWNjZW50YXRlLnBocCI+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iQ0hFQ0siIHZhbHVlPSJPTiIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0ZXh0IiB2YWx1ZT0iJSVtZXNzYWdlJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJtZXNzMSIgbGVmdD0iVGVYdE1lU3NBZ0U9OiIgcmlnaHQ9IjpUZVh0TWVTc0FnRSIgLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgPC9wYWdlPg0KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnZvbGEuaXQvdm9sYS1zbXMvbG9naW4ucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InVzZXJuYW1lIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9IlN1Ym1pdCIgdmFsdWU9Ik9LIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImxvZ2ludHlwZSIgdmFsdWU9IjEiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJEYXRpIGRpIGFjY2Vzc28gbm9uIHZhbGlkaSIgZXJybXNnPSJEYXRpIGRpIGFjY2Vzc28gbm9uIHZhbGlkaSIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy52b2xhLml0L3ZvbGEtc21zL3NlbmRTbXMucGhwIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InNlbmRlciIgdmFsdWU9InZvbGEuaXQiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idHlwZV9zZW50IiB2YWx1ZT0ibm93IiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9Im5vdGlmeSIgdmFsdWU9IlMiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibXNnIiB2YWx1ZT0iJSVtZXNzMSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImRlc3RpbmF0YXJpIiB2YWx1ZT0iJmx0OyUyQigzOSklJWludG51bSUlJmd0OyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJoZGVzdHMiIHZhbHVlPSIxIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImRlc3RfbW9kZSIgdmFsdWU9ImRlc3Rfc2luZ2xlIiAvPg0KICAgICAgICAgICAgICAgIDwvdmFycz4NCiAgICAgICAgICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iSWwgdHVvIGNyZWRpdG8gbm9uIiBlcnJtc2c9IlNtcyBub24gaW52aWF0by5Db250cm9sbGEgY3JlZGl0byIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iSWwgcHJpbW8gbWVzc2FnZ2lvIGRpIG9nZ2kgdGkiIC8+DQogICAgICAgICAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgICAgICA8L3BhZ2U+CiAgPC9wcm9jZWR1cmU+CiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMTAyIiBuYW1lPSJDaGVycnlTTVMtTWl0dGVudGUiIHY9IjEuMCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNTMiIG1heGxlbj0iMTUzMCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IklTTy04ODU5LTEiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUF6cEpSRUZVZU5wY1UwMXYwMWdVUGMrZmRXbVR0QWlsa0RMQU1BS2hGaGdhUGd2U2FCYWhDRUU3WGJCbEJCc1dJODBHaXNvUEFDRVFpMEVhYVlRRW13cFdmTzFZRkFyS0JnbHBnQUl0YmNWSG9VM2FCQkluYmh6SHJ1M0hmZWtNUWx6TGx1eDczL0U1OTU3TGJsMDkzNSszOWJNenM5bG9nOUhJWlZsRnJXYURCeEppc1JnQzM0Y1hlQWc0aDZacUNBSjZkeDB3SnZGOU96c2VLbGxML2V2VXdKblZEWVpCSHhsOE9xQXJCdmIwYkVIakJoVldnV0ZpZUJMSnpkc3dmSDhZUEF4QmhYQmRGMTAvYnoyaXpNeGtsNG5EMFdnVUlTVVZwbUhnL085NDN6S0NmRWFHRjQvaFFOdGhiR3BlaTNRNkRVM1hJRUlBbWFaWlZUUmREOFNmT1ZFVTRSUGQ2YkVDZnRpMUI2cFJSbnloQ1hKVndyTjN6eW5uUTZOTDFJcHlSWkdoQ0tUL0R3dWdrSVc0OXM4TnhLNjNZdjFQYTBuU0lsemZROGswb1d2NjExcmlVSDlLK0NaRVVvQW9xZ3l0VWNaaTZHRnNZaHk1WEE2ckVxdW9nUUcrRDRsSlN4Z2hKVzJuQm91YTR4R3IvVDBwek01bXdPaXEyalpXdHJlRHFTcXFsUFA4SlNCSklnbXlyTlNiQjFuR2J3ZFM2TlFVV0xvQm4wWm9WaXBnWVlCUVVyQzgwY0RnOGFPb3ZSekRvK3djUmpPWkpiWml6bzYzaU1IZWd6aWQzSXJTNUZ2TVBYMkJUM1B6aUhaMzQ4cjRPQzZmT0k3dTlnUSszMytJK2JFSmFEdTZNSnJQMTd1Z1FHWXdJaEg4aWhDWmN4ZVFxN3FvY0FtMjZ5SFIyb3BqZTNkZ1ovb1Jwa2ZIVVNibS9ySW1wSXRGMk9VeVdLUVpra2VGRmRKb1RyMEJyN21RTkEyTTVIQ1M1aEk3VGpJVy9uMkdnT29DejRQenVZQitBb20zdGFGUUxFRHA3T3hFZjk4aFlITUgySWVQQ0V5TFJpbkR0eXkwN051TlhESUpGbzBndkhtSDdDekJEVUowYk85Qy82YU5xQkFUMUJ3N3ovK0xoWHYzK05UK0h2NGt1WXVQL3ZFbjU1WlYveDQ2RHY4ME5NVGZuQnpnbWR0M3lUcGgvWFpyMVFKemEwNCtPemUvUW5pZ2JjMGFUTDkrRGNjc1lmbVA2K0RSV0tQTlRWQklsa0ZXbjZYT3IwOGthTERBMU9RVTR2RVZSYVZVTXJXUkJ5T29WT3o2Z3BUS0ZpcFZtM1pDcWx0VlNLUnBJWlZLNGUrTGwrbzd3eVFHczJpaXIvZVF5aWFlUDc3dG9lRVhZWXpXbGhneTJReFVXbHVkL3FxU2NacUlnVmp4WnVyNHE1ZXZJQk9vVEFZU0ZvL0ZJb1V2QWd3QTNKdWNSWWpLUURZQUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBDaGVycnlTTVM8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJwcmVmaXNzbyIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgaWwgcHJlZmlzc28gaW50ZXJuYXppb25hbGUgZGVsIHByb3ByaW8gbnVtZXJvIHNlbnphICsgKGVzIDM5IHBlciBsJ0l0YWxpYSkiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9Im51bWVybyIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgaWwgbnVtZXJvIHJlZ2lzdHJhdG8gc3UgY2hlcnJ5LXNtcy5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCB1c2F0YSBzdWwgc2l0byBjaGVycnktc21zLmNvbSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuY2hlcnJ5LXNtcy5jb20vaW5kZXgucGhwP2FjdGlvbj1sb2dpbiIgbWV0aG9kPSJwb3N0Ij4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0ZWxudW1iZXIxIiB2YWx1ZT0iJSVwcmVmaXNzbyUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImxvZ2luW3RlbG51bWJlcjJdIiB2YWx1ZT0iJSVudW1lcm8lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJsb2dpbltwYXNzd29yZF0iIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJDYW4mYXBvczt0IGxvZ2luLiBXcm9uZyBwYXNzd29yZCBvciBub3QgYWN0aXZhdGVkISIgZXJybXNnPSJVc2VybmFtZSBvIHBhc3N3b3JkIGVycmF0aSIgZXJyY29kZT0iNSIgLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4NCiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3d3dy5jaGVycnktc21zLmNvbS8/ZG89c21zZW5kIiBtZXRob2Q9InBvc3QiPg0KICAgICAgICAgICAgICAgIDxjb250ZW50cz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJpZCIgbGVmdD0iRHUga2FubnN0IG5vY2ggIiByaWdodD0iIFNNUyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJpZDIiIGxlZnQ9IllvdSBjYW4gc3RpbGwgd3JpdGUgIiByaWdodD0iIFNNUyIvPg0KICAgICAgICAgICAgICAgIDwvY29udGVudHM+DQogICAgICAgICAgICAgICAgPHZhcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYWJzZW5kZXIiIHZhbHVlPSJtaXQiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0idGVsbnVtYmVyMSIgdmFsdWU9IiUlcHJlZmlzc28lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0ZWxudW1iZXIyIiB2YWx1ZT0iJSVpbnRudW0lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0ZXh0IiB2YWx1ZT0iJSVtZXNzYWdlJSUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ic3VibWl0IiB2YWx1ZT0iYWJzZW5kZW4iIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxhY2NlcHQ+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJEaWUgU01TIHd1cmRlIHZlcnNlbmRldCIgYWNjZXB0bXNnPSJNZXNzYWdnaW8gSW52aWF0byEgU01TIHJlc2lkdWk6ICUlaWQlJSIgLz4NCgkJICAgPHZhciBhY2NlcHRzdHI9IlRoZSBTTVMgd2FzIHNlbnQuIiBhY2NlcHRtc2c9Ik1lc3NhZ2dpbyBJbnZpYXRvISBTTVMgcmVzaWR1aTogJSVpZDIlJSIgLz4NCiAgICAgICAgICAgICAgICA8L2FjY2VwdD4NCiAgICAgICAgICAgICAgICA8ZXJyb3JzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iVGhlIHNwZWNpZmllZCBwaG9uZSBudW1iZXIgaXMgd3JvbmciIGVycm1zZz0iTnVtZXJvIGluZXNpc3RlbnRlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iWW91IGhhdmUgbm8gZnJlZSBTTVMgbGVmdCIgZXJybXNnPSJDcmVkaXRpIGVzYXVyaXRpIiAvPg0KCQkgICAgPHZhciBlcnJzdHI9IkVzIHRyYXQgZWluIEZlaGxlciIgZXJybXNnPSJDcmVkaXRpIGluc3VmZmljaWVudGkiLz4NCiAgICAgICAgICAgICAgICA8L2Vycm9ycz4NCiAgICAgICAgICAgIDwvcGFnZT4KICA8L3Byb2NlZHVyZT4KIDwvc2VydmljZT4KIDxzZXJ2aWNlIGlkPSI3MTIiIG5hbWU9IlZvZGFmb25lLVR1cmtleSIgdj0iMS4xIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE1MiIgbWF4bGVuPSIxNjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQU1BQUFBb0xROVRBQUFCUjFCTVZFVUFBQURrNnZTMHRyekUwdHpzSGlUYzN1VDBqbXpFd3N5OEZoekV5c3prc3FUMDh2VHN2cXk4dnNUVTR1enNPaXprbW9UVWdteXNFaFRjNHV6TTB0eTh3c3owK3Z6Y01pVHNkbHpzN3ZUVXdyekVkbVRzNnV6TXp0UzB1c1RVMXR6VUZoenM5dnprMXRUVXJxVE1abFNrcnJURWlueWtEaFRzc3FUazZ1ems0dVRVMHRUOCt2enNMaVMwc3J6RXp0enNHaVRjM3R6c2puVEV3c1M4RWh6TWNsejA2dVRVeXNUY0dpVHNVanlzcnJURXhzeThqb1NzRGhUOC92emtycFQwN3V6RUZoemt1cXk4dXNUVTN1VFVKaVRrNXV6Y1FpemNub3k4Zm16azd2U2tGaFRjNHVUTTB0Uzh3c1QwOXZUVUxpVGtwb3lzc3J5OHp0emNjbHpzN3V6a0dpVEVycXpjMnR6MGhtekV2c1MwRWhUTXRyUzhjbVRzNXVUTXl0UzB1cnpFMXR6TUZoems5dnlzT2l6c3pzVE1xcVM4WmxTa3FyVGM2dlM4eXRURWhuU2NDZ3hYeGlxNkFBQUFBWFJTVGxNQVFPYllaZ0FBQVA5SlJFRlVHSlVsejIxUHdqQVVCZUF5czhTaDlTMkNvdXNHUnJLRWxUalVZRVc5T3NINTN1bGdTOG5VNGNTSnd2Ly9iS2MzdWNuSjgra2NCUElxYXFQd2NMU2w1eG5KRnlINGw0UHJHOXVrZjZBQ3RKODMyY3FITUFtVklBQXV6b2ZMRzE1TjJJUUFxb1FVRm9mTjZHbzMrellUcmlQaDAvWitNMkxwNGRwMEtTa2xTRjBvZng0N0RtUFYrUDZGY0l6VXNGeDBIQ2VLbUh0Mis0NE4xSHFyRlZrT1VXcTl6aGtLTWh1Rm5TY21vZXBhcHlWRlFrdTlXNTFQR1hOblkyd0VISVcyS1hxRE9MWm00NHdIRXcrQlRSN1hlOW4yMXhUem9INGdtOUpFTzlIMit2MmZVYWV1K1BrV1NqREczVkhRbWZEL2NRQzYxbFVDaFh0NS9nV3h0emh0djdjS213QUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgMTAgU01TIGFsIGdpb3JubyB0cmFtaXRlIGlsIHNpdG8gVm9kYWZvbmUuIMOIIHBvc3NpYmlsZSBpbnZpYXJlIFNNUyBzb2xvIHZlcnNvIG51bWVyaSBWb2RhZm9uZSBUdXJrZXksIG9jY29ycmUgdW4gbnVtZXJvIHJlZ2lzdHJhdG8gc3VsIHNpdG8uPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cudm9kYWZvbmUuY29tLnRyIiAvPgoJCTxyZXF1aXJlZCBuPSIyIiBuYW1lPSJwYXNzd29yZCIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgbGEgcGFzc3dvcmQgZGkgYWNjZXNzbyBkaSB3d3cudm9kYWZvbmUuY29tLnRyIiAvPgoJPC9jb25maWc+CiAgPC9kZXNjcmlwdGlvbj4KICA8cHJvY2VkdXJlPgogICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwczovL3d3dy52b2RhZm9uZS5jb20udHIvTXlWb2RhZm9uZS9teXZvZGFmb25lLmhvbWUucGhwIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJHc21ObyIgdmFsdWU9IiUldXNlcm5hbWUlJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iTXlQYXNzIiB2YWx1ZT0iJSVwYXNzd29yZCUlIi8+ICAgDQogICAgICAgIDwvdmFycz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIG1ldGhvZD0iR0VUIiB1cmk9Imh0dHBzOi8vd3d3LnZvZGFmb25lLmNvbS50ci9NeVZvZGFmb25lL215dm9kYWZvbmUucGhwP3BhZ2VJZD1XZWJTbXMiPg0KICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgPHZhciBuYW1lPSJjcmVkaXRzIiBsZWZ0PSJrICZsdDtCJmd0OyIgcmlnaHQ9IiZsdDsiLz4NCiAgICAgICAgPC9jb250ZW50cz4NCiAgICAgIDwvcGFnZT4NCiAgICAgIDxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwczovL3d3dy52b2RhZm9uZS5jb20udHIvTXlWb2RhZm9uZS9teXZvZGFmb25lLnBocD9wYWdlSWQ9V2ViU21zIj4NCiAgICAgICAgPHZhcnM+DQogICAgICAgICAgPHZhciBuYW1lPSJsZW5MU2lnIiB2YWx1ZT0iMjEiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9ImxlblNTaWciIHZhbHVlPSI2Ii8+DQogICAgICAgICAgPHZhciBuYW1lPSJtc2dTaWciIHZhbHVlPSIwIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJzY3JuIiB2YWx1ZT0iMiIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iV2ViU2ltU21zVXNlckdzbU5vIiB2YWx1ZT0iJSVpbnRudW0lJSIvPg0KICAgICAgICAgIDx2YXIgbmFtZT0iV2ViU2ltU21zVGV4dCIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+DQogICAgICAgICAgPHZhciBuYW1lPSJ4IiB2YWx1ZT0iMjEiLz4NCiAgICAgICAgICA8dmFyIG5hbWU9InkiIHZhbHVlPSI2Ii8+ICANCiAgICAgICAgPC92YXJzPg0KICAgICAgICA8YWNjZXB0Pg0KICAgICAgICAgIDx2YXIgYWNjZXB0c3RyPSJZZW5pIGJpciBtZXNhaiIgYWNjZXB0bXNnPSJTTVMgc2VudCEgUmVtYWluaW5nIG1lc3NhZ2VzIEJFRk9SRSB0aGlzIGRlbGl2ZXJ5OiAlJWNyZWRpdHMlJSIvPiANCiAgICAgICAgPC9hY2NlcHQ+DQogICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgPHZhciBlcnJzdHI9IlNhZGVjZSBBa3RpZiBEdXJ1bWRhIiBlcnJtc2c9Ildyb25nIHJlY2lwaWVudCEiLz4gICAgICAgICAgDQogICAgICAgIDwvZXJyb3JzPg0KICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjEwMyIgbmFtZT0iQ2hlcnJ5U01TLUxvd0Nvc3QiIHY9IjEuMCIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNTMiIG1heGxlbj0iMTUzMCIgcmVzZXQ9ImRhaWx5IiBvdXRwdXRfZW5jb2Rpbmc9IklTTy04ODU5LTEiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUF6cEpSRUZVZU5wY1UwMXYwMWdVUGMrZmRXbVR0QWlsa0RMQU1BS2hGaGdhUGd2U2FCYWhDRUU3WGJCbEJCc1dJODBHaXNvUEFDRVFpMEVhYVlRRW13cFdmTzFZRkFyS0JnbHBnQUl0YmNWSG9VM2FCQkluYmh6SHJ1M0hmZWtNUWx6TGx1eDczL0U1OTU3TGJsMDkzNSszOWJNenM5bG9nOUhJWlZsRnJXYURCeEppc1JnQzM0Y1hlQWc0aDZacUNBSjZkeDB3SnZGOU96c2VLbGxML2V2VXdKblZEWVpCSHhsOE9xQXJCdmIwYkVIakJoVldnV0ZpZUJMSnpkc3dmSDhZUEF4QmhYQmRGMTAvYnoyaXpNeGtsNG5EMFdnVUlTVVZwbUhnL085NDN6S0NmRWFHRjQvaFFOdGhiR3BlaTNRNkRVM1hJRUlBbWFaWlZUUmREOFNmT1ZFVTRSUGQ2YkVDZnRpMUI2cFJSbnloQ1hKVndyTjN6eW5uUTZOTDFJcHlSWkdoQ0tUL0R3dWdrSVc0OXM4TnhLNjNZdjFQYTBuU0lsemZROGswb1d2NjExcmlVSDlLK0NaRVVvQW9xZ3l0VWNaaTZHRnNZaHk1WEE2ckVxdW9nUUcrRDRsSlN4Z2hKVzJuQm91YTR4R3IvVDBwek01bXdPaXEyalpXdHJlRHFTcXFsUFA4SlNCSklnbXlyTlNiQjFuR2J3ZFM2TlFVV0xvQm4wWm9WaXBnWVlCUVVyQzgwY0RnOGFPb3ZSekRvK3djUmpPWkpiWml6bzYzaU1IZWd6aWQzSXJTNUZ2TVBYMkJUM1B6aUhaMzQ4cjRPQzZmT0k3dTlnUSszMytJK2JFSmFEdTZNSnJQMTd1Z1FHWXdJaEg4aWhDWmN4ZVFxN3FvY0FtMjZ5SFIyb3BqZTNkZ1ovb1Jwa2ZIVVNibS9ySW1wSXRGMk9VeVdLUVpra2VGRmRKb1RyMEJyN21RTkEyTTVIQ1M1aEk3VGpJVy9uMkdnT29DejRQenVZQitBb20zdGFGUUxFRHA3T3hFZjk4aFlITUgySWVQQ0V5TFJpbkR0eXkwN051TlhESUpGbzBndkhtSDdDekJEVUowYk85Qy82YU5xQkFUMUJ3N3ovK0xoWHYzK05UK0h2NGt1WXVQL3ZFbjU1WlYveDQ2RHY4ME5NVGZuQnpnbWR0M3lUcGgvWFpyMVFKemEwNCtPemUvUW5pZ2JjMGFUTDkrRGNjc1lmbVA2K0RSV0tQTlRWQklsa0ZXbjZYT3IwOGthTERBMU9RVTR2RVZSYVZVTXJXUkJ5T29WT3o2Z3BUS0ZpcFZtM1pDcWx0VlNLUnBJWlZLNGUrTGwrbzd3eVFHczJpaXIvZVF5aWFlUDc3dG9lRVhZWXpXbGhneTJReFVXbHVkL3FxU2NacUlnVmp4WnVyNHE1ZXZJQk9vVEFZU0ZvL0ZJb1V2QWd3QTNKdWNSWWpLUURZQUFBQUFTVVZPUks1Q1lJST0iID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5BY3F1aXN0YSBlZCBpbnZpYSBzbXMgdHJhbWl0ZSBDaGVycnlTTVM8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJwcmVmaXNzbyIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgaWwgcHJlZmlzc28gaW50ZXJuYXppb25hbGUgZGVsIHByb3ByaW8gbnVtZXJvIHNlbnphICsgKGVzIDM5IHBlciBsJ0l0YWxpYSkiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9Im51bWVybyIgZGVmYXVsdD0iIiBkZXNjPSJJbnNlcmlzY2kgaWwgbnVtZXJvIHJlZ2lzdHJhdG8gc3UgY2hlcnJ5LXNtcy5jb20iIC8+CgkJPHJlcXVpcmVkIG49IjMiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCB1c2F0YSBzdWwgc2l0byBjaGVycnktc21zLmNvbSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgPHByb2NlZHVyZT4KICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuY2hlcnJ5LXNtcy5jb20vaW5kZXgucGhwP2FjdGlvbj1sb2dpbiIgbWV0aG9kPSJwb3N0Ij4NCiAgICAgICAgICAgICAgICA8dmFycz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0ZWxudW1iZXIxIiB2YWx1ZT0iJSVwcmVmaXNzbyUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImxvZ2luW3RlbG51bWJlcjJdIiB2YWx1ZT0iJSVudW1lcm8lJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJsb2dpbltwYXNzd29yZF0iIHZhbHVlPSIlJXBhc3N3b3JkJSUiIC8+DQogICAgICAgICAgICAgICAgPC92YXJzPg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJDYW4ndCBsb2dpbi4gV3JvbmcgcGFzc3dvcmQgb3Igbm90IGFjdGl2YXRlZCEiIGVycm1zZz0iVXNlcm5hbWUgbyBwYXNzd29yZCBlcnJhdGkiIGVycmNvZGU9IjUiIC8+DQogICAgICAgICAgICAgICAgPC9lcnJvcnM+DQogICAgICAgICAgICA8L3BhZ2U+DQogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuY2hlcnJ5LXNtcy5jb20vP2RvPXNtc2VuZCIgbWV0aG9kPSJwb3N0Ij4NCiAgICAgICAgICAgICAgICA8Y29udGVudHM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iaWQiIGxlZnQ9IkR1IGthbm5zdCBub2NoICIgcmlnaHQ9IiBTTVMiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iaWQyIiBsZWZ0PSJZb3UgY2FuIHN0aWxsIHdyaXRlICIgcmlnaHQ9IiBTTVMiLz4NCiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPg0KICAgICAgICAgICAgICAgIDx2YXJzPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImFic2VuZGVyIiB2YWx1ZT0ib2huZSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0ZWxudW1iZXIxIiB2YWx1ZT0iJSVwcmVmaXNzbyUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InRlbG51bWJlcjIiIHZhbHVlPSIlJWludG51bSUlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InRleHQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJzdWJtaXQiIHZhbHVlPSJhYnNlbmRlbiIgLz4NCiAgICAgICAgICAgICAgICA8L3ZhcnM+DQogICAgICAgICAgICAgICAgPGFjY2VwdD4NCiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9IkRpZSBTTVMgd3VyZGUgdmVyc2VuZGV0IiBhY2NlcHRtc2c9Ik1lc3NhZ2dpbyBJbnZpYXRvISBTTVMgcmVzaWR1aTogJSVpZCUlIiAvPg0KCQkgICA8dmFyIGFjY2VwdHN0cj0iVGhlIFNNUyB3YXMgc2VudC4iIGFjY2VwdG1zZz0iTWVzc2FnZ2lvIEludmlhdG8hIFNNUyByZXNpZHVpOiAlJWlkMiUlIiAvPg0KICAgICAgICAgICAgICAgIDwvYWNjZXB0Pg0KICAgICAgICAgICAgICAgIDxlcnJvcnM+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJUaGUgc3BlY2lmaWVkIHBob25lIG51bWJlciBpcyB3cm9uZyIgZXJybXNnPSJOdW1lcm8gaW5lc2lzdGVudGUiIC8+DQogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJZb3UgaGF2ZSBubyBmcmVlIFNNUyBsZWZ0IiBlcnJtc2c9IkNyZWRpdGkgZXNhdXJpdGkiIC8+DQoJCSAgICA8dmFyIGVycnN0cj0iRXMgdHJhdCBlaW4gRmVobGVyIiBlcnJtc2c9IkNyZWRpdGkgaW5zdWZmaWNpZW50aSIvPg0KICAgICAgICAgICAgICAgIDwvZXJyb3JzPg0KICAgICAgICAgICAgPC9wYWdlPgogIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjEwNCIgbmFtZT0iTWV0ZW9yLUlyZWxhbmQiIHY9IjEuMCIgbWF4c21zPSIzMDAiIHNpbmdsZWxlbj0iMTYwIiBzbXNfZGl2aXNvcj0iMTYwIiBtYXhsZW49IjE2MCIgcmVzZXQ9Im1vbnRobHkiIG91dHB1dF9lbmNvZGluZz0iVVRGLTgiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FNQUFBQW9MUTlUQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUtUMmxEUTFCUWFHOTBiM05vYjNBZ1NVTkRJSEJ5YjJacGJHVUFBSGphblZOblZGUHBGajMzM3ZSQ1M0aUFsRXR2VWhVSUlGSkNpNEFVa1NZcUlRa1FTb2dob2RrVlVjRVJSVVVFRzhpZ2lBT09qb0NNRlZFc0RJb0syQWZrSWFLT2c2T0lpc3I3NFh1amE5YTg5K2JOL3JYWFB1ZXM4NTJ6endmQUNBeVdTRE5STllBTXFVSWVFZUNEeDhURzRlUXVRSUVLSkhBQUVBaXpaQ0Z6L1NNQkFQaCtQRHdySXNBSHZnQUJlTk1MQ0FEQVRadkFNQnlIL3cvcVFwbGNBWUNFQWNCMGtUaExDSUFVQUVCNmprS21BRUJHQVlDZG1DWlRBS0FFQUdETFkyTGpBRkF0QUdBbmYrYlRBSUNkK0psN0FRQmJsQ0VWQWFDUkFDQVRaWWhFQUdnN0FLelBWb3BGQUZnd0FCUm1TOFE1QU5ndEFEQkpWMlpJQUxDM0FNRE9FQXV5QUFnTUFEQlJpSVVwQUFSN0FHRElJeU40QUlTWkFCUkc4bGM4OFN1dUVPY3FBQUI0bWJJOHVTUTVSWUZiQ0MxeEIxZFhMaDRvemtrWEt4UTJZUUpobWtBdXdubVpHVEtCTkEvZzg4d0FBS0NSRlJIZ2cvUDllTTRPcnM3T05vNjJEbDh0NnI4Ry95SmlZdVArNWMrcmNFQUFBT0YwZnRIK0xDK3pHb0E3Qm9CdC9xSWw3Z1JvWGd1Z2RmZUxacklQUUxVQW9PbmFWL053K0g0OFBFV2hrTG5aMmVYazVOaEt4RUpiWWNwWGZmNW53bC9BVi8xcytYNDgvUGYxNEw3aUpJRXlYWUZIQlBqZ3dzejBUS1VjejVJSmhHTGM1bzlIL0xjTC8vd2QweUxFU1dLNVdDb1U0MUVTY1k1RW1venpNcVVpaVVLU0tjVWwwdjlrNHQ4cyt3TSszelVBc0dvK0FYdVJMYWhkWXdQMlN5Y1FXSFRBNHZjQUFQSzdiOEhVS0FnRGdHaUQ0YzkzLys4Ly9VZWdKUUNBWmttU2NRQUFYa1FrTGxUS3N6L0hDQUFBUktDQktyQkJHL1RCR0N6QUJoekJCZHpCQy94Z05vUkNKTVRDUWhCQ0NtU0FISEpnS2F5Q1FpaUd6YkFkS21BdjFFQWROTUJSYUlhVGNBNHV3bFc0RGoxd0QvcGhDSjdCS0x5QkNRUkJ5QWdUWVNIYWlBRmlpbGdqamdnWG1ZWDRJY0ZJQkJLTEpDREppQlJSSWt1Uk5VZ3hVb3BVSUZWSUhmSTljZ0k1aDF4R3VwRTd5QUF5Z3Z5R3ZFY3hsSUd5VVQzVURMVkR1YWczR29SR29ndlFaSFF4bW84V29KdlFjclFhUFl3Mm9lZlFxMmdQMm84K1E4Y3d3T2dZQnpQRWJEQXV4c05Dc1Rnc0NaTmp5N0VpckF5cnhocXdWcXdEdTRuMVk4K3hkd1FTZ1VYQUNUWUVkMElnWVI1QlNGaE1XRTdZU0tnZ0hDUTBFZG9KTndrRGhGSENKeUtUcUV1MEpyb1IrY1FZWWpJeGgxaElMQ1BXRW84VEx4QjdpRVBFTnlRU2lVTXlKN21RQWtteHBGVFNFdEpHMG01U0kra3NxWnMwU0Jvams4bmFaR3V5QnptVUxDQXJ5SVhrbmVURDVEUGtHK1FoOGxzS25XSkFjYVQ0VStJb1VzcHFTaG5sRU9VMDVRWmxtREpCVmFPYVV0Mm9vVlFSTlk5YVFxMmh0bEt2VVllb0V6UjFtam5OZ3haSlM2V3RvcFhUR21nWGFQZHByK2gwdWhIZGxSNU9sOUJYMHN2cFIraVg2QVAwZHd3TmhoV0R4NGhuS0JtYkdBY1laeGwzR0srWVRLWVowNHNaeDFRd056SHJtT2VaRDVsdlZWZ3F0aXA4RlpIS0NwVktsU2FWR3lvdlZLbXFwcXJlcWd0VjgxWExWSStwWGxOOXJrWlZNMVBqcVFuVWxxdFZxcDFRNjFNYlUyZXBPNmlIcW1lb2IxUS9wSDVaL1lrR1djTk13MDlEcEZHZ3NWL2p2TVlnQzJNWnMzZ3NJV3NOcTRaMWdUWEVKckhOMlh4MktydVkvUjI3aXoycXFhRTVRek5LTTFlelV2T1VaajhINDVoeCtKeDBUZ25uS0tlWDgzNkszaFR2S2VJcEc2WTBUTGt4WlZ4cnFwYVhsbGlyU0t0UnEwZnJ2VGF1N2FlZHByMUZ1MW43Z1E1Qngwb25YQ2RIWjQvT0JaM25VOWxUM2FjS3B4Wk5QVHIxcmk2cWE2VWJvYnRFZDc5dXArNllucjVlZ0o1TWI2ZmVlYjNuK2h4OUwvMVUvVzM2cC9WSERGZ0dzd3drQnRzTXpoZzh4VFZ4Ynp3ZEw4ZmI4VkZEWGNOQVE2VmhsV0dYNFlTUnVkRThvOVZHalVZUGpHbkdYT01rNDIzR2JjYWpKZ1ltSVNaTFRlcE43cHBTVGJtbUthWTdURHRNeDgzTXphTE4xcGsxbXoweDF6TG5tK2ViMTV2ZnQyQmFlRm9zdHFpMnVHVkpzdVJhcGxudXRyeHVoVm81V2FWWVZWcGRzMGF0bmEwbDFydXR1NmNScDdsT2swNnJudFpudzdEeHRzbTJxYmNac09YWUJ0dXV0bTIyZldGblloZG50OFd1dys2VHZaTjl1bjJOL1QwSERZZlpEcXNkV2gxK2M3UnlGRHBXT3Q2YXpwenVQMzNGOUpicEwyZFl6eERQMkRQanRoUExLY1JwblZPYjAwZG5GMmU1YzRQemlJdUpTNExMTHBjK0xwc2J4dDNJdmVSS2RQVnhYZUY2MHZXZG03T2J3dTJvMjYvdU51NXA3b2Zjbjh3MG55bWVXVE56ME1QSVErQlI1ZEUvQzUrVk1HdmZySDVQUTArQlo3WG5JeTlqTDVGWHJkZXd0NlYzcXZkaDd4Yys5ajV5bitNKzR6dzMzakxlV1YvTU44QzN5TGZMVDhOdm5sK0YzME4vSS85ay8zci8wUUNuZ0NVQlp3T0pnVUdCV3dMNytIcDhJYitPUHpyYlpmYXkyZTFCaktDNVFSVkJqNEt0Z3VYQnJTRm95T3lRclNIMzU1ak9rYzVwRG9WUWZ1alcwQWRoNW1HTHczNE1KNFdIaFZlR1A0NXdpRmdhMFRHWE5YZlIzRU56MzBUNlJKWkUzcHRuTVU4NXJ5MUtOU28rcWk1cVBObzN1alM2UDhZdVpsbk0xVmlkV0Vsc1N4dzVMaXF1Tm01c3Z0Lzg3Zk9INHAzaUMrTjdGNWd2eUYxd2VhSE93dlNGcHhhcExoSXNPcFpBVEloT09KVHdRUkFxcUJhTUpmSVRkeVdPQ25uQ0hjSm5JaS9STnRHSTJFTmNLaDVPOGtncVRYcVM3Skc4Tlhra3hUT2xMT1c1aENlcGtMeE1EVXpkbXpxZUZwcDJJRzB5UFRxOU1ZT1NrWkJ4UXFvaFRaTzJaK3BuNW1aMnk2eGxoYkwreFc2THR5OGVsUWZKYTdPUXJBVlpMUXEyUXFib1ZGb28xeW9Ic21kbFYyYS96WW5LT1phcm5pdk43Y3l6eXR1UU41enZuLy90RXNJUzRaSzJwWVpMVnkwZFdPYTlyR281c2p4eGVkc0s0eFVGSzRaV0Jxdzh1SXEyS20zVlQ2dnRWNWV1ZnIwbWVrMXJnVjdCeW9MQnRRRnI2d3RWQ3VXRmZldmMxKzFkVDFndldkKzFZZnFHblJzK0ZZbUtyaFRiRjVjVmY5Z28zSGpsRzRkdnlyK1ozSlMwcWF2RXVXVFBadEptNmViZUxaNWJEcGFxbCthWERtNE4yZHEwRGQ5V3RPMzE5a1hiTDVmTktOdTdnN1pEdWFPL1BMaThaYWZKenMwN1AxU2tWUFJVK2xRMjd0TGR0V0hYK0c3UjdodDd2UFkwN05YYlc3ejMvVDdKdnR0VkFWVk4xV2JWWmZ0Sis3UDNQNjZKcXVuNGx2dHRYYTFPYlhIdHh3UFNBLzBISXc2MjE3blUxUjNTUFZSU2o5WXI2MGNPeHgrKy9wM3ZkeTBOTmcxVmpaekc0aU53UkhuazZmY0ozL2NlRFRyYWRveDdyT0VIMHg5MkhXY2RMMnBDbXZLYVJwdFRtdnRiWWx1NlQ4dyswZGJxM25yOFI5c2ZENXcwUEZsNVN2TlV5V25hNllMVGsyZnl6NHlkbFoxOWZpNzUzR0Rib3JaNzUyUE8zMm9QYisrNkVIVGgwa1gvaStjN3ZEdk9YUEs0ZFBLeTIrVVRWN2hYbXE4NlgyM3FkT284L3BQVFQ4ZTduTHVhcnJsY2E3bnVlcjIxZTJiMzZSdWVOODdkOUwxNThSYi8xdFdlT1QzZHZmTjZiL2ZGOS9YZkZ0MStjaWY5enN1NzJYY243cTI4VDd4ZjlFRHRRZGxEM1lmVlAxdiszTmp2M0g5cXdIZWc4OUhjUi9jR2hZUFAvcEgxanc5REJZK1pqOHVHRFlicm5qZytPVG5pUDNMOTZmeW5RODlrenlhZUYvNmkvc3V1RnhZdmZ2alY2OWZPMFpqUm9aZnlsNU8vYlh5bC9lckE2eG12MjhiQ3hoNit5WGd6TVY3MFZ2dnR3WGZjZHgzdm85OFBUK1I4SUg4by8yajVzZlZUMEtmN2t4bVRrLzhFQTVqei9HTXpMZHNBQUFBZ1kwaFNUUUFBZWlVQUFJQ0RBQUQ1L3dBQWdPa0FBSFV3QUFEcVlBQUFPcGdBQUJkdmtsL0ZSZ0FBQXdCUVRGUkYvLy8vLzliRy8zOUwvLzcrLzdLVC81WnQvMHdGLzZ1Sy8yMDAvLzM5LytUWi85TEEvOHk0LzlQQy8vSHIvLzM4LzhXdS85ZkgvOUM5LzNoRC80ZFgvN09WLzdXWC81VnIvM2xFLzdTVy8vcjQvLy8rLzcrbS8xQUsvMDRJLzFrWC8yc3gvMXNhLzJNbC8xOGYvNHhmLy9uMy85L1MvMXdjLzBrQi8yUW4vOWpKLy9ieS8rL28vNDlqLzRkWi8yY3IvNXgxLzRwYi8wOEovMVVTLytIVi85N1IvNWx4LzRKUC8zcEcvM1E4LzlYRi85ek8vMjgzLzFBTC81MTIvNUJsLzVGbC80bGEvNUJrLzdXWS8zRTYvMDhLLzhLcS84R28vNWh2LzZCNi80RlEvNGxiLzdHUy8wNEgvOXZNLzZOOS8yMHovNU5wLzdDUS8yd3kvMlVuLzh1My8zWkEvNWR1LzE4aC81Tm8vN0NSLzJvdS80dGQvL3o2Ly83OS8yZ3QvMllwLzBzRS85Ry8vOVhFLzRoWi8xc2IvNXR6Ly9iei82NlAvMkVpLzZTQi81OTUvMU1PLzFvWi8wMEcvMjQwLzI0MS8yb3cvMmt1LzZOKy8vdjUvL2oyLzZCNS8xSU8vMTBkLzhlel3U01RQUFBTnBKUkVGVWVOcFVqYzFLQWxFQVJzOTExRXYrcEdFaGtTRW9pSnZ3WnlNU0NGR2dHY3d5NkJWOG1WNUlGSHdDVncxdU1xY1l4VWEwd1dzNkN0UENOdlB0enVIQUI3N3BLYzNIOTJlTzhCZXk4MTlFWkxnMTNVSDhWQUF4cENneHQ5YnNRRUFtQnRIR1FMa2hGallCSW1sd3IxNjNGYWZkenI0Z09LOWJHQnZRelM4OGJqVTllckx5UG9IUlJUMmZmejhFRlh3Y241WUdNQTN5YXgrT29qb21kemNMMEhCck5RQjZpY1JrZ0pBRjVXQUQzQ2dJRjdRbjQva25tVTU5SXkrYnhaSDVKaWhyb0I2N0R3RDlJUUxLMTFnS3ZQMmNOZndOQUFCbVFpVlcwdm1sQUFBQUFFbEZUa1N1UW1DQyIgPgogIDxkZXNjcmlwdGlvbj4KCTxpbmZvPkludmlhIDMwMCBTTVMgYWwgbWVzZSBjb24gTWV0ZW9yIElyZWxhbmQ8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJOdW1lcm8gZGVsbGEgc2ltIHJlZ2lzdHJhdGEiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGEgd3d3Lm1ldGVvci5pZSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CgkJPHByb2NlZHVyZT4KICAgICAgICAgICAgPHBhZ2UgbWV0aG9kPSJQT1NUIiB1cmk9Imh0dHBzOi8vd3d3Lm15bWV0ZW9yLmllL2dvL215bWV0ZW9yLWxvZ2luLW1hbmFnZXIiPgoJCQkgIDxjb250ZW50cz4KCQkJICAgIDx2YXIgbmFtZT0iZGlzcG9uaWJpbGkiIGxlZnQ9Im51bWJlcnMmcXVvdDsmZ3Q7Jmx0O3N0cm9uZyZndDsiIHJpZ2h0PSImbHQ7Ii8+CgkJCSAgPC9jb250ZW50cz4KICAgICAgICAgICAgICAgIDx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibXNpc2RuIiB2YWx1ZT0iJSV1c2VybmFtZSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icGluIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICA8L3BhZ2U+CgkJCTxwYWdlIHVyaT0iaHR0cHM6Ly93d3cubXltZXRlb3IuaWUvZ28vZnJlZXdlYnRleHQiPgoJCQkgIDxjb250ZW50cz4KCQkJICAgIDx2YXIgbmFtZT0iZmlkIiBsZWZ0PSJ2YXIgQ0ZJRCA9ICIgcmlnaHQ9IjsiLz4KCQkJICAgIDx2YXIgbmFtZT0idG9rZW4iIGxlZnQ9InZhciBDRlRPS0VOID0gIiByaWdodD0iOyIvPgoJCQkgIDwvY29udGVudHM+CgkJCTwvcGFnZT4KCQkJPHBhZ2UgdXJpPSJodHRwczovL3d3dy5teW1ldGVvci5pZS9teW1ldGVvcmFwaS9pbmRleC5jZm0/ZXZlbnQ9c21zQWpheCZhbXA7Q0ZJRD0lJWZpZCUlJmFtcDtDRlRPS0VOPSUldG9rZW4lJSZhbXA7ZnVuYz1zZWFyY2hFbnRlcmVkTXNpc2RuIiBtZXRob2Q9IlBPU1QiPgoJCQk8aGVhZGVycz4KCQkJIDx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHBzOi8vd3d3Lm15bWV0ZW9yLmllL2dvL2ZyZWV3ZWJ0ZXh0Ii8+CgkJCTwvaGVhZGVycz4KCQkJPHZhcnM+CgkJCSAgPHZhciBuYW1lPSJhamF4UmVxdWVzdCIgdmFsdWU9InNlYXJjaEVudGVyZWRNU0lTRE4iLz4KCQkJICA8dmFyIG5hbWU9InNlYXJjaFZhbHVlIiB2YWx1ZT0iJSVpbnRudW0lJSIvPgoJCQk8L3ZhcnM+CgkJICAgIDwvcGFnZT4KCQkJPHBhZ2UgdXJpPSJodHRwczovL3d3dy5teW1ldGVvci5pZS9teW1ldGVvcmFwaS9pbmRleC5jZm0/ZXZlbnQ9c21zQWpheCZhbXA7Q0ZJRD0lJWZpZCUlJmFtcDtDRlRPS0VOPSUldG9rZW4lJSZhbXA7ZnVuYz1hZGRFbnRlcmVkTXNpc2RucyIgbWV0aG9kPSJQT1NUIj4KCQkJPGhlYWRlcnM+CgkJCSA8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwczovL3d3dy5teW1ldGVvci5pZS9nby9mcmVld2VidGV4dCIvPgoJCQk8L2hlYWRlcnM+CQkJCgkJCTx2YXJzPgoJCQkgIDx2YXIgbmFtZT0iYWpheFJlcXVlc3QiIHZhbHVlPSJhZGRFbnRlcmVkTVNJU0ROcyIvPgoJCQkgIDx2YXIgbmFtZT0icmVtb3ZlIiB2YWx1ZT0iLSIvPgoJCQkgIDx2YXIgbmFtZT0iYWRkIiB2YWx1ZT0iMHwlJWludG51bSUlIi8+CgkJCTwvdmFycz4KCQkgICAgPC9wYWdlPgkJCQoJCQk8cGFnZSB1cmk9Imh0dHBzOi8vd3d3Lm15bWV0ZW9yLmllL215bWV0ZW9yYXBpL2luZGV4LmNmbT9ldmVudD1zbXNBamF4JmFtcDtmdW5jPXNlbmRTTVMmYW1wO0NGSUQ9JSVmaWQlJSZhbXA7Q0ZUT0tFTj0lJXRva2VuJSUiIG1ldGhvZD0iUE9TVCI+CgkJCTxoZWFkZXJzPgoJCQkgPHZhciBuYW1lPSJSZWZlcmVyIiB2YWx1ZT0iaHR0cHM6Ly93d3cubXltZXRlb3IuaWUvZ28vZnJlZXdlYnRleHQiLz4KCQkJPC9oZWFkZXJzPgogICAgIAkJCTx2YXJzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0iYWpheFJlcXVlc3QiIHZhbHVlPSJzZW5kU01TIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZVRleHQiIHZhbHVlPSIlJW1lc3NhZ2UlJSIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4JCQkKCQkJPGFjY2VwdD4KCQkJPHZhciBhY2NlcHRzdHI9IlRoZSBmb2xsb3dpbmcgbnVtYmVyIGlzIG5vdCBpbiB5b3VyIHBob25lYm9vayIgYWNjZXB0bXNnPSJTTVMgZGlzcG9uaWJpbGkgcHJpbWEgZGkgcXVlc3RvIGludmlvOiUlZGlzcG9uaWJpbGklJSIvPgoJCQk8L2FjY2VwdD4KCQkJPC9wYWdlPgogICAgICAgIDwvcHJvY2VkdXJlPiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMTA1IiBuYW1lPSJWb2RhZm9uZS1XaWRnZXQiIHY9IjEuMSIgbWF4c21zPSIxMCIgc2luZ2xlbGVuPSIxNjAiIHNtc19kaXZpc29yPSIxNjAiIG1heGxlbj0iMzYwIiByZXNldD0iZGFpbHkiIG91dHB1dF9lbmNvZGluZz0iSVNPLTg4NTktMSIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQm1KTFIwUUEvd0QvQVArZ3ZhZVRBQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQmFFbEVRVlI0MnFXVElVOERRUkNGWHdsaTVjcld0WTRLRWlvUTRGcEgvd0U0Z2lJb2dpTFZnRUdTS29JckV0ZER0YkoxTFlvS0JBSlIzSjI3dWc4eGQ5MHJCUXlUek8zdHpNdmIyWG16SlNUMEQ5dVVKSGx2dTBYMktWZWtnN2EwMjVEZTNxWG5TUHFjR3laSkpPZkNQeEo0RDg2Wkg1OUFtZ0xBZUFUTk5weWUyWDQ0Z0dvZEpIQWVKSXpBT2ZCbDZONFpNRTNoL01LQTFScE1KeXh0UElLZGh1V1dCQkpjM3daUTFGOENPRHlDT0dYRm9qNlV5d1dDblVZQXplZlFiTEZ5dFdZTG52b1F4NEVrcTlBSUh1NUQ0ckZIdUZaRzhGT1Z3d0ZJYkVpU3FyV2dTeExibW5mYU9jbGxLbjI4QjF5bElra3lnc1VpSkhLeVlpeTNuTFJnUnZBeURaRzlmYW5aTm9LbEo1YmJyZ2ZjYkdhck5YRnZ0Y3ZUaWNrbmdaeDEvUHppanlZNkYyYWdxSGYzemp6cWgrSEtHN2hWL3o1SUhpNDdKdU5mOXRnclZKY1RGRWY1b0cyZ1lybHBDck5YTzhEN0lMTkU2ZGZYZU5sWmo5MWNyWVZLLzMzT1h5VSswbEFubXJuYkFBQUFBRWxGVGtTdVFtQ0MiID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSAxMCBTTVMgYWwgZ2lvcm5vIGVtdWxhbmRvIGlsIFdpZGdldCBEZXNrdG9wIFZvZGFmb25lLiDDiCBwb3NzaWJpbGUgaW52aWFyZSBTTVMgc29sbyB2ZXJzbyBudW1lcmkgVm9kYWZvbmUsIG9jY29ycmUgdW4gbnVtZXJvIHJlZ2lzdHJhdG8gc3VsIHNpdG8uPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlcm5hbWUiIGRlZmF1bHQ9IiIgZGVzYz0iSW5zZXJpc2NpIGwndXNlcm5hbWUgZGkgcmVnaXN0cmF6aW9uZSBkaSB3d3cudm9kYWZvbmUuaXQiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGRpIHd3dy52b2RhZm9uZS5pdCIgLz4KCQk8cmVxdWlyZWQgbj0iMyIgbmFtZT0ic2ltIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBpbCBudW1lcm8gZGkgdGVsZWZvbm8gZGVsbGEgc2ltIGNvbiBjdWkgdnVvaSBpbnZpYXJlIHRyYW1pdGUgcXVlc3RvIGFjY291bnQiIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogICAgPHByb2NlZHVyZT4KICAgICAgPHBhZ2UgdXJpPSJodHRwczovL3dpZGdldC52b2RhZm9uZS5pdC8xOTAvdHJpbG9neS9qc3AvbG9naW4uZG8iIG1ldGhvZD0iUE9TVCI+CiAgICAgIAk8aGVhZGVycz4KCQkJPHZhciBuYW1lPSJVc2VyLUFnZW50IiB2YWx1ZT0iVm9kYWZvbmVfRFciLz4KCQkJPHZhciBuYW1lPSJSZWZlcmVyIiB2YWx1ZT0iaHR0cDovL3d3dy52b2RhZm9uZS5pdC8iLz4KCQkJPHZhciBuYW1lPSJYLUZsYXNoLVZlcnNpb24iIHZhbHVlPSIxMCwwLDQ1LDIiLz4KCQkJPHZhciBuYW1lPSJBY2NlcHQiIHZhbHVlPSIqLyoiLz4KCQkJPHZhciBuYW1lPSJBY2NlcHQtTGFuZ3VhZ2UiIHZhbHVlPSJpdC1pdCIvPgoJCQk8dmFyIG5hbWU9IkNvbm5lY3Rpb24iIHZhbHVlPSJrZWVwLWFsaXZlIi8+CgkgIAk8L2hlYWRlcnM+CgkgIAk8dmFycz4KICAgICAgICAgIDx2YXIgbmFtZT0idXNlcm5hbWUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4KICAgICAgICAgIDx2YXIgbmFtZT0icGFzc3dvcmQiIHZhbHVlPSIlJXBhc3N3b3JkJSUiLz4KICAgICAgICAgIDx2YXIgbmFtZT0iY3VfY2hhbm5lbCIgdmFsdWU9Ik1NIi8+CiAgICAgICAgICA8dmFyIG5hbWU9ImN1X25vdHJhY2UiIHZhbHVlPSJ0cnVlIi8+CiAgICAgICAgPC92YXJzPgogICAgICAgIDxlcnJvcnM+IAogICAgICAgICAgPHZhciBlcnJzdHI9IlZlcmlmaWNhIGNoZSB1c2VybmFtZSBlIHBhc3N3b3JkIiBlcnJtc2c9Ik5vbWUgdXRlbnRlIG8gcGFzc3dvcmQgZXJyYXRpIi8+CiAgICAgICAgICA8dmFyIGVycnN0cj0iaW50ZXJ2ZW50byBkaSBtYW51dGVuemlvbmUiIGVycm1zZz0iU2Vydml6aW8gaW4gbWFudXRlbnppb25lIi8+CiAgICAgICAgICA8dmFyIGVycnN0cj0iaW5lc2lzdGVudGUiIGVycm1zZz0iU2Vydml6aW8gbm9uIGRpc3BvbmliaWxlIi8+CiAgICAgICAgPC9lcnJvcnM+CgkgIDwvcGFnZT4KCSAgPHBhZ2UgdXJpPSJodHRwczovL3dpZGdldC52b2RhZm9uZS5pdC8xOTAvdHJpbG9neS9qc3Avc3dhcFNpbS5kbyIgbWV0aG9kPSJQT1NUIiBjb25kaXRpb249IiUlc2ltJSUiPgogICAgICAgIDx2YXJzPgogICAgICAgICAgPHZhciBuYW1lPSJzd2FwX3NpbV9saW5rIiB2YWx1ZT0iJSVzaW0lJSIvPgogICAgICAgICAgPHZhciBuYW1lPSJ0eV9zaW0iIHZhbHVlPSIlJXNpbSUlIi8+CiAgICAgICAgPC92YXJzPgogICAgICAgIDxlcnJvcnM+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwMCZxdW90OyIgZXJybXNnPSJJbCBzZXJ2aXppbyBub24gZScgYWwgbW9tZW50byBkaXNwb25pYmlsZS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTAxJnF1b3Q7IiBlcnJtc2c9IklsIHNlcnZpemlvIG5vbiBlJyBhbCBtb21lbnRvIGRpc3BvbmliaWxlLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDImcXVvdDsiIGVycm1zZz0iU2Vzc2lvbmUgc2NhZHV0YS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTAzJnF1b3Q7IiBlcnJtc2c9IlNpYW1vIHNwaWFjZW50aS4gSWwgdHVvIHByb2ZpbG8gZGkgcmVnaXN0cmF6aW9uZSBub24gZScgYWJpbGl0YXRvIGEgcXVlc3RvIHNlcnZpemlvLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDQmcXVvdDsiIGVycm1zZz0iSWwgc2Vydml6aW8gbm9uIGUnIGFsIG1vbWVudG8gZGlzcG9uaWJpbGUuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwNSZxdW90OyIgZXJybXNnPSJJbCBzZXJ2aXppbyBub24gZScgYWwgbW9tZW50byBkaXNwb25pYmlsZS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTA2JnF1b3Q7IiBlcnJtc2c9IkNvbnRlbnV0byBub24gZGlzcG9uaWJpbGUuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwNyZxdW90OyIgZXJybXNnPSJIYWkgcmFnZ2l1bnRvIGlsIG51bWVybyBtYXNzaW1vIGRpIFNNUyBhIHR1YSBkaXNwb3NpemlvbmUgb2dnaS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTA4JnF1b3Q7IiBlcnJtc2c9IkUnIHN0YXRvIHJhZ2dpdW50byBpbCBudW1lcm8gbWFzc2ltbyBkaSBTTVMgdmVyc28gaWwgbnVtZXJvIGRlc3RpbmF0YXJpby4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTA5JnF1b3Q7IiBlcnJtc2c9IkF0dGVuemlvbmUhIE1lc3NhZ2dpbyB2dW90by4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTEwJnF1b3Q7IiBlcnJtc2c9IkhhaSBzdXBlcmF0byBpbCBudW1lcm8gZGkgY2FyYXR0ZXJpIGRpc3BvbmliaWxpLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMTEmcXVvdDsiIGVycm1zZz0iSW5zZXJpc2NpIGlsIG51bWVybyBkaSBjZWxsdWxhcmUgZGVsIGRlc3RpbmF0YXJpby4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTEyJnF1b3Q7IiBlcnJtc2c9IklsIG51bWVybyBkaSBjZWxsdWxhcmUgZGV2ZSBlc3NlcmUgZGkgbm92ZSBvIGRpZWNpIGNpZnJlIGUgY29udGVuZXJlIHNvbG8gY2FyYXR0ZXJpIG51bWVyaWNpLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMTMmcXVvdDsiIGVycm1zZz0iSWwgZGVzdGluYXRhcmlvIG5vbiBlJyB1biB1dGVudGUgVm9kYWZvbmUuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExNCZxdW90OyIgZXJybXNnPSJWZXJpZmljYSBpbCBudW1lcm8gbWl0dGVudGUiLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTE1JnF1b3Q7IiBlcnJtc2c9IkF0dGVuemlvbmUhIEVycm9yZSBTSU0uIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExNiZxdW90OyIgZXJybXNnPSJDb2RpY2UgZGkgY29udHJvbGxvIHNiYWdsaWF0byIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMTcmcXVvdDsiIGVycm1zZz0iQ29udGVudXRvIG5vbiBkaXNwb25pYmlsZS4iLz4KICAgICAgICA8L2Vycm9ycz4KICAgICAgPC9wYWdlPgogICAgICA8cGFnZSB1cmk9Imh0dHBzOi8vd2lkZ2V0LnZvZGFmb25lLml0LzE5MC9mc21zL3ByZWNoZWNrLmRvP2NoYW5uZWw9Vk9EQUZPTkVfRFciPgogICAgICAJPGhlYWRlcnM+CgkJCTx2YXIgbmFtZT0iVXNlci1BZ2VudCIgdmFsdWU9IlZvZGFmb25lX0RXIi8+CgkJCTx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHA6Ly93d3cudm9kYWZvbmUuaXQvIi8+CgkJCTx2YXIgbmFtZT0iWC1GbGFzaC1WZXJzaW9uIiB2YWx1ZT0iMTAsMCw0NSwyIi8+CgkJCTx2YXIgbmFtZT0iQWNjZXB0IiB2YWx1ZT0iKi8qIi8+CgkJCTx2YXIgbmFtZT0iQWNjZXB0LUxhbmd1YWdlIiB2YWx1ZT0iaXQtaXQiLz4KCQkJPHZhciBuYW1lPSJDb25uZWN0aW9uIiB2YWx1ZT0ia2VlcC1hbGl2ZSIvPgoJICAJIDwvaGVhZGVycz4KCSAgCSA8Y29udGVudHM+CiAgICAgICAgICAgIDx2YXIgbmFtZT0ibXNnbWF4bGVuZ3RoIiBsZWZ0PSJlIG49JnF1b3Q7TVNHTUFYTEVOR1RIJnF1b3Q7IHY9JnF1b3Q7IiByaWdodD0iJnF1b3Q7IC8iLz4KICAgICAgICAgPC9jb250ZW50cz4KICAgICAgICA8ZXJyb3JzPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDAmcXVvdDsiIGVycm1zZz0iSWwgc2Vydml6aW8gbm9uIGUnIGFsIG1vbWVudG8gZGlzcG9uaWJpbGUuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwMSZxdW90OyIgZXJybXNnPSJJbCBzZXJ2aXppbyBub24gZScgYWwgbW9tZW50byBkaXNwb25pYmlsZS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTAyJnF1b3Q7IiBlcnJtc2c9IlNlc3Npb25lIHNjYWR1dGEuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwMyZxdW90OyIgZXJybXNnPSJTaWFtbyBzcGlhY2VudGkuIElsIHR1byBwcm9maWxvIGRpIHJlZ2lzdHJhemlvbmUgbm9uIGUnIGFiaWxpdGF0byBhIHF1ZXN0byBzZXJ2aXppby4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTA0JnF1b3Q7IiBlcnJtc2c9IklsIHNlcnZpemlvIG5vbiBlJyBhbCBtb21lbnRvIGRpc3BvbmliaWxlLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDUmcXVvdDsiIGVycm1zZz0iSWwgc2Vydml6aW8gbm9uIGUnIGFsIG1vbWVudG8gZGlzcG9uaWJpbGUuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwNiZxdW90OyIgZXJybXNnPSJDb250ZW51dG8gbm9uIGRpc3BvbmliaWxlLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDcmcXVvdDsiIGVycm1zZz0iSGFpIHJhZ2dpdW50byBpbCBudW1lcm8gbWFzc2ltbyBkaSBTTVMgYSB0dWEgZGlzcG9zaXppb25lIG9nZ2kuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwOCZxdW90OyIgZXJybXNnPSJFJyBzdGF0byByYWdnaXVudG8gaWwgbnVtZXJvIG1hc3NpbW8gZGkgU01TIHZlcnNvIGlsIG51bWVybyBkZXN0aW5hdGFyaW8uIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwOSZxdW90OyIgZXJybXNnPSJBdHRlbnppb25lISBNZXNzYWdnaW8gdnVvdG8uIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExMCZxdW90OyIgZXJybXNnPSJIYWkgc3VwZXJhdG8gaWwgbnVtZXJvIGRpIGNhcmF0dGVyaSBkaXNwb25pYmlsaS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTExJnF1b3Q7IiBlcnJtc2c9Ikluc2VyaXNjaSBpbCBudW1lcm8gZGkgY2VsbHVsYXJlIGRlbCBkZXN0aW5hdGFyaW8uIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExMiZxdW90OyIgZXJybXNnPSJJbCBudW1lcm8gZGkgY2VsbHVsYXJlIGRldmUgZXNzZXJlIGRpIG5vdmUgbyBkaWVjaSBjaWZyZSBlIGNvbnRlbmVyZSBzb2xvIGNhcmF0dGVyaSBudW1lcmljaS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTEzJnF1b3Q7IiBlcnJtc2c9IklsIGRlc3RpbmF0YXJpbyBub24gZScgdW4gdXRlbnRlIFZvZGFmb25lLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMTQmcXVvdDsiIGVycm1zZz0iVmVyaWZpY2EgaWwgbnVtZXJvIG1pdHRlbnRlIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExNSZxdW90OyIgZXJybXNnPSJBdHRlbnppb25lISBFcnJvcmUgU0lNLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMTYmcXVvdDsiIGVycm1zZz0iQ29kaWNlIGRpIGNvbnRyb2xsbyBzYmFnbGlhdG8iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTE3JnF1b3Q7IiBlcnJtc2c9IkNvbnRlbnV0byBub24gZGlzcG9uaWJpbGUuIi8+CiAgICAgICAgPC9lcnJvcnM+CiAgICAgIDwvcGFnZT4KCSAgPHBhZ2UgdXJpPSJodHRwOi8vdC5qYWNrc21zLml0L3ZvZGFmb25lLXdpZGdldC1tZXNzYWdlLnBocCIgbWV0aG9kPSJQT1NUIj4KICAgICAgICA8dmFycz4KICAgICAgICAgCTx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIi8+CiAgICAgICAgIAk8dmFyIG5hbWU9Im1zZ21heGxlbmd0aCIgdmFsdWU9IiUlbXNnbWF4bGVuZ3RoJSUiLz4KICAgICAgICA8L3ZhcnM+CiAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2VfcGxhaW4iIGxlZnQ9Il9fbWVzc2FnZV9fOiIgcmlnaHQ9IjpfXy9tZXNzYWdlX18iLz4KICAgICAgICA8L2NvbnRlbnRzPgogICAgICA8L3BhZ2U+CiAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93aWRnZXQudm9kYWZvbmUuaXQvMTkwL2ZzbXMvcHJlcGFyZS5kbz9jaGFubmVsPVZPREFGT05FX0RXIiBtZXRob2Q9IlBPU1QiPgogICAgICAJIDxoZWFkZXJzPgoJCQk8dmFyIG5hbWU9IlVzZXItQWdlbnQiIHZhbHVlPSJWb2RhZm9uZV9EVyIvPgoJCQk8dmFyIG5hbWU9IlJlZmVyZXIiIHZhbHVlPSJodHRwOi8vd3d3LnZvZGFmb25lLml0LyIvPgoJCQk8dmFyIG5hbWU9IlgtRmxhc2gtVmVyc2lvbiIgdmFsdWU9IjEwLDAsNDUsMiIvPgoJCQk8dmFyIG5hbWU9IkFjY2VwdCIgdmFsdWU9IiovKiIvPgoJCQk8dmFyIG5hbWU9IkFjY2VwdC1MYW5ndWFnZSIgdmFsdWU9Iml0LWl0Ii8+CgkJCTx2YXIgbmFtZT0iQ29ubmVjdGlvbiIgdmFsdWU9ImtlZXAtYWxpdmUiLz4KCSAgCSA8L2hlYWRlcnM+CiAgICAgICAgIDx2YXJzPgogICAgICAgICAgICA8dmFyIG5hbWU9InJlY2VpdmVyTnVtYmVyIiB2YWx1ZT0iJSVpbnRudW0lJSIvPgogICAgICAgICAgICA8dmFyIG5hbWU9Im1lc3NhZ2UiIHZhbHVlPSIlJW1lc3NhZ2VfcGxhaW4lJSIvPgogICAgICAgICAgICA8dmFyIG5hbWU9ImF2YWlsYWJsZUNoYXJzIiB2YWx1ZT0iJSVhdmFpbGFibGVDaGFycyUlIi8+CiAgICAgICAgIDwvdmFycz4KICAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICA8dmFyIG5hbWU9ImNhcHRjaGFpbWFnZSIgbGVmdD0iZSBuPSZxdW90O0NPREVJTUcmcXVvdDsgJmd0OyZsdDshW0NEQVRBWyIgcmlnaHQ9Il1dJmd0OyIvPgogICAgICAgICA8L2NvbnRlbnRzPgogICAgICAgICA8ZXJyb3JzPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDAmcXVvdDsiIGVycm1zZz0iSWwgc2Vydml6aW8gbm9uIGUnIGFsIG1vbWVudG8gZGlzcG9uaWJpbGUuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwMSZxdW90OyIgZXJybXNnPSJJbCBzZXJ2aXppbyBub24gZScgYWwgbW9tZW50byBkaXNwb25pYmlsZS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTAyJnF1b3Q7IiBlcnJtc2c9IlNlc3Npb25lIHNjYWR1dGEuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwMyZxdW90OyIgZXJybXNnPSJTaWFtbyBzcGlhY2VudGkuIElsIHR1byBwcm9maWxvIGRpIHJlZ2lzdHJhemlvbmUgbm9uIGUnIGFiaWxpdGF0byBhIHF1ZXN0byBzZXJ2aXppby4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTA0JnF1b3Q7IiBlcnJtc2c9IklsIHNlcnZpemlvIG5vbiBlJyBhbCBtb21lbnRvIGRpc3BvbmliaWxlLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDUmcXVvdDsiIGVycm1zZz0iSWwgc2Vydml6aW8gbm9uIGUnIGFsIG1vbWVudG8gZGlzcG9uaWJpbGUuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwNiZxdW90OyIgZXJybXNnPSJDb250ZW51dG8gbm9uIGRpc3BvbmliaWxlLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDcmcXVvdDsiIGVycm1zZz0iSGFpIHJhZ2dpdW50byBpbCBudW1lcm8gbWFzc2ltbyBkaSBTTVMgYSB0dWEgZGlzcG9zaXppb25lIG9nZ2kuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwOCZxdW90OyIgZXJybXNnPSJFJyBzdGF0byByYWdnaXVudG8gaWwgbnVtZXJvIG1hc3NpbW8gZGkgU01TIHZlcnNvIGlsIG51bWVybyBkZXN0aW5hdGFyaW8uIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwOSZxdW90OyIgZXJybXNnPSJBdHRlbnppb25lISBNZXNzYWdnaW8gdnVvdG8uIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExMCZxdW90OyIgZXJybXNnPSJIYWkgc3VwZXJhdG8gaWwgbnVtZXJvIGRpIGNhcmF0dGVyaSBkaXNwb25pYmlsaS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTExJnF1b3Q7IiBlcnJtc2c9Ikluc2VyaXNjaSBpbCBudW1lcm8gZGkgY2VsbHVsYXJlIGRlbCBkZXN0aW5hdGFyaW8uIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExMiZxdW90OyIgZXJybXNnPSJJbCBudW1lcm8gZGkgY2VsbHVsYXJlIGRldmUgZXNzZXJlIGRpIG5vdmUgbyBkaWVjaSBjaWZyZSBlIGNvbnRlbmVyZSBzb2xvIGNhcmF0dGVyaSBudW1lcmljaS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTEzJnF1b3Q7IiBlcnJtc2c9IklsIGRlc3RpbmF0YXJpbyBub24gZScgdW4gdXRlbnRlIFZvZGFmb25lLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMTQmcXVvdDsiIGVycm1zZz0iVmVyaWZpY2EgaWwgbnVtZXJvIG1pdHRlbnRlIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExNSZxdW90OyIgZXJybXNnPSJBdHRlbnppb25lISBFcnJvcmUgU0lNLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMTYmcXVvdDsiIGVycm1zZz0iQ29kaWNlIGRpIGNvbnRyb2xsbyBzYmFnbGlhdG8iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTE3JnF1b3Q7IiBlcnJtc2c9IkNvbnRlbnV0byBub24gZGlzcG9uaWJpbGUuIi8+CiAgICAgICAgIDwvZXJyb3JzPgogICAgICA8L3BhZ2U+CiAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3QuamFja3Ntcy5pdC92b2RhZm9uZS13aWRnZXQtaW1hZ2UucGhwIiBtZXRob2Q9IlBPU1QiIGNvbmRpdGlvbj0iJSVjYXB0Y2hhaW1hZ2UlJSI+CiAgICAgICAgIDx2YXJzPgogICAgICAgICAgPHZhciBuYW1lPSJkYXRhIiB2YWx1ZT0iJSVjYXB0Y2hhaW1hZ2UlJSIvPgogICAgICAgICAgPHZhciBuYW1lPSJ3cml0ZWZpbGUiIHZhbHVlPSIlJXVzZXJuYW1lJSUiLz4KICAgICAgICAgIDx2YXIgbmFtZT0iZW5jb2RpbmdfcHJvYmxlbSIgdmFsdWU9InRydWUiLz4KICAgICAgICA8L3ZhcnM+CiAgICAgICAgPGNvbnRlbnRzPgogICAgICAgICAgICA8dmFyIG5hbWU9ImNhcHRjaGFfZmlsZSIgbGVmdD0iX19sb2FkZmlsZToiIHJpZ2h0PSIvX18iLz4KICAgICAgICA8L2NvbnRlbnRzPgogICAgICAgIDxlcnJvcnM+CgkJCTx2YXIgZXJyc3RyPSJFcnJvciIgZXJybXNnPSJQcm9ibGVtaSBpbmFzcGV0dGF0aSBuZWxsYSBnZW5lcmF6aW9uZSBkZWwgY2FwdGNoYS4iLz4KCQk8L2Vycm9ycz4KICAgICAgPC9wYWdlPgogICAgICA8cGFnZSB1cmk9Imh0dHA6Ly90LmphY2tzbXMuaXQvJSVjYXB0Y2hhX2ZpbGUlJSIgY2FwdGNoYT0iMSIgY29uZGl0aW9uPSIlJWNhcHRjaGFpbWFnZSUlIi8+CiAgICAgIDxwYWdlIHVyaT0iaHR0cHM6Ly93aWRnZXQudm9kYWZvbmUuaXQvMTkwL2ZzbXMvc2VuZC5kbz9jaGFubmVsPVZPREFGT05FX0RXIiBtZXRob2Q9IlBPU1QiPgogICAgIAkgPGhlYWRlcnM+CgkJCTx2YXIgbmFtZT0iVXNlci1BZ2VudCIgdmFsdWU9IlZvZGFmb25lX0RXIi8+CgkJCTx2YXIgbmFtZT0iUmVmZXJlciIgdmFsdWU9Imh0dHA6Ly93d3cudm9kYWZvbmUuaXQvIi8+CgkJCTx2YXIgbmFtZT0iWC1GbGFzaC1WZXJzaW9uIiB2YWx1ZT0iMTAsMCw0NSwyIi8+CgkJCTx2YXIgbmFtZT0iQWNjZXB0IiB2YWx1ZT0iKi8qIi8+CgkJCTx2YXIgbmFtZT0iQWNjZXB0LUxhbmd1YWdlIiB2YWx1ZT0iaXQtaXQiLz4KCQkJPHZhciBuYW1lPSJDb25uZWN0aW9uIiB2YWx1ZT0ia2VlcC1hbGl2ZSIvPgoJICAJIDwvaGVhZGVycz4KICAgICAgICAgPGFjY2VwdD4KICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9ImludmlhdGkgY29ycmV0dGFtZW50ZSIvPgogICAgICAgICA8L2FjY2VwdD4KICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgIDx2YXIgbmFtZT0idmVyaWZ5Q29kZSIgdmFsdWU9IiUlY2FwdGNoYV92YWx1ZSUlIiBjb25kaXRpb249IiUlY2FwdGNoYWltYWdlJSUiLz4KICAgICAgICAgICAgPHZhciBuYW1lPSJyZWNlaXZlck51bWJlciIgdmFsdWU9IiUlaW50bnVtJSUiLz4KICAgICAgICAgICAgPHZhciBuYW1lPSJtZXNzYWdlIiB2YWx1ZT0iJSVtZXNzYWdlX3BsYWluJSUiLz4KICAgICAgICAgPC92YXJzPgogICAgICAgICA8ZXJyb3JzPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDAmcXVvdDsiIGVycm1zZz0iSWwgc2Vydml6aW8gbm9uIGUnIGFsIG1vbWVudG8gZGlzcG9uaWJpbGUuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwMSZxdW90OyIgZXJybXNnPSJJbCBzZXJ2aXppbyBub24gZScgYWwgbW9tZW50byBkaXNwb25pYmlsZS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTAyJnF1b3Q7IiBlcnJtc2c9IlNlc3Npb25lIHNjYWR1dGEuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwMyZxdW90OyIgZXJybXNnPSJTaWFtbyBzcGlhY2VudGkuIElsIHR1byBwcm9maWxvIGRpIHJlZ2lzdHJhemlvbmUgbm9uIGUnIGFiaWxpdGF0byBhIHF1ZXN0byBzZXJ2aXppby4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTA0JnF1b3Q7IiBlcnJtc2c9IklsIHNlcnZpemlvIG5vbiBlJyBhbCBtb21lbnRvIGRpc3BvbmliaWxlLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDUmcXVvdDsiIGVycm1zZz0iSWwgc2Vydml6aW8gbm9uIGUnIGFsIG1vbWVudG8gZGlzcG9uaWJpbGUuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwNiZxdW90OyIgZXJybXNnPSJDb250ZW51dG8gbm9uIGRpc3BvbmliaWxlLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMDcmcXVvdDsiIGVycm1zZz0iSGFpIHJhZ2dpdW50byBpbCBudW1lcm8gbWFzc2ltbyBkaSBTTVMgYSB0dWEgZGlzcG9zaXppb25lIG9nZ2kuIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwOCZxdW90OyIgZXJybXNnPSJFJyBzdGF0byByYWdnaXVudG8gaWwgbnVtZXJvIG1hc3NpbW8gZGkgU01TIHZlcnNvIGlsIG51bWVybyBkZXN0aW5hdGFyaW8uIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzEwOSZxdW90OyIgZXJybXNnPSJBdHRlbnppb25lISBNZXNzYWdnaW8gdnVvdG8uIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExMCZxdW90OyIgZXJybXNnPSJIYWkgc3VwZXJhdG8gaWwgbnVtZXJvIGRpIGNhcmF0dGVyaSBkaXNwb25pYmlsaS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTExJnF1b3Q7IiBlcnJtc2c9Ikluc2VyaXNjaSBpbCBudW1lcm8gZGkgY2VsbHVsYXJlIGRlbCBkZXN0aW5hdGFyaW8uIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExMiZxdW90OyIgZXJybXNnPSJJbCBudW1lcm8gZGkgY2VsbHVsYXJlIGRldmUgZXNzZXJlIGRpIG5vdmUgbyBkaWVjaSBjaWZyZSBlIGNvbnRlbmVyZSBzb2xvIGNhcmF0dGVyaSBudW1lcmljaS4iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTEzJnF1b3Q7IiBlcnJtc2c9IklsIGRlc3RpbmF0YXJpbyBub24gZScgdW4gdXRlbnRlIFZvZGFmb25lLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMTQmcXVvdDsiIGVycm1zZz0iVmVyaWZpY2EgaWwgbnVtZXJvIG1pdHRlbnRlIi8+CgkJCTx2YXIgZXJyc3RyPSJuPSZxdW90O0VSUk9SQ09ERSZxdW90OyB2PSZxdW90OzExNSZxdW90OyIgZXJybXNnPSJBdHRlbnppb25lISBFcnJvcmUgU0lNLiIvPgoJCQk8dmFyIGVycnN0cj0ibj0mcXVvdDtFUlJPUkNPREUmcXVvdDsgdj0mcXVvdDsxMTYmcXVvdDsiIGVycm1zZz0iQ29kaWNlIGRpIGNvbnRyb2xsbyBzYmFnbGlhdG8iLz4KCQkJPHZhciBlcnJzdHI9Im49JnF1b3Q7RVJST1JDT0RFJnF1b3Q7IHY9JnF1b3Q7MTE3JnF1b3Q7IiBlcnJtc2c9IkNvbnRlbnV0byBub24gZGlzcG9uaWJpbGUuIi8+CiAgICAgICAgPC9lcnJvcnM+CiAgICAgIDwvcGFnZT4KICAgIDwvcHJvY2VkdXJlPgogPC9zZXJ2aWNlPgogPHNlcnZpY2UgaWQ9IjEwNiIgbmFtZT0iU21zaml2ZSIgdj0iMS4wIiBtYXhzbXM9IjEwIiBzaW5nbGVsZW49IjEwMCIgc21zX2Rpdmlzb3I9IjE1MiIgbWF4bGVuPSIxMDAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJBQ0NFTlQiIGljb249ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FJQUFBQ1FrV2cyQUFBQUFYTlNSMElBcnM0YzZRQUFBQVJuUVUxQkFBQ3hqd3Y4WVFVQUFBQUpjRWhaY3dBQURzTUFBQTdEQWNkdnFHUUFBQUo3U1VSQlZEaFBKVkxmU3hSUkdEMTNadTdjbVowWloxdEY5Q0hvd1IvUUtnWDFJZ21XSzIxRUNFb0poajFGMUV1OVJjS2FScjRFdlVUMFV1R3YzVzFxMWZ6VmtxNUVoZElmMFZ1OVJHQ0picnU2dStMY3ZuRm41dDY1OTd2ZmQ4N01kdzVjVFFGTUZWQ1pFZ0tncVlvR0RzRm9SVytZSm13d1dBaXhJTWdSUFk3S1M3dlJ4WnNIdUhVZUF2Um9sS0hRWUFoS0dBMEZCQm1rQTdsUlE3NWlpVjdMbjhLdm1YcUttVWVabE1CVklxbVNCNlRnQVJEcVhDeVBHQTV3NFNUcXd3RVdZOUFKaVJrME84VEliQU9nRTR1Q05CMmtVZkgwNFQ1bE55bkswelhqVjVGUGExdEpqRnhHWmJMeElHWEZHbENjTUVveityNkh1S3ZnVDdJNVA0bEVIOS94ekVJU3Q3dXQvUlF2WmNMM0Iyb0wwMHAraW4xNzZ1eS94K2FUVU1YajMxODM0V0lMRGpQbW8zNnhNWXE5SmZwSTAvZFF6T0NFSzhwdjlldXhZM0xDZmpiZ2dHbS92VWd4Qlp5TGlvTjVNZHlMTHlPaU9DK2dXUGxabExMV1lBY0JHV0dPa3NlM1V0aDdGNUZwbEttZzV4UUtpMGdNNHV1WUtNOGFHaGNQYitwN0MvWjJHanNMZ003bFhOM2tQWFMzSTlhdWRUVUQ4VFlVc2tqY1VEZkc0UytvSk5iWkpoeG1JZWZjdng4RTlVZG0xTEZyMUdYZUVUWGliUzVpcmZBL1lxd2ZsWndwUHpta2tnRnpkejdzTDRhZTM5Rm91NzNlOEdNSnZWMlFpeWl0TytocGhjemg4WkR3VitDdjBqK2dCaWpsSUpmZHppakpZcis0QzdtS3lvb3VzL2k1WXVQU0dlMXdqWTBPcVdEQ0RQUUtWQ01kZ1ZxeUUxME1Ua3RFeEUvckVTcFhPZjV0TnNyUHVOSlp6U0FqV29IK1ZLcFNwVVpOb0NxeVhkVXRqS21RYThTb2trOEpOV0FJOGhTNnlWT0VxRkZFaERUUkFFSEVTdURCT2lCRTVlclI1eEFDOVNrNElTclF1cnFsZURWQ2kvOEptNjgzZXR3bEtRQUFBQUJKUlU1RXJrSmdnZz09IiA+CiAgPGRlc2NyaXB0aW9uPgoJPGluZm8+SW52aWEgc21zIHZlcnNvIHR1dHRpPC9pbmZvPgoJPGNvbmZpZz4KCQk8cmVxdWlyZWQgbj0iMSIgbmFtZT0idXNlciIgZGVmYXVsdD0ieCIgZGVzYz0iTmVzc3VuIHBhcmFtZXRybyByaWNoaWVzdG8iIC8+Cgk8L2NvbmZpZz4KICA8L2Rlc2NyaXB0aW9uPgogICAgICAgIDxwcm9jZWR1cmU+CgkJCTxwYWdlIG1ldGhvZD0iUE9TVCIgdXJpPSJodHRwOi8vaWFkZG85MS5hbHRlcnZpc3RhLm9yZy9zY3JpcHRwaHAvc21zaml2ZS5waHAiPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ2aWV3IiB2YWx1ZT0iJSVtZXNzYWdlJSUiIC8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CiAgICAgICAgICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJtZXNzMSIgbGVmdD0iVGVYdE1lU3NBZ0U9OiIgcmlnaHQ9IjpUZVh0TWVTc0FnRSIgLz4KICAgICAgICAgICAgICAgIDwvY29udGVudHM+CiAgICAgICAgICAgIDwvcGFnZT4KCQkJPHBhZ2UgdXJpPSJodHRwOi8vd3d3LnNtc2ppdmUuY29tLyI+CgkJCQk8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJpbWFnZSIgbGVmdD0iJnF1b3Q7cGhwY2FwdGNoYS9zZWN1cmltYWdlX3Nob3cucGhwP3NpZD0iIHJpZ2h0PSImcXVvdDsiIC8+CiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPgoJCQk8L3BhZ2U+CgkJCTxwYWdlIHVyaT0iaHR0cDovL3d3dy5zbXNqaXZlLmNvbS9waHBjYXB0Y2hhL3NlY3VyaW1hZ2Vfc2hvdy5waHA/c2lkPSUlaW1hZ2UlJSIgY2FwdGNoYT0iMSIvPgogICAgICAgICAgICA8cGFnZSBtZXRob2Q9IlBPU1QiIHVyaT0iaHR0cDovL3d3dy5zbXNqaXZlLmNvbS9hY3Rpb25fZm9ybS5waHAiPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJ0MmxvZ2luIiB2YWx1ZT0idDJsb2dpbiIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImNvdW50cnkiIHZhbHVlPSIlJWludHByZWYlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImZfcGhvbmUiIHZhbHVlPSIlJWludHByZWYlJSUlaW50bnVtJSUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJmcm1fY291bnRyeV9zdGFydGNvZGUiIHZhbHVlPSIlJWludHByZWYlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImZfbXNnIiB2YWx1ZT0iJSVtZXNzMSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0icmVtbGVuIiB2YWx1ZT0iODciIC8+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJyZXBseV9lbmFibGVkIiB2YWx1ZT0iMSIgLz4KCQkJCQk8dmFyIG5hbWU9InNlY3VyaXR5X2NvZGUiIHZhbHVlPSIlJWNhcHRjaGFfdmFsdWUlJSIgLz4KICAgICAgICAgICAgICAgIDwvdmFycz4KICAgICAgICAgICAgICAgIDxhY2NlcHQ+CiAgICAgICAgICAgICAgICAgICAgPHZhciBhY2NlcHRzdHI9InNtcyBzZW50IiAvPgogICAgICAgICAgICAgICAgPC9hY2NlcHQ+CgkJCQk8ZXJyb3JzPgogICAgICAgICAgICAgICAgICAgIDx2YXIgZXJyc3RyPSJJTVBPUlRBTlQiIGVycm1zZz0iRXJyb3JlLCByaXByb3ZhIi8+CiAgICAgICAgICAgICAgICA8L2Vycm9ycz4KICAgICAgICAgICAgPC9wYWdlPgogICAgICAgIDwvcHJvY2VkdXJlPiA8L3NlcnZpY2U+CiA8c2VydmljZSBpZD0iMTA3IiBuYW1lPSJDb212aXEiIHY9IjEuMCIgbWF4c21zPSI1IiBzaW5nbGVsZW49IjE2MCIgc21zX2Rpdmlzb3I9IjE2MCIgbWF4bGVuPSIxNjAiIHJlc2V0PSJkYWlseSIgb3V0cHV0X2VuY29kaW5nPSJVVEYtOCIgaWNvbj0iaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQVhOU1IwSUFyczRjNlFBQUFBUm5RVTFCQUFDeGp3djhZUVVBQUFBZ1kwaFNUUUFBZWlZQUFJQ0VBQUQ2QUFBQWdPZ0FBSFV3QUFEcVlBQUFPcGdBQUJkd25McFJQQUFBQXdCUVRGUkZBQUFBREF3TURnNE9EdzhQRWhJU0V4TVRGQlFVRlJVVkZoWVdGeGNYR1JrWkdob2FHeHNiSEJ3Y0hoNGVJU0VoSWlJaUl5TWpLeXNyTFMwdEx5OHZNREF3TlRVMU56YzNQRHc4UkVSRVZGUlVWVlZWV2xwYVcxdGJYRnhjWFYxZFgxOWZZR0JnWVdGaFltSmlabVptWjJkbmFHaG9iMjl2ZFhWMWVYbDVnSUNBaDRlSGlZbUpqWTJOam82T3BxYW10TFMwdGJXMXZMeTh2cjYrdjcrL3hjWEZ5Y25KeXNyS3k4dkx6TXpNMXRiVzE5ZlgyTmpZM2QzZDM5L2Y0T0RnNGVIaDQrUGo1T1RrNWVYbDV1Ym01K2ZuNmVucDZ1cnE3T3pzN3U3dTcrL3Y4Zkh4OHZMeTgvUHo5UFQwOWZYMTl2YjIrUGo0K2ZuNSsvdjcvUHo4L2YzOS92NysvLy8vdzK3JBQUFBZGxKUkVGVU9FK2xrem12YVdFVWhzL3BoY1FZUXlRb1JXaEVvL1FUYUF3eEZPaFVDcDFPRlB3TXY0Qk9xQlNHR28wZ3BoQWh4aEREZSs5YUNka09KN25KWGNtM3M3UDJYcyszdm5lOTN6Zit4dGYvQkFGK3h1MTJRNzFlUno2ZlJ6cWRSamFiUmJsY3hudytSNy9mQjMxL3hOZlA0bDZ2aDJnMENxUFJDS2xVQ29sRUFyRllESjFPQjd2ZGpuZzgvanVnMiszQzZYUkNKcE5CcTlYQzVYSWhGb3NoRW9uQTRYQkFKQkloR0F5KzdQbnM0SEs1d08vM1F5Nlh3MlF5Y2Z1RHdRREQ0UkNUeVFUdGRodUpSSUlCSDQ5UXJWYWgxK3VoVnF1NStIZzhZcmxjWXIvZjgxcXRWaGlQeDJnMm03aGVyKzhhcEZJcEtKVkticFYyRnU3eStKdWdCTHZmNzY4QVNubzhIaFl0SEE3amZENS9HZzRYQ292WkF2UTRIQTd3ZXIwTUNBUUNMeTErSkFtU1R4RXptUXdmd1dhenNYRC9HazlBcTlWaTlWVXFGYXN0Rk9vQm8xeWhVTUJpc1hnWDhYUTZJWmxNUXFGUVFLUFJJQlFLb1ZhcjhRaW4weWthalFhRHJWWXI1OTZjU1BUUmFNU0YxQVhwUVc2a0k5R2lkektTeFdKaFMzKzBNbzJKWnAzTDVkaUZCb09CdXlGdm1NMW11TjF1K0h3K3pHYXp6d0NhL1c2M1l3TjFPaDFVS2hVVWkwV1VTaVUrRGwwa1dzSXh2MTBtUXBPdE41c051NDhFSStCNnZjWjJ1MldIQ3Izd0J5NktGZ0VtY1FZVEFBQUFBRWxGVGtTdVFtQ0MiID4KICA8ZGVzY3JpcHRpb24+Cgk8aW5mbz5JbnZpYSBkYSAxIGEgNSBTTVMgYWwgZ2lvcm5vIHZlcnNvIGkgbnVtZXJpIHN2ZWRlc2k8L2luZm8+Cgk8Y29uZmlnPgoJCTxyZXF1aXJlZCBuPSIxIiBuYW1lPSJ1c2VybmFtZSIgZGVmYXVsdD0iIiBkZXNjPSJOdW1lcm8gZGVsbGEgc2ltIHJlZ2lzdHJhdGEiIC8+CgkJPHJlcXVpcmVkIG49IjIiIG5hbWU9InBhc3N3b3JkIiBkZWZhdWx0PSIiIGRlc2M9Ikluc2VyaXNjaSBsYSBwYXNzd29yZCBkaSBhY2Nlc3NvIGEgd3d3LmNvbXZpcS5zZSIgLz4KCTwvY29uZmlnPgogIDwvZGVzY3JpcHRpb24+CiAgICAgICAgPHByb2NlZHVyZT4KICAgICAgICAgICAgPHBhZ2UgdXJpPSJodHRwOi8vd3d3LmNvbXZpcS5zZS9hamF4L2F1dGhlbnRpY2F0ZS5odG1sIiBtZXRob2Q9IlBPU1QiPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJwaG9uZU51bWJlciIgdmFsdWU9IiUldXNlcm5hbWUlJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9InBhc3N3b3JkIiB2YWx1ZT0iJSVwYXNzd29yZCUlIiAvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICA8L3BhZ2U+CgkJCTxwYWdlIHVyaT0iaHR0cDovL3d3dy5jb212aXEuc2UvbWl0dGtvbnRvLmh0bWwiPgoJCQkgIDxjb250ZW50cz4KCQkJICAgIDx2YXIgbmFtZT0icHJpbWEiIGxlZnQ9InRleHQtbWVzc2FnZXMtbGVmdCZxdW90OyZndDsiIHJpZ2h0PSImbHQ7Ii8+CgkJICAgICAgPC9jb250ZW50cz4KCQkJPC9wYWdlPgogICAgICAgICAgICA8cGFnZSB1cmk9Imh0dHA6Ly93d3cuY29tdmlxLnNlL2FqYXgvc2VuZFNNUy5odG1sIiBtZXRob2Q9InBvc3QiPgogICAgICAgICAgICAgICAgPHZhcnM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJtc2lzZG4iIHZhbHVlPSIlJWludG51bSUlIiAvPgogICAgICAgICAgICAgICAgICAgIDx2YXIgbmFtZT0ibWVzc2FnZSIgdmFsdWU9IiUlbWVzc2FnZSUlIiAvPgogICAgICAgICAgICAgICAgPC92YXJzPgogICAgICAgICAgICA8L3BhZ2U+CgkJCTxwYWdlIHVyaT0iaHR0cDovL3d3dy5jb212aXEuc2UvbWl0dGtvbnRvLmh0bWwiPgoJCQkgIDxjb250ZW50cz4KCQkJICAgIDx2YXIgbmFtZT0iZG9wbyIgbGVmdD0idGV4dC1tZXNzYWdlcy1sZWZ0JnF1b3Q7Jmd0OyIgcmlnaHQ9IiZsdDsiLz4KCQkgICAgICA8L2NvbnRlbnRzPgoJCQk8L3BhZ2U+CiAgICAgICAgICAgIDxwYWdlIHVyaT0iaHR0cDovL3QuamFja3Ntcy5pdC93YWRqYS5waHAiIG1ldGhvZD0iUE9TVCI+CiAgICAgICAgICAgICAgICA8dmFycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImJlZm9yZSIgdmFsdWU9IiUlcHJpbWElJSIgLz4KICAgICAgICAgICAgICAgICAgICA8dmFyIG5hbWU9ImFmdGVyIiB2YWx1ZT0iJSVkb3BvJSUiIC8+CiAgICAgICAgICAgICAgICA8L3ZhcnM+CiAgICAgICAgICAgICAgICA8Y29udGVudHM+CiAgICAgICAgICAgICAgICAgICAgPHZhciBuYW1lPSJjcmVkaXRpIiBsZWZ0PSJjcmVkaXRpOiIgcmlnaHQ9IjoiIC8+CiAgICAgICAgICAgICAgICA8L2NvbnRlbnRzPgogICAgICAgICAgICAgICAgPGFjY2VwdD4KICAgICAgICAgICAgICAgICAgICA8dmFyIGFjY2VwdHN0cj0iTWVzc2FnZ2lvIEludmlhdG8hIiBhY2NlcHRtc2c9IlNNUyBJbnZpYXRvISBTTVMgcmVzaWR1aSAlJWNyZWRpdGklJSIgLz4KICAgICAgICAgICAgICAgIDwvYWNjZXB0PgogICAgICAgICAgICAgICAgPGVycm9ycz4KICAgICAgICAgICAgICAgICAgICA8dmFyIGVycnN0cj0iSW52aW8gRmFsbGl0byIgZXJybXNnPSJNZXNzYWdnaW8gbm9uIGludmlhdG8hIiAvPgogICAgICAgICAgICAgICAgPC9lcnJvcnM+CiAgICAgICAgICAgIDwvcGFnZT4KICAgICAgICA8L3Byb2NlZHVyZT4gPC9zZXJ2aWNlPgoKPC9KYWNrU01TPg==");

}
