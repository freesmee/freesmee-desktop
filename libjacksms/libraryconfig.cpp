#include "libraryconfig.h"


QByteArray hardcodedServicesFile(){
    //aggiornato a 05/09/2010
    return QByteArray::fromBase64("<JackSMS>
 <service id="1" name="Vodafone-SMS" v="1.7" maxsms="10" singlelen="160" sms_divisor="160" maxlen="360" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAABaElEQVR42qWTIU8DQRCFXwli5crWtY4KEioQ4FpH/wE4giIogiLVgEGSKoIrEtdDtbJ1LYoKBAJR3J27ug8xd90rBQyTzO3tzMvb2XmzJST0D9uUJHlvu0X2KVekg7a025De3qXnSPqcGyZJJOfCPxJ4D86ZH59AmgLAeATNNpye2X44gGodJHAeJIzAOfBl6N4ZME3h/MKA1RpMJyxtPIKdhuWWBBJc3wZQ1F8CODyCOGXFoj6UywWCnUYAzefQbLFytWYLnvoQx4Ekq9AIHu5D4rFHuFZG8FOVwwFIbEiSqrWgSxLbmnfaOcllKn28B1ylIkkygsUiJHKyYiy3nLRgRvAyDZG9fanZNoKlJ5bbrgfcbGarNXFvtcvTickngZx1/PzijyY6F2agqHf3zjzqh+HKG7hV/z5IHi47JuNf9tgrVJcTFEf5oG2gYrlpCrNXO8D7ILNE6dfXeNlZj91crYVK/33OXyU+0lAnmrnbAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 10 SMS al giorno tramite il sito Vodafone. È possibile inviare SMS solo verso numeri Vodafone, occorre un numero registrato sul sito.</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vodafone.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vodafone.it" />
		<required n="3" name="sim" default="" desc="Inserisci il numero di telefono della sim con cui vuoi inviare tramite questo account" />
	</config>

  </description>
  <procedure>
     <page uri="http://www.vodafone.it/" ignorelocation="1"/>
      <page uri="http://www.vodafone.it/190/trilogy/jsp/home.do">
        <errors>
          <var errstr="a causa di un intervento di manutenzione" errmsg="Sito 190.it in manutenzione"/>
          <var errstr="lavori.vodafone.it" errmsg="Sito Vodafone in manutenzione"/>
        </errors>
      </page>

      <page uri="https://www.vodafone.it/190/trilogy/jsp/user.do" method="POST">
        <errors>
          <var errstr="/190/lsch/loginFailed.do" errmsg="Username o password errati" errcode="5"/>
        </errors>
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
          <var name="method" value="login"/>
          <var name="ty_skip_md" value="true"/>

        </vars>
      </page>
            <page uri="http://www.vodafone.it/190/trilogy/jsp/swapSim.do" method="POST" condition="%%sim%%">
                <vars>
					<var name="tk" value="1073752990,l"/>
					<var name="ty_link" value="null"/>
					<var name="ty_link_type"/>
					<var name="ty_sim" value="%%sim%%"/>
					<var name="from_tbfe" value="false"/>

					<var name="swap_sim_link" value="%%sim%%"/>
                </vars>
            </page>
      <page uri="http://www.areaprivati.vodafone.it/190/trilogy/jsp/dispatcher.do?ty_key=fsms_hp"/>
      <page method="POST" uri="http://www.areaprivati.vodafone.it/190/fsms/prepare.do">
        <errors>
          <var errstr="su www.190.it il proprio numero di" errmsg="Ti informiamo che per poter accedere a questo servizio è necessario"/>
          <var errstr="limitesms" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="non e' al momento disponibile" errmsg="190: Servizio non disponibile"/>

          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>
        </errors>
        <vars>
          <var name="receiverNumber" value="%%intnum%%"/>
          <var name="message" value="%%message%%"/>
        </vars>
        <contents>
          <var name="captcha" left="img src=&quot;/190/fsms" right="generateimg.do"/>
        </contents>

      </page>
      <page method="POST" uri="http://www.areaprivati.vodafone.it/190/fsms/prepare.do">
        <errors>
          <var errstr="limitesms" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>
        </errors>
        <vars>
          <var name="receiverNumber" value="%%intnum%%"/>
          <var name="message" value="%%message%%"/>

        </vars>
        <contents>
          <var name="captcha" left="img src=&quot;/190/fsms" right="generateimg.do"/>
        </contents>
      </page>
      <page uri="http://www.areaprivati.vodafone.it/190/fsms/generateimg.do" captcha="1" condition="%%captcha%%"/>
      <page uri="http://www.areaprivati.vodafone.it/190/fsms/send.do" method="POST">
        <accept>
          <var acceptstr="elaborata correttamente"/>

        </accept>
        <errors>
          <var errstr="FLATService=deleteIT" errmsg="Errore 190, riprova"/>
          <var errstr="ha ricevuto il numero massimo" errmsg="Il destinatario da te inserito ha ricevuto il numero massimo giornaliero di SMS via Web"/>
          <var errstr="informiamo che per poter accedere a questo servizio" errmsg="Errore 190, riprova"/>
          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>
          <var errstr="superato il limite giornaliero" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="momento disponibile. Ti invitiamo a riprovare" errmsg="Servizo momentaneamente non disponibile" errcode="12"/>
          <var errstr="prepare.do" errmsg="Codice di controllo sbagliato" errcode="8"/>

        </errors>
        <vars>
          <var name="verifyCode" value="%%captcha_value%%" condition="%%captcha%%"/>
          <var name="pageTypeId" value="9604"/>
          <var name="programId" value="10384"/>
          <var name="channelId" value="-18126"/>
          <var name="receiverNumber" value="%%intnum%%"/>
          <var name="message" value="%%message%%"/>
        </vars>

      </page>
  </procedure>
 </service>
 <service id="3" name="Communicator" v="1.4" maxsms="10" singlelen="141" sms_divisor="160" maxlen="141" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsElEQVR42qWTsRXDIAxET8xDQckIKVNkoPM+KVJmBJcuvI9SOI4RRjzyrFb3D0lIsi4z6ogp67rMgoEIO9AT9fIBAEgaUfl6TFlJuubSauGfCLgYAkBbZZciL0cSQlIf95sRqB7WIodBTFkV3ydlk4QSPtUl9idKGNqbQSVqwXtlAQCer7eavqsKPNjsgdm8QtyDfwantZWqDQcem0EH9g0GYddAsEECYJqI3mVevoUP6wxrLhB3KdMAAAAASUVORK5CYII=" >
  <description>
	<info>Invia 10 SMS al giorno tramite il sito di Virgilio. Richiede un abbonamento Tin.it</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.tin.it. Se la tua email è mario.rossi@tin.it, inserisci mario.rossi" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.tin.it" />
		<required n="3" name="domain" default="" desc="Inserisci il dominio, cioè la parte dopo @" />
	</config>
  </description>
  <procedure>
     <page uri="https://aaacsc.alice.it/piattaformaAAA/aapm/amI" method="POST">
                <vars>
                    <var name="usernameDisplay" value="%%username%%" />
                    <var name="dominio" value="@%%domain%%" />

                    <var name="password" value="%%password%%" />
                    <var name="login" value="%%username%%@%%domain%%" />
                    <var name="pwd" value="%%password%%" />
                    <var name="channel" value="Vmail" />
					<var name="URL_OK" value="https://authsrs.alice.it/aap/aap_redir.jsp?entry=Vmail"/>
					<var name="URL_KO" value="https://authsrs.alice.it/aap/aap_redir_ko.jsp?entry=Vmail"/>
					<var name="servizio" value="mail"/>
					<var name="msisdn" value="%%username%%"/>
					<var name="username" value="%%username%%@%%domain%%"/>

					<var name="user" value="%%username%%@%%domain%%"/>
					<var name="a3afep" value="http://portale.rossoalice.alice.it/ps/ManageCodError.do?code=470&amp;channel=Vmail"/>
					<var name="DOMAIN" value=""/>
					<var name="PASS" value="%%password%%"/>
					<var name="self" value="true"/>
					<var name="a3si" value="none"/>
					<var name="a3st" value="VCOMM"/>
					<var name="totop" value="true"/>
					<var name="nototopa3ep" value="true"/>

					<var name="a3aid" value="lvmes"/>
					<var name="a3flag" value="0"/>
					<var name="a3ep" value="http://communicator.alice.it/asp/login.asp"/>
					<var name="a3epvf" value="http://webmailvtin.alice.it/cp/ps/Main/login/SSOLogin"/>
					<var name="a3se" value="http://portale.rossoalice.alice.it/ps/ManageCodError.do?code=470&amp;channel=Vmail"/>
					<var name="a3dcep" value="http://communicator.alice.it/asp/homepage.asp?s=005"/>
					<var name="a3l"	value="%%username%%@%%domain%%"/>
					<var name="a3p"	value="%%password%%"/>
				</vars>

            </page>
			<page uri="http://communicator.alice.it/asp/stato_feu.asp?s=2"/>
		<page uri="http://communicator.alice.it/asp/smsweb.asp?p=1"/>
		            <page uri="http://gsmailmdumail.alice.it:8080/supermail/controller?username=%%username%%%40%%domain%%&amp;action=sendsmspreview" method="post">
                <vars>
                    <var name="lista_operatori" value="x" />
                    <var name="numero" value="" />
                    <var name="select" value="x" />
                    <var name="recipient" value="%2B%%intcode%%%%intnum%%" />

                    <var name="testo" value="message" />
                </vars>
            </page>
            <page uri="http://gsmailmdumail.alice.it:8080/supermail/controller?username=%%username%%%40%%domain%%" method="post">
                <vars>
                    <var name="action" value="sendsms" />
                    <var name="recipient" value="%2B%%intcode%%%%intnum%%" />
                    <var name="testo" value="%%message%%" />
                </vars>

                <accept>
                    <var acceptstr="inviato correttamente" />
                </accept>
                <errors>
                    <var errstr="La tua sessione non" errmsg="Invio fallito, riprova" />
                    <var errstr="superato il numero massimo" errmsg="Limite giornaliero di SMS raggiunto" />
                </errors>
            </page>
  </procedure>

 </service>
 <service id="2" name="Rossoalice" v="1.3" maxsms="10" singlelen="146" sms_divisor="146" maxlen="146" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAu0lEQVR42qVTrRKGIBA8GAuNaLXefMHoQ/E4PtRFAmO1Gm1GLR7Dv5/jFWZYdpe7BeEswZfqSpu/cTrTPWdJPAowcRn67CDeWCrUheQSkYsxHKczFJH/kFOhsEVZO2i0itZaCQDI3HHdmjdg3FkSMiXiuvl+i8MM8CwFP6jbwWgFy9CD0Qrm/Xh+B0z0DvuROTYF0hvU2oiG6Cy9ipEN+C1I+FiS42hFV3OPZuAsCWz9hSD76hAZxBe/8QK7xmMrzdvWbgAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia 10 SMS al giorno tramite il sito di Alice. Richiede un abbonamento flat Alice Adsl per registrarsi al sito.</info>
	<config>
		<required n="1" name="username" default="" desc="Username di accesso a www.alice.it. Se la tua email e' mario.rossi@alice.it, inserisci mario.rossi" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.alice.it" />
		<required n="3" name="login_account" default="" desc="Inserisci il valore del cookie login_account" />

		<required n="4" name="spc" default="" desc="Inserisci il valore del cookie spc" />
	</config>
  </description>
        <procedure>
            <page method="POST" uri="https://authsrs.alice.it/aap/validatecredential">
                <vars>
                    <var name="usernameDisplay" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="dominio" value="@alice.it" />

                    <var name="imageField.x" value="27" />
                    <var name="imageField.y" value="1" />
                    <var name="twoweeks" value="false" />
                    <var name="login" value="%%username%%@alice.it" />
                    <var name="pwd" value="%%password%%" />
                    <var name="channel" value="mail_alice" />
                    <var name="URL_OK" value="https://authsrs.alice.it/aap/aap_redir.jsp?entry=mail_alice" />
                    <var name="URL_KO" value="https://authsrs.alice.it/aap/aap_redir_ko.jsp?entry=mail_alice" />
                    <var name="servizio" value="mail" />

                    <var name="msisdn" value="%%username%%" />
                    <var name="username" value="%%username%%@alice.it" />
                    <var name="user" value="%%username%%@alice.it" />
                    <var name="a3afep" value="http://portale.rossoalice.alice.it/ps/ManageCodError.do?code=470&amp;channel=mail_alice" />
                    <var name="DOMAIN" value="" />
                    <var name="PASS" value="%%password%%" />
                    <var name="self" value="true" />
                    <var name="a3si" value="none" />
                    <var name="a3st" value="VCOMM" />

                    <var name="totop" value="true" />
                    <var name="nototopa3ep" value="true" />
                    <var name="a3aid" value="lames" />
                    <var name="a3flag" value="0" />
                    <var name="a3ep" value="http://communicator.alice.it/asp/login.asp" />
                    <var name="a3se" value="http://portale.rossoalice.alice.it/ps/ManageCodError.do?code=470&amp;channel=mail_alice" />
                    <var name="a3dcep" value="http://communicator.alice.it/asp/homepage.asp?s=005" />
                    <var name="a3l" value="%%username%%@alice.it" />
                    <var name="a3p" value="%%password%%" />

                </vars>
                <errors>
                    <var errstr="ManageCodError.do?code=470&amp;channel=mail_alice" errmsg="Username o password non validi" />
                </errors>
            </page>
            <page uri="http://auth.rossoalice.alice.it/aap/serviceforwarder?sf_dest=ibox_inviosms">
            	<errors>
                    <var errstr="deletecredential" errmsg="Username o password non validi" />
                </errors>

            </page>
            <page uri="http://webloginmobile.rossoalice.alice.it/alice/jsp/SMS/composer.jsp?ID_Field=0&amp;ID_Value=0&amp;id_clickto=0&amp;dummy=dummy">
            	<headers>
                    <var name="Cookie" value="account=%%username%%@alice.it; login_account=%%login_account%%; servizio=SMS; spc=%%spc%%; profile=Gold;" />
                </headers>
                <contents>
                    <var name="gratuiti" left="Oggi hai ancora  a disposizione &lt;b&gt; " right=" SMS GRATUITI" />
                </contents>
                <errors>

                    <var errstr="ad ogni destinatario ha un costo di" errmsg="Messaggi gratutiti terminati" />
                    <var errstr="Sistemi non disponibili" errmsg="Servizio momentaneamente non disponibile" />
                </errors>
            </page>
            <page uri="http://iaddo91.altervista.org/scriptphp/tim.php" method="POST">
                <vars>
                    <var name="sms" value="%%gratuiti%%" />
                </vars>
                <contents>

                    <var name="residui" left="sms:" right=":rimanenti" />
                </contents>
            </page>
            <page uri="http://webloginmobile.rossoalice.alice.it/alice/jsp/SMS/inviaSms.jsp" method="POST">
            	<headers>
                    <var name="Cookie" value="account=%%username%%@alice.it; login_account=%%login_account%%; servizio=SMS; spc=%%spc%%; profile=Gold;" />
                </headers>
                <vars>
                    <var name="DEST" value="%%intnum%%" />

                    <var name="ABGDEST" value="" />
                    <var name="TYPE" value="smsp" />
                    <var name="ABG_NOME_LISTA" value="" />
                    <var name="NOME_LISTA" value="" />
                    <var name="SHORT_MESSAGE2" value="%%message%%" />
                    <var name="SHORT_MESSAGE" value="%%message%%" />
                    <var name="INVIA_SUBITO" value="true" />
                    <var name="GIORNO" value="18%2F6%2F2010" />
                    <var name="ORE" value="09" />

                    <var name="MINUTI" value="00" />
                </vars>
            </page>
            <page uri="http://webloginmobile.rossoalice.alice.it/alice/jsp/EwsJCaptcha.jpg" captcha="1">
                <headers>
                    <var name="Pragma" value="no-cache" />
                    <var name="Referer" value="http://webloginmobile.rossoalice.alice.it/alice/jsp/SMS/inviaSms.jsp" />
                    <var name="Cookie" value="account=%%username%%@alice.it; login_account=%%login_account%%; servizio=SMS; spc=%%spc%%; profile=Gold;" />
                </headers>

            </page>
            <page uri="http://webloginmobile.rossoalice.alice.it/alice/jsp/SMS/inviaSms.jsp" method="POST">
            	<headers>
                    <var name="Cookie" value="account=%%username%%@alice.it; login_account=%%login_account%%; servizio=SMS; spc=%%spc%%; profile=Gold;" />
                </headers>
                <vars>
                    <var name="DEST" value="%%intnum%%" />
                    <var name="ABGDEST" value="" />
                    <var name="TYPE" value="smsp" />

                    <var name="ABG_NOME_LISTA" value="" />
                    <var name="NOME_LISTA" value="" />
                    <var name="SHORT_MESSAGE2" value="%%message%%" />
                    <var name="SHORT_MESSAGE" value="%%message%%" />
                    <var name="INVIA_SUBITO" value="true" />
                    <var name="GIORNO" value="18%2F6%2F2010" />
                    <var name="ORE" value="09" />
                    <var name="MINUTI" value="00" />
                    <var name="captchafield" value="%%captcha_value%%" />

                </vars>
                <accept>
                    <var acceptstr="con successo" acceptmsg="SMS Inviato! Hai ancora %%residui%% SMS disponibili" />
                </accept>
                <errors>
                    <var errstr="tempo massimo per" errmsg="Superato il tempo massimo per l&apos;inserimento del codice" />
                    <var errstr="302 Found" errmsg="Ritenta" />
                    <var errstr="non sono corretti." errmsg="Codice di controllo sbagliato" />
                    <var errstr="non disponibili&lt;br&gt;" errmsg="Alice: Sistemi non disponibili" />

                </errors>
            </page>
        </procedure> </service>
 <service id="6" name="Vodafone-MMS" v="1.2" maxsms="100" singlelen="1000" sms_divisor="1000" maxlen="1000" reset="daily" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAACRElEQVR42qWTTUhUURTHf3feezNalrgKTGeEadcHPfODHqmtkjIIIhChpS2LFuU2hCBIhBa1CLMgKenDLCoyRIo+zChwhCEKUpkpbCH0YLJxZt7HaTHOlCiz6cLlnnPu/f8O5957VDw2xf8Mfb1g5N64eB9jeIuLBCI1aG0WRm0ts9EtqiQgMjIh2dGn5HwPvS7M5st9aM0NpC9eYvnceap1Q4yuYyTarSIoUDBq+gbEefAITYGxv41NIzfR9zbhzsTJDg6hgiGUguzQMOGrw7IKEB6bFD8WQwV1iFZT0d+LKisDwE9+R1WWI1kfCKAZBs6Lt0Rfz0gR4A7dRgVD4DhsPHumKAYIHTlE5cQYwaMd4Lr5rOVBMtduFM8IILZpCSB+zhERkUK8YIuIpE6cEttsLe6tzL/iVFf3GtG/a2b85UqyVrFNS36d7hF99WN4Jd9ci1Rj72ikavoVAKl6s6B0Vy7sW0mAl1gAJ4BttgKwefBKHuBl8pkltVQS4Ny9T9WX90U/ff0WgXhsSum+YJsW6AHsnc1kHz4mXzaICJLJkLrQjzP5Dtu0sE2Ln9ubmKuPKhWPTRG+80zcJ88hpKE8LV/Otq2U7WnAzzrk3kyifiygjGAe6uQwujpJdLQoHSDZeVBFPn0Vf3Ye0X1E+aj5JLnPcyA+AcPAD4YQQOWy6Lt2k+hoUau+cqL3pGJfE7KUBkB5AroGhpH3fQ/1O43RfoBkT3exF9R67Vw3MCruh2l8WUahUBsqMBrrmT9+eE03/gH2JQ7uGCTmrQAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia MMS testuali tramite il sito Vodafone, solo verso numeri Vodafone.</info>
	<config>
		<required n="1" name="mittente" default="" desc="Inserisci il nome che verra' visualizzato come mittente" />

	</config>
  </description>
  <procedure>
     <page uri="http://mmsviaweb.net.vodafoneomnitel.it/WebComposer/MMSServletUpload?nextPage=/WebComposer/web/test.jsp" method="post" condition="%%attach%%">
        <contents>
          <var name="mms" left="fileName=" right="&amp;fileSize"/>
        </contents>
        <vars>
          <var name="FILE1" type="attach"/>

        </vars>
        <errors>
          <var errstr="error" errmsg="L'immagine inserita non supportata"/>
        </errors>
      </page>
      <page uri="http://mmsviaweb.net.vodafone.it/WebComposer/web/elaborapop.jsp" method="post">
        <vars>
          <var name="subjecttosend" value="Da:%20%%mittente%%"/>
          <var name="TextName" value="%%message%%"/>

          <var name="recipient" value="%%intpref%%%%intnum%%"/>
          <var name="SmilName" value=""/>
          <var name="AudioName" value=""/>
          <var name="ImageName" value=""/>
        </vars>
        <errors>
	  <var errstr="verificato un errore durante la procedura" errmsg="Errore durante la procedura" />
          <var errstr="SendMessage=0" errmsg="Il tuo messaggio non e' stato inviato, riprova."/>
        </errors>

        <accept>
	  <var acceptstr="messaggio &amp;egrave; stato inviato" />
          <var acceptstr="SendMessage=1"/>
        </accept>
      </page>
  </procedure>
 </service>
 <service id="40" name="JackSMS-Messenger" v="1.4" maxsms="500" singlelen="8000" sms_divisor="8000" maxlen="8000" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjUuND6NzHYAAACjSURBVDhPY2QAgrCKOfuuPHrnCGITC3TkhPav6khxAmvWiur6Tw4G6WWAaSTWZpg6uD6qG0DIK9R3gU5U938QJjUM4Pp0Y3r/gzDMABgfF42ujkE/fsJ/ECbVBXB9homT/4MwqQbA9YESg3HK9P/kYHBCgiVl04xZ/0nBcM3oTrfInvcfhnEqwudfq/zF/0GYLM0gg22Ll5OvGWSAQ9kakmIEAKq65KO8X6FQAAAAAElFTkSuQmCC" >
  <description>

	<info>Invia messaggi gratuiti ad utenti di JackSMS</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.JackSMS.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.JackSMS.it" />
	</config>
  </description>
 <procedure>
  
     <page method="POST" uri="http://q.jacksms.it/Messenger">

		<contents>
			<var name="spec" left=':RESP:' right=':/RESP:' />
		</contents>
        <vars>
          <var name="msg" value="%%message%%"/>
          <var name="u" value="%%username%%"/>
          <var name="p" value="%%password%%"/>
          <var name="dest" value="%%intnum%%"/>
        </vars>

        <accept>
          <var acceptstr="OK:RESP:" acceptmsg="%%spec%%"/>
          <var acceptstr="SENT"/>
          <var acceptstr="QUEUED" acceptmsg="Messaggio accodato"/>
        </accept>
        <errors>
          <var errstr="KO:RESP:" errmsg="%%spec%%"/>
          <var errstr="Il destinatario non esiste" errmsg="Questo numero non puo' ricevere JMS"/>
          <var errstr="non ha attivato" errmsg="Il destinatario non ha attivato la ricezione"/>

          <var errstr="ERROR: 3" errmsg="La coda di messaggi del destinatario e' piena."/>
          <var errstr="Server non disponibile" errmsg="Server non disponibile"/>
          <var errstr="Username o password sbagliati" errmsg="Username o password sbagliati" errcode="5"/>
        </errors>
      </page>
</procedure>
 </service>
 <service id="9" name="SMSByMail" v="1.1" maxsms="10" singlelen="140" sms_divisor="160" maxlen="140" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAo0lEQVR42q2TuxICIQxFbzJb6e9CB5V2+ruhjQUbd0XIPvTMZBhCEgJcSEJSNFweN/QoMX/5aF2gTbSEkR8AeCu5xzqWjya3RXjPOUvMblEFoKqqAFRC0vlePsx8Fmcw6gxEBAkJ1+cdACAhvc2D8SPTaME62YI9Ae05wuQtel0QUS1gO9TLXUbpvLvOHVpMiXmR8kj/I0wXfER9vVj66288wwuqpHSHqFEhfQAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia 10 SMS al giorno con SMSbyMail, solo verso numeri Vodafone.</info>
	<config>
		<required n="1" name="mittente" default="JackSMS" desc="Inserisci il nome che vuoi far apparire all'inizio del messaggio" />
		<required n="2" name="email" default="" desc="Inserisci l'email con cui hai effettuato la registrazione al sito www.190.it" />
		<optional n="3" name="smtp" default="smtp-sms.vodafone.it" desc="Inserisci il server SMTP del tuo provider" />
		<optional n="4" name="porta" default="25" desc="Inserisci la porta del server SMTP del tuo provider" />
	</config>
  </description>

  <procedure>
     <page uri="socket://%%smtp%%:%%porta%%">
        <accept>
          <var acceptstr="Mail accepted"/>
          <var acceptstr="Mail queued for delivery"/>
          <var acceptstr="accepted for delivery"/>
        </accept>
        <errors>
          <var errstr="User unknown" errmsg="Email errata"/>

          <var errstr="Invalid route address" errmsg="Email errata"/>
          <var errstr="Domain of sender address" errmsg="Email errata"/>
          <var errstr="Domain name required for sender" errmsg="Email errata"/>
          <var errstr="Mailbox disabled for this recipient" errmsg="Email destinatario disabilitata"/>
          <var errstr="not accepting messages" errmsg="Errore"/>
        </errors>
        <commands>
          <var cmd=" "/>
          <var cmd="HELO ip"/>

          <var cmd="MAIL FROM: &lt;%%email%%&gt;"/>
          <var cmd="RCPT TO: &lt;%%intnum%%@sms.vodafone.it&gt;"/>
          <var cmd="DATA"/>
          <var cmd="From: %%mittente%% &lt;%%email%%&gt;"/>
          <var cmd="To: &lt;%%intnum%%@sms.vodafone.it&gt;"/>
          <var cmd="Subject:"/>
          <var cmd="Content-Type: text/plain;"/>
          <var cmd="X-Priority: 3"/>
          <var cmd=""/>

          <var cmd="%%message%%"/>
          <var cmd="."/>
          <var cmd="QUIT"/>
        </commands>
      </page>
  </procedure>
 </service>
 <service id="20" name="CentroEmilia" v="1.1" maxsms="10" singlelen="135" sms_divisor="160" maxlen="135" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAACj0lEQVR42tWTS0hUYQCFv//eO4/GcbKpnBqsaehBUlb0VKioqIiiIKJFBUlIj0UgFEGrKNxEgYugoBaVPdDoQUZPRTNtkUjE9NJK08pmHJ2p0TvvuTN/q6Jo2aqzPBwOnA8O/PcSLd0dsi/6iaxhMLHAzfppywWAPzog73U2oWeSrPAuZv7EEgFw822j7B78wFx3MetmrBRafVcDjb1NWMkjlBrmUedjOX/yXHbWVdIV7kFVBLd8DwE42nBSHrh9BLvNQqYDzj69IjXFbOB2TKKhvEZsq90r2z4/p1sP4NcHuLS1mkL7WF58fsPhV3vkgYYqDq3ax8bpq+kI+EjHDDRyKhkjxfV3D+SF9lqWTC7hqq+e7Qu2sMxbKn5uPd56Sk4rnMr+0nKx/zcGmllYiWeGOXa3mpRq4B8ZIpL4ztQx7j9gjaRjeByuvyAqCRJYzTbuVVygcskOzr+sI61AT7j/j6DN5KQn8vWvAk2TVjQseAqKxOlnNdKujKbMPY+al7XUv2+U7nwXjZ1teO0uLof7ONFyRm6YuZaWvjaGw1FE5f0q2dTbii2rEkyGqFi0jSMrD4pNF3dJ31AnSk7idU6hefc1UdVcLc+9uIKNPFQFKsp2Idp6n8sv34JkyWK3WNk8e80vcBfb70ihZilfuPmXd8PXLL9GAywtmsMCT4kQ95+8lj0fB8ikVPJHmYkkdSDHDE8h/mAUk8lEcEgHxaBgTB5kNERWJZ5NUFzsRElGEihCJTgUIZ7KYBES19h8RvQkFoukPzBILBXDpKj0fwojc3H05AgDoRC5WBzNbJOISAbXBCuGoePxjiOdzmJWFUL+NPkOB7OKnQwO6lisGmaTgtc7ntC3PCxmx7+f6QfiHxWUptfkRwAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia 10 SMS al giorno tramite CentroEmilia</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.bancacentroemilia.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.bancacentroemilia.it" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.bancacentroemilia.it/portal/page?_pageid=95,247458&amp;_dad=portal&amp;_schema=PORTAL">

                <contents>
                    <var name="token" left="site2pstoretoken&quot; type=&quot;hidden&quot; value =&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="http://portallogin.cedecra.it/sso/auth" method="POST">
                <vars>
                    <var name="ssousername" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="site2pstoretoken" value="%%token%%" />

                    <var name="subscribername" value="cento" />
                    <var name="p_submit_url" value="http://portallogin.cedecra.it/sso/auth" />
                </vars>
                <errors>
                    <var errstr="La combinazione utente e password inserita" errmsg="username o password errati" />
                </errors>
            </page>
            <page uri="http://www.bancacentroemilia.it/pls/portal/portal_cento.invia_messaggio_ext" method="post">
                <vars>

                    <var name="TIPO_MESSAGGIO" value="SMS" />
                    <var name="PCODICE_ABI" value="08509" />
                    <var name="P_BACK_URL" value="/pls/portal/url/page/sito/sms/invio_sms" />
                    <var name="DESTINATARIO" value="%%intnum%%" />
                    <var name="testo" value="%%message%%" />
                </vars>
                <errors>
                    <var errstr="Max di messaggi consentito per il portale" errmsg="SMS esauriti per oggi" />
                </errors>

                <accept>
                    <var acceptstr="Messaggio inoltrato correttamente" />
                </accept>
            </page>
  </procedure>
 </service>
 <service id="21" name="FotoExpo" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAC6UlEQVR42mWTzWtcVRyGn3PumevNnc8mM00n005IDYLQhdQotNYILuLOhTvFgu4KIkVcdlHQbNy7El34BwhRaimCQsFsQkQRm1hb2iZpk5pmMjPJnZn7ce75uagBwQfe5QvP4n3hX55oRPh/YqUkV0ZS44soJC4o2UPLUU8B7IBIwTD0DDgHgNWGUi40sxGZCtkKAqyzKMA5w76XciGOlHrs+1JOU5LLH+K/exEXHQAKKZWJvv2O8cVFOtOzVL74HFeqYZIY5/nk2hJ9dBkzrh1dYGx+geLcS/yXjZ+XCQAzM0u48AYCGEB4KvrjYIAx1iJA1myQO0cy6CI2wQuK3P1theMAzROIc5hoSJod4MKQ7oNt0r93MWLBr1QZO1lH25zFi+/Rv/UH1UqR6tYjJoFWu4mnFDev3eCrjz/gRBBitWJhEGMEsBMN8maLQRRz2B1S80qEnRFTvYjjgG23UArikuH0+fPMBMcYrixzJk0gBtmef0164mQwSmV0cCB5lsnm9WvyjdbyO8jW9e/FOSdDGckRP1x6X1ZBNEB6ukVZINSKoFxGG8Pukw4zzvGo8Ay2fQqlFIVRRtrbY5SkrN25TRkwCVBqt1HAzuNNdtbuUC1W+PXmMnVAalUqk5OkmeXKW28T/XWLkq4xvbHOs0pjcsBrzqCU4saXX7P06Sc8D3jAi54HE8cojk9ge32SqEvDK1IsQMMIncxh9oB6u4XLc+KN+7wKnPMLZFlOOc/ZPdXGCugw4LOlJXyrGLqE1QvzhPfuYaLaBCdnp9Gex+DhJmeAs1lGfO4Vsrk5dgYRRc/DeiEmCAFI9vv0OoeUAFObqtO9vc7W3iHJ/Q2aKMZEKJx9AZylrODBL6vEwxGiFLoQ8HDtT+jvk2j99ExXx3zppcJzkvOmQEscw0adtakpttfXWFEwynISz6OYGzKV8o4ILztR6mj3P/mB1PKU2dwRAg7IgL7R3PU8lINUKXw0mbK8nlgF8A/tf3AYEpzqigAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia SMS avendo crediti a sufficienza con Fotoexpo.</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.fotoexpo.net" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.fotoexpo.net" />
		<required n="3" name="mittente" default="" desc="mittente dei messaggi (non sempre funziona)" />
	</config>
  </description>
  <procedure>
     <page method="POST" uri="http://www.fotoexpo.net/pannello.asp">
        <vars>

          <var name="login" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
		<contents>
		  <var name="creditiresidui" left="Crediti attuali : " right="&lt;BR&gt;"/>
		</contents>  
      </page>
	  <page uri="http://supermac.altervista.org/script/fotoexpo.php" method="POST">
        <vars>

          <var name="credits" value="%%creditiresidui%%"/>
        </vars>
        <contents>
          <var name="residui" left="Residui:" right=":"/>
        </contents>
	  </page>
      <page method="POST" uri="http://www.fotoexpo.net/inviosms.asp">
	    <headers>
		  <var name="Referer" value="http://www.fotoexpo.net/pannello.asp"/>

		</headers>
        <vars>
          <var name="pref" value="%%pref%%"/>
          <var name="numero" value="%%num%%"/>
          <var name="from" value="%%mittente%%"/>
          <var name="datatext" value="%%message%%"/>
          <var name="num" value="160"/>
          <var name="B1" value="Invia"/>
          <var name="login" value="%%username%%"/>

          <var name="password" value="%%password%%"/>
        </vars>
        <accept>
          <var acceptstr="inviato correttamente." acceptmsg="Messaggio Inviato. %%residui%% sms residui."/>
        </accept>
        <errors>
          <var errstr="temporaneamente sospeso" errmsg="Fotoexpo: Servizio temporaneamente sospeso" errcode="5"/>
          <var errstr="il login" errmsg="Username o password sbagliati" errcode="5"/>
          <var errstr="Non hai crediti" errmsg="Non possiedi crediti sufficienti"/>

          <var errstr="Non hai la copertura" errmsg="Non possiedi crediti sufficienti"/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="47" name="Tizioandcaio" v="1.2" maxsms="10" singlelen="120" sms_divisor="160" maxlen="120" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAACXBIWXMAAAsTAAALEwEAmpwYAAACTElEQVR42iXSzW8bVRSG8ffcc+/M2OO4LopLUqEKhFCEKsQCFpX4s5FYsugSkAqCQIBitYTYqb/q8cx4vu45h0XWj57dj8SUTAkCUwAwByIQy+AYwLDb+w++fUU/LfXymVu/3XoFETHBEQCAHAEwQBJQJ5RRq+Jn/gk7ShFGzj9kA+HhMJjBDMoYmInP/l4W3/8Q/9gO7/d/yaH0rD05b3AKGEAEKCAWlTwQEe4O6c//VDcbORWSW+6JeliEJYOSCplE00jSn3oTHdXB7WqtKQ+PJucz/wjioaaKKmorrHCBk1GaJG6cMqoGh6GLiZXdrqz2Y7oNbe2L3rfCRwmtkhEyhzNCxnBARaA85TSJ3UKPh6H+xZq9LyStonvfYN+gbvvYtRw71p55vt2U4w8ni1WzXRVoS+xXoV373ty/G1yv8es6/rZq1seh6qwoWo0LHJdXX38z7Eq9+S5kvm+rbLj1vpVcTlNpR+U+3N8/lvDp+Xl+mb/88frpfPQ8L+52m4VikMinexn2/uJMJln27OnZV1fzdy8+AYXphJKA1y9ml0/y2RgvX+XXN1822zd2t2xk57OMvLcp42KKq3kCBYl2zemzzychgCNuL3KefyzFZkRDlufewPDEAMFYB09AYmPPRr1GSKQOoVRGO3SiLSWug1MjAARiZhDBHOCiOZbOpWFZQesjmp2q1a368OBHooEcM4gfdJEDzHrCYjWk5VLq/2Jbk6lf3b715AiqqqJOjI08+TAYHh/+XCRf/P76Pu+20+TUzaYfnWf/A9/CZpgzV50hAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 3 SMS per ogni pacchetto acquistato con i crediti su TizioandCaio</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.tizioandcaio.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.tizioandcaio.com" />
		<optional n="3" name="mittente" default="" desc="Inserisci il nome che verra' visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.tizioandcaio.com/profile/login.aspx" method="POST">
            <vars>

                <var name="path" value="%2Fpublic%2Fforum%2Fprofile.php" />
                <var name="username" value="%%username%%" />
                <var name="password" value="%%password%%" />                 
				<var name="login" value="Login" />
            </vars>
	    <errors>
          <var errstr="Username o password errati" errmsg="Username o password non validi"/>
        </errors>
      </page>

      <page uri="http://sms.aruba.it/Secure_inviasmsdomini.asp" method="POST">
	        <contents>
                <var name="RandID" left="input type=&quot;hidden&quot; name=&quot;RandID&quot; value=&quot;" right="&quot;" />
				<var name="UrlCliente" left="input type=&quot;hidden&quot; name=&quot;UrlCliente&quot; value=&quot;" right="&quot;" />
				<var name="IDCodSMS" left="input type=&quot;text&quot; name=&quot;IDCodSMS&quot; value=&quot;" right="&quot;" />
				<var name="PathReferer" left="input type=&quot;text&quot; name=&quot;PathReferer&quot; value=&quot;" right="&quot;" />
				<var name="HttpPathReferer" left="input type=&quot;text&quot; name=&quot;HttpPathReferer&quot; value=&quot;" right="&quot;" />
				<var name="Mittente" left="input type=&quot;text&quot; name=&quot;Mittente&quot; value=&quot;" right="&quot;" />
            </contents> 
            <vars>

                <var name="IDCodSMS" value="%%IDCodSMS%%" />
                <var name="PathReferer" value="%%PathReferer%%" />
                <var name="RandID" value="%%RandID%%" />
                <var name="RiepilogoFatto" value="SI" />
                <var name="smsdestinatario" value="%%num%%" />
                <var name="smsmittente" value="%%mittente%%" />
                <var name="smsprefcell" value="%%pref%%" />
                <var name="smspubblicit" value="%5Btizioandcaio%2Ecom%5D" />
                <var name="smstesto" value="%%message%%" />

                <var name="UrlCliente" value="%%UrlCliente%%" />
            </vars>
       </page>	  	  
	   <page uri="http://sms.aruba.it/SmsSender/Default.aspx" method="POST">
            <vars>
                  <var name="HttpPathReferer" value="%%HttpPathReferer%%" />
                  <var name="IDCodSMS" value="%%IDCodSMS%%" />
                  <var name="Mittente" value="%%Mittente%%" />
                  <var name="PathReferer" value="%%PathReferer%%" />

                  <var name="RandID" value="%%RandID%%" />
                  <var name="RiepilogoFatto" value="SI" />
                  <var name="smsdestinatario" value="%%num%%" />
                  <var name="smsmittente" value="%%mittente%%" />
                  <var name="smsprefcell" value="%%pref%%" />
                  <var name="smspubblicit" value="%5Btizioandcaio%2Ecom%5D" />
                  <var name="smstesto" value="%%message%%" />
                  <var name="UrlCliente" value="%%UrlCliente%%" />
            </vars>

      </page>
	    <accept>
          <var acceptstr="stato eseguito correttamente"/>
        </accept>
  </procedure>
 </service>
 <service id="30" name="Tim" v="1.2" maxsms="5" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAABpklEQVR42t2TvWtTYRSHn3vz3s80zUfBiopaKToYKRTEwdlJHNRRwUE65k9wcHHoVHAUsYKLUNydRHER2tCpICI1kWrTm/QmufW+9ybvm+sQrR842UHwTIcDvwPn4TmGlJKDlJFl2V+HkyTB5ID17xeI700gFeevLO4DcV2LWA7wPRsAmQwxJwusPbptVIr+D4hnLo9Dx2WI7Eac7Ac0cdhwKvhHpnEtk25fovSICd/Bc6398PpKzRBvGzGz6Seu720gciah8KiORkzZBjfu1lC9iI/bPYLdiIvzM7TDL7xvdri39GLMQBQ8Trsa7TpoYaFyOVLbYTWx2drq8HDlDXlXcOxwiQtzJ7h66RztcA/y49OEVhprJ6CjB2x6ZVpikmraIS4VaLW6fA4imts9un3J0vJLLEvwuv4B2xnjM17VGyzceZoB+FMlwighJ2PUUJOkCiFMTNPAcyzyvs3R6SLvGm2eLN40qqfKv5o4c+1+Vi649Hd2UUPNKMvwPZtYDpg4VEGmis1nNeNnE/+o8vytB2eBWSABit/Gvfrjhee/q/wf/MJXnMKw6T06CuMAAAAASUVORK5CYII=" >
  <description>
	<info>Invia 5 SMS al giorno verso i numeri Tim Italia</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.tim.it (numero telefonico senza il 39)" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.tim.it" />
		<optional n="3" name="Correzione" default="" desc="Scrivere ON per la correzione dei caratteri accentati" />
	</config>
  </description>
<procedure>
      <page method="POST" uri="https://www.tim.it/authfe/login.do">
        <vars>

          <var name="login" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
          <var name="portale" value="timPortale"/>
          <var name="urlOk" value="https://www.tim.it/119/consumerdispatcher"/>
        </vars>
        <errors>
          <var errstr="loginerror.do" errmsg="Username o password sbagliati" errcode="5"/>
        </errors>
      </page>

      <page uri="https://smsweb.tim.it/sms-web/adddispatch?start=new">
        <errors>
          <var errstr="Oggi hai raggiunto il numero massimo di SMS gratis a tua disposizione." errmsg="Sms Esauriti"/>
        </errors>
        <contents>
                    <var name="t1" left="t-invisible&quot;&gt;&lt;input name=&quot;t:formdata&quot; type=&quot;hidden&quot; value=&quot;" right="&quot;" />
                    <var name="t2" left="seperateFreeNumbers:hidden&quot; name=&quot;t:formdata&quot; type=&quot;hidden&quot; value=&quot;" right="&quot;" />
                    <var name="smsresidui" left="SMS disponibili&quot; src=&quot;assets/com/trendiweb/sms/web/assets/master_processi/img_processi/sms.jpg&quot; style=&quot;float: left;&quot;/&gt;&lt;div class=&quot;color_blue&quot; style=&quot;float: left;&quot;" right="/div&gt;"/>	
        </contents>

      </page>
	  <page uri="http://iaddo91.altervista.org/scriptphp/ripeti.php" method="POST">
            <vars>
               <var name="phone" value="%%smsresidui%%"/>
             </vars>
            <contents>
               <var name="number" left="&gt;" right="&lt;" />
            </contents>
           </page>

           <page uri="http://iaddo91.altervista.org/scriptphp/tim.php" method="POST">
		   <vars>
		   <var name="sms" value="%%number%%"/>
		   </vars>
		    <contents>
               <var name="residui" left="sms:" right=":rimanenti" />
            </contents>
		</page>
      <page method="POST" uri="https://smsweb.tim.it/sms-web/adddispatch.adddispatchform">

	    <contents>
           <var encode="1" name="t5" left="t:formdata&quot; type=&quot;hidden&quot; value=&quot;" right="&quot;" />
        </contents>
        <vars>
		  <var encode="1" name="t:formdata" value="%%t1%%"/>
          <var name="recipientType" value="FREE_NUMBERS"/>
          <var encode="1" name="t:formdata" value="%%t2%%"/>
          <var name="freeNumbers" value="%%intnum%%"/>
		  <var name="t:formdata" value=""/>

          <var name="contactListId" value=""/>
		  <var name="t:formdata" value=""/>
          <var name="contactsIdString" value=""/>
          <var name="deliverySmsClass" value="STANDARD"/>
          <var name="textAreaStandard" value="%%message%%"/>
		  <var name="textAreaFlash" value=""/>
          <var name="modelsSelect" value=""/>
        </vars>
      </page>

      <page uri="https://smsweb.tim.it/sms-web/validatecaptcha:image/false?t:ac=Dispatch" captcha="1"/>
      <page uri="https://smsweb.tim.it/sms-web/validatecaptcha.validatecaptchaform" method="POST">
	  <headers>
	   <var name="Referer" value="https://smsweb.tim.it/sms-web/validatecaptcha/Dispatch"/>
	  </headers>
        <vars>
          <var name="t:ac" value="Dispatch"/>
          <var name="t:formdata" value="%%t5%%"/>
          <var name="verificationCode" value="%%captcha_value%%"/>

        </vars>
                <accept>
                    <var acceptstr="SMS inviato" acceptmsg="SMS Inviato! SMS residui %%residui%%"/>
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato" />
                    <var errstr="Le lettere che hai inserito non corrispondono a quelle presenti" errmsg="captcha errato" />
                </errors>
      </page>

  </procedure>

 </service>
 <service id="28" name="SMSHosting" v="1.0" maxsms="10" singlelen="130" sms_divisor="160" maxlen="130" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAgMAAABinRfyAAAADFBMVEX///8AAAAUZP+Frf8DKWH+AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAFklEQVR42mNYtYqBgYEIIjT0/38iCAAnDB/h0JZ50wAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia SMS tramite SmsHosting in base a quanti ne rimangono disponibili giornalmente</info>
	<config>
		<required n="1" name="mittente" default="empty" desc="Non è necessario inserire nulla" />
	</config>

  </description>
  <procedure>
     <page uri="http://www.smshosting.it/smsMaster/spedizioneFree.do" method="post">
		<headers>
			<var name="Referer" value="http://www.geekissimo.com/sms-gratis.html" />
		</headers>
		<vars>
			<var name="TextMessage" value="%%message%%" />
			<var name="GsmCode" value="%%pref%%" />

			<var name="PhoneNumber" value="%%num%%" />
			<var name="binvio" value="Invia%20sms" />
		</vars>
		<accept>
			<var acceptstr="sms-gratisOK"/>
		</accept>
        <errors>
          <var errstr="sms-gratisKO" errmsg="SMS Non inviato" />
        </errors>

	  </page>
  </procedure>
 </service>
 <service id="19" name="InBanca" v="1.2" maxsms="5" singlelen="141" sms_divisor="160" maxlen="141" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAC60lEQVR42nWTS2hcBRSGv3Mf83DymtiMsWkag2Ib0lgTlWlQNNGFXRRERaRYEUqhSBeFIrpx4wNRUHxglaoIgm1xo0E3aak61baaUJz0EdJ0MrWYTjOZTppMMu975x4XsWIb+y8Phx/O/39H+B8t5cu8+ME+zU4G8Twl0lXmw1075NZwaMWudeOgUKqy871P9dJpm3yhAEB5zGb33i80t1iSxobgzQ3UU55/6yOdGhV8thK9twPTMDh7fobJ31128ZnWap6YprHSwKk5TGSSAFTCabo23M6WLavENAXv+wU98VOJYqqRU9MJKm4Fv+UHQAAWSjm+jH+jw1NHmS8uoiimYSACKh6kI+hID4TK1A+eY2B9Lzvv2yaRulVYJafEvpP7df+ZIVTB9GzwBF/AwrJMEA/XtKmIALBQzvHtxDCqaMkpizX41bMaDjQhwMCah0jEAly+nOeFbf08+ECngPJHPK0fj8QJB8Pc0/kwsUyM2MXfeKQjirX5zgEOJY/SHAyztftJeX84ruQytAXapavlLgAy2by07IkQ9NusWx/m8atRqjWXtoZWrOFkDAMTV10K1SKIAnp9tcUqiQtZ6kMBIu0miasXqboOzcEmZGxmnLePfaLn5qbobuwme6ST+dkaTz23lo33hwVgIpHRA0Nx6ups1kYrnJ4/xeq6Vt589CURz/M4Pn2Sd47t1UtzWayRKOZiI17fGXRNClHjWlmoKo7nEgk1s1QtcGL70HK0nucxfuU8P5z9WY8cKLKYNon0X6G91wEVZmaXSM3muCXgY3BjD4f/jHF8+3diGuYySIaxTFal6khu9JAeTk3SMHs3WyObxGebfP7LiE6Pp+ju6+CV/ifk9cf2YO4wV6Ls99n8OnpBRsf+0kRyjtfe/VENEXJLZUL+IHl/mmDQf13Axo3PtKm3g7Yeh/bVTVQqLsWyw20t9dzR5/H1q7vF+AeoaxJuoslkhjcOHlSAl59+Rjasa/331P/qb70CPRr7m0RyAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 5 o 25 SMS al giorno tramite InBanca</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.inbanca.bcc.it" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.inbanca.bcc.it" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.inbanca.bcc.it/login.aspx?LN=it-IT&amp;UrlBack=~%2fit-it%2fbanca-on-line%2faltri-servizi-riservati--a-utenti-registrati-%2fsms-gratuiti.aspx%3fidC%3d61751%26LN%3dit-IT">
			<contents>
				<var name="session" left="__VIEWSTATE&quot; value=&quot;" right="&quot;" />
				<var name="sessid" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
			</contents>

		</page>
		<page uri="http://supermac.altervista.org/script/session.php" method="POST">
			<vars>
				<var name="view" value="%%session%%" />
				<var name="event" value="%%sessid%%" />
			</vars>
			<contents>
				<var name="view__" left="VIEWSTATE:" right=":" />
				<var name="event__" left="EVENTVALIDATION:" right=":" />

			</contents>
		</page>
		<page uri="http://www.inbanca.bcc.it/login.aspx?LN=it-IT&amp;UrlBack=%7e%2fit-it%2fbanca-on-line%2faltri-servizi-riservati--a-utenti-registrati-%2fsms-gratuiti.aspx%3fidC%3d61751%26LN%3dit-IT" method="POST">
			<vars>
				<var name="__EVENTTARGET" value="" />
				<var name="__EVENTARGUMENT" value="" />
				<var name="__VIEWSTATE" value="%%view__%%" />
				<var name="__EVENTVALIDATION" value="%%event__%%" />
				<var name="ctl00$Header$HeaderMenu1$testo" value="" />

				<var name="ctl00$MainCPH$Login1$TextBoxUsername" value="%%username%%" />
				<var name="ctl00$MainCPH$Login1$TextBoxPassword" value="%%password%%" />
				<var name="ctl00$MainCPH$Login1$ButtonLogin" value="Login" />
			</vars>
			<errors>
				<var errstr="I dati inseriti non sono esatti" errmsg="username o password errati" />
			</errors>
		</page>
		<page uri="http://www.inbanca.bcc.it/it-it/banca-on-line/altri-servizi-riservati--a-utenti-registrati-/sms-gratuiti.aspx?idC=61751&amp;LN=it-IT">

			<contents>
				<var name="session1" left="__VIEWSTATE&quot; value=&quot;" right="&quot;" />
				<var name="sessid1" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
			</contents>
		</page>
		 <page uri="http://supermac.altervista.org/script/session.php" method="POST">
			<vars>
				<var name="view" value="%%session1%%" />
				<var name="event" value="%%sessid1%%" />

			</vars>
			<contents>
				<var name="view__1" left="VIEWSTATE:" right=":" />
				<var name="event__1" left="EVENTVALIDATION:" right=":" />
			</contents>
		</page>
		<page uri="http://www.inbanca.bcc.it/it-it/banca-on-line/altri-servizi-riservati--a-utenti-registrati-/sms-gratuiti.aspx?idC=61751&amp;LN=it-IT" method="POST">
			<vars>
				<var name="__EVENTTARGET" value="ctl00$MainCPH$Contenuto1$InvioSMS1$LnkConfermaSMS" />

				<var name="__EVENTARGUMENT" value="" />
				<var name="__VIEWSTATE" value="%%view__1%%" />
				<var name="__EVENTVALIDATION" value="%%event__1%%" />
				<var name="ctl00$Header$HeaderMenu1$testo" value="" />
				<var name="ctl00$MainCPH$Contenuto1$InvioSMS1$TxtNumTelefono" value="%2B%%intcode%%%%intnum%%" />
				<var name="ctl00$MainCPH$Contenuto1$InvioSMS1$TxtTestoMessaggio" value="%%message%%" />
			</vars>
			<errors>
				<var errstr="Il numero massimo di messaggi giornalieri" errmsg="SMS esauriti per oggi" />

			</errors>
			<accept>
				<var acceptstr="Messaggio inviato correttamente." />
			</accept>
		</page>
  </procedure>
 </service>
 <service id="32" name="EuroSMS" v="1.0" maxsms="10" singlelen="96" sms_divisor="160" maxlen="96" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAABBklEQVR42qWTPYrCUBSFvzeMhWATSCeiNil0JSJYGcEluAy3YW+TTnQFgohYqp2SwgVoY+fzTJEZJ3FkTOLXPLjcc95798fwjSSRAWOMATB5xHETk1f8w+ezoLUwmcBqBWEIlQrUatDvg+smcz8excsleB6MRtBogO9HZxjCev3kNsU4nSTHkQYDyVql4m5wOETCclmZuBdxt4Ph8O8Lx2MoFFIUsdn8DQZBji5Mp7Dfw/EIvV4Gs/h/5nOpVJI2m/Q1SBhYK3U6kutK220y8XqVzucXBpJ0uUjdrlQsSq2W5PtSuy15nhQE/3Qhzu0GsxksFtEA1etQrUaT6DgP+/D2Mr27zl8EvWhvm09RhwAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia SMS tramite Eurosms avendo crediti disponibili</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.eurosms.org" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.eurosms.org" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.eurosms.org/credito.php" method="post">

	  <vars>
		<var name="login_username" value="%%username%%" />
		<var name="login_password" value="%%password%%" />
	  </vars>
	  <errors>
		<var errstr="password errat" errmsg="Username o password errati" errcode="5" />
	  </errors>
	</page>
	<page uri="http://www.eurosms.org/send_sms.php" method="post">

	  <vars>
		<var name="rcpt" value="39%%intnum%%" />
		<var name="text" value="%%message%%" />
	  </vars>
	  <accept>
		<var acceptstr="inviato correttamente" />
	  </accept>
	  <errors>
		<var errstr="Non hai credito sufficiente" errmsg="Non hai credito sufficiente per inviare SMS" />

		<var errstr="Messaggio non inviato" errmsg="Messaggio non inviato" />
	  </errors>
	</page>
  </procedure>
 </service>
 <service id="31" name="Callwave" v="1.1" maxsms="5" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAABW0lEQVR42qXSMUiVURjG8d/Vi9DkdCFwuhC0iUE4CXEGwSCCoBYnRQiMBmkTxEEEoyEQhNYIEl2KwsHpvoqiOARBo6BT0JIgSKEgOnyn+vqom9KzncPzP+/7PueljYIrQaOdp6MNPI2v2Auaf/PV/1QVbzBUum5iP+jBXYVnIXFSr8CdWMrwC2ziGhrBGm6V7J+xXB1hDoN4kHiE9/mBpQoMn6BWqj6IFdxOtIL+DDZxhBYOMYzVxJ1y613BbjCezw+D4+BbMB10l8PNWfw2+2wUwQkeB2fBTnDdP1TLr+/iRm7vGZ5iKnFaKtKDgZxFP7qwXcd9LKMvwxOJ+R+j4R7GcrhVbdezYQbvMJp4mcERxTI1sI4pfMB3vMZbTNSCjfyn+4nJ+AWeYAGLiYNKZgOp2BG1YAdXcROv8rfNJBZdQB14ji+KTj6i96Lwz/UNngRb/kdBM4d3KZ0D7wth4aN1d/wAAAAASUVORK5CYII=" >
  <description>
	<info>Invia SMS verso numeri USA e Canada con Callwave</info>

	<config>
		<required n="1" name="cellulare" default="" desc="Il proprio numero di cellulare comprensivo di prefisso" />
		<required n="2" name="pin" default="" desc="" />
		<required n="3" name="email" default="" desc="" />
	</config>
  </description>
  <procedure>
     <page uri="http://jacksms.jacksms.it/Callwave.php" method="post">
	  <vars>

		<var name="c" value="%%cellulare%%" />
		<var name="p" value="%%pin%%" />
		<var name="e" value="%%email%%" />
		<var name="m" value="%%message%%" />
		<var name="d" value="%2B%%intcode%%%%intnum%%" />
	  </vars>
	  <errors>
		<var errstr="Please verify your cell" errmsg="Verifica il tuo numero di cellulare" />
		<var errstr="International service down. Please try again later" errmsg="Servizio non raggiungibile" />

		<var errstr="Login failed" errmsg="Username o password sbagliati" errcode="5" />
		<var errstr="Exceeded daily limit" errmsg="Raggiunto il limite di SMS" />
	  </errors>
	  <accept>
		<var acceptstr="sent to" />
	  </accept>
       </page>
  </procedure>
 </service>

 <service id="7" name="YesMMS" v="1.3" maxsms="500" singlelen="128" sms_divisor="160" maxlen="128" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAACGklEQVR42pWSy2sTcRzEP7/sZjebJsaYGtP4pNqgaK3kYrGKUFDQY7158OKf4MGTXgVvHkS8iih48OKjSBUfF1tFLRK1RlobtRLaaJPQPDbJ7tdDUCzZgH5vMwzD8J1RmelJ/vWy5mbRFfTXv6rfnI//uGVH41PLXMV5GiwHk9ihvg5eqU5th0E2sJXxao98aBieYiWyitP/Bl+szUxULGmK4qi/Bo02/83aJDMNkwgOppLuCV7UAzJqVdXHhkFCa6KFNwBwsRhjotZDyfVh4XY3WHR1krpDvqXhiGJ0YYtUQ0lEaZwMl9lt2KrP31JdDUxxGa+FxcHHe9sQSxOurUQl7mtyayXMkqPLXNOQrj8YCdY4sxQnbTVYq7kq5nOk6MCwWaUiPvaatiq5GrQ8EkzmbW7cneCSeqOmPufJ5XKSefyAI/a8enTvDoPlWXX54Us5d/O+LDYDnQnmlkpy+3WWV7m8fN8+wqzuUstMcT4/I7lCiZ2JdXLl6TQ9pp9izZa4H+W5g9yPMrx9hqpX2rhQAqCwUgXg1IE9pOJR7ykbuoZl6FCvgNuuKxRoT3dXIoZl6Fx9Ms38z7J3CxHL4Oyx4VWJLpw4DEDDcTh9cAhXhMxCQTxbANiXjCngj2BoY68CJLtY5PrzdwD0hoKdTxyIR9XxwX6JBk3G0ikG1kcYS6dYY+qMpVPs35ZguVInYpkc2pFUzUoBgF+VI9L3ZMouCwAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia a partire da 3 SMS al giorno offerti da Yes!MMS </info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.yesmms.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di  www.yesmms.com" />
	</config>
  </description>

  <procedure>
     <page uri="http://www.yesmms.com/cgi-bin/yesmms/yesstart.cgi" method="POST">
                <contents>
                    <var name="sessid" left="session&quot; value=&quot;" right="&quot;" />
                    <var name="time" left="nowtime&quot; value=&quot;" right="&quot;" />
                </contents>
                <vars>
                    <var name="B1" value="logon" />
                    <var name="action" value="login" />

                    <var name="nick" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="Login again at" errmsg="Errore login YesMMS" />
                    <var errstr="Wrong Password" errmsg="Username o password sbagliati" errcode="5" />
                    <var errstr="did not logout correctly" errmsg="Errore da YesMMS: riprova tra 30 minuti" />
                </errors>
            </page>

            <page uri="http://www.yesmms.com/cgi-bin/yesmms/yesintro.cgi" method="POST">
                <vars>
                    <var name="session" value="%%sessid%%" />
                    <var name="nowtime" value="%%time%%" />
                    <var name="country" value="212" />
                    <var name="lang" value="it" />
                    <var name="submit" value="continue" />
                </vars>
            </page>

            <page uri="http://www.yesmms.com/cgi-bin/yesmms/yeslogin.cgi" method="POST">
                <vars>
                    <var name="session" value="%%sessid%%" />
                    <var name="lang" value="it" />
                </vars>
            </page>
            <page uri="http://www.yesmms.com/cgi-bin/yesmms/yesmms.cgi" method="POST">
                <contents>
                    <var name="result" left="ROUTE:" right="BACKGROUND-COLOR:" />

                </contents>
                <vars>
                    <var name="number_friend" value="NO" />
                    <var name="number" value="%2B%%intcode%%%%intnum%%" />
                    <var name="message" value="%%message%%" />
                    <var name="session" value="%%sessid%%" />
                    <var name="action" value="send" />
                </vars>
            </page>

            <page uri="http://www.yesmms.com/cgi-bin/yesmms/yeslogout.cgi" method="POST">
                <vars>
                    <var name="session" value="%%sessid%%" />
                </vars>
            </page>
            <page uri="http://t.jacksms.it/YesMMS.php" method="POST">
                <vars>
                    <var name="esito" value="%%result%%" />
                </vars>

                <errors>
                    <var errstr="The message contains bad" errmsg="Il messaggio contiene parole proibite" />
                    <var errstr="You already sent a" errmsg="Oggi hai gia&apos; inviato 1 SMS a questo numero." />
                    <var errstr="You need at least" errmsg="Non hai crediti disponibili" />
                    <var errstr="not been sent" errmsg="Messaggio non inviato" />
                    <var errstr="The max. number of FREE SMS per hour has been reached" errmsg="Limite orario di sms raggiunto, rirpova piu&apos; tardi" />
                </errors>
                <accept>
                    <var acceptstr="SMS sent" />

                </accept>
            </page>
  </procedure>
 </service>
 <service id="4" name="SMScity" v="1.3" maxsms="1" singlelen="160" sms_divisor="160" maxlen="1530" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH1wUIDRIAvpfCKAAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAAFbSURBVHjanZPPSgJRGMXPvTNpaiUtlIIIeoFo2SYiBwqD1gU9gNDrtO0JWrZpESbUSlrVAxQRJWoYaub8uXO/7lyZaPqjjh8MczfnN9855w7DtymvbhHGGOuuwsIziyv+CeFavGYRGIuj//ogq6zvEvk+yHFjAcLhRjIBxvlEYg0gtYi0nckBfr8PUKz8ImP+8q7CHFgikKSRcDOiNQxMzWeRWVmG9AR6D48Q3Z7yKMcD8NQ0Fvd2kC9aKpc+nk/P0Li4gnT+z4gbmTTCO5DIziG3vYnU0gLSaot8sQCuWhoaogZwpiFBoHatod62bsZ+egEJMTyDAJBU3t3XFkTvA/fHJ8hZGxrQLF9Dut5QgN69elAir92B12yp0OWghaCA4IaqZyQgmJvDI3Lf2nBqdVWf/Ls+NrAKtTGUNev2MvoHVfdLJLpdiM47gjcoKjZnZ/TR9zwUquda+wnQXpbZ924kGwAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia SMS tramite il sito di SMScity acquistando crediti sul portale.</info>
	<config>

		<required n="1" name="natcode" default="" desc="Inserisci il prefisso internazionale del numero registrato (senza + o 00)" />
		<required n="2" name="mittente" default="" desc="Inserisci il numero di cellulare registrato su www.smscity.com senza prefisso internazionale " />
		<required n="3" name="password" default="" desc="Inserisci la password di accesso di www.smscity.com" />
	</config>
  </description>
        <procedure>
            <page uri="http://easyrap.altervista.org/Script/smscitynatcode.php?natcode=%%natcode%%">
                <contents>
                    <var name="valorepaese" left="CODICE-SMSCITY:" right=":---" />

                </contents>
            </page>
            <page uri="http://easyrap.altervista.org/Script/smscityintpref.php?intcode=%%intcode%%">
                <contents>
                    <var name="valorepaese1" left="CODICE-SMSCITY:" right=":---" />
                </contents>
            </page>
            <page uri="http://en.smscity.com/" method="POST">
                <vars>

                    <var name="firstLogin_action" value="login" />
                    <var name="firstLogin_country" value="%%valorepaese%%" />
                    <var name="firstLogin_gsmNumber" value="%%mittente%%" />
                    <var name="firstLogin_password" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="I dati inseriti sono errati!" errmsg="Dati di login errati" errcode="5" />
                </errors>
            </page>

            <page uri="http://en.smscity.com/sms/">
                <contents>
                    <var name="smsUniqueId" left='id=&quot;smsUniqueId&quot; value=&quot;' right='&quot;' />
                    <var name="creditsbefore" left='Your credits: &lt;/div&gt;&lt;span class=&quot;colorFontBlack&quot;&gt;' right="&lt;" />
                </contents>
            </page>
            <page uri="http://en.smscity.com/sms/" method="POST">
                <contents>
                    <var name="creditsafter" left='Your credits: &lt;/div&gt;&lt;span class=&quot;colorFontBlack&quot;&gt;' right="&lt;" />

                </contents>
                <vars>
                    <var name="smsUniqueId" value="%%smsUniqueId%%" />
                    <var name="smsMessageType" value="1" />
                    <var name="smsAction" value="send" />
                    <var name="smsTemplates" value="0" />
                    <var name="smsTextarea" value="%%message%%" />
                    <var name="smsPhonebookSelect" value="choose" />
                    <var name="smsCountrySelect" value="%%valorepaese1%%" />

                    <var name="smsGsmNumber" value="%%intnum%%" />
                    <var name="smsCurrentSender" value="%2B%%natcode%%%%mittente%%" />
                    <var name="smsSenderType" value="gsm" />
                    <var name="submitSms" value="Invia SMS" />
                    <var name="smsNoAds" value="1" />
                    <var name="smsCreditCost" value="7" />
                </vars>
				<errors>
				 <var errstr="You have insufficient Credits" errmsg="Crediti insufficienti"/>

				</errors>
            </page>
            <page uri="http://easyrap.altervista.org/Script/esito.php" method="POST">
                <vars>
                    <var name="creditsbefore" value="%%creditsbefore%%" />
                    <var name="creditsafter" value="%%creditsafter%%" />
                </vars>
                <contents>
                    <var name="smsafter" left="sms:" right=":---" />

                </contents>
                <accept>
                    <var acceptstr="Messaggio Inviato!" acceptmsg="Messaggio Inviato! SMS residui: %%smsafter%%" />
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato" />
                </errors>
            </page>
        </procedure> </service>

 <service id="24" name="O2-Ireland" v="1.8" maxsms="250" singlelen="160" sms_divisor="153" maxlen="1000" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAjlJREFUOE+Nk11Ik2EUx5/dGQg6HLsInDd6MfTSC2H3gjpsfdB2ETKKtVaxOZ0VwZAJ2/AiylScxDBmC4o5aF7EYEUQluUiJGI3fbBBQrJpYx/g5t5/53k0x9iUDpybc/7P75z3nPPKJEkyM8Y05KxSAZuZibLl5fcskfjN5PJTbGBAzcbGtKyn5zSX1BsBwiBLJvMYHJyDTGYBY5fJr5NfJb+Czk4n/P4PXFZnjACBVOoP5HL+4BxUqgnMzsawtvYNkchn6HRzFDeQX8Dk5It6QLlcDuh0j0hwHl1dt6mTdJ3IZnt6CBnBxsaPmjwLBt8FmppGSXAJ4fCnhm2Wy/v0GXdEEaPRXwvQaNwBxsxob59AsbjXEMCD4+PPDru8i1Jp/0jHmptvEMAEjcZ77GOeWFx8QwA92tqs2N7OVgEKhV0A+vo8JwLm518R4CIUilFkMrkqwGDwEcAiEtls8ViIyfRYbKm3dwqVilQFxOM/A0olH5ABCwuvGwIymTyUSpsAeDyrtUPkd+D1xih5Fq2tFsRiX2sEu7sFaLUPxABVKgd2dvJYWYnD5Qphc3ML4pAk6mho6D6JdORG6PU+TE+/hMPxHB0dtyh2Bi0tZqyvf0ehsAer9QnlglCrXQcAXpLv2ukMU6s3RbUDGPcRgt+jainRGemPOuzunqoC/kXT6Ryi0S9YWnqLUOgjEolfDefCr3N42FcPOHGXlOQbcLtXxWWWShAA8Tf+ryWTOfpjr6G//yHs9gj+Ajk590eETGPLAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 250 SMS al mese con O2 Ireland</info>
	<config>
		<required n="1" name="phonenumber" default="" desc="Inserisci il numero della scheda O2 registrata su www.o2.ie" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.o2.ie" />
	</config>
  </description>

        <procedure>
            <page method="POST" uri="https://www.o2online.ie/amserver/UI/Login?org=o2ext">
                <vars>
                    <var name="IDButton" value="Go" />
                    <var name="org" value="o2ext" />
                    <var name="CONNECTFORMGET" value="TRUE" />
                    <var name="IDToken1" value="%%phonenumber%%" />
                    <var name="IDToken2" value="%%password%%" />
                </vars>

                <errors>
                    <var errstr="Your login has been un-successful due to incorrect details." errmsg="Numero di tel o Password errati" errcode="5" />
                </errors>
            </page>
            <page uri="http://messaging.o2online.ie/ssomanager.osp?APIID=AUTH-WEBSSO&amp;TargetApp=o2om_smscenter_new.osp%3FMsgContentID%3D-1%26SID%3D_">
                <contents>
                    <var name="sid" left="SID=" right="&amp;YW_" />
                </contents>
            </page>

            <page uri="http://messaging.o2online.ie/infocenter.osp?SID=%%sid%%&amp;SID=%%sid%%">
                <contents>
                    <var name="ref" left="REF=" right="&apos;;" />
                </contents>
            </page>
            <page uri="http://messaging.o2online.ie/o2om_smscenter_new.osp?MsgContentID=-1&amp;SID=_&amp;SID=%%sid%%">
                <errors>
                    <var errstr='spn_WebtextFree&quot;&gt;0&lt;' errmsg="Sms Esauriti" />
                </errors>

                <contents>
                    <var name="sms" left='spn_WebtextFree&quot;&gt;' right="&lt;" />
					<var name="return" left="RURL&quot; value=&quot;asp_getfileid.osp?" right="&quot;"/>
					<var name="feed" left="FID&quot; value=&quot;" right="&quot;"/>
					<var name="year" left="form_Webtext.selectStartYear.value = '" right="'"/>
					<var name="month" left="form_Webtext.selectStartMonth.value = formatNum('" right="'"/>
					<var name="day" left="form_Webtext.selectStartDay.value = formatNum('" right="'"/>
					<var name="hour" left="form_Webtext.selectStartTime.value = formatNum('" right="'"/>
					<var name="minute" left="+ formatNum('" right="'"/>

                </contents>
            </page>
            <page method="POST" uri="http://iaddo91.altervista.org/scriptphp/rimo2.php">
                <vars>
                    <var name="text" value="%%message%%" />
                    <var name="credits" value="%%sms%%" />
                </vars>
                <contents>
                    <var name="residui" left="sms:" right=":rimanenti" />

                </contents>
            </page>
			<page uri="http://messaging.o2online.ie/smscenter_evaluate.osp" method="POST">
			<headers>
			  <var name="Referer" value="http://messaging.o2online.ie/o2om_smscenter_new.osp?MsgContentID=-1&amp;SID=_&amp;SID=%%sid%%"/>
			</headers>
			    <vars>
				  <var name="MsgContentID" value="-1"/>
				  <var name="SID" value="%%sid%%" />

				  <var name="SMSTo" value="00%%intcode%%%%intnum%%" />
				  <var name="SMSText" value="%%message%%" />
				  <var name="FlagDLR" value="1" />
				  <var name="RepeatStartDate" value="%%year%%,%%month%%,%%day%%,%%hour%%,%%minute%%,00" />
				  <var name="RepeatEndDate" value="%%year%%,%%month%%,%%day%%,%%hour%%,%%minute%%,00" />
				  <var name="RepeatType" value="0" />
				  <var name="RepeatEndType" value="0" />
				  <var name="REF" value="%%ref%%" />
				  <var name="FID" value="%%feed%%" />

				</vars>
			</page>
			<page uri="http://messaging.o2online.ie/smscenter_send.osp" method="POST">
			<headers>
			  <var name="Referer" value="http://messaging.o2online.ie/o2om_smscenter_new.osp?MsgContentID=-1&amp;SID=_&amp;SID=%%sid%%"/>
			</headers>
                <vars>
                    <var name="SMSTo" value="00%%intcode%%%%intnum%%" />
                    <var name="SMSText" value="%%message%%" />

                    <var name="SID" value="%%sid%%" />
					<var name="MsgContentID" value="-1"/>
                    <var name="REF" value="%%ref%%" />
					<var name="FlagDLR" value="1"/>
					<var name="RepeatStartDate" value="%%year%%,%%month%%,%%day%%,%%hour%%,%%minute%%,00"/>
					<var name="RepeatEndDate" value="%%year%%,%%month%%,%%day%%,%%hour%%,%%minute%%,00"/>
					<var name="RepeatType" value="0"/>
					<var name="RepeatEndType" value="0"/>
					<var name="FolderID" value="0"/>

					<var name="RURL" value="asp_getfileid.osp?%%return%%"/>
                </vars>
                <accept>
                    <var acceptstr="isSuccess : true" acceptmsg="SMS Inviato. Messaggi Residui: %%residui%%" />
                </accept>
                <errors>
                    <var errstr="Problem sending message" errmsg="Errore nell&apos;invio" />
                    <var errstr="Service is currently unavailable" errmsg="Il servizio non e&apos; al momento disponibile" />
                    <var errstr="maintenance" errmsg="Il sito e&apos; in manutenzione,riprova piu&apos; tardi" />

                </errors>
            </page>
        </procedure> </service>
 <service id="16" name="VoipWise" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAApdQTFRF+fn52dnZ8fHx5uys7+/v7vSz4+ilpal+xtB35u2c6e6ti4yC5euu09qH4OaivMJ45uyrub5v09mR09iSp6iZxMl+7e3t5eXl7fOy4uimy9F79PT04emZ8Pio4emY/Pz8lZw33uaVxcXFxsfE1d2J+/v7mpqa6/Gx3+Simp2B3+Wj1dXV3uSjmJx7qq9g4+mo6e+x0diVv7+/usCFqKio09qWsLRmvMJq0NK5maA6trxrur917/SjlJd/3uWW5ubm2d2d7fSn2+KQ2N6Y2N6XwMKxl5855emv4+eq3uaj0NHJ3eSjra+jxctynKB87fO0dndx6OjnoaWDztSP09qgurq219utpKpI6OjolJk2j5cuz9eR5Oqmrq6o5uuq0dHQurq63+eYtbuB6O6t5eu03+ea7Ozsl5t+pqamrbJf1NuSrbCQ5/Ch2eGa4Oinz9Os6e+frLNj4+ml5+2c5equ0dHRh4h/7PKx2+Gh5+2rz8/Nw8h94OWjqK5g+vr6/f39196M19+OpatL4umYnJyc3uaUvMN1srZnvb29f396sLZl3+aW6O2vys6m3uWVfHx54OelyNCEnKJA4uelrq+l6vKfs7StpamKy9CK6e2zkZgv4Oadp6pXmZ86e3t43+akgoNxydB7uL1g4uan4+mYp65MrLJjqrBQycrC4+mp3+Wkzs7OxsyE4ein2OCM5Ouc19jVur9w3N3bm6M/qqqq4uiZqqul0dLPx8yN4eem4+qs0diZv8V3yc2gr7KdhIdrx8uF4+qf09uK1NTS9fX1iouDwsWm4eiYk5Z4y9R+5u6gz9aB+Pj45+uv09mn4ematren1dXT6/Cz1t6LvcN4yMyl5euq4+inu8B10dWsu8KC4OaY////hBr3LQAAAN10Uk5T/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wD5NwmvAAABEUlEQVR42mK4AwEXQw9DGAwgot7LojfsqmvVEajApmPuM5nzdgmkXGCpAwlsOFfetvGAw4RVK9X32TMw3Am8ecl74g2zTFE+z7X+PiwMd1b0LNbx4KmZoWetNZ9rrzLD9vyzk690VVckOy/j179eIsIwLYRZ0nRNe6GhgVCtcBzrdIYpu6/tLNJg2zMnq1LQKkYiiCF2h1zj8rnmt5c2nfe1bDilyxCfncMRNWtzq5TCodNuKtFlDGnbcrvDIxfJrJu00O7kVL8WBmltzfXNvH2Jipedjssad3YwqIopnZhtU7xkK2eBY1LAFkaGOwziRtzswakHXW7tn2dSygT0y5mI1RlHbdMX9KslMDLJAwQYAOPneMl8hSUqAAAAAElFTkSuQmCC" >
  <description>
	<info>Acquista ed invia sms tramite VoipWise</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipwise.com   " />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipwise.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.voipwise.com/myaccount/index.php?part=menu" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>

          <var name="justloggedin" value="true"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://www.voipwise.com/myaccount/websms2.php" method="POST">
        <headers>
          <var name="Referer" value="https://www.voipwise.com/myaccount/websms2.php"/>

        </headers>
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intcode%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>

        <accept>
          <var acceptstr="sent!"/>
        </accept>
      <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
      </errors>
      </page>

  </procedure>
 </service>
 <service id="17" name="VoipCheap" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH1wkFFCUG455qCgAAAAlwSFlzAAAewQAAHsEBw2lUUwAAAARnQU1BAACxjwv8YQUAAALkSURBVHjabVNfSFNRGP/u323X7ubc1tZm6Ja5WEKxBJFAFjgqehOM3nqJQLQiCHuIEKKIXtZLrz2E0INgYaIUPikq/sEkiUVsTlfppi3dnNvutru7vntwscoDH+eee77fn/Od71Dwz7jlcNQ7PJ5eq9N5meL5MxT+K+VyUz+j0U/x9fXXz8Phuep8qnrxxOd7ZGtuvm1rapJ1BoNeU1PDYYDV5drci8fj31ZWuI8jIzMahnl4b3IyoWKYCvixzzfk9HpviBYLw2u1AsPzrN5qhZbOTqi120VFljnBYID8/v7JrCRd7fL7x0YXFvZoFfzU7797zO3uplmWK5fLmpIsE+JTHR3A63SQ2toC0WYzb0ejTkqrbTQ1Np5NhsMB4mCwv79elqT3GkGgaJoGmkEsRcGJtjY46nIRd9uRCBjtdlgeHYWiJIFcKGAKdbq9ru4DGw8GuwW9nioViyCzLFCYoBLZPR4oYOLa4iKEpqchPDsL+WyWgEsqAQrVOZ0BtizL7QSMP9ACUTSjsoyznMtBaGYGsqkUpBMJIHkIrpCUAdpZQRSbC7ihgiubDWhfQiepWAw+T0yQYzHojuE4YHmerGXEFNARm93d/ZVDpWI+D0qpRIg0RiMhiMzPg5ROAxaWOCsrCgl1cFot8IIALJ7zu5TJ/FFRCThRBJV0MxgkqoQAQ52VA5ICCuB1/6BFne4tsVcJBJTwFlQHqi6xjcFUx0EuEryjzycS44IgfK2A1VnC46gObF4vnOvp+Q+I/QLYoWWL2fyCbl1aKtaKYh9u5OkDkuTGBnFQxEKV0O5h6iaT6dn1wcEvpOPGQqFIl9u9KdP0Rdxk1QoLDQ0g7exAJh6HHN4GNg5pMLVGNQbDy77h4Tt/vYXx1dXlay0tc8BxrVIyaVF7gDWbIR0KgYLfpLgclzoiivd7h4YeHPoayVUNDPCv1tYuyRR1Re9w3MzEYrMKTa9xijJ13Gh8cyEQSFTn/waA6U7eDMxjnAAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms tramite VoipCheap</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipcheap.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipcheap.com" />

		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.voipcheap.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>

        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://www.voipcheap.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>

          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>

          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="92" name="Vodafone-Aziende" v="1.4" maxsms="10" singlelen="160" sms_divisor="160" maxlen="360" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABkUlEQVR42qWTLUwDQRCFv/KTrCIrr641hIomVCDAFUOoBAWOoAiKFAMYDNQgGxKSpg4MCa5FgQTHn6ACQQKiuNZd3UMM7R40YJhkb3dn3r6dmzebEoh/2BgA3tuu9/WJ0rBYgpkCvLzCZRM+2obpdsG5sBZI3kvO2Vhbl+JYkqTbG6lYkjY2bX99JWVyEkjOSyAjcE7ykXRcNWAcS1tlA2ay0v2dBnZ7I00XLDYgAOnwKICajQFAK6tSJ9Y3azakKEoQTBcCqN2WivN2eH/ffOVt6aIhdTqB5CtDI6jXQuDsVIPfenqS3t6kWm04y+srCTQCQCYbdOl2bM7nYXISdndhaRnGx+H9NeDS6YSMvV4I9MkqFRgdhWoVJiZgYSHIlzDL4OE+eGbnoFiCbBZOTiCK4Pwc6nXI5wKu1bLZijj7vcqPDyYfSDir+Fb5jyI6F3ogqfdx1UazEZqrX8Cp3M9G8tLOnsn4l52dJrLrEyRbebFkoGS6cSy1nu0C74PMoNSvr3Fnb9hXORhypf77nD8BuyzZfYF6KEsAAAAASUVORK5CYII=" >
  <description>
	<info>Invia 10 SMS al giorno verso Vodafone tramite il sito Vodafone Business, solo per chi ha sim aziendali.</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vodafone.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vodafone.it" />
		<required n="3" name="sim" default="" desc="Se hai più di una sim registrata, inserisci il numero della sim con cui vuoi inviare tramite questo account." />
	</config>
  </description>
  <procedure>
     <page uri="http://www.vodafone.it/" ignorelocation="1"/>
      <page uri="http://www.vodafone.it/190/trilogy/jsp/home.do?BV_UseBVCookie=No&amp;tabName=HOME+190">

        <errors>
          <var errstr="a causa di un intervento di manutenzione" errmsg="Sito vodafone.it in manutenzione"/>
        </errors>
      </page>
      <page uri="https://www.vodafone.it/190/trilogy/jsp/user.do" method="POST">
        <errors>
          <var errstr="loginFailed.do" errmsg="Username o password errati" errcode="5"/>
        </errors>
        <vars>

          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
          <var name="method" value="login"/>
          <var name="ty_skip_md" value="true"/>
        </vars>
      </page>
      <page uri="http://www.areaaziende.vodafone.it/190/trilogy/jsp/swapSim.do">
        <vars>
          <var name="tk" value="9616,1"/>

          <var name="ty_sim" value="%%sim%%"/>
        </vars>
      </page>
      <page uri="http://www.areaaziende.vodafone.it/190/trilogy/jsp/dispatcher.do?ty_key=fsms_hp"/>
      <page method="POST" uri="http://www.areaaziende.vodafone.it/190/fsms/prepare.do">
        <errors>
          <var errstr="limitesms" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="non e' al momento disponibile" errmsg="190: Servizio non disponibile"/>
          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>

        </errors>
        <vars>
          <var name="senderNumber" value="%%sim%%"/>
          <var name="receiverNumber" value="%%intnum%%"/>
          <var name="message" value="%%message%%"/>
        </vars>
        <contents>
          <var name="captcha" left="img src=&quot;/190/fsms" right="generateimg.do"/>
        </contents>

      </page>
      <page method="POST" uri="http://www.areaaziende.vodafone.it/190/fsms/prepare.do">
        <errors>
          <var errstr="limitesms" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>
        </errors>
        <vars>
          <var name="senderNumber" value="%%sim%%"/>
          <var name="receiverNumber" value="%%intnum%%"/>

          <var name="message" value="%%message%%"/>
        </vars>
        <contents>
          <var name="captcha" left="img src=&quot;/190/fsms" right="generateimg.do"/>
        </contents>
      </page>
      <page uri="http://www.areaaziende.vodafone.it/190/fsms/generateimg.do" captcha="1" condition="%%captcha%%"/>
      <page uri="http://www.areaaziende.vodafone.it/190/fsms/send.do" method="POST">
        <accept>

          <var acceptstr="elaborata correttamente"/>
        </accept>
        <errors>
          <var errstr="FLATService=deleteIT" errmsg="Errore 190, riprova"/>
          <var errstr="ha ricevuto il numero massimo" errmsg="Il destinatario da te inserito ha ricevuto il numero massimo giornaliero di SMS via Web"/>
          <var errstr="informiamo che per poter accedere a questo servizio" errmsg="Errore 190, riprova"/>
          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>
          <var errstr="limitesms" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="momento disponibile. Ti invitiamo a riprovare" errmsg="Servizo momentaneamente non disponibile" errcode="12"/>

          <var errstr="prepare.do" errmsg="Codice di controllo sbagliato" errcode="8"/>
        </errors>
        <vars>
          <var name="senderNumber" value="%%sim%%"/>
          <var name="verifyCode" value="%%captcha_value%%" condition="%%captcha%%"/>
          <var name="pageTypeId" value="9604"/>
          <var name="programId" value="10384"/>
          <var name="channelId" value="-18126"/>
          <var name="receiverNumber" value="%%intnum%%"/>

          <var name="message" value="%%message%%"/>
        </vars>
      </page>
  </procedure>
 </service>
 <service id="893" name="SMS.ge" v="1.1" maxsms="100" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH1woNECcCU9g2cgAAAB10RVh0Q29tbWVudABDcmVhdGVkIHdpdGggVGhlIEdJTVDvZCVuAAABD0lEQVQoz5WSQY7DIAxFbWM3UlIJrtBjsmCd+2U1i+nkCJGizCZEuAsahGgrzVhIYPDHD2xUVTjNGJNSgsoQkYiO4yg7nKeu6/Z9996LCCKWY1WNMRJR3/fbtj23LpcLAIQQJpEf5mZMzCEERByGQVUhI4UQ7sa8RudxNyZrVBWIyHv/9u4mj/feGMMpJREZUgLEW4yFfhYp7ixyBRCRlBLnrygPnUXqX6rdjETwT3sjuMVYYOr1R0GNMYs0kJTJ6np/MlVFRCaiGOMv0VU1MzR4Oc9+lvypCyF8E/2pcKpqrc2aSeS13l9ntHNOVTHTO+fWdfXeM3PTfMdxjONorV2WBQCwfi4zN+0NAE17PwCGmLuLfQpnNAAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia SMS ai numeri GeoCell</info>

	<config>
		<required n="1" name="username" default="" desc="Username di accesso a www.sms.ge" />
		<required n="2" name="password" default="" desc="Password di accesso a www.sms.ge" />
	</config>
  </description>
  <procedure>
     <page uri="http://jacksms.jacksms.it/ServiceHelper.php" method="GET">
		<contents>
			<var name="cellnum" left="number: " right=";"/>

			<var name="service" left="service: " right=";"/>
		</contents>
		<vars>
			<var name="sid" value="893" />
			<var name="number" value="%%intcode%%%%intnum%%"/>
		</vars>
	</page>

	<page uri="http://www.sms.ge" method="GET" usecookie="0">

		<contents>
			<var name="phpsid" left="Set-Cookie: PHPSESSID=" right=";"/>
		</contents>
		<headers>
			<var name="User-Agent" value="Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6"/>
			<var name="Accept" value="text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"/>
			<var name="Accept-Language" value="it-it,it;q=0.8,en-us;q=0.5,en;q=0.3"/>
			<var name="Accept-Encoding" value="gzip,deflate"/>
			<var name="Accept-Charset" value="ISO-8859-1,utf-8;q=0.7,*;q=0.7"/>

			<var name="Keep-Alive" value="300"/>
			<var name="Connection" value="keep-alive"/>
		</headers>
	</page>
    <page uri="http://www.sms.ge/geo/index.php" method="POST" usecookie="0" ignorelocation="1">
		<headers>
			<var name="User-Agent" value="Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6"/>
			<var name="Accept" value="text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"/>
			<var name="Accept-Language" value="it-it,it;q=0.8,en-us;q=0.5,en;q=0.3"/>

			<var name="Accept-Encoding" value="gzip,deflate"/>
			<var name="Accept-Charset" value="ISO-8859-1,utf-8;q=0.7,*;q=0.7"/>
			<var name="Keep-Alive" value="300"/>
			<var name="Connection" value="keep-alive"/>
			<var name="Referer" value="http://www.sms.ge/geo/index.php"/>
			<var name="Cookie" value="PHPSESSID=%%phpsid%%" />
		</headers>
		<vars>
	          <var name="userid" value="%%username%%"/>

	          <var name="passwd" value="%%password%%"/>
		  <var name="submit.x" value="60"/>
		  <var name="submit.y" value="11"/>
	        </vars>
    </page>
    <page uri="http://www.sms.ge/geo/send.php" method="POST" usecookie="0">
		<headers>
			<var name="User-Agent" value="Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6"/>
			<var name="Accept" value="text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"/>

			<var name="Accept-Language" value="it-it,it;q=0.8,en-us;q=0.5,en;q=0.3"/>
			<var name="Accept-Encoding" value="gzip,deflate"/>
			<var name="Accept-Charset" value="ISO-8859-1,utf-8;q=0.7,*;q=0.7"/>
			<var name="Keep-Alive" value="300"/>
			<var name="Connection" value="keep-alive"/>
			<var name="Referer" value="http://www.sms.ge/geo/index.php"/>
			<var name="Cookie" value="PHPSESSID=%%phpsid%%" />

		</headers>

		<accept>
          <var acceptstr="main.php"/>
        </accept>
		<vars>

			<var name="geolai" value="%%service%%"/>
			<var name="phone" value="%%cellnum%%"/>
			<var name="message" value="%%message%%"/>
			<var name="num" value=""/>

			<var name="x_number_end" value=""/>
			<var name="x_save" value="yes"/>
			<var name="Send" value="1"/>
		</vars>

	</page>
  </procedure>
 </service>
 <service id="23" name="Vyke" v="1.3" maxsms="10" singlelen="160" sms_divisor="153" maxlen="765" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH1wsHDwYaiYyWXgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAAARnQU1BAACxjwv8YQUAAAJTSURBVHjaY2QgEiw+cYvv6b3X2/7+ZTAV5GP3zPI32QcSZyLWgG/PP8m///zT+tXHr2xff/yOhImz4NIwed1JYQZGxuCvv5lWVoSZfHz2m+MmD+f3OZzsrIb//zJMhqnD6YL3X/603Hn6cSbT3z9tIH5jmM6vr8wMZSeePvf8etPiCkEDGJn+HxDgZn/76/e/HSB+xdzDSrcfvLn/++uf53d5NudjeCGtb7ukKB+Xrtxf7v3p6Sa/a2NsVgKFV8Lkf//9Y/Tu83f+//8ZGF5//G6M4QJuDpbeLz9/bX/D88sKxM+fc8AyuHXtzNk7znqA+FJyovsUxPh3SAhy3bXQkl6F4QJOVtblXJwsjEwMfy+B+G/efWx9+/mn47bT96WAtu68fZvt67V7DIv5uTlNb3/4cBjDgLZUh81AajOMryghePDz998qpupSZ0D8hh23IjeeuDnv++8/jOaqkiZAIVsUA4pn7w369uu3Lz+PYElHvPnblji7xjNnnnabmEh/q/z/n/HRyyVqQHlGkFpgwJpjhMGz91+n3Hj8LoGF8XsKiG9SviA/d+3ed0bFC9IYGRn/h1ioL9OWE70qI8z36duf30kYBojysFfKi/GtZWbhXbwNlGzffio8efsZ+6N3H7PTZp5hLfA1uxLcm6SnJKEpfL0/dQnBpGtbs6SRNaL7mnbh/FKCikHAunrxdMXMGRcCejbZwMTi5+/nIKQPHohP3n5KffzmC/OXnz+tgdwjILGFiY4/CBkADwMHTdkmGSHeRSGWmpvwafj/fxUzCMP4AKqz+8u1evQhAAAAAElFTkSuQmCC" >

  <description>
	<info>Acquista ed invia sms tramite Vyke</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vyke.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vyke.com" />
	</config>
  </description>
  <procedure>

     <page uri="https://www.vyke.com/login.jsf">
                <contents>
                    <var name="idlogin" left="loginForm:j_id" right="&apos;" />
		    <var name="id" left="id=&quot;javax.faces.ViewState&quot; value=&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="https://www.vyke.com/login.jsf" method="POST">
                <vars>
                    <var name="AJAXREQUEST" value="_viewRoot" />

                    <var name="autoScroll" value="" />
                    <var name="javax.faces.ViewState" value="%%id%%" />
                    <var name="loginForm" value="loginForm" />
                    <var name="loginForm:j_id%%idlogin%%" value="loginForm:j_id%%idlogin%%" />
                    <var name="loginForm:username" value="%%username%%" />
                    <var name="loginForm:password" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="Your username or password was not recognized" errmsg="Username o password errati" errcode="5" />

                </errors>
            </page>
            <page uri="https://www.vyke.com/send-sms.jsf">
                <contents>
                    <var name="idlogin1" left="smsSenderForm:j_id" right="&apos;" />
                    <var name="id1" left="id=&quot;javax.faces.ViewState&quot; value=&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="https://www.vyke.com/send-sms.jsf" method="POST">

                <contents>
                    <var name="credit" left="Your balance is: &lt;strong&gt;" right="&lt;" />
                    <var name="cost" left="Charge is: " right=".&lt;" />
                </contents>
                <headers>
                    <var name="Content-Type" value="application/x-www-form-urlencoded; charset=UTF-8" />
                </headers>
                <vars>
                    <var name="AJAXREQUEST" value="_viewRoot" />

                    <var name="smsSenderForm:toPhoneNumber:msisdnCountry" value="%%intcode%%" />
                    <var name="smsSenderForm:toPhoneNumber:msisdn" value="%%pref%%%%num%%" />
                    <var name="smsSenderForm:toPhoneNumber:validator" value="X" />
                    <var name="smsSenderForm:msgText" value="%%message%%" />
                    <var name="smsSenderForm" value="smsSenderForm" />
                    <var name="autoScroll" value="" />
                    <var name="javax.faces.ViewState" value="%%id1%%" />
                    <var name="smsSenderForm:j_id%%idlogin1%%" value="smsSenderForm:j_id%%idlogin1%%" />
                </vars>

                <accept>
                    <var acceptstr="Your SMS was successfully sent" acceptmsg="SMS inviato.Costo: %%cost%%.Credito: %%credit%%" />
                </accept>
                <errors>
                    <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito." />
                    <var errstr="you must have some credit on your account" errmsg="Credito esaurito" />
                    <var errstr="phonenumber is incorrect" errmsg="Numero non valido." />
                    <var errstr="phonenumber is invalid" errmsg="Numero non valido." />
                    <var errstr="Please provide correct destination phone number country code" errmsg="Inserisci il prefisso internazionale" />

                </errors>
            </page>
  </procedure>
 </service>
 <service id="26" name="Fido" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH1wwDFhIqr06iHwAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAALUSURBVHjalVNdSFRBFP7m3rt794fdMnPVxX7MHzYzcw186Id+aAkqA6MHHwIpwuiPCAt6sIeol3pQMHtIiXwJkgTNiKx8iChSSjHUVmr9ybJNSdd1r3fd3XvvNLu6iulLhxnmzJxzvjnznTME81J3xXpNb0q8JU1+bwGh45pGPgFa98XGZDfGxsLMJYIVRIgr8kzApkVmeIEnxZQS6PS6siEfCfPrkiYNGWl+s8HY4Zv2z0Y0xYMudyUL0ZYAUHD66CqaErCnpA5r7LmktbVeNA+2pdbfqEpNT01wuM6eplOBaZ/icDxEf/9E1J+LAxhEIYWCx+YdZVifWwTf736MD7+L2QZ+DOPL0CA0lhpL0QKRz4vHLQBEImEFhMCauJEtBIJoYaAmEGbbnuPE7vwCcFx0RyigZi0DEDgYCVXg6WoApRRDPS0IjrRB5JQ5BxIdJPZajnApywBUihCNySLDOqKBj14YHfMGnSDoKCHGuA8fVw44OfvorGX/mMwL37xT+PPLjVVr0+GVBWTybgRG2yF5O5Fllcje5PHkk/tCz553YGqhCuUfczaYjQa9IAgQe19hV74TT+5UQaq9jIC7BqzAcKWJUJVwdGYqKneEVbJGWOSAp4VbtpL7FTcZiRom/P7YOWMem/KPoeDgdYRlH4wWG+PpMel4cdsJzC5yQKk6erX0FOxJiSi6dA4Pmhrnzjkzdh6/B0VR0VztwuDnZjhdFch2HnIsIdGeZNMZ9GKMMEVREAqH5xuMxKjSNBrbUY11NOFY2Yntn0YyhmoaHkEKymiqvIsTh49CkmUMTCpof1oOs5VlduE1sgtL0fe2GsN9rUv/QlhVJl5+eI+8kmJEM5mekaAXdNAjSDNyOjHU3UgEvZndHFR5XgxRNdizBOCn1/tV4Lk304GA5qeB1aqmBlnjjBh5JaCoWi+dlc1BWfJEoPOYtpX0nT9Tu+Lv/G/5C+cDLm0alBpRAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia SMS  verso numeri cellulari canadesi Fido.</info>
	<config>

		<required n="1" name="mittente" default="" desc="Inserisci il mittente del messaggio" />
	</config>
  </description>
  <procedure>
     <page uri="http://fido.ca/portal/web2fido/compose.do#sms" method="POST">
        <vars>
          <var name="directoryChoice" value="-1"/>
          <var name="rcptAreaCode" value="%%pref%%"/>
          <var name="rcptPhone" value="%%num%%"/>

          <var name="senderName" value="%%mittente%%"/>
          <var name="sendWhen" value="now"/>
          <var name="sendDateRef" value=""/>
          <var name="messageText" value="%%message%%"/>
          <var name="sendBtn.x" value="68"/>
          <var name="sendBtn.y" value="12"/>
          <var name="sendDateMonth" value="11"/>
          <var name="sendDateDay" value="25"/>
          <var name="sendHour" value="15"/>

          <var name="sendMinute" value="30"/>
        </vars>
      </page>
      <page uri="http://fido.ca/portal/web2fido/send.do" method="POST">
        <vars>
          <var name="sendBtn.x" value="26"/>
          <var name="sendBtn.y" value="11"/>
        </vars>
        <accept>

          <var acceptstr="Your message has been accepted"/>
        </accept>
        <errors>
          <var errstr="numero errato" errmsg="The Fido phone number you entered does not exist."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="29" name="VoipStunt" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH2AEDFBMD/qWpOAAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAAIkSURBVHja1ZLLaxNRFMbPvXfmZiaZdJJMKgm+YrSti5YIpV2I2AZSERQRREXFR7cquFDEnbjShe6KWBDdiI+VolJwZ0G0sWI3Fh8LKyFNGun0kZmQed17bcSK/4H6LQ6cze985+MD+O+FBsRd5Rka1j4aodw7jzX7qOwz4H3Mdl80XJgLGcrZFIocrwkYGTDNW6PtsGszSxRMbE0dnvcf4EE4BdPJ+GVK1JGcmhpSsHZdBuXQcxeW4knjWhdNnQfUFrGw1Nu6aDC6r0dNDOckvae14ysIOZ1oXUwGTZZZ0zawusWjaHJvInEmRvU9DY6fzML8pB1Yjyva7vacnM7PQlAqxuiNFkBqDQ9zJgkAokY6gBFBkFJdI5HTZa/xOkM7ngrHlrpFcqIqf+hXkaCLALdPfqqYvwENf9klxGOGiGyyA6/qI0WLAgpnSSjvQGVHXFWYwcSoTaMbHd4QNSwerYb4E+ByT6YSQpjgtBO44xVm3edR3foG9fI2EuuNc+0E1Yz6d2dW9pRg7MhMZe7oLwBecY44BBojnDjNRUVn3sTBev2ry5Yj3QEdanPFfoT5dGlt9iFRzl3I7JQvIQC+6gC/XHndkqge9zXFRHhpZqs/XtqgZ7Je4lgbixYEI8Uak4f1SvFqmtyZMj8bB/7sgZQHYPcC+2bCt6xOzr8k3zbLr7rC0fX10MWyWDC3FwaLmbFS8j0s9JMwK0VN/uZvl/df0w+EHuAOhtw8DAAAAABJRU5ErkJggg==" >

  <description>
	<info>Acquista ed invia sms tramite VoipStunt</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipstunt.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipstunt.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>
  </description>

  <procedure>
     <page uri="https://www.voipstunt.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>

      </page>
      <page uri="https://www.voipstunt.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>

        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>

      </page>
  </procedure>
 </service>
 <service id="37" name="Poivy" v="1.2" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH2AIJDw4KQHurpQAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAAGVSURBVHjapVO/T8JAFH42XYiyERLYbVwNOzSusBv/Af4Ad23/ABLn7owMhoGNtHYwHUpMSEiLk6li6ACBhoUf7fOuFykHJWp8w/Xd6/u+9927dwD/tJO0oGmalSiK1CAI5FwuB2EYAiLK5XL56UfGTqejTyYT3LfZbIa2beuU/CjYsix9+faMqNUx7DY5grVnxXG33cBUElqZSMXw3UGsE8UNKUEHAaJSILFS7Pf7fTw4s+d5CaBRYySuHW/D5jXi7RkBu2xPCrVaLWVLYBiGzul12zFB+HiHqGvMd7pcymg00ilWpMtms5F3FUXnVRAkCQTzgQVqCggXV5zq1WoVY4S0ZgoCCUs3AIsFQLEEUfX+aONjAlEUjYM/RYl95Toj3DMyJwkBSVDn8zmf8OEyp1BMrez7vroloBM2GAw4FYL/wohOLw/Aw+GQ9s3gekCuRu31eknW5yupXgDIZjkwmUgYj8dq6lhrmlahQ7KeTsnU1dg17pjjOEiuXNnFpD4mmpTPS3Ims5S/G0bPTGX/6kH9xb4AVgJKPZ0KZP8AAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite Poivy</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.poivy.com " />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.poivy.com" />
		<optional n="3" name="mittente" default="" desc="Numero verificato usato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.poivy.com/myaccount/index.php?part=tplogin" method="POST">
                <vars>
                    <var name="user" value="%%username%%" />
                    <var name="pass" value="%%password%%" />

                </vars>
                <errors>
                    <var errstr="password incorrect" errmsg="Username o password errati" />
                </errors>
            </page>
            <page uri="https://www.poivy.com/myaccount/websms2.php" method="POST">
                <headers>
                    <var name="Referer" value="https://www.poivy.com/myaccount/websms2.php" />
                </headers>

                <contents>
                    <var name="credito" left="&amp;euro;&amp;nbsp;" right="&lt;/b&gt;" />
                </contents>
                <vars>
                    <var name="action" value="send" />
                    <var name="panel" value="" />
                    <var name="message" value="%%message%%" />
                    <var name="bnrphonenumber" value="00%%intcode%%%%intnum%%" />
                    <var name="sendscheduled" value="no" />

                    <var name="callerid" value="%%mittente%%" />
                </vars>
                <accept>
                    <var acceptstr="sent!" acceptmsg="Credito residuo %%credito%% euro" />
                </accept>
                <errors>
                    <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito." />
                    <var errstr="phonenumber is incorrect" errmsg="Numero non valido." />
                    <var errstr="phonenumber is invalid" errmsg="Numero non valido." />

                </errors>
            </page>
  </procedure>
 </service>
 <service id="38" name="Internetcalls" v="1.2" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAArVJREFUOE91U11Ik1EYfjdSZphJqZEXSTEqJaG8yvCmwgtBIQq9WBNUqosurCymOX/KmiwtjCamLZBGpWZJRhdF32YjTVuJF63mbGamqWQu23Tu/+n4DV3TfOHhOx/v8zznHM77CPxEtUS0j4EvZ3gM2XdspojUSBKeSiT7k3nCXhFF32qj8Ij1JNTPLVEDX2bQByIgmiEtCniaBsfEGDBtAOBk8LL1HDA/AFefBHNJ24AN0eA1DIsG3OLCf4Awj2YmGGAIVt/IByhaa/Cytwfj30Zhnp3AdOKeFQZVuzHy/B6crpkQsaZXA2GJECQjSMokyL2Rj4ExEyzPOmGXHwyewCdPhjVECoyOjSK2MhZ0kR2TIVuZDTpLeD3UxTO5pkJMxrKes3I/5/veDZfft2zhd/uRdTcLdIEQfyUeykdK5DXmQdIigdvh5nlfJs14VZQBmj26i3N8NIfs36Hv4MVh8jDojXq+t+BYCOH8mh1HQ1U86OvPq5zX61puep1epNeng84RCjWFKy4W/PV6vNC9qQWZcsSc7bdludP9uRuCYgEiKyJhGF58yv+X1WqDSnUYNNyp5HwI3l/WJgOdJ6TUpQTGYI1yOn1oby8AudI3cXin4mk+jw+pd1JBJYS4ijiYBk1rGlgs76FQbATZkoj79LYcVtsU3HY3xEoxqJSQoEhAjjIHmi7NKpOZmR/o73+AazUxoD9RxJm3E4wd93niyfYTEBWJkHkzkx8g9Qv1KgOD4TFkrHf5uiA4yoP5BdA3lsPrAYyWIUgbpJC2Sfko/FscV4p6VQaKqwmdxwNZ0C4FY0q8Fa26JpjY29ttHrhYhvxMbbd7YDRqodPV4XZDMk5fItSfYWFaFzDoWTKAiNByhFCn3omHLcfQyqDVVkOtzkBz8yHIywiVNWznXBa8LYE0/gUFCdvQk3FYAwAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms tramite Internetcalls</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.internetcalls.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.internetcalls.com" />
		<optional n="3" name="mittente" default="" desc="Numero verificato che apparirà come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.internetcalls.com/myaccount/index.php?part=tplogin" method="POST">
                <vars>
                    <var name="user" value="%%username%%" />

                    <var name="pass" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="password incorrect" errmsg="Username o password errati" />
                </errors>
            </page>
            <page uri="https://www.internetcalls.com/myaccount/websms2.php" method="POST">
                <headers>
                    <var name="Referer" value="https://www.internetcalls.com/myaccount/websms2.php" />

                </headers>
                <contents>
                    <var name="credito" left="&amp;euro;&amp;nbsp;" right="&#x09;" />
                </contents>
                <vars>
                    <var name="action" value="send" />
                    <var name="panel" value="" />
                    <var name="message" value="%%message%%" />
                    <var name="bnrphonenumber" value="00%%intcode%%%%intnum%%" />

                    <var name="sendscheduled" value="no" />
                    <var name="callerid" value="%%mittente%%" />
                </vars>
                <accept>
                    <var acceptstr="sent!" acceptmsg="Credito residuo %%credito%% euro" />
                </accept>
                <errors>
                    <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito." />
                    <var errstr="phonenumber is incorrect" errmsg="Numero non valido." />

                    <var errstr="phonenumber is invalid" errmsg="Numero non valido." />
                </errors>
            </page>
  </procedure>
 </service>
 <service id="39" name="VoipRaider" v="1.2" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAFo9M/3AAAAB3RJTUUH2AMcEAwaIiezEwAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAAOLSURBVHjaJZNbbBRVGMd/ZzrTZZfSKy0ohtA2Aqa0YrkoEgL4AA0phGDiJb6QaqtVgvAgRhNN8EFD0EQTApEiGkAeNKWNtdRWW9MaKkhDi5YKEaiUS+m2LNvLXufyeXY9L/N9+X8zZ85vfqMmk0ksBWamodKF8jWHZWG2D/OjUhclEcjtcqT2jbfki2tT8lr9LjEe8eu5TD+maWH6ZsGVmOjl0h5OXW3U2zU7ZdD3KGXuOOcLn4LWoC1x1+Xb2wlxPf3g9+trpSuwmM3JG/ycV4nqi4qcOXyYZxfm8174MRpeXMulU0dZNDebA0YFxgq/q1oKVtI66vBc5TKWZ3nqG0ppHrXZvrwE44ORDNk1/itrsl26e36j/YGSPYmLrM2yOdXRqw+jX21724io0WFe3rKBF+aL2toyLL7QXeq2rofUQElnVBpGRWJ2UvcOOW1R+ScpMmPbGNVNV+VQsBHVdISLMxlSfvySnJ5u4cShLwlJhpiJP3tpHBskIElC68Lk97fS7EyQ5UTYf6sO1XArLueaz3DFKqLn9Y3q3f4p4dwP9PhL6a99WuFpjgcHQ3L6TkIc1yauaX12OSiN95ISczTbdQ1dUm+NYE6OY720lw9PtrI3L4QKB8mv2YfpD/5Ld3CIuW6Eoqk4/rGbXLx9lyJnisshoO2BJzu+6pSqpqH052q678iO412y7exNES/5P6izExly7MJ1FjoPmWWaDNmZVD9ZQl2xT2sinLzjSnP/TRYZCTzX4baVS82qErYUeEotv+BKUecJngn2E/blpAcKDZtut4CqV+vJtCy+P3qEKjVKULRB2r4iZ5of51SwfmcN5u4SgxPXlmJEblDsN0mKj2x7mvGcMpYUZOGhCM9bSt7UBJalVVSCHfPwFjxOdYHWM6pR+TPg90lD/ggmEI2xOD/AtkKU63mklmEYtARFroeiulOsnhdgXZ6omCspBg6fXo1J4/lBNmU+xGfAL5HZLCsv4+CqPL0f7OsLyd8DA1TNiaOx8VMslw0rK9hfHlAq0JGUtb3HqLg/wIw1G0M8AsqlTxXy/Jt7Uhvy3aHPWe2NERUTUYrZXpy+nCeY/8puzI41Fh9HNxIZiFHpT+gbDO4lhLEFm1gxP4tc/b9+vXobvuF2Fs+SlL78lfChyjZzYInuZzQDEX12HXwyIvLOdZGIrkXLmVIp5jjpOpUf0HlKe0nniXT2H8Jt4cwiGS4iAAAAAElFTkSuQmCC" >
  <description>
	<info>Acquista ed invia sms tramite VoipRaider</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipraider.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipraider.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://myaccount.voipraider.com/clx/index.php" method="POST">
        <vars>

          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
          <var name="justloggedin" value="true"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://myaccount.voipraider.com/clx/websms2.php" method="POST">

        <headers>
          <var name="Referer" value="https://myaccount.voipraider.com/clx/websms2.php"/>
        </headers>
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intcode%%%%intnum%%"/>

          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
		<errors>
  		  <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
  		  <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
  		  <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>

		</errors>
      </page>
  </procedure>
 </service>
 <service id="50" name="Smslisto" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gEBAkaDYkWuJwAAADnSURBVDjL1ZNRjYUwEEXv2zwBI2EkVEKfAiqhEooDHFQCoGBwAA6QAA4q4e7H7jaPbDaQ8LUn6cc0zcncyfRBkrjBB25yW/B8L5ZlAQA45yAi1wwkua4rRYQA6kkp8QfvPb+f/gIkqaoUEfZ9z3me6ZwjAJrZqeAJAPu+Q1URQoCIwMwwjuO1GCQZQqite++Zc2Yp5XqEUgpjjIcZiAjXdb0meMfMakchhHPBtm1UVcYY62UppcY5HaKqQkQwDAMAQFUxTRMAoGmaw7xer9ehzjl/LZKZoW3bg6TrOqSU6mL9xeP/f6ZP23g7rqKn1mYAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite SMSlisto</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.smslisto.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smslisto.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.smslisto.com/myaccount/index.php?part=tplogin" method="POST">
                <vars>
                    <var name="user" value="%%username%%" />

                    <var name="pass" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="password incorrect" errmsg="Username o password errati" />
                </errors>
            </page>
            <page uri="https://www.smslisto.com/myaccount/websms2.php" method="POST">
                <vars>
                    <var name="action" value="send" />

                    <var name="message" value="%%message%%" />
                    <var name="callerid" value="%%mittente%%" />
                    <var name="bnrphonenumber" value="%2B%%intcode%%%%intnum%%" />
                    <var name="sendscheduled" value="no" />
                    <var name="panel" value="" />
                    <var name="gmt" value="1" />
                </vars>
                <accept>
                    <var acceptstr="sent!" acceptmsg="Messaggio inviato!" />

                </accept>
                <errors>
                    <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito." />
                    <var errstr="phonenumber is incorrect" errmsg="Numero non valido." />
                    <var errstr="phonenumber is invalid" errmsg="Numero non valido." />
                </errors>
            </page>
  </procedure>
 </service>

 <service id="501" name="Cosmote" v="1.2" maxsms="10" singlelen="140" sms_divisor="140" maxlen="140" reset="daily" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAwBQTFRF8/nprdVj0OalmMo8jcUmkccuicIec7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa7gpGQAAAGdJREFUKFNdT1sOwDAIUnzs/jceatOZ1Y8GIgKidl70rzIw0g8/RBpEtHeaSBUB7BJuhNxoVW1kYf0kEYXWjSgF8IwPJUVwfIIU8ZdY1sltG8mLJK+thTPGTsoqBqzo3S6Py60/bfUFcS0CvQgGq4wAAAAASUVORK5CYII=" >
  <description>
	<info>Invia 10 SMS al giorno con Cosmote</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.mycosmos.gr" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.mycosmos.gr" />
		<optional n="3" name="correzione" default="" desc="Scrivere ON per la correzione dei caratteri accentati" />
	</config>

  </description>
  <procedure>
     <page method="POST" uri="http://t.jacksms.it/sostituzioneO2.php">
        <vars>
          <var name="CHECK" value="%%correzione%%"/>
          <var name="text" value="%%message%%"/>
        </vars>
        <contents>
          <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE"/>

        </contents>
   </page>
      <page uri="http://www.mycosmos.gr/mycosmos/login.aspx">
        <contents>
          <var name="session" left="name=&quot;__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
        </contents>
      </page>
 <page uri="http://supermac.altervista.org/cosmote.php" method="POST">
        <vars>

          <var name="session" value="%%session%%"/>
        </vars>
        <contents>
          <var name="sess1" left="Sessione:" right=":"/>
        </contents>
      </page>
           <page uri="http://www.mycosmos.gr/mycosmos/login.aspx" method="POST">
        <headers>
          <var name="Referer" value="http://www.mycosmos.gr/mycosmos/login.aspx"/>

        </headers>
        <vars>
          <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
          <var name="__VIEWSTATE" value="%%sess1%%"/>
          <var name="tbUsername" value="%%username%%"/>
          <var name="tbPassword" value="%%password%%"/>
          <var name="btLogin" value="Log On"/>
          <var name="rbSecurityPub" value="rbSecurityPub"/>

        </vars>
      </page>
 <page uri="http://www.mycosmos.gr/mycosmos/Costcontrol.aspx">
	  <contents>
	    <var name="source" left="Number of SMS Messages sent by Web Site" right="Day"/>
	  </contents>
	  </page>
<page uri="http://iaddo91.altervista.org/scriptphp/ripeti.php" method="POST">
<vars>
<var name="phone" value="%%source%%"/>

</vars>
<contents>
<var name="sorgente" left="&lt;td&gt;" right="&lt;/td&gt;" />
</contents>
</page>
<page uri="http://iaddo91.altervista.org/scriptphp/cosmote.php?stringa=%%sorgente%%" method="GET">
	  <contents>
	  <var name="residui" left="sms:" right=":rimanenti"/>
	  </contents>
</page>
      <page uri="http://www.mycosmos.gr/mycosmos/SMS_Send.aspx">
	   <headers>

          <var name="Referer" value="http://www.mycosmos.gr/mycosmos/Costcontrol.aspx"/>
        </headers>
        <contents>
          <var name="seconda" left="name=&quot;__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
        </contents>
      </page>
      <page uri="http://supermac.altervista.org/cosmote.php" method="POST">
        <vars>
          <var name="session" value="%%seconda%%"/>

        </vars>
        <contents>
          <var name="sess2" left="Sessione:" right=":"/>
        </contents>
        <errors>
          <var errstr="seconda" errmsg="Username o password errati" errcode="5"/>
        </errors>
      </page>
      <page uri="http://www.mycosmos.gr/mycosmos/SMS_Send.aspx" method="POST">

        <headers>
          <var name="Referer" value="http://www.mycosmos.gr/mycosmos/SMS_Send.aspx"/>
        </headers>
        <vars>
          <var name="__VIEWSTATE" value="%%sess2%%"/>
          <var name="txtMobile" value="%2B%%intcode%%%%intnum%%"/>
          <var name="txtMessage" value="%%mess1%%"/>
          <var name="btnSend" value="Send"/>
        </vars>

        <accept>
          <var acceptstr="has been sent to" acceptmsg="Messaggio inviato! SMS disponibili: %%residui%%"/>
        </accept>
        <errors>
          <var errstr="you have exceeded that limit" errmsg="Messaggi gratuiti esauriti"/>
        </errors>
      </page>
  </procedure>
 </service>

 <service id="89" name="JustVoip" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gFDAkeDGKpTFEAAAI0SURBVDjLfZPPaxNREMc/uxahP55QU4obQQoJi/TUsrlVdHMoUkJvooj0asGbJy+h/4MXJYKnFoWC9BBzMYddc+ohr+QQBJ9pEYpZW2grfYYSabYekizZWJzTe/PmO9+Z+b4xGLLjzYI3eS5dmhJEz6mBpMPJiONff7iaHYw3+oeLasHVSnpCS/5nWjgo28lmMqs+gNkHI4uXgsO7ayCs6C60xJZFr1otuFECraQHQRwpuvWbrRadpVf0+5HK5qMSJKX0AMzjzcKlzJ07ecL55yDfYBjXCOcfIZWNrwW+FmitqJbLnjl5Lt0harAcrtQ2wXkMYgJ23mPefsKndgLViyoqi+lWyTVpDrFbFmHuNfxuYh40CNM5Dr41QAj+TE1FYQrBWaOGGUkFhPNrECgIPsNEhs7JF37cuMeH71cJw5BEIjGsSXeIfTN/VrqSjqeBr2gEp6chzd770dHRP7My0QO3wAfL6Za4IzBuZtjd3SWVSqG1RmvN8LxMkk7cF0hqL19wfP8BAJVKhYWFBer1eiyBjWY0PYd5MuL4g3ipbPymYH//F+vr68zMzGDbNqVSKcazbAccjud8A+D03dMLoWWks4r+kiCfz7O9vc3W1lYEdoRmKTXGrWdvDRNA2U5WY6EgAgO02202NjZi7I7QLNuavdmVbGyZqtWCm5TS01pRVBZqUN9ez8t2wOhYir3Zlazrun4sQZSoXPamWyX3rFHr7XF32qPpOQ7Hc35mcTG2zn8B6CzsZ8VGehUAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite JustVoip</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.justvoip.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.justvoip.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente" />
	</config>

  </description>
  <procedure>
     <page uri="https://www.justvoip.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>

        </errors>
      </page>
      <page uri="https://www.justvoip.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>

          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>

        </errors>
      </page>
  </procedure>
 </service>
 <service id="51" name="Chawt" v="1.1" maxsms="15" singlelen="80" sms_divisor="160" maxlen="80" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAACXBIWXMAAAsTAAALEwEAmpwYAAAC3klEQVR4nDXP7WsbdQDA8e89/O5ySUlj0iSmOe1gczWdKV2dLdM5ZW5uU8Zg2qmxCkMoxaFQRadYFXG+GCp75QtFKoIwZB11bVlrEYpzDzo7Kxms4CrOrM9LzSVpk7RJ7nwhfv6Dj+QNc38H/7FmmRzAjBPcxHoRoVPMceuqahja2lo5sKmcnUONPUbiWDxsxIHcSqZzYOS1L5txFfLFZbdeO3HGnrm2sNxU8NSJbfdFJobmaU8wmE5MFU69cny/L2gAXr/r6TcbvrW2n80+4fXrPIo0LIUzYW+vyxfU1fwSwLs9J/s/v4IfniIXLPV/87djhXqPP5e3RoihhlS3z10KFmv9Emac90c3y7KEF96DMeSfZDEi5DulWFtQ0xWaEVMilA21fRj1N6DEdvPXZZGaWmEHHEYLaJGWyMZ7Ny7aS8YVpe/Upzu2tA4/M/7xg68ePtQwmZygPUFjaxDgKNJ5yVw1jzhHBpyBfUP7Xj921HEcx3GANSdzZv7QA88iA4G7FQAL1aUKt4gSlZGtGau+PgpUnCLgVBQVN0DT7v8PdSjDyobKhjanrTvbrcSkqVsX/0hd3fqISQeeD7QDb0ebHgczzmA6ceDFVoB6jJOG8ZVBI2981FmyrZaHTSKESiFxQbCLQFRXo3GAUlbcdY+vvFZZ6FkJmTXv9HZ1d718PT2YvDRLI8IR1cUqOuUSan6JH04nL/4y3X/uxPaWveUVTQgxl7uWrdxUFV1RZftG9fbZ2/a0zZ8IF+rytPHZj9e109p8IZWTbvyTIdH50s2D+ajl8U/iD7sWU6vrL6zjwWNraqgq3REyMjuLPA+dsApAAK1Pky5JjRcCX4x1nftu/NfvF+rN6NaOwtcnflZqg6L8m6OMyT2ftL/Vt1NxlZOj6epotXq+uu1JT83mVE2k1Lon2PSQb5WZ38fTkjfMll2GNUupVATsCrk53alINra7bt1sBhAGwgWQHOJftY4agh53qdYAAAAASUVORK5CYII=" >
  <description>
	<info>Invia SMS tramite Chawt verso numerazioni internazionali</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione a Chawt" />
		<required n="2" name="password" default="" desc="Inserisci la password di registrazione a Chawt" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.chawt.com/">
      </page>
     <page uri="http://www.chawt.com/index.php" method="POST">
        <vars>

          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
          <var type="submit" name="submit" value="LOGIN"/>
        </vars>
        <errors>
          <var errstr=" Login failed!" errmsg="Dati di login su Chawt errati" errcode="5"/>
        </errors>
      </page>
      <page uri="http://www.chawt.com/index.php" method="post">

        <vars>
          <var name="countrycode" value="%%pref%%"/>
          <var name="msisdn" value="%%num%%"/>
          <var name="message" value="%%message%%"/>
          <var type="submit" name="send" value="SEND"/>
        </vars>
        <accept>
          <var acceptstr="Message sent successful"/>
        </accept>

   <errors>
     <var errstr="Message not sent" errmsg="Mittente o destinatario non valido" />
     <var errstr="non configurato" errmsg="Non puoi inviare un SMS" />
     <var errstr="You have exceeded your daily 15 free message allowance. Message has not been sent" errmsg="Hai terminato i messaggi disponibili per oggi" />   
   </errors>
      </page>
  </procedure>
 </service>
 <service id="52" name="FishText" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="459" reset="daily" output_encoding="ISO-8859-1" icon="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" >

  <description>
	<info>Acquista ed invia sms tramite FishText</info>
	<config>
		<required n="1" name="username" default="" desc="Numero registrato (con prefisso senza il +)" />
		<required n="2" name="password" default="" desc="Password su fishtext.com" />
		<required n="3" name="mittente" default="" desc="mittente: 0 = username 1 = Anonimo" />
	</config>
  </description>

  <procedure>
     <page uri="http://www.fishtext.com/cgi-bin/account" method="POST">
                <vars>
                    <var name="action" value="login" />
                    <var name="_sp_errorJS" value="0" />
                    <var name="_sp_tooltip_init" value="0" />
                    <var name="mobile" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="Submit.x" value="32" />

                    <var name="Submit.y" value="6" />
                </vars>
                <errors>
                    <var errstr="Login Error" errmsg="Dati di login errati" errcode="5" />
                </errors>
            </page>
            <page uri="http://www.fishtext.com/cgi-bin/ajax/sendMessage.cgi">
                <contents>
                    <var name="brutta" left='messagelargeinput&quot; name=&quot;' right='&quot;' />

                </contents>
            </page>
            <page uri="http://www.fishtext.com/SendSMS/SendSMS" method="POST">
                <vars>
                    <var name="action" value="Send" />
                    <var name="SA" value="%%mittente%%" />
                    <var name="DR" value="1" />
                    <var name="ST" value="1" />
                    <var name="RN" value="%%intcode%%%%intnum%%" />

                    <var name="%%brutta%%" value="%%message%%" />
                </vars>
                <contents>
                    <var name="cost" left="0.0" right="." />
                </contents>
                <accept>
                    <var acceptstr="message was" acceptmsg="SMS inviato.Costo: 0.0%%cost%% euro" />
                </accept>
                <errors>

                    <var errstr="not found" errmsg="Contatto non presente in rubrica.." />
                    <var errstr="invalid number" errmsg="Numero non valido." />
                    <var errstr="phonenumber is invalid" errmsg="Numero non valido." />
                </errors>
            </page>
  </procedure>
 </service>
 <service id="512" name="SwissCom" v="1.5" maxsms="500" singlelen="160" sms_divisor="153" maxlen="454" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gIFBMQNkaqJQoAAAJUSURBVDjLhZNNSJRxEIef98Ndd3Nd10zEgwoZGErQIb14SSwjMqWiKCOE8ijooQTxkGSHQshIMAQPQocORYFbrRDUKSz0EkRFiNuW6/qxm9t+vp//bia6i7/bDMMzMz9mIIfaZuI1p2bjK2dfRbvZQ3KuZPPUaOvSj9WK5smHHeuFlaNrzsrOfABpexD2VauSYEQ2rIGRIx00RH9xLjSPABKS/Tar0F6fjGRzThD2VauyJV4oujWAKXFzYQZPSdH/TrLUasJQ3hUUW4zJun3GNmQ0S8Zx9QKfb99junsQQ1ERSBjIl/J7YHFd0xXSlkR6nwvfYC+WLXjdcoWJO9NseopJY9bmBegCMggc185TG/yI42ANUjqNHdvky+EmpsYDbFQf2sgLSJn0JyWBq/MkSkkxAHY6ixWLk4qnCRdV8OT+bNnpQOpGTkCdFnocl6z+ub5bfPe/AcDUdDKxBOnIJiu/Y/zVBaqiTpzwR5tz3sFxMzw2X17VP9zVxUIggJ7ViUVjbISWWQ+FSSQTrOmGagjlwZb5O3dSJz/1mcJu8IS/ESys4cPXZQq0DFkZnEKg2DaqkCp/Ph8dBlB3mRLPlNB4kZdDLaw2utD1cv4IC6GqeCWJQsOCA6Vbx7QLsBgMjTtj8Tb3/lpWgkuIMi8pYeGQZOKygq448bpdgby/sDjY5A8vr/Ssu6uSlm2BYYCWxdQyRDWdiKlHotlMb85f2C7X0d4KYTveaQXeOlEgg88H5WVzksd9WTxqD+4JAFCP3X3vwK7XPe5Zs7T4Kc96/Dtr/gFZowZ6UfVskwAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia 500 SMS al mese verso i numeri svizzeri</info>
	<config>
		<required n="1" name="usr" default="" desc="Inserisci l'username di registrazione di www.swisscom.ch" />
		<required n="2" name="pwd" default="" desc="Inserisci la password di accesso di www.swisscom.ch" />
	</config>
  </description>
        <procedure>
            <page method="POST" uri="https://xtrazone.sso.bluewin.ch/index.php/16,55,ajax,,,289/?route=%2Flogin%2Fgetcaptcha">

                <vars>
                    <var name="action" value="getCaptcha" />
				</vars>
			    <contents>
					<var name="taken" left="token&quot;:&quot;" right="&quot;"/>
			    </contents>
            </page>
			<page uri="https://www.scsstatic.ch/captcha/%%taken%%" captcha="1"/>
			<page uri="https://xtrazone.sso.bluewin.ch/index.php/16,55,ajax,,,289/?route=%2Flogin%2Fssologin" method="POST">

				<vars>
					<var name="do_sso_login" value="1"/>
					<var name="token" value="%%taken%%"/>
					<var name="sso_user" value="%%usr%%"/>
					<var name="sso_password" value="%%pwd%%"/>
					<var name="action" value="ssoLogin"/>
					<var name="passphrase" value="%%captcha_value%%"/>
				</vars>
			</page>

			<page uri="https://xtrazone.sso.bluewin.ch/index.php/16,55,ajax,,,289/?route=%2Flogin%2Fuserboxinfo"method="POST">
				<contents>
					<var name="prima" left=":&lt;span&gt;&amp;nbsp;" right="&amp;nbsp;MMS\/SMS"/>
				</contents>
			</page>
			<page uri="https://xtrazone.sso.bluewin.ch/index.php/16?route=%2Fmessaging%2Foutbox%2Fsendmobilemsg" method="POST">
				<vars>
					<var name="receiversnames" value="0%%intnum%%"/>
					<var name="recipients" value="[]"/>

					<var name="messagebody" value="%%message%%"/>
					<var name="attachments" value=""/>
					<var name="uploadImage" value=""/>
					<var name="attachmentId" value=""/>
					<var name="send" value="Invia"/>
				</vars>
			</page>
			<page uri="https://xtrazone.sso.bluewin.ch/index.php/16,55,ajax,,,289/?route=%2Flogin%2Fuserboxinfo" method="POST">
				<contents>

					<var name="dopo" left="&lt;span&gt;&amp;nbsp;" right="&amp;nbsp;"/>
				</contents>
            </page>
            <page uri="http://easyrap.altervista.org/Script/wadja.php" method="POST">
                <vars>
                    <var name="before" value="%%prima%%" />
                    <var name="after" value="%%dopo%%" />
                </vars>
				<contents>

					<var name="crediti" left="crediti:" right=":"/>
				</contents>
                <accept>
                    <var acceptstr="Messaggio Inviato!" acceptmsg="SMS Inviato! SMS residui %%crediti%%" />
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato!" />
                </errors>
            </page>	
        </procedure> </service>

 <service id="41" name="VoipBuster" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAapJREFUOI2lkr9LG2EYxz8nYq3dLB3qkNIWtdAiKBQFO2ppkfoH1B8ZGtrFHziEo0uT2EmHaiHdQinFpdDlulYhg0pcFAcRChYMlgxCeC938S7yknMIvua4iwp9lvf7fp+f3/d5taonPf7Dmq4TFNezxPVsqK8ZoFCwWV7MKXJhaUhhfW5VdTk9qdLS5u+pVT3pxWK/ApUzmVHO+UxmtLGEle972FYF26owMtypMIBtVS5NBmgan3yMIwSOEHz7uq6wW5Y4QjRMzB+ULiTUOwYGP3PnVivHZZfcxmxoclzPMv22D1pbao9YbxXhciRcHzc19TtQZHFpi3R62L/Ge5EkRcuhaDns7OkATER/Ylom3V03kVIipSTS0YxpmQD+CQ7zyUCnkigDsLp2oLhCAR7ebweu+Ehf0psM9kcwjCjzyZeYJQfDiGKWHLZ3/wUnqLeevk81rannNSlvVhh7/ZREYo2ieaLiAlsAeNSZQtM0PM/znb0DD9jJ/VX3/T8fwic4tt0ANxN7RuLjCLfvvq/F5BeAavgEADfaphU2frzjxasnoVIbFriunQEGaLwfdkppvgAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms tramite VoipBuster</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipbuster.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipbuster.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>

  </description>
  <procedure>
     <page uri="https://myaccount.voipbuster.com/clx/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>

        </errors>
      </page>
      <page uri="https://myaccount.voipbuster.com/clx/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>

          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>

        </errors>
      </page>
  </procedure>
 </service>
 <service id="42" name="SmsBG" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABMklEQVR4nMWToW7DMBRFTyqDBwoCBgIG+gmBBQMmkyKVFAz0swqqgX2BQYBBh0YKCqopGijqBwwEFAQ+YM0DmbNWG+kKZsl6wPfe9+61ncUYuWaNrmIDBuD55flPY8zuZ1m2fd1GAkxuJxe1PRwOyFgwIsJut2M6nV7U3a899s4yIkBZlnjvzwCq+msFcLWjLEs0aB9inudYa3G1G0Aigqqe1USuqoo8zyGkWwi9SFVVP0RO60Ae92QNykjD92hiBDGCX5/bSZ4T5hRvxAgYaI8tm82GxcOCrutwtaO4KYD+LHV2tcNa+/UAIGvemqhBad9b5vP5oN4eW7quI2WUxAC89xRF0Vtr9k1cPa5i+AgX7dXTKjb7JpoU0HK5HMIa0g86eD69CVUF04eb/ftnulrgE5AOtl9/G9KxAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia SMS verso numeri di cellulare bulgari Mtel.</info>
	<config>

		<required n="1" name="usr" default="" desc="inserisci qualsiasi cosa" />
	</config>
  </description>
  <procedure>
     <page method="POST" uri="http://smsbg.net/sms.php">
        <vars>
          <var name="MN1" value="359"/>
          <var name="MN2" value="%%pref%%"/>
          <var name="MN3" value="%%num%%"/>

          <var name="ID" value="1"/>
          <var name="FROM" value=""/>
          <var name="SM" value="%%message%%"/>
          <var name="num" value="142"/>
          <var name="sbm" value="���������"/>
        </vars>
        <accept>
          <var acceptstr=".: smsbg.net :. send free SMS"/>
        </accept>

      </page>
  </procedure>
 </service>
 <service id="99" name="Freecall" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACnklEQVR42m2TX0hTYRjGn2+n/XNHzW3WRppZg+gPCVFQzYuoC4UuoqgLK4wiIuwmu8husjKo8MISMegq1AgKLaZXFnpl4OWmKM28SCkcbVars+b+na/3fOdsk9ELH5zv8D2/87zP9x7GqbC+4m8A9RtgytGG6e+4RPt6oOIkSosVAGsh8HgfuEwHN1SSwILQTAwj7z7Bf3gLfHUm+Lw5MEcLYGsoASjj4KkAuH0rCW20rBh4GcbgUAg+nwuLi6vouuuH/5ALSEZgclwGLDsNQPoL5z8fAPZacmoVgI/Tq+i8PyUO5AGBkVOQy6gtdQ3s7zJY5W3AXEeAleuc22Uh5GRbSUo4f2kCipLRATucWgh43n9ciKGmwLSVonzc9+h5pYXDViNsa4DxyRi6n8wIceuFvQTYSHqVcqgmcboAQGIezPuWnmNtXBPn152H89RCFLLDjMDwCSMqzXqWQBkSpIugqh7aR68WAdk/OHY2LCRNjUBHm1NzT6UCkoPO2Ck8csINgLOPAMtNnKWjQCqC4IId7b21AtDR+gPNRxLGHKjGIheMeje7wG21YDVjFOKss+Ag+FlGe49baF49/g2PWy0AGM/pAJXC5SnhAHui9H7Oy3V7VgxPyOh/bReayRfG1/ItCHFW2Bch5sjdrq8EWDjAqQdxjQOjNEABSb++Ogb/fgkXT5uL9inEQoASOd32ngDxMc6jnWJ8g2Ezbj7S799TLaFhtwUd18p1gLCui5GNg3meAmWNxihHOgk+TUmX49yNuPiJItEsbrVtRvNRGjLRf8YQK2DWg8CmrpKfabUXPPkBUzMV6H72HUoih9GhfTQPJqN/+npyCUw+A1Rd+c/fqFVmCfg1CCU+i5VYFr56WYyxuAXTdl1I87++/gFmjz3gOUuCywAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms tramite Freecall</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.freecall.com" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.freecall.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente. Usare 0039 come prefisso" />
	</config>
  </description>
  <procedure>
     <page uri="https://myaccount.voiparound.com/clx/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>

        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://myaccount.voiparound.com/clx/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>

          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>

          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="53" name="1188" v="1.4" maxsms="10" singlelen="60" sms_divisor="160" maxlen="60" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAktJREFUeNqMUztLI1EU/u7MJJmdZLMkFkoMrAxmiyxCsLAS9TfYitXC2vkobNxFa3s7f4AgFuYnWKQQhBWFxBSyTQyLrsTVJDPJPO6eMzsJMabYgVPMvfd73O+cK6SUjU61qv8pFmHf3ABSAkJg5BfuGbOz+LC8jEgmYwvr+tq+29mJuff3ELEY/ufzLQux6Wlk9/c76ldN+2ZXqxp0HZJFekVqktRerYWFaBROvc5nXK15dQUZiQCeNyDhA6oK6TgQijL6SuS2dXkJxe104BGAyyUSx7ZhzM0hu7eHaC6H7ssLBs+8KteF5rJaP6PAILRsFsmlJbybmcHD0REeTk/RoYzUeByCnAVhEk7l+jIx8d2XUvP5zlQ+uWhVKni+uEAklcL46ioSlDromu3bW7jdbpCDz+Bk0hWlQsGif71vg4MjEr/dhpJIwDBNfFxfR3pxEY1SCZWNDYCss6AxNWVr7mB4AyS+psF5eoLy+Ain0QiWrVotcIDQrUfYtwQEdim4SDqN7MoKTFJ3m01UdndRPzkJ7s45yDB0zRki8FotjM3P49PWFlLUjdrxMX4eHuK5XP4XIreVMDLsxBsH3BoeqtjkJH4QyR11wKd5UA0DHqcfnu85EEXTtGhZF0PzLigDj0aWFYPWDT8LAsdN01be5/NwKHFmC4qZyQUPlE9ErNffC4vD69JVk4RV8tvbgi13Sa0/YZxwr4anj8A2hRrNZJBbWxOCn/OvszO9fHCA3+fn8Ek9CGrUa+bhIbHxhQV83tzEWKFg/xVgAHikfgOEOIBEAAAAAElFTkSuQmCC" >
  <description>

	<info>Invia SMS verso numeri di cellulare O2 della Repubblica Ceca</info>
	<config>
		<required n="1" name="email" default="" desc="Email mittente" />
	</config>
  </description>
  <procedure>
     <page method="GET" uri="http://sms.1188.cz/"/>
      <page uri="http://sms.1188.cz/images/smscode.php" captcha="1"/>

      <page method="POST" uri="http://sms.1188.cz/">
        <vars>
          <var name="adress" value="%%intnum%%"/>
          <var name="code" value="%%captcha_value%%"/>
          <var name="replyEmail" value="%%email%%"/>
          <var name="text" value="%%message%%"/>
          <var name="send" value="ODESLAT"/>
        </vars>
        <accept>

          <var acceptstr="Upozorn"/>
        </accept>
        <errors>
          <var errstr="ela nebo nebyla vytvo" errmsg="Captcha errato/Sessione scaduta"/>
          <var errstr="kem O2" errmsg="Numero errato"/>
        </errors>
      </page>
  </procedure>
 </service>

 <service id="54" name="Intervoip" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAB3RJTUUH2AgbDhkDjUZ6FQAAAi9JREFUeJxVkMtOU1EUhv+19+65tLQ9lPRoaVGqVRoHGgyJRiKJiUMew3fwDXwaB8aRAyeODIYZiiJEI4EYhV5oT6/nnP07aDG6Jmv03z4h2e7Hg1GitAqDjIzsYKjEMutPTdEnCRF2J9HEQMRbgAHw4Wv08VvHGL39sNB7fbb76osRdXOr8Pj5plBJmr57sXu03xLqe8+uKwAZLZ6rNewg6suoG/38PW63Dw9anXYHgvO9zuf3P+JWK4qji9xEASBgQUIsknyznPF97ejkIu31ExH59PJgGsc645u75lozMAAEEApgtZMvVawSApL04mG3Nz3OH+6cukZNfFV7sFhfrirMjqCoVAVu6GQD15Icc3TB/TdHg+5QiVJrhY31hjGemQsEAiRJkruSK5bcQXesNU/2omjnzDEy8szaVmmlvmwtLxMAEZGUdBx3NWSSao2ztyfRaUfEmIa78bRObYB/BCRpKWS55pMiStJWX1IbO1J7Ei4FJViKyH8JhEBQbJRFKZIwCjHZWGisl0FteSkgOYMrACCF0HGyDlMKmWRMcF9fq4YARYSkmnnP4QoBFK5mswXHkhLT1v3mZi2fLYIQuUxICZIEKBqAk1de0SCl1Sa/7t1urJCkzBsoAEUf2jiwlMkvAMZzgxthPMRkxb/1qBLkAhLgvIgBcKeqZDKKp+PqYjBr2NyutAKdWTpvNiqEAuxsgMweSRsPSWgnOyMWIz4+/e6JW11eBfh3J4A/8ZEQk8PGyF8AAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite InterVoip</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.intervoip.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.intervoip.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>

  </description>
  <procedure>
     <page uri="https://www.intervoip.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>

        </errors>
      </page>
      <page uri="https://www.intervoip.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>

          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>

        </errors>
      </page>
  </procedure>
 </service>
 <service id="55" name="dodoText" v="1.1" maxsms="5" singlelen="100" sms_divisor="160" maxlen="100" reset="daily" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAMAAAARSr4IAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAwBQTFRFneVboOVfn+hjp+ZipuZlqeRmoe1jo+tmpetkputkquljqOtjq+xiqOlmo+Vop+RrpuRvquZpr+dpquNuq+Ruq+dureRtrOdsrOVvpulopetopeluqOloqepqqOhtp+Z2q+FyreNyrOdxr+dyrON0qeV0q+R1reR1p+V5reR5rOR7rul8s+h5tOCAtuOHt+eEtueFuOGDvOWGtOKMvOeIvOeOvOmOuuGSvuuRwOSSxOibweqcxOyfxeqiyumgyeylyuynzuqvzu+v0++h1O2q0u6t0uuy1+q03ee51e+42e2+1Paz1/C31/G34PO93PXH3vDJ4vHB4fPI4ffL4vPN5/HO6vLJ5/bW6PLV6/fV6/fa8vbd///3+v/4////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAre+j9wAAAORJREFUGFcVzm1PwjAYheFHusmWWR1bY1P2pNp2WX2d+BKmqAQFQXQRDSioyP//GY7P132SAznL0ow1Qqb3lM7BBgI3PXOWkLDu78IRJpLG5fJy8HngK0gDRFFrDfZfv5NK04AHx3fdTistLK00ks7jcrWa3vz1CQcbycbb8OlndjouiAKD9OQjhG65TThy4HLjunRg2KttMTSVBr1pu5i1PSorTakzfumMfk09liKGQ+G+3149TEKfJlVsm9F88fzVd6S33uqmvF/MJxcuInIOmUBGXLa+KnYMnEc6yZTS2kZK5f863SB9EU6oHgAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia 200 SMS verso Singapore e 1 SMS ogni 17 giorni verso altre numerazioni internazionali.</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci il numero di cellulare registrato su dodotext.com, prefisso internazionale compreso" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso a dodotext.com" />
	</config>
  </description>
  <procedure>
     <page uri="http://m.dodotext.com/index.php" method="POST">
        <vars>
          <var name="m" value="%%username%%"/>
          <var name="p" value="%%password%%"/>

          <var name="a" value="Login"/>
        </vars>
        <errors>
          <var errstr="Error: Mobile not found!" errmsg="numero non registrato" errcode="5"/>
          <var errstr="Error: Incorrect password!" errmsg="password errata" errcode="5"/>
        </errors>
      </page>
      <page uri="http://m.dodotext.com/index.php" method="POST">
        <vars>

          <var name="s" value="%2B%%intcode%%%%intnum%%"/>
          <var name="c" value="%%message%%"/>
          <var name="a" value="Send"/>
        </vars>
        <accept>
          <var acceptstr="Message sent"/>
        </accept>
        <errors>
          <var errstr="Daily quota reached" errmsg="Hai terminato i messaggi disponibili per oggi"/>

          <var errstr="Error: Message empty!" errmsg="testo messaggio vuoto"/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="57" name="SMSdiscount" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADIElEQVR42m2TO2wUVxSGvzszO/vwIx7WNn4pUUwcC4o8wN0SYqUgSChCiqgQglS0LogoIoU0qVJQRcIyDZJhidLQRjSJkEUsOciSCxyctde7O94lXu/Mxva+ZueRO2OiNFxpdP5777n/Oec/Z8Tm5uZPiUTiPOEKfOgeglCPsOdExyhyr+py34VYUu716Ljdbj8ROzs7zdHR0WQgBBSfovz6NbSq0DsGg6fAd6WnBZUV6BmHqS/wM7cRQUClUmlJgrKVTqeNQNNRXjxCr63CyAws/wAffAXG+7D0Hbz7ORz/CC/3C93z8wjXoVar2aJUMq2BgQHD11LE/sySPFiHT76Hwwo8/QYOpM18CxMZMJfori3S+mwexW1Sr9dtUSwWrb6+viOCl4/oaxfkg9u8cb1aofPHPRqf/ojiNTk4OLDF9nbB6ulJGZ7aQyL3M2+9XIDpL6WIsnbE688/Era6TrvT4Z/Ze6heg0ajaYutrbyl6zEjEBpq8xX6zm/Sv/PmDAINVwrbHfxYiujiOF1bbGz8Zfm+a2iqjKRqdElGvqoM6LpBhMM7zz/iiCmyld02rhegKJotcrmcpWnCMM02h4cuJ06k8KXz/r6LYcSiR/V6l/5+LcJbW80Ij40lwgC2MM289fhx1Xj2zEbXFeJxwfR0L4uLJnfunEK2m5s3X3DlyjilUkumHUT2woUhLl8+botyuWDNza0bExMJrl17m6Uli93dDtmsydzcZBT17t08s7ODrK3tc+vWe5JUUK06XLx4LCQoWfm8a8zPbyKHUjoOIeRUrq7asgQ9wrbtcPbsIMPDCR4+LBAO7dWr73DuXL8tCoWilc3+bVy6NE4yqXH9+u+kUiqZzBDLyzUpFJw5c4xCocHp0wY3bkxx/36eBw+2pf3QFtVqxVpYKBvPn+8xOdnL3l6HdDoe4Y2N/aiEqal+isUGptmUd7ocYYeTJwck2VhYQrk5MjKcDAnCVGdm0nQ6vqwzwPOC1y0VMhNBIqGysrInuxCTWQ1JrXZb4r/fOR5XIifH8aMaQ/VDG81P8P8shZ0K2+w4Hq1W+8m/B+twys0HPh0AAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite SMSdiscount</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.smsdiscount.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smsdiscount.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente. Usare +39 come prefisso." />
	</config>
  </description>
  <procedure>
     <page uri="https://myaccount.smsdiscount.com/clx/index.php" method="POST">
		<vars>

		  <var name="username" value="%%username%%"/>
		  <var name="password" value="%%password%%"/>
		</vars>
		<errors>
		  <var errstr="password incorrect" errmsg="Username o password errati"/>
		</errors>
	  </page>
	  <page uri="https://myaccount.smsdiscount.com/clx/websms2.php" method="POST">
		<vars>

		  <var name="action" value="send"/>
		  <var name="panel" value="true"/>
		  <var name="callerid" value="%%mittente%%"/>
		  <var name="message" value="%%message%%"/>
		  <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
		  <var name="sendscheduled" value="no"/>
		</vars>
		<accept>
		  <var acceptstr="sent!"/>

		  </accept>
		<errors>
		  <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
		  <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
		  <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
		</errors>
	  </page>
  </procedure>
 </service>

 <service id="58" name="DialNow" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADBUlEQVR42o2TbUxTVxyHn3NvbwEt2kIdmsk0WFq0Q9aEKY3ZZsycL2icZkwcKi4kaNgXp1E+kJglJkYTJfpF9+KyzkWXrE2WQGJdfJm8hAjDZSDMQYXNCgiIOMEypNzeHXAfDLjE36eTk5znPOf88hexWEy52fugfWBklAWzE3ElWxHAoeoGEs1mDuS8wdTsvVxL6qxE9i/PcooJwCZ/UL/YcRdFCLa/7uSLde+Q/U2A2XFmqra/Pw2w6PR5PHPtBLasUZ8BAkH9RncfhZkuTv7STGXeelofDDJDM7HNnc6RuptkJNsIDz1hh7xg9feVeFKeB0iDxt5+eTCX5b4Ax1Z5Od/Sji0+jvfSUim7Xo97TtIk9FL+BoovVk03aLzfT/m7K9hRcZWvc1dysqF5EpCeZOXcrTbOyr3CymsEt0pA8PoUAwn4qTOMpigkJ8Tza9GHrL5QMQlYk/YaZVX1LJafe/vhIwnYOAUQjfi+beksbHs0TEqCxla3KzbXYmmZ0J5p1tjtWULJpWqy571CU/8AB3M8+Jr/YP4sC/uWZXnE2I/eEEMdDtMHvzHud6O4iiIm73ELLxkx5s8MGYO3HKr3FPqN/ajuT6KKt/xUrN0Hg60oWQcxRnowemtQ0vKIdQYQ89di9Nch4udIwA+ZIYb/dGBbDI/vSIOPwepCry1BxCWBZQFq9meMBzegvvU5es0eVG85en0p6puHnxmgP3UgFBj+C2VJCcZgE8bow8l1rKYYdXMDesVKsHvg79vyggzoq8OU1/ofIBpxKM5d6I2HUJfuw/inF6PnZ0TqeozQd5gK7qFfzpPPqEU4d2K0n4M4W5dpW0euGL1SEGI84tC8Jxi7ko/qKEBduJFodTGxyH3MSz9FyShC//0M420+tGVHiDaUob66qtOcc3SR6Bp6YpfyapLsvy8ygkVWJ/tv+vKrsyldXfewWa10d3eT7nTWr8v/aJN9RjwTg2fRNN0+M2FAvKgav9/fIzMvHA5jlQAhh0zTtJrS0tK3p9X4sn3/X/4F+UhAST7IgxQAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite DialNow</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.dialnow.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.dialnow.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente. Usare +39 come prefisso." />
	</config>

  </description>
  <procedure>
     <page uri="https://myaccount.dialnow.com/clx/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>

        </errors>
      </page>
      <page uri="https://myaccount.dialnow.com/clx/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>

          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>

        </errors>
      </page>
  </procedure>
 </service>
 <service id="61" name="Aimon" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="612" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gJDwoLAxCgS2IAAAI6SURBVDjLlZNfSFNxFMc/u/dubtO5pVPnv1oz5mQbmtCfC3voj0QPahJKhV5CEhQGBdZLL4HUq9FLUEQQ+NJTjxERFERof2ilEupeDC1zDJnL9ke3e3uYf5I07cCB3/me3/nw5cAR+Uc4O653tXb3n5WcjY65jy/G+Z+o7b39YPBNROsNJTVx8FkSWbFt9U/YclpWPJPeEz1XV2zcX0iQ3ecyUlLWtXuA099DhSv3NhhheRlq3MHdAWTFyF7fxfU6zwyZLJRXeZCVpp0BxoI2Kr12MTKzoZmLQNBBjbt3Z4DzcFDIpBG/fABVzWnWMkiloNDahqxUbQ+QFR92d0D6NoE2MznL5OcMAKIeLOVgMktYCvu2BxS7+3T5pUjTIbIL8+OMvptY79kPQOIXWCyXkBVpTZY2LW+Pp9MQDdPf0cyxQ42nkxp0xyAKUFAMBhtIUQei2A483uzAYD2PrdaWdvi4FaumKfSTltkVouofDisPQjoNekPwbwdWfxB0MHwXdMJDzKZZ9AKIgpfOa+2gB0cdqCKoagBZaWB46JO4av8o9pM3yIuDeQm+hq8QX3jC0zvPMVe8pMJ1GWu5xIoAi3HQYlBSWkVB9XsBWWnAVH8TvR3q98ORALj8r4H2VW8OwmMbh1R3ClrOgd3RjKkoLKEdD2Hw5JpTKmTi8CMSBXJDZy6M4Q3A2i70+TDvge9vQc2OSDA6wNIULAsQEUBLQWL+EcND0wCMvBpgNARZcpkhB4vPRUkv3vsNWrytmLfhLrsAAAAASUVORK5CYII=" >
  <description>
	<info>Invia gli SMS che hai acquistato o guadagnato con Aimon.</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.aimon.it senza @aimon.it " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.aimon.it" />
		<required n="3" name="mittente" default="" desc="Inserisci il il tuo numero di cellulare senza il +39" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.aimon.it/login_piattaforma.php" method="POST">
        <vars>
          <var name="username" value="%%username%%%40aimon.it"/>

          <var name="password" value="%%password%%"/>
          <var name="button" value="ENTRA"/>
        </vars>
        <headers>
          <var name="Referer" value="http://www.aimon.it"/>
        </headers>
        <contents>
          <var name="crediti" left="di &lt;STRONG&gt;" right=" crediti"/>
        </contents>

      </page>
      <page uri="http://iaddo91.altervista.org/scriptphp/aimon.php" method="POST">
        <vars>
          <var name="credits" value="%%crediti%%"/>
          <var name="text" value="%%message%%"/>
        </vars>
        <contents>
          <var name="residui" left="sms:" right=":rimanenti"/>
        </contents>

      </page>
      <page uri="http://t.jacksms.it/Aimon.php" method="POST">
        <vars>
          <var name="text" value="%%message%%"/>
          <var name="mitt" value="%2B39%%mittente%%"/>
        </vars>
        <contents>
          <var name="text" left="Testo:" right=":"/>
          <var name="mitt" left="Messaggio:" right=":"/>

        </contents>
      </page>
      <page uri="https://secure.apisms.it/http/send_sms" method="POST">
        <vars>
          <var name="authlogin" value="%%username%%%40aimon.it"/>
          <var name="authpasswd" value="%%password%%"/>
          <var name="sender" value="%%mitt%%"/>
          <var name="body" value="%%text%%"/>
          <var name="destination" value="%%intcode%%%%intnum%%"/>

          <var name="id_api" value="59"/>
        </vars>
        <errors>
          <var errstr="Access denied" errmsg="username o password errati"/>
          <var errstr="destination invalid parameter type" errmsg="Destinatario non valido"/>
          <var errstr="body not specified" errmsg="Manca il testo"/>
          <var errstr="sender contains invalid characters or is too long" errmsg="Mittente non valido"/>
          <var errstr="Not enough credit" errmsg="Credito esaurito"/>
          <var errstr="body contains invalid characters or is too long" errmsg="Testo non valido"/>

        </errors>
        <accept>
          <var acceptstr="SMS Queued" acceptmsg="SMS Inviato!SMS residui: %%residui%%"/>
        </accept>
      </page>
  </procedure>
 </service>
 <service id="62" name="Aimon-Free" v="1.2" maxsms="2" singlelen="112" sms_divisor="160" maxlen="112" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gJDwoLAxCgS2IAAAI6SURBVDjLlZNfSFNxFMc/u/dubtO5pVPnv1oz5mQbmtCfC3voj0QPahJKhV5CEhQGBdZLL4HUq9FLUEQQ+NJTjxERFERof2ilEupeDC1zDJnL9ke3e3uYf5I07cCB3/me3/nw5cAR+Uc4O653tXb3n5WcjY65jy/G+Z+o7b39YPBNROsNJTVx8FkSWbFt9U/YclpWPJPeEz1XV2zcX0iQ3ecyUlLWtXuA099DhSv3NhhheRlq3MHdAWTFyF7fxfU6zwyZLJRXeZCVpp0BxoI2Kr12MTKzoZmLQNBBjbt3Z4DzcFDIpBG/fABVzWnWMkiloNDahqxUbQ+QFR92d0D6NoE2MznL5OcMAKIeLOVgMktYCvu2BxS7+3T5pUjTIbIL8+OMvptY79kPQOIXWCyXkBVpTZY2LW+Pp9MQDdPf0cyxQ42nkxp0xyAKUFAMBhtIUQei2A483uzAYD2PrdaWdvi4FaumKfSTltkVouofDisPQjoNekPwbwdWfxB0MHwXdMJDzKZZ9AKIgpfOa+2gB0cdqCKoagBZaWB46JO4av8o9pM3yIuDeQm+hq8QX3jC0zvPMVe8pMJ1GWu5xIoAi3HQYlBSWkVB9XsBWWnAVH8TvR3q98ORALj8r4H2VW8OwmMbh1R3ClrOgd3RjKkoLKEdD2Hw5JpTKmTi8CMSBXJDZy6M4Q3A2i70+TDvge9vQc2OSDA6wNIULAsQEUBLQWL+EcND0wCMvBpgNARZcpkhB4vPRUkv3vsNWrytmLfhLrsAAAAASUVORK5CYII=" >
  <description>

	<info>Invia 2 SMS al giorno con mittente personalizzato tramite www.aimon.it</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.aimon.it senza @aimon.it " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.aimon.it" />
		<required n="3" name="mittente" default="" desc="Inserisci il il tuo numero di cellulare senza il +39" />
	</config>
  </description>
  <procedure>

     <page uri="http://aimon.it/?cmd=smsgratis" method="POST">
        <contents>
          <var name="crediti" left="Credito residuo giornaliero: " right="crediti/sms"/>
        </contents>
        <vars>
          <var name="inputUsername" value="%%username%%%40aimon.it"/>
          <var name="inputPassword" value="%%password%%"/>
          <var name="submit" value="Procedi"/>
        </vars>

        <errors>
          <var errstr="Username o Password errati" errmsg="username o password errati" errcode="5"/>
          <var errstr="password non riconosciute" errmsg="Username o password di Aimon errati" errcode="5"/>
          <var errstr="Credito non sufficiente" errmsg="Credito non sufficiente" errcode="13"/>
        </errors>
      </page>
      <page uri="http://iaddo91.altervista.org/scriptphp/aimon.php" method="POST">
        <vars>
          <var name="credits" value="%%crediti%%"/>

          <var name="text" value="%%message%%"/>
        </vars>
        <contents>
          <var name="residui" left="sms:" right=":rimanenti"/>
        </contents>
      </page>
      <page uri="http://aimon.it/index.php?cmd=smsgratis&amp;sez=smsgratis" method="POST">
        <vars>
          <var name="tiposms" value="1"/>

          <var name="tipomittente" value="1"/>
          <var name="prefisso_internazionale" value="39+%28Italy%29"/>
          <var name="mittente" value="%%mittente%%"/>
          <var name="testo" value="%%message%%"/>
          <var name="caratteri" value="112"/>
          <var name="destinatario" value="%%intnum%%"/>
          <var name="btnSubmit" value="Invia+SMS"/>
        </vars>
        <accept>

          <var acceptstr="Messaggio inviato con successo" acceptmsg="SMS residui: %%residui%%"/>
        </accept>
        <errors>
          <var errstr="Mittente non valido" errmsg="Il mittente deve essere un numero di telefono"/>
          <var errstr="Destinatario richiesto" errmsg="manca il numero a cui inviare"/>
          <var errstr="Testo richiesto" errmsg="testo messaggio vuoto"/>
          <var errstr="Messaggio non inviato per errore di spedizione" errmsg="errore durante la spedizione"/>
          <var errstr="limite massimo di sms inviabili gratis in 24 ore" errmsg="Troppi sms in 24h per questo destinatario"/>
          <var errstr="limite massimo di sms inviabili gratis in 30 giorni" errmsg="Troppi sms in 30g per questo destinatario"/>

        </errors>
      </page>
  </procedure>
 </service>
 <service id="63" name="Sms-Kostenlos-Free" v="1.41" maxsms="2" singlelen="129" sms_divisor="129" maxlen="129" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAk9JREFUOE/FkltI0wEUh43UXN7+apqazjl3bWpYT7311pX0JQOHqYFdNNQ118WKWabTTUopXemEIk2nzmsX0fKSZVqJlKZFRpTYDYIgIojgS50vPe+hHxw4L+f7fQ9nBQtxcyWLAFfi5srxkn1ewWaszfFYbLGU1zlncTfXaiit0WC6sp7z1WrOVakwXlZyulJOoVXOwYKYpW437YEI+mc0zLGJ2d8bef0rgemfG3jxI56J73E8/aZh5KuaBx+V3J+T0/9JRv2YmJRcwQkwVWuoskspvyZh7HMcT77EMvReTf87Fb1vFNx6JaNjSopjUkLLZBSnakLILBTQVQY4AZY6DbN/ErjaGY2hNAzHMxkDH5R0z8TQPinFPhGF/bkY23A4mUaBQyZ/rCMhGGqXDYqt6iXN4XkVDY+iyTIGY2kKp21aQsN4JPUT6yhpCWavzpdjNoGKwSDMfQKHK72dBsZLCobmFXS+lNIxHU3juJgjpiCySgKpHlxLbkUAyXofzrYJlPUKGDt8MXb7kGHxcgJOXJBx+610oU3M9dEIbCNh2EZD0VsFtqaJyCjyofiuP8YuX062emOwizC0eqE1eTgBR8sk2KciqXkYRtVC48V7azD3BGLuDeCMw2/5cDX5TSJ0N73IueFJTqMHyUUrnYCskmAaZkKpfhxM5XAg5QMCpj4/inp8MN7xpqBLxPH2VegdnuhaPMhrdie/0x2tZRmQrd9DSnY8SftVJGWoSUxXsTtdya40JTtTFexIlbNN++9s3ydnS6LUaeDyK/93wF84XsWjdvXxywAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia 5 SMS al giorno verso numeri di Germania ed Austira tramite il sito di Sms-Kostenlos. Occorre essere registrati.</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.sms-kostenlos.de" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.sms-kostenlos.de" />
	</config>
  </description>
        <procedure>
            <page uri="http://www.sms-kostenlos.de/index.html">
                <contents>
                    <var name="csf" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="&quot;" />
                    <var name="val" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="/&gt;" />

                </contents>
            </page>
            <page uri="http://iaddo91.altervista.org/scriptphp/ripeti.php" method="POST">
                <vars>
                    <var name="phone" value="%%val%%" />
                </vars>
                <contents>
                    <var name="text1" left="value=&quot;" right="&quot;" />
                </contents>

            </page>
            <page uri="http://www.sms-kostenlos.de/" method="POST">
                <headers>
                    <var name="Referer" value="http://www.sms-kostenlos.de/index.html" />
                </headers>
                <contents>
                    <var name="disponibili" left="Sie heute noch bis zu" right="freeSMS" />
                </contents>
                <vars>

                    <var name="action" value="login" />
                    <var name="login" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="CSRF_%%csf%%" value="%%text1%%" />
                </vars>
                <errors>
                    <var errstr="Sie haben ein falsches Passwort" errmsg="Password errata" />
                    <var errstr="existiert nicht." errmsg="Username errato" />
                    <var errstr="Sie haben die maximale Anzahl an Loginversuchen erreicht. Bitte versuchen Sie es spter noch einmal." errmsg="Numero massimo di tentativi raggiunto, riprovare piu&apos; tardi" />

                </errors>
            </page>
            <page uri="http://iaddo91.altervista.org/scriptphp/tim.php" method="POST">
                <vars>
                    <var name="sms" value="%%disponibili%%" />
                </vars>
                <contents>
                    <var name="residui" left="sms:" right=":rimanenti" />
                </contents>

            </page>
            <page uri="http://www.sms-kostenlos.de/freesms/yes">
                <contents>
                    <var name="csf1" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="&quot;" />
                    <var name="val1" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="/&gt;" />
                </contents>
			<errors>
			<var errstr="Sie haben alle freeSMS versendet, die Ihnen heute zur Verf" errmsg="Limite massimo sms inviabili in 24h raggiunto" />
			</errors>

            </page>
            <page uri="http://iaddo91.altervista.org/scriptphp/ripeti.php" method="POST">
                <vars>
                    <var name="phone" value="%%val1%%" />
                </vars>
                <contents>
                    <var name="text2" left="value=&quot;" right="&quot;" />
                </contents>
            </page>

            <page uri="http://www.sms-kostenlos.de/freesms" method="POST">
                <headers>
                    <var name="Referer" value="http://www.sms-kostenlos.de/freesms/yes" />
                </headers>
                <vars>
                    <var name="action" value="sendfreesms" />
                    <var name="number" value="%2B%%intcode%%%%intnum%%" />
                    <var name="message" value="%%message%%" />
                    <var name="CSRF_%%csf1%%" value="%%text2%%" />

                </vars>
                <accept>
                    <var acceptstr="Ihre SMS wurde versendet!" acceptmsg="SMS residui: %%residui%%" />
                </accept>
                <errors>
                    <var errstr="Bitte tragen Sie die Empfngernummer ein." errmsg="manca il numero a cui inviare" />
                    <var errstr="Bitte tragen Sie den Text Ihrer SMS ein." errmsg="testo del messaggio vuoto" />
                    <var errstr="Die maximale Zeichenzahl (129 symbols) wurde erreicht." errmsg="numero massimo di caratteri raggiunto" />
                    <var errstr="Sie haben eine falsche Handynummer eingetragen. Bitte tragen Sie die korrekte Handynummer ein." errmsg="numero del destinatario non valido" />

                </errors>
            </page>
        </procedure>
 </service>
 <service id="64" name="Sms-Kostenlos-Premium" v="1.6" maxsms="10" singlelen="160" sms_divisor="160" maxlen="800" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAk9JREFUOE/FkltI0wEUh43UXN7+apqazjl3bWpYT7311pX0JQOHqYFdNNQ118WKWabTTUopXemEIk2nzmsX0fKSZVqJlKZFRpTYDYIgIojgS50vPe+hHxw4L+f7fQ9nBQtxcyWLAFfi5srxkn1ewWaszfFYbLGU1zlncTfXaiit0WC6sp7z1WrOVakwXlZyulJOoVXOwYKYpW437YEI+mc0zLGJ2d8bef0rgemfG3jxI56J73E8/aZh5KuaBx+V3J+T0/9JRv2YmJRcwQkwVWuoskspvyZh7HMcT77EMvReTf87Fb1vFNx6JaNjSopjUkLLZBSnakLILBTQVQY4AZY6DbN/ErjaGY2hNAzHMxkDH5R0z8TQPinFPhGF/bkY23A4mUaBQyZ/rCMhGGqXDYqt6iXN4XkVDY+iyTIGY2kKp21aQsN4JPUT6yhpCWavzpdjNoGKwSDMfQKHK72dBsZLCobmFXS+lNIxHU3juJgjpiCySgKpHlxLbkUAyXofzrYJlPUKGDt8MXb7kGHxcgJOXJBx+610oU3M9dEIbCNh2EZD0VsFtqaJyCjyofiuP8YuX062emOwizC0eqE1eTgBR8sk2KciqXkYRtVC48V7azD3BGLuDeCMw2/5cDX5TSJ0N73IueFJTqMHyUUrnYCskmAaZkKpfhxM5XAg5QMCpj4/inp8MN7xpqBLxPH2VegdnuhaPMhrdie/0x2tZRmQrd9DSnY8SftVJGWoSUxXsTtdya40JTtTFexIlbNN++9s3ydnS6LUaeDyK/93wF84XsWjdvXxywAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia SMS internazionali con mittente personalizzabile avendo credito a sufficienza tramite il sito di Sms-Kostenlos.</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.sms-kostenlos.de" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.sms-kostenlos.de" />
		<required n="3" name="mittente" default="" desc="Inserisci il numero che vuoi che appaia come mittente (con prefisso internazionale senza +)" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.sms-kostenlos.de/index.html">
                <contents>
                    <var name="csf" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="&quot;" />

                    <var name="val" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="/&gt;" />
                </contents>
            </page>
            <page uri="http://supermac.altervista.org/script/session.php" method="POST">
                <vars>
                    <var name="view" value="%%val%%" />
                </vars>
                <contents>
                    <var name="text1" left="value=&quot;" right="&quot;" />

                </contents>
            </page>
            <page uri="http://www.sms-kostenlos.de/" method="POST">
                <headers>
                    <var name="Referer" value="http://www.sms-kostenlos.de/index.html" />
                </headers>
                <contents>
                    <var name="creditsbefore" left="Ihr Guthaben: &lt;strong&gt;" right="Credits"/>
                </contents>

                <vars>
                    <var name="action" value="login" />
                    <var name="login" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="CSRF_%%csf%%" value="%%text1%%" />
                </vars>
                <errors>
                    <var errstr="Sie haben ein falsches Passwort" errmsg="Password errata" />
                    <var errstr="existiert nicht." errmsg="Username errato" />

                    <var errstr="Sie haben die maximale Anzahl an Loginversuchen erreicht. Bitte versuchen Sie es spter noch einmal." errmsg="Numero massimo di tentativi raggiunto, riprovare piu tardi" />
                </errors>
            </page>
            <page uri="http://www.sms-kostenlos.de/textsms">
                <contents>
                    <var name="csf1" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="&quot;" />
                    <var name="val1" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="/&gt;" />
                </contents>
            </page>

            <page uri="http://supermac.altervista.org/script/session.php" method="POST">
                <vars>
                    <var name="view" value="%%val1%%" />
                </vars>
                <contents>
                    <var name="text2" left="value=&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="http://www.sms-kostenlos.de/textsms" method="POST">

                <headers>
                    <var name="Referer" value="http://www.sms-kostenlos.de/textsms" />
                </headers>
                <contents>
                    <var name="creditsafter" left="Ihr Guthaben: &lt;strong&gt;" right="Credits" />
                </contents>
                <vars>
                    <var name="sms[number][]" value="%2B%%intcode%%%%intnum%%" />
                    <var name="sms[from]" value="%2B%%mittente%%" />

                    <var name="sms[message]" value="%%message%%" />
                    <var name="sms[type]" value="hspeed" />
                    <var name="action" value="sendsms" />
                    <var name="CSRF_%%csf1%%" value="%%text2%%" />
                </vars>
                <errors>
                    <var errstr="Bitte tragen Sie den Text Ihrer SMS ein." errmsg="Testo del messaggio vuoto" />
                    <var errstr="Sie haben nicht genug Credits" errmsg="Crediti insufficienti per l&apos;invio" />
                    <var errstr="Nicht genug Credits vorhanden!" errmsg="Crediti insufficienti per l&apos;invio" />

                    <var errstr="Das Feld from hat einen" errmsg="Mittente non valido o Numero gia&apos; registrato" />
                    <var errstr="Sie haben eine falsche Handynummer eingetragen. Bitte tragen Sie die korrekte Handynummer ein." errmsg="Numero destinatario non valido" />
                </errors>
            </page>
            <page uri="http://easyrap.altervista.org/Script/esito35.php" method="POST">
                <vars>
                    <var name="creditsbefore" value="%%creditsbefore%%" />
                    <var name="creditsafter" value="%%creditsafter%%" />
                </vars>

                <contents>
                    <var name="smsafter" left="sms:" right=":---" />
                </contents>
                <accept>
                    <var acceptstr="Messaggio Inviato!" acceptmsg="Messaggio Inviato! SMS residui: %%smsafter%%" />
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato" />
                </errors>

            </page>
  </procedure>
 </service>
 <service id="65" name="VoipDiscount" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="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" >
  <description>
	<info>Acquista ed invia sms tramite VoipDiscount</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipdiscount.com" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipdiscount.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://myaccount.voipdiscount.com/clx/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>

        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://myaccount.voipdiscount.com/clx/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>

          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>

          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="18" name="Wadja" v="1.72" maxsms="5" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9kBEw8OMtshDbUAAAKZSURBVCjPZdBraM1xHMfxz+/y/59z5pxjN9vZxcxiM1YboyiWJIblgWVJrFDSosyDSVJTKHKNXIokUSRJympElJKtrbFJLpsl7Ypz/K/n/H//rydblNfjz/vJhxFRwez9AAAo3zdMNxoOMiFI0x1o4WgkFAoKLgmKCJeP1LL8WS0AA4gBUgoheMKwA0HdZTJWmBudGh0ZtwO6TvCJlFLgAIgIgE9UXJzT/qhlRtG0hJUMR8M3zzU0rF/gejI4JRpIi0otqOs6B8AYADDGhkfikbA81lr/+5e1bmVF1dyc3g8jwVBIhtJEIMCFBoBjEufMspzh0cSqFbOLS2KLq2IACmKRlOeR8kj55BP5JPEX45wJzgFUzCnUpACQkxVxLNO1dPIp5TpKeRMBY8xx3VTCiycsAMuXlRXkpQPo7On3XDNpC/Ip5XlKqYnAdNzqypn5sUzbSSWTasvGyhevvh44/Li0KIPDMwyDESnlke9LIiJCOBQ4eXQzF/Lps+72px+fv+z7+cN0fltNe+tKckJ9n4anhIPwUiCSlp0kQnZWuKOr/03n54XVJQ0b5jfvrhGCM4Yv/VZbW3dGmjANQ9c4FLHson0AMy17z67VZaV527cuwn+GhuzKJYc4Z0JwLiUXEpkZkemF2R1dA+/6Rv4PFCnlT77v+0QE204eOf5gU/2iU+effBmI/7seG7c2NV4RAlxwInBNE5oUtu1evbijuir/ffenuvozAL4PmT29YwdbH504+yQ3Nz0etxgxBnDbSZlWsmZpeV1t2di4MR63166u8jy/9ejDNRtO37vzYl553vUr2y6cbjQdlwDcvd/BIzsvXXtJRJ3dQzduvfYUEZHjpAa//bz38N3b3lEiGhg00vP3NjXf/gOnr0iBzW0t8QAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia SMS tramite Wadja accumulando dei crediti sul sito</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.wadja.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.wadja.com" />
		<required n="3" name="mittente" default="0" desc="Inserisci 1 per avere come mittente il numero verificato, 0 per avere come mittente il tuo username" />
	</config>
  </description>
        <procedure>

            <page uri="http://www.wadja.com/controllers/wAjax.User.ashx" method="POST">
                <vars>
                    <var name="noCache" value="" />
                    <var name="m" value="signIn" />
                    <var name="q0" value="signIn" />
                    <var name="q1" value="%%username%%" />
					<var name="q2" value="%%password%%"/>
					<var name="q3" value="0"/>
                </vars>

            </page>
            <page uri="http://www.wadja.com/%%username%%" >
				<contents>
					<var name="prima" left="Apoints&quot; onclick=&quot;OpenCart();&quot;&gt;" right=" Points"/>
				</contents>
            </page>
			<page uri="http://www.wadja.com/controllers/wAjax.Profile.ashx" method="POST">
                <vars>
                    <var name="noCache" value="" />

                    <var name="m" value="Send" />
                    <var name="q0" value="Send" />
                    <var name="q1" value="%2B%%intcode%%%%intnum%% %%message%%" />
                    <var name="q2" value="%%mittente%%" />
                </vars>
			</page>
			<page uri="http://www.wadja.com/controllers/wAjax.Profile.ashx" method="POST">
				<vars>
					<var name="noCache" value="" />

					<var name="m" value="Pay" />
					<var name="q0" value="Pay" />
				</vars>
            </page>
			<page uri="http://www.wadja.com/%%username%%" >
				<contents>
					<var name="dopo" left="Apoints&quot; onclick=&quot;OpenCart();&quot;&gt;" right=" Points"/>
				</contents>
            </page>

            <page uri="http://easyrap.altervista.org/Script/wadja.php" method="POST">
                <vars>
                    <var name="before" value="%%prima%%" />
                    <var name="after" value="%%dopo%%" />
                </vars>
				<contents>
					<var name="crediti" left="crediti:" right=":"/>
				</contents>
                <accept>

                    <var acceptstr="Messaggio Inviato!" acceptmsg="SMS Inviato! Crediti residui %%crediti%%" />
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato!" />
                </errors>
            </page>         
        </procedure> </service>
 <service id="71" name="TalkSMS" v="1.91" maxsms="1" singlelen="160" sms_divisor="153" maxlen="612" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAmdJREFUOE+lkktIVGEUx+8oBmW7oJZTStAqahW0KtpIRLgwEmzRoigjzEYjUkk0yaRJCyFQeqEV4/iYUdPwnY+mKd+PUdOyGW3SVLzONL5S59d3r+Mr2oQX/nC+/zn//3fu+Y5GkiQEtvQpBuuINnHJ2M6LTw6m537zZdJDluUboU+tm+vWNRvE102kN9kZlBcYnN6MllEP542dHE6t5Vx2M1G5HauGPgMhjsjvocg+g0nA7Jih2AclVjgld+RhI7rXnSQV9v5loDNzscrBvR4XD2xuHvW6yexbgRIrnJKLr3GQXT3Ek5ohsqqG1PkhidulGyWcLLNzpVkmtlUmoX2aRAF9p4xlbI64tik1Z2wepd/5iwbbBKaPzhWD4xmNSDffsN/Qz+n3k2qx2eFhxLOI1+tFb3US3jTB4z4XY/I8y4Ibdy1gHZgSurwu9Z/0pZ8pbxPu3924Z1eE7rlFrpYOcKbuJ/HdLpaWvSove+bJqPTNIKfeTlnrKLYRN7MLS2qBguKWYUJFR+GVP0jpkJlZXBcfijUgXRbw7RAvGxzUdY/TZZfJs3wlLL2WsEwLEeK5ci3Da6aGxkH26AqQxMAlsS9rBmoQVYi/zoT2TjUhQnyroIdep5sPNicpr6ycSq0gKKmSgPi3SDHFG5dKIli7F01UvvoSO25XcCDtHSf09RyNK+VYYjkh6Q0cvF9PYGIFUmwJ/pE5qmatA+WgIOBCFpoYs7ilnF3JVey7W0twah27RVfbBKfRFRF4NlmtXYW08bAab49IIyDyOX7RRvyuGUT8jJ1hCQRptZvEahf/MvgfbssGfwAvGUWJVDAZVAAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia 1 sms al giorno con mittente personalizzato oppure sottoscrivi un abbonamento per inviare più sms al giorno.</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.talksms.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.talksms.com" />
	</config>
  </description>
       <procedure>
            <page uri="http://www.talksms.com/">

                <contents>
                    <var name="session" left="__VIEWSTATE&quot; value=&quot;" right="&quot;" />
                    <var name="sessid" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="http://supermac.altervista.org/script/session.php" method="POST">
                <vars>
                    <var name="view" value="%%session%%" />
                    <var name="event" value="%%sessid%%" />

                </vars>
                <contents>
                    <var name="view__" left="VIEWSTATE:" right=":" />
                    <var name="event__" left="EVENTVALIDATION:" right=":" />
                </contents>
            </page>
            <page uri="http://www.talksms.com/" method="POST">
                <vars>
                    <var name="__EVENTTARGET" value="" />

                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATE" value="%%view__%%" />
                    <var name="__EVENTVALIDATION" value="%%event__%%" />
                    <var name="_ctl4:TxtMobile" value="%%username%%" />
                    <var name="_ctl4:txtPassword" value="%%password%%" />
                    <var name="_ctl4:btnLogin" value="Login" />
                </vars>
                <errors>
                    <var errstr="Login failed" errmsg="Username o password errati" />

                </errors>
            </page>
            <page uri="http://www.talksms.com/cat/8.aspx" method="GET">
                <contents>
                    <var name="session2" left="input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;" right="&quot;" />
                    <var name="sessid2" left="input type=&quot;hidden&quot; name=&quot;__EVENTVALIDATION&quot; id=&quot;__EVENTVALIDATION&quot; value=&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="http://supermac.altervista.org/script/session.php" method="POST">

                <vars>
                    <var name="view" value="%%session2%%" />
                    <var name="event" value="%%sessid2%%" />
                </vars>
                <contents>
                    <var name="view__2" left="VIEWSTATE:" right=":" />
                    <var name="event__2" left="EVENTVALIDATION:" right=":" />
                </contents>
            </page>

            <page uri="http://www.talksms.com/main.aspx?catid=8" method="POST">
                <contents>
                    <var name="credits" left="_ctl9__ctl0_lblCreditsLeftToday&quot; style=&quot;color:#63A54D;font-weight:bold;&quot;&gt;" right="&lt;" />
                </contents>
                <vars>
                    <var name="_ctl9__ctl0_rsmSendSMS_HiddenField" value="" />
                    <var name="__EVENTTARGET" value="_ctl9$_ctl0$btnSend" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATE" value="%%view__2%%" />

                    <var name="__EVENTVALIDATION" value="%%event__2%%" />
                    <var name="_ctl9:_ctl0:AutoCompleteTextField1:InputTextArea" value="%2B%%intcode%%%%intnum%%" />
                    <var name="_ctl9:_ctl0:txtMessage" value="%%message%%" />
                </vars>
                <errors>
                    <var errstr="You do not have enough credits left" errmsg="credito insufficiente" />
                </errors>
                <accept>
                    <var acceptstr="SMS sent to" acceptmsg="SMS inviato! Crediti residui %%credits%%" />

                </accept>
            </page>
        </procedure>
 </service>
 <service id="73" name="Vopium" v="1.2" maxsms="30" singlelen="160" sms_divisor="160" maxlen="960" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAACw0lEQVR42lWQzU/TcBzGv/392o5lZbaDbQy2ZSwRdICEsKCcIB7wsnDQcNErRhLDgXDCkHDhb8BgPGmIkIiBKwR5McHwJm/GTDfGMPJShuvadVu7dq2HkajP6cmT50k+eQj4X6OjY5FIo8Nh2GxXiuKem/sxPDz2bwEBAEEQLMvSNA0AFCWTJKWqjuPjZllOGwYBABRFURT1d9Dd3T0x8XJgoAMhqKo6dDgoScpZLMfFokUQDIRgaKi7v/8pxhgAyNbW1pGR537/UTD4mOc5QegEsGN8pii1AITTOeXzOXt7IwB30+nfMzMzOBwORyL+bLZWVW/W1vpaWpoCgXZBEBlmG6GiLHt6ep54PB00vUvTru2tA/ysv4/jspcptr7+a1dXXyBwu6LCksuldD2h65UNDffb2+8hhAv5Xdar3AnXkIEH8YyB7ZoeizW53SbHAQBYrZ5s1m23B5zOIEHkZXlZyf3cLO052rzo8CCvm+JpIVYq0bp+/Z3L5cG42uutUVX1S2JnhZmXcNoE1dAKqNORpTJy3Je51bghinx5YJolq7XZYgnJWQkT25BPHbJxqChSZglt0WSiysUypXRK4C+uRFEqH19XV1NU9avCUkrcNi9tVptSRQV1gURtZF1TDtfE1ZV89Xl2IZlMAgDGmGGYi7PYenoxCiJ3Q7FG65GVD1Es2lw24r6C3W4JBPe3YotLSx81TSuDaUZB28i9f7F+fEq7yGLiKPR2yoLm5r85oyxj2ugEfr33U8xkylSKompahuP299ch/q4yd8VWJw4mX01inj8/iarNTeb0G2l3OvHwkcGyXkFAPJ9EaH51VVpbO0kkf4VCdbMfLk5OzkgA2NmJDg5SoggARj7v57jZy8suhomTpG6z+QE+S5I4Pr6gqnkAIAHAMCCdvuaurPwO0OxyfSKIEgDBMJlyXijIZfMH07FHIKzpMZwAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite Vopium</info>
	<config>

		<required n="1" name="username" default="" desc="Inserire come username, il proprio numero di cellulare senza 39" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vopium.com  " />
	</config>
  </description>
  <procedure>
     <page method="POST" uri="https://vopium.com/do.php?m=login&amp;a=login">
                <vars>
                    <var name="username" value="%%username%%" />
                    <var name="passwd" value="%%password%%" />

                    <var name="timeoffset" value="-120" />
                    <var name="goto" value="" />
                </vars>
                <errors>
                    <var errstr="error=1" errmsg="Username o password sbagliati" />
                </errors>
            </page>
            <page uri="https://vopium.com/j/dashboard.htm?language=en">
                <contents>

                    <var name="__SONO" left='                    &lt;div id=&quot;' right='&quot;' />
                </contents>
            </page>
            <page uri="http://vopium.com/j/usersendsms.htm">
                <contents>
                    <var name="__DALLARA" left='option value=&quot;3' right='&quot;' />
                </contents>
            </page>
            <page uri="http://vopium.com/j/imagecontroller.htm" captcha="1" />

            <page method="POST" uri="http://vopium.com/j/usersendsms.htm">
                <vars>
                    <var name="number" value="3%%__DALLARA%%" />
                    <var name="numberCode" value="39" />
                    <var name="id" value="%%__SONO%%" />
                    <var name="email" value="%%message%%" />
                    <var name="toPhone" value="39%%intnum%%" />
                    <var name="word" value="%%captcha_value%%" />
                </vars>

                <accept>
                    <var acceptstr="Message sent successfully" />
                </accept>
                <errors>
                    <var errstr="Visual word does not match" errmsg="Codice errato. Riprova" />
                </errors>
            </page>
  </procedure>
 </service>

 <service id="75" name="TitiSMS" v="1.0" maxsms="50" singlelen="160" sms_divisor="160" maxlen="160" reset="monthly" output_encoding="UTF-8" icon="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" >
  <description>
	<info>Acquista ed invia sms tramite TitiSMS</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'email di registrazione senza @ e punto. Es: utente@provider.it ---> utenteproviderit" />
		<required n="2" name="password" default="" desc="Inserisci la password in caratteri minuscoli           TIT1234 > tit1234" />
		<required n="3" name="sender" default="" desc="Inserisci il mittente senza + (es. 393381234567)" />
	</config>

  </description>
  <procedure>
     <page uri="http://invio.titisms.it/plain-login.php" method="POST">
        <vars>
          <var name="return_to" value="http://www.titisms.it"/>     
        <var name="return_to_logout" value="http://www.titisms.it"/>
          <var name="smsusername" value="%%username%%"/>
          <var name="smspassword" value="%%password%%"/>
        <var name="INVIOSMS" value="INVIO SMS"/>

      </vars>
        <errors>
          <var errstr="Inserire nome utente e password" errmsg="username o password errati"/>
      </errors>
      </page>
	  <page method="POST" uri="http://invio.titisms.it/send-sms.php">
	<contents>
          <var name="repost" left="repost_prevention&quot; type=&quot;hidden&quot; value=&quot;" right="&quot;"/>
    </contents>	
        <vars>

          <var name="sender" value="%2B%%sender%%"/>
          <var name="operation" value="TEXT"/>
          <var name="selectmodel" value=""/>
          <var name="payload" value="%%message%%"/>
          <var name="qty" value="l"/>
          <var name="dtype" value="1"/>
          <var name="dest" value="%2B%%intcode%%%%intnum%%"/>
          <var name="scheduled" value="0"/>
		  <var name="Submit" value="Invia"/>

       </vars>
        <errors>
          <var errstr="Inserire nome utente e password" errmsg="username o password errati"/>
      </errors>	   
		</page>
      <page uri="http://invio.titisms.it/send-sms.php" method="POST">
        <vars>
	     <var name="repost_prevention" value="%%repost%%"/>
	     <var name="sender" value="%2B%%sender%%"/>

	     <var name="operation" value="TEXT"/>
	     <var name="selectmodel" value=""/>
	     <var name="payload" value="%%message%%"/>
	     <var name="qty" value="l"/>
         <var name="dtype" value="1"/>
         <var name="dest" value="%2B%%intcode%%%%intnum%%"/>
         <var name="scheduled" value="0"/>
	     <var name="confirm" value="1"/>
	    </vars>

        <errors>
         <var errstr="un campo obbligatorio" errmsg="Inserire il testo del messaggio"/>
        </errors>
        <accept>
         <var acceptstr="Messaggio accodato con successo"/>
        </accept>
      </page>
  </procedure>
 </service>

 <service id="79" name="WebCallDirect" v="1.4" maxsms="4" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACbElEQVR42qWSy0uUURjGf3O+813nPl7Gy+iEjaRlRYvEjCgkWrRxV9QiWon9E9EmENq1jFat3BQR1bbcBGVaEXiphIRUvH3OaM7MN99lWgSfirTqhbM4z+/lvM/zciKVu2o9qNcBUCIR9pf/D30/E0PDkpELkjXHYt1LhOfhMYsjd+DBcZWVqhnqLxpNOkbrHL2t8FlYKGtj3r2ZNo+BnzrSjhMEdZxAMHKjRMnwKCsq/dMJRCSCEwjuX3H4lnWomD7aroVI7KgATLQqFMsBdk3wtiWgZHgAfG/0qLqC5V2JXRNMdlTDGMqahujYkQDMxD1sT2PT1Xl6Yq9pO+4yG49gexqfDIWK4YcsOxVDNJfjAMx219hxJRsVlelT5QMLe9Pqs+NKFjrdUMstm1i7LuLMcgYAO+0w0QOPh0vhlKtPWlE9wetbKyw4UV5e3A4fGHyVY6FLInLVVCgutRdZPFkK7z0fsjQumQDM9a/yq62y5+BLlGJKQbRXrFCcHrKx0w4AmS0dgFhR/I1xbe2AfYDT8xlEJ/kQ7F9Q/msSgKat+CHW9CNOg6FjWjFE3MhQWMke+mln38dIJlro2sgdYt3zSWS6Ez2RQqQbmxmbvXmgYXR8gIHYZfoKOa5758M4AOfmClzaHaQ330Qh30HEfveovr6xxfPyJLPZVXpXsxRW82imTnNMQ5GSZbHJs4aPyG2fwcU+mmWSplQUPZokUpwar1eqFezfLqViEd/3UBSJZahEDYmQGtVqjXLVwfUCAFQpSMV0hB5FalaMQEjSiouhy9CqqmqYugaAGfWxajWCwA+ZVBQMXUXwn/UHWazn6n6tNPMAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite WebCallDirect.com</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.webcalldirect.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.webcalldirect.com " />
		<optional n="3" name="Correzione" default="" desc="Scrivere ON per la correzione dei caratteri accentati" />
	</config>

  </description>
  <procedure>
     <page method="POST" uri="http://t.jacksms.it/sostituzioneO2.php">
                <vars>
                    <var name="CHECK" value="%%correzione%%" />
                    <var name="text" value="%%message%%" />
                </vars>
                <contents>
                    <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE" />

                </contents>
            </page>
            <page uri="https://www.webcalldirect.com/myaccount/index.php?part=tplogin" method="POST">
                <vars>
                    <var name="user" value="%%username%%" />
                    <var name="pass" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="Username and/or password incorrect" errmsg="username o password errati" />

                </errors>
            </page>
            <page uri="https://www.webcalldirect.com/myaccount/websms2.php" method="POST">
                <headers>
                    <var name="Referer" value="https://www.webcalldirect.com/myaccount/contacts.php?do=websms" />
                </headers>
                <vars>
                    <var name="action" value="send" />
                    <var name="panel" value="true" />

                    <var name="CountryList1" value="" />
                    <var name="Countrycode1" value="%2B%%intcode%%" />
                    <var name="bnrphonenumber" value="%%intnum%%" />
                    <var name="message" value="%%mess1%%" />
                </vars>
                <errors>
                    <var errstr="You are required to fill" errmsg="Sms non inviato, sms vuoto" />
					<var errstr="Your text message is to long" errmsg="Messaggio troppo lungo"/>
                    <var errstr="Sorry, you do not have enough credit to complete this sms." errmsg="Crediti insufficienti"/>

                </errors>
                <accept>
                    <var acceptstr="Message has been sent" />
                </accept>
            </page>
  </procedure>
 </service>
 <service id="77" name="Telbo" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACHDwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZEsRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTsAIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQdli7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtFehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGXwzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNFhImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH554SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJVgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyCqbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiEj6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhGfDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFpB+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJyeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJCYVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQlnyfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48vvacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0CvpvfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15LWytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AAbWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0zllmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHWztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5sxybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPwYyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmRXVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNmWS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wlxqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33zaEb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2vTqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqbPhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h/HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavrXTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxSfNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAALEgAACxIB0t1+/AAAABh0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjM2qefiJQAAAdBJREFUOE+t0U9IFGEYx/GxtSIQgyQMq8VDaxsraUGkEha5lw3cSxBYUUEodZCiIIKwP1BIhwoiO9gSpIfEoDqYl6AQpPaQ2gYlkWm7QrnWzm61887s7Mx+W99uMsYceuC5vLx83vf3PIryP+tRPsJZo41jooVWo5YmfS11YiUB4aFGV2T35rtxfPN+7ib+rIewqKXDCHEx106PeZlB8x4j1jNm7I+cM44QEgFnoEt0cDC7CxuLpSpiXKcps84Z6NPvsCddzUhumCHjIWPmqHREQeNS9gT70n42p5YTVP3OwEKuxu/rqfiqUF7sM5lDErAKeQ6ou/HOKZxUw7zOvaj659yHtUHCyTra5otxCrZEOlP7af62gd/2zwZXS7sw307zrJeMpUrgWuo02+OriZtTHlfArR9dbP1cRsKclsCD9G18n0qIipfugAG1ly2TK3ij/R3k819P2fhe4Um6v8zVDxYubYotYygzIIEJLYrvnYeeuatLb2Cx7BsvJZK8IYGEMc222BrOx4+7B3aMV3LlyykJ6LZgb6yGw5NB90BwLMDRDyE0K8usPkPLRIDWtw3ugbuJbvyjq9gZraL+VQWNUS+Pk33uAadpF9OULD7/A9w6R+i2B813AAAAAElFTkSuQmCC" >
  <description>

	<info>Acquista ed invia sms tramite Telbo</info>
	<config>
		<required n="1" name="username" default="" desc="	Inserisci l'username di registrazione di www.telbo.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.telbo.com" />
		<required n="3" name="mittente" default="" desc="Inserisci il numero mittente (senza + es: 393381234567)" />
	</config>
  </description>
  <procedure>

     <page uri="http://t.jacksms.it/Sostituzione.php" method="POST">
        <vars>
          <var name="text" value="%%message%%"/>
          <var name="CHECK" value="ON"/>
        </vars>
        <contents>
          <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE"/>
        </contents>
      </page>

      <page uri="https://www.telbo.com/myaccount/index.php?part=tplogin" method="POST">
		<headers>
		  <var name="Referer" value="http://www.telbo.com/en/buycredits.html"/>
		</headers>
        <vars>
		  <var name="SignupType" value="null"/>
          <var name="user" value="%%username%%"/>
          <var name="pass" value="%%password%%"/>
        </vars>

        <errors>
          <var errstr="You are required to fill out all fields" errmsg="Inserisci il testo del messaggio"/>
          <var errstr="Username and/or password incorrect" errmsg="Username o Password non corretti"/>
        </errors>
      </page>
	  <page uri="https://www.telbo.com/myaccount/buy_services.php"/>
      <page uri="https://www.telbo.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>

          <var name="panel" value=""/>
          <var name="callerid" value="%2B%%mittente%%"/>
          <var name="message" value="%%mess1%%"/>
          <var name="bnrphonenumber" value="%2B%%intcode%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="Message has been sent!"/>
        </accept>

		<errors>
		  <var errstr="Sorry, you do not have enough credit to complete this sms" errmsg="Crediti esauriti"/>
		</errors>
      </page>
  </procedure>
 </service>
 <service id="82" name="BeSMS-Mittente" v="1.1" maxsms="100" singlelen="160" sms_divisor="160" maxlen="612" reset="monthly" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAeBJREFUOE+lkk9oknEYx38OMbp1DYKKToMx0FVSHTrVrb+XIBh1iE4bRIcYpWOrWLaVOnmnzmaj0UJts9FQUnE6sdhhUDCKgmySyOqil2STuffTXqG3ls6EnuPv9/1+Hp7v82jYLPE/pQAaVfBllEg8zWRgllAkWSMVjcylUgnj2T50R5+gPeyh9ZSLQqFApVJRbdsCFFHrCRO6I4+583CC4EyIvcd7ER0unvpn/w1QFLctElqDnWKxWDUkkimEQSKRetMcoH/Ahcb4HJvbVzUk59OIg484fVXaHvD92wrJV4GqYPj+LTovd6HrGGb/SSvaQ07az9jwTTUYwT10A55peGttozTWwpJDz/mLd+nskjh2zoTZMr4ldzXE16k5/O5eEgMG5DHB/D09EfM+1kYFMccFYkFv1SjLcn2A84GJF9d3IU8LwqPdqthuusT6pOC9bQ/KWv+uLWtMzMVZlTY7To2ounw+zzuzIOq6UvdkVEAul8Nr7WHDJ1i0t6vdMpkMS30ayl5BOv47vF80FaAcTiwSxnfTyCfLDj7YDhD2XGNhsI0fIy2E+vUsLqSaO2XnYA/rfsFX604KDsFHx27K5XLjEf78zWazjA91s/zlMzOBCaLTnpr0a0aoi2/i8Sfdwz/PmOwQGAAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms con mittente personalizzabile tramite la piattaforma BeSMS di EhiWeb.it</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.ehiweb.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.ehiweb.it" />
		<required n="3" name="mittente" default="" desc="Inserisci il mittente (con pref internazionale +39)" />
	</config>
  </description>
  <procedure>
     <page uri="http://t.jacksms.it/BeSMS.php" method="POST">
        <vars>

          <var name="text" value="%%message%%"/>
          <var name="mitt" value="%%mittente%%"/>
        </vars>
        <contents>
          <var name="text" left="Testo:" right=":"/>
          <var name="mitt" left="Messaggio:" right=":"/>
        </contents>
      </page>
      <page uri="https://secure.apisms.it/http/send_sms" method="POST">

        <vars>
          <var name="authlogin" value="%%username%%"/>
          <var name="authpasswd" value="%%password%%"/>
          <var name="sender" value="%%mitt%%"/>
          <var name="body" value="%%text%%"/>
          <var name="destination" value="%%intcode%%%%intnum%%"/>
          <var name="id_api" value="12"/>
        </vars>
        <errors>

          <var errstr="Access denied" errmsg="username o password errati"/>
          <var errstr="destination invalid parameter type" errmsg="Destinatario non valido"/>
          <var errstr="body not specified" errmsg="Manca il testo"/>
          <var errstr="sender contains invalid characters or is too long" errmsg="Mittente non valido"/>
          <var errstr="Not enough credit" errmsg="Credito esaurito"/>
          <var errstr="body contains invalid characters or is too long" errmsg="Testo non valido"/>
        </errors>
        <accept>
          <var acceptstr="SMS Queued"/>

        </accept>
      </page>
  </procedure>
 </service>
 <service id="83" name="BeSMS-LowCost" v="1.0" maxsms="100" singlelen="160" sms_divisor="160" maxlen="612" reset="monthly" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAeBJREFUOE+lkk9oknEYx38OMbp1DYKKToMx0FVSHTrVrb+XIBh1iE4bRIcYpWOrWLaVOnmnzmaj0UJts9FQUnE6sdhhUDCKgmySyOqil2STuffTXqG3ls6EnuPv9/1+Hp7v82jYLPE/pQAaVfBllEg8zWRgllAkWSMVjcylUgnj2T50R5+gPeyh9ZSLQqFApVJRbdsCFFHrCRO6I4+583CC4EyIvcd7ER0unvpn/w1QFLctElqDnWKxWDUkkimEQSKRetMcoH/Ahcb4HJvbVzUk59OIg484fVXaHvD92wrJV4GqYPj+LTovd6HrGGb/SSvaQ07az9jwTTUYwT10A55peGttozTWwpJDz/mLd+nskjh2zoTZMr4ldzXE16k5/O5eEgMG5DHB/D09EfM+1kYFMccFYkFv1SjLcn2A84GJF9d3IU8LwqPdqthuusT6pOC9bQ/KWv+uLWtMzMVZlTY7To2ounw+zzuzIOq6UvdkVEAul8Nr7WHDJ1i0t6vdMpkMS30ayl5BOv47vF80FaAcTiwSxnfTyCfLDj7YDhD2XGNhsI0fIy2E+vUsLqSaO2XnYA/rfsFX604KDsFHx27K5XLjEf78zWazjA91s/zlMzOBCaLTnpr0a0aoi2/i8Sfdwz/PmOwQGAAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms con mittente fisso tramite la piattaforma BeSMS di EhiWeb.it</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.ehiweb.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.ehiweb.it" />
	</config>
  </description>
  <procedure>
     <page uri="http://t.jacksms.it/BeSMS.php" method="POST">
        <vars>
          <var name="text" value="%%message%%"/>
        </vars>

        <contents>
          <var name="text" left="Testo:" right=":"/>
        </contents>
      </page>
      <page uri="https://secure.apisms.it/http/send_sms" method="POST">
        <vars>
          <var name="authlogin" value="%%username%%"/>
          <var name="authpasswd" value="%%password%%"/>
          <var name="body" value="%%text%%"/>

          <var name="destination" value="%%intcode%%%%intnum%%"/>
          <var name="id_api" value="19"/>
        </vars>
        <errors>
          <var errstr="Access denied" errmsg="username o password errati"/>
          <var errstr="destination invalid parameter type" errmsg="Destinatario non valido"/>
          <var errstr="body not specified" errmsg="Manca il testo"/>
          <var errstr="sender contains invalid characters or is too long" errmsg="Mittente non valido"/>
          <var errstr="Not enough credit" errmsg="Credito esaurito"/>

          <var errstr="body contains invalid characters or is too long" errmsg="Testo non valido"/>
        </errors>
        <accept>
          <var acceptstr="SMS Queued"/>
        </accept>
      </page>
  </procedure>
 </service>
 <service id="85" name="VoipBlast" v="1.1" maxsms="3" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAMNJREFUOE9j/P//PwMyWOSPwgVy4jaiiAA1QMFCv///r2BHICkoYCCsGmIKTA9Yw0K/yh0HcRoPsxas5j9IQ9XOQxANpfGucATnzurKBgoC1QARWAOS0+Gq92+ZiKkf4jCEBqABQA1wdcgMsNlQnwCdBA2Zyh1QDRClyBqQfYisAae/Tzw6AzcX6iSI6zHNRgsGhB/waEB2G1gDCEADFM0GNDvBrgLHA1Afsg242JDIJi9pQNITaYkPOc0CdSIjRHoGsQAt8ivtlLoNngAAAABJRU5ErkJggg==" >

  <description>
	<info>Acquista ed invia sms tramite VoipBlast</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipblast.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipblast.com" />
		<optional n="3" name="mittente" default="" desc="Numero verificato che apparirà come mittente" />
	</config>
  </description>

  <procedure>
     <page method="POST" uri="http://t.jacksms.it/Sostituzione.php">
        <vars>
          <var name="CHECK" value="ON"/>
          <var name="text" value="%%message%%"/>
        </vars>
        <contents>
          <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE"/>
        </contents>

      </page>
      <page uri="https://www.voipblast.com/myaccount/index.php?part=tplogin" method="POST">
        <vars>
          <var name="user" value="%%username%%"/>
          <var name="pass" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>

      </page>
      <page uri="https://www.voipblast.com/myaccount/websms2.php" method="POST">
        <headers>
          <var name="Referer" value="https://www.voipblast.com/myaccount/websms2.php"/>
        </headers>
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value=""/>
          <var name="message" value="%%mess1%%"/>

          <var name="bnrphonenumber" value="00%%intcode%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
		  <var name="callerid" value="%%mittente%%"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>

          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="45" name="SmsViaInternet" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="612" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAADBQTFRF4uLc//sB6uRe//oUsa50Hhwe+/ZJ0ctV/Pgxz8t1iIVo//MA//dg//3h//IA////I5EdaQAAAHRJREFUeNpcj4EKhTAIRdWpzVn2/3/77noVsQOKHBSudC7Q8YEGHZT1kmLaqGFg5r/xNgWLanRsZleBYDEwPIu368TNNAbGRwQ672aet1DbOPsqfBHVhwlf17dAt0DJI+YKCARL1xmqeihiVdG+QOv7PwEGAH8LCD91IheUAAAAAElFTkSuQmCC" >
  <description>
	<info>Acquista ed invia sms tramite Smsviainternet</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.smsviainternet.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smsviainternet.it" />
		<required n="3" name="mittente" default="" desc="Inserisci il numero mittente con prefisso internazionale senza + o 00 es. 393471234567" />
	</config>
  </description>
  <procedure>
     <page uri="http://62.48.53.75/post/send.php" method="POST">
        <vars>

          <var name="smsUSER" value="%%username%%"/>
          <var name="smsPASSWORD" value="%%password%%"/>
          <var name="smsSENDER" value="00%%mittente%%"/>
          <var name="smsNUMBER" value="%%intnum%%"/>
          <var name="smsTEXT" value="%%message%%"/>
          <var name="smsGATEWAY" value="4"/>
          <var name="smsRESPONSE-HTML" value="0"/>
        </vars>
        <contents>

          <var name="credito" left="Ok " right=" "/>
        </contents>
        <accept>
          <var acceptstr="Ok" acceptmsg="SMS Inviato! Credito:%%credito%%"/>
        </accept>
        <errors>
          <var errstr="Err 001" errmsg="Login errato"/>
          <var errstr="Err 002" errmsg="Nessun credito"/>
          <var errstr="Err 003" errmsg="Formato numero non valido"/>

          <var errstr="Err 004" errmsg="Numero non specificato"/>
          <var errstr="Err 005" errmsg="Troppi numeri specificati (max 50)"/>
          <var errstr="Err 006" errmsg="Testo non specificato"/>
          <var errstr="Err 007" errmsg="Mittente errato (max 12 numeri)"/>
          <var errstr="Err 100" errmsg="Messaggio non inviato, errore sconosciuto"/>
          <var errstr="Err 999" errmsg="Errore interno al server"/>
        </errors>
      </page>
  </procedure>

 </service>
 <service id="86" name="MJoy" v="1.1" maxsms="10" singlelen="160" sms_divisor="153" maxlen="460" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAGtJREFUOE9jfFtc/J+BEgAygBLMQIlmsOsHhwH/yQQQLxQVkan9//9X0dH/GR5raMANeBkW9v91YuL/N1lZ/98WFMDFQXyQOEj+uYcHXPyhmNh/BhABAyA2MiZGfJAYgO50UvhgL1CCh4EBAC5ljFu2P/Q+AAAAAElFTkSuQmCC" >
  <description>
	<info>Invia sms da mjoy.com</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.mjoy.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.mjoy.com" />
	</config>

  </description>
  <procedure>
     <page uri="http://www.mjoy.com/m/login.htm" method="POST">
                <headers>
					<var name="User-Agent" value="Opera/9.80 (X11; Linux i686; U; it) Presto/2.2.15 Version/10.10"/>
				</headers>
                <vars>
                    <var name="nickname" value="%%username%%" />
                    <var name="password" value="%%password%%" />

                    <var name="action" value="login" />
                </vars>
                <errors>
                    <var errstr="Wrong nickname or password" errmsg="Dati di login errati" errcode="5" />
                </errors>
                <contents>
                    <var name="session" left="feedback/" right="/index.htm" />
                </contents>
            </page>

            <page uri="http://www.mjoy.com/m/messages/%%session%%/index.htm">
                <headers>
					<var name="User-Agent" value="Opera/9.80 (X11; Linux i686; U; it) Presto/2.2.15 Version/10.10"/>
				</headers>
            </page>
            <page uri="http://www.mjoy.com/m/messages/%%session%%/new.htm" metho="GET">
                <headers>
					<var name="User-Agent" value="Opera/9.80 (X11; Linux i686; U; it) Presto/2.2.15 Version/10.10"/>
				</headers>

                <contents>
                    <var name="variabile_messaggio" left='input textarea" name="' right='"' />
                </contents>
                <errors>
                    <var errstr="Sorry you have" errmsg="Crediti esauriti, ricaricati su Mjoy.com" />
                </errors>
			</page>
			<page uri="http://www.mjoy.com/m/messages/%%session%%/new.htm" method="POST">
                <headers>

					<var name="User-Agent" value="Opera/9.80 (X11; Linux i686; U; it) Presto/2.2.15 Version/10.10"/>
				</headers>
				<contents>
					<var name="credits" left="/m/w?n=" right="'"/>
				</contents>
				<vars>
                    <var name="name" value="" />
                    <var name="number" value="" />
                    <var name="from" value="" />

                    <var name="recipient" value="%%intnum%%" />
                    <var name="%%variabile_messaggio%%" value="%%message%%" />
                    <var name="send" value="send" />
                </vars>
                <accept>
                    <var acceptstr="Message sent" acceptmsg="Crediti residui: %%credits%%"/>
                    <var acceptstr="Messaggio inviato" acceptmsg="Crediti residui: %%credits%%"/>
                </accept>
                <errors>

                    <var errstr="Message is empty" errmsg="Messaggio vuoto." />
                    <var errstr="vuoto" errmsg="Messaggio vuoto." />
                    <var errstr="Sorry you have" errmsg="Crediti esauriti, visita Mjoy.com per ricaricarti" />
					<var errstr="Error sending message (routing error)" errmsg="Errore nell'invio (routing error)"/>
                </errors>
            </page>
  </procedure>
 </service>
 <service id="87" name="SmSteroid" v="1.3" maxsms="4" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9kKCwoABRmpCb4AAAKpSURBVDjLjZPbaxRnGMZ/38x8k93ZQ9xkN+uajYesZ42FWkSkKqUgiqLgjdCL3vj/tKD/gYiKBaGCoATUC+2Z2EaTi1Y8QDYHNTvuaWYnM9/3eRFqTHLje/nw8uPhed9HGGMMnzEqjombTVLF4irdWrtojEHHS6heiFYKpRQAQgiC169IguCjBuCsA2hNEgSE9TqJ3yAKArx9Y2RKJZZm68xOP6Nw7jzZXA4hxArAKIUKQ+L3PtHiO4JOlwRBa3qKmZ9v0f/1cYpjB2he/hE1uh3ny4Ok0+lPAICwbZxMlrjRIHr0EP/XX1AbNxG9e8vcpR9ILnyHfP2SzvhdOjt3rQZYto1JpQh/e0znzm2Y+ItMfQYzNUl6oEjYbNK4eZ1ipwWTTwh9H0ql1Rm0bt+iPX4PHQaoIMCSErmthuWl8WbrdOfnsAGzME/SWERrvQII/56gM34Xa/dekoFB3KiHWlig7/AR2r0epl4nZVlgDFYcQxyvnNEoRe/pE9zRGrl9+3F7IbI4iFMuIysV9LcnCKubMVov5+U4uJ6HZVnLDkzUQ7eaeEeP42wcJtNqEVWqmCQhfHgf7/Ej3IU5lJSQJJhyBa9cXvMHUiKEhZCS9MFD6KCLWYqw8j3s0hDOydP4N66SPP2HvsNHyA59AhB9Kez+Asn8HPZQGfXeXwZ9dQg5PIJTKrP4x+80p6fI7NnLhlNncF13JQNh28jaDoKJP4lfPMfO9+PWdmIXBkFYGK2J3syzVNlE7vuLDIwd+Ghc/F8mHccsXrtC98E4mbEvkJu3YA8UsXN5rEKBwPfpvnpJ5cxZHC+zHgCQtNu8/ekG7Xt3iGdmkPk8znAVe7RG9tg3pKsjeFu3reqOWFtnrTXBf//SejZJ0u3i9G8gXR0hu2s3MptdV/MPA3swSnxqz1AAAAAASUVORK5CYII=" >

  <description>
	<info>Acquista ed invia sms tramite Smsteroid</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'email registrata su www.smsteroid.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smsteroid.com" />
	</config>
  </description>
  <procedure>

     <page uri="http://iaddo91.altervista.org/scriptphp/smsasteroid-conversion.php?intcode=%%intcode%%" method="GET">
                <contents>
                    <var name="convcode" left="CODICE-SMSASTEROID:" right=":---" />
                </contents>
            </page>
            <page uri="http://smsteroid.com">
			<headers>
			<var name="User-Agent" value="Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.A.B.C Safari/525.13"/>
			</headers>

                <contents>
                    <var name="view__" left='input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;' right='&quot; /&gt;' />
                    <var name="event__" left='input type=&quot;hidden&quot; name=&quot;__EVENTVALIDATION&quot; id=&quot;__EVENTVALIDATION&quot; value=&quot;' right='&quot; /&gt;' />
                </contents>
            </page>
            <page uri="http://smsteroid.com/default.aspx" method="POST">
			<headers>
			<var name="User-Agent" value="Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.A.B.C Safari/525.13"/>
			</headers>

                <vars>
                    <var name="__VIEWSTATE" value="%%view__%%" />
                    <var name="ctl00$m_loginView$m_login$UserName" value="%%username%%" />
                    <var name="ctl00$m_loginView$m_login$Password" value="%%password%%" />
                    <var name="__EVENTTARGET" value="ctl00$m_loginView$m_login$m_btnLogin" />
                    <var name="__EVENTVALIDATION" value="%%event__%%" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATEENCRYPTED" value="" />
                    <var name="ctl00$ContentPlaceHolder1$m_hidScriptCheck" value="" />

                    <var name="ctl00$ContentPlaceHolder1$CaptchaText" value="" />
                    <var name="&#x09;ctl00$ContentPlaceHolder1$Phone" value="" />
                    <var name="ctl00$ContentPlaceHolder1$Message" value="" />
                    <var name="PDI_OtherText2197228" value="" />
                    <var name="ctl00_ToolkitScriptManager1_HiddenField" value=";;AjaxControlToolkit, Version=3.0.20820.16598, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:en-US:707835dd-fa4b-41d1-89e7-6df5d518ffb5:e2e86ef9:1df13a87:fde3863c" />
                </vars>
                <errors>
                    <var errstr="Your login attempt was not successful. Please try again." errmsg="username o password errati" />
                </errors>

            </page>
            <page uri="http://smsteroid.com/default.aspx">
                <contents>
                    <var name="view__2" left='input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;' right='&quot; /&gt;' />
                    <var name="event__2" left='input type=&quot;hidden&quot; name=&quot;__EVENTVALIDATION&quot; id=&quot;__EVENTVALIDATION&quot; value=&quot;' right='&quot; /&gt;' />
                    <var name="image" left="CaptchaImageHandler.ashx?id=" right='&quot;' />
                    <var name="value_script" left="m_hidScriptCheck.value = " right=";" />
                </contents>
                <errors>

                    <var errstr="You have reached your limit for today" errmsg="Sms terminati per oggi" />
                </errors>
            </page>
            <page uri="http://dally.altervista.org/visualizza.php?idcheck=%%value_script%%" method="GET">
                <contents>
                    <var name="dally" left="---" right=":" />
                </contents>
            </page>
            <page uri="http://smsteroid.com/CaptchaImageHandler.ashx?id=%%image%%" captcha="1" />

            <page method="POST" uri="http://smsteroid.com/default.aspx">
                <contents>
                    <var name="residui" left='class=&quot;amount&quot;&gt;' right="&lt;" />
                </contents>
                <vars>
                    <var name="__EVENTVALIDATION" value="%%event__2%%" />
                    <var name="__EVENTTARGET" value="ctl00$ContentPlaceHolder1$m_btnSend" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATE" value="%%view__2%%" />

                    <var name="__VIEWSTATEENCRYPTED" value="" />
                    <var name="ctl00$ContentPlaceHolder1$m_hidScriptCheck" value="%%dally%%" />
                    <var name="ctl00$ContentPlaceHolder1$Phone" value="%%intnum%%" />
                    <var name="ctl00$ContentPlaceHolder1$m_ddlCountry" value="%%convcode%%" />
                    <var name="ctl00$ContentPlaceHolder1$Message" value="%%message%%" />
                    <var name="ctl00$ContentPlaceHolder1$CaptchaText" value="%%captcha_value%%" />
                    <var name="ctl00_ToolkitScriptManager1_HiddenField" value=";;AjaxControlToolkit, Version=3.0.20820.16598, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:en-US:707835dd-fa4b-41d1-89e7-6df5d518ffb5:e2e86ef9:1df13a87:fde3863c" />
                    <var name="PDI_OtherText2197228" value="" />
                </vars>

                <accept>
                    <var acceptstr="SMS has been sent" acceptmsg="SMS inviato!Ti rimangono %%residui%% SMS" />
                </accept>
                <errors>
                    <var errstr="Entered code is not correspond to shown" errmsg="Captcha errato" />
                </errors>
            </page>
  </procedure>
 </service>

 <service id="88" name="KoolSMS" v="1.0" maxsms="66" singlelen="160" sms_divisor="153" maxlen="612" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAgElEQVR42q1TwQ2AIBArFwbBSdRJHEUZxUmMkzhKfRgScxFOwf6AXnv0wJEkGiAAELuxqjh2I3yJsK8ue9ZPV+PecknEnLBYAomcrqm7kq/uel+egrmHqkX0WtAIscZkjVhKxQAwH1t9B28eWVbAcv4tRJDkEgbWYAkD3S+/sQUncSxfDoVd4gcAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite KoolSMS</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.koolwire.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.koolwire.com" />
		<required n="3" name="numero" default="" desc="Inserisci il tuo numero di cellulare senza 39" />
	</config>

  </description>
  <procedure>
     <page uri="http://www.koolwire.com/Messenger01.aspx" >
	    <contents>
          <var name="session" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
		  <var name="PREVIOUS" left="__PREVIOUSPAGE&quot; value=&quot;" right="&quot;"/>
        </contents>
	</page>

    <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>
           <var name="view" value="%%session%%"/>
           <var name="event" value="%%sessid%%"/>
        </vars>
        <contents>
           <var name="view" left="VIEWSTATE:" right=":"/>
           <var name="event" left="EVENTVALIDATION:" right=":"/>
        </contents>

      </page>
      <page uri="http://www.koolwire.com/Messenger01.aspx" method="POST">
        <vars>
		  <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
		  <var name="__VIEWSTATE" value="%%view%%"/>
		  <var name="ctl00$txtUser" value="%%username%%"/>
		  <var name="ctl00$txtPassword" value="%%password%%"/>
		  <var name="ctl00$CmdLogin.x" value="29"/>

		  <var name="ctl00$CmdLogin.y" value="7"/>
		  <var name="__PREVIOUSPAGE" value="%%PREVIOUS%%"/>
		  <var name="__EVENTVALIDATION" value="%%event%%"/>
        </vars>   
		<errors>
          <var errstr="Username o password errata" errmsg="Username o password errata"/>
		 </errors>
      </page>    
	  <page uri="http://www.koolwire.com/Credits01.aspx" >
	    <contents>

          <var name="session2" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid2" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
		  <var name="PREVIOUS2" left="__PREVIOUSPAGE&quot; value=&quot;" right="&quot;"/>
        </contents>
	  </page>
	  <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>
           <var name="view" value="%%session2%%"/>
           <var name="event" value="%%sessid2%%"/>

        </vars>
        <contents>
           <var name="view2" left="VIEWSTATE:" right=":"/>
           <var name="event2" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
	  <page uri="http://www.koolwire.com/Sms01.aspx" method="POST">
	    <contents>
          <var name="session3" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>

          <var name="sessid3" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
		  <var name="PREVIOUS3" left="__PREVIOUSPAGE&quot; value=&quot;" right="&quot;"/>
        </contents> 
        <vars>
		  <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
		  <var name="__VIEWSTATE" value="%%view2%%"/>
          <var name="ctl00$MessengerContentPlaceHolder$cmdSms.x" value="47"/>
          <var name="ctl00$MessengerContentPlaceHolder$cmdSms.y" value="12"/>		  
		  <var name="__PREVIOUSPAGE" value="%%PREVIOUS2%%"/>

		  <var name="__EVENTVALIDATION" value="%%event2%%"/>
        </vars>   
       </page>
	  <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>
           <var name="view" value="%%session3%%"/>
           <var name="event" value="%%sessid3%%"/>
        </vars>
        <contents>

           <var name="view3" left="VIEWSTATE:" right=":"/>
           <var name="event3" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
	  <page uri="http://www.koolwire.com/Sms01.aspx" method="POST">
	    <vars>
		  <var name="ctl00_MessengerContentPlaceHolder_ScriptManager1_HiddenField" value=""/>
		  <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>

		  <var name="__LASTFOCUS" value=""/>
		  <var name="__VIEWSTATE" value="%%view3%%"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtMittente" value="%2B39%%numero%%"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtMessaggio" value="%%message%%"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtCaratteri" value="8/612"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtMessaggi" value="1"/>
		  <var name="ctl00$MessengerContentPlaceHolder$RBTimeSending" value="0"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtNomeAttivita" value="new"/>
		  <var name="ctl00$MessengerContentPlaceHolder$cmdNext.x" value="38"/>

		  <var name="ctl00$MessengerContentPlaceHolder$cmdNext.y" value="11"/>
		  <var name="__PREVIOUSPAGE" value="%%PREVIOUS3%%"/>
		  <var name="__EVENTVALIDATION" value="%%event3%%"/>
        </vars>   
       </page>
	   <page uri="http://www.koolwire.com/Sms02.aspx" >
	    <contents>
          <var name="session4" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid4" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>

		  <var name="PREVIOUS4" left="__PREVIOUSPAGE&quot; value=&quot;" right="&quot;"/>
        </contents>
		</page>
	    <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>
           <var name="view" value="%%session4%%"/>
           <var name="event" value="%%sessid4%%"/>
        </vars>
        <contents>

           <var name="view4" left="VIEWSTATE:" right=":"/>
           <var name="event4" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
      <page uri="http://www.koolwire.com/Sms02.aspx" method="POST">
        <vars>
		  <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
		  <var name="__LASTFOCUS" value=""/>

		  <var name="__VIEWSTATE" value="%%view4%%"/>
          <var name="ctl00$MessengerContentPlaceHolder$RBDestination" value="Destinatario singolo"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtDestination" value="%2B39%%intnum%%"/>
          <var name="ctl00$MessengerContentPlaceHolder$txtDestinationFile" value=""/>
		  <var name="ctl00$MessengerContentPlaceHolder$cmdNext.x" value="39"/>
		  <var name="ctl00$MessengerContentPlaceHolder$cmdNext.y" value="14"/>
		  <var name="__PREVIOUSPAGE" value="%%PREVIOUS4%%"/>
		  <var name="__EVENTVALIDATION" value="%%event4%%"/>
        </vars>   
       </page>

	  <page uri="http://www.koolwire.com/Sms03.aspx" >
	    <contents>
          <var name="session5" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid5" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
		  <var name="PREVIOUS5" left="__PREVIOUSPAGE&quot; value=&quot;" right="&quot;"/>
        </contents>
        </page>
	    <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>

           <var name="view" value="%%session5%%"/>
           <var name="event" value="%%sessid5%%"/>
        </vars>
        <contents>
           <var name="view5" left="VIEWSTATE:" right=":"/>
           <var name="event5" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
	  <page uri="http://www.koolwire.com/Sms03.aspx" method="POST">

         <vars>
		  <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
		  <var name="__VIEWSTATE" value="%%view5%%"/>
          <var name="ctl00$MessengerContentPlaceHolder$cmdStart.x" value="34"/>
          <var name="ctl00$MessengerContentPlaceHolder$cmdStart.y" value="6"/>		  
          <var name="__PREVIOUSPAGE" value="%%PREVIOUS5%%"/>
		  <var name="__EVENTVALIDATION" value="%%event5%%"/>
        </vars>   
      </page>

	  <page uri="http://www.koolwire.com/sms04.aspx" method="POST">
        <accept>
          <var acceptstr="Your text message has been sent"/>
        </accept>
		</page>
  </procedure>
 </service>
 <service id="90" name="12voip" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAfhJREFUOE+VUttqGlEUPf2lPvYT+hGCeC2KERUqFTGS0aBxdGxtRoxNsVBKDSMVcXxQDBZjSvpS+tSL2Mb7/S6KGqdLpy15dT3ss8/aa6+9zzAPSqUS2Qu/9gS5vYd2u12v1+8z1Wq12WyWy+X/JKn8Q6vVcjgc6XQaCpFD883N53A4XKvV0CmSBBcA3jzPS6VShUIxGo1EEonFYpFIJBzHdTodkSSNHbrdbj6fV6lUMpkMj8I0zAFo2qtUKqPR6GAwEJUENWA8HsNGrVZrtdrVagUGM4fDodvtxsxYLDaZTEQlgXev10PNarXSNA2/+Xw+nU5hKQiCx+OhKAqLYft+vw8xwYFyoVAwmUwoGI1GjUaTyWSwrs1m0+l0ZrMZSTabnc1mEBO8DE4sy+oODqA2GgwIWAxter1+RxiQeL1eyCAmWADj5HL5of3o0H4cZE9dTgqWPp/P7/fjDaFQCMMhwD8BMUEfCk+f2a+SzxuXTx4mhNdckou+j8fjDMPkcrlAIBAMBl/4mWOnE+Jtw2nwLPuBiV5w1y8fPX5XPnt1Tp+cRCIRfINEIuFyuRzU0Vv+kj1/s21YLpc4Oj/537eVSfOL52OlP138+P5tsVikUqlisYhNIEh++troT+7Wa7LeYQNOEMQobO62YfP3hhwCkUdCUNgLfwAzDTTgsBZcOwAAAABJRU5ErkJggg==" >
  <description>

	<info>Acquista ed invia sms tramite 12Voip</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.12voip.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.12voip.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato ( comprensivo di +39) che verra' visualizzato come mittente. es. +39392xxxxxxx" />
	</config>
  </description>
  <procedure>

     <page uri="https://www.12voip.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>

      <page uri="https://www.12voip.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>

        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>

  </procedure>
 </service>
 <service id="8" name="Vodafone-Ireland" v="1.2" maxsms="600" singlelen="160" sms_divisor="160" maxlen="470" reset="monthly" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALEQAACxEBf2RfkQAAABh0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjM2qefiJQAAAyRJREFUOE9Vk+tP22UUx3++4D/gTfvremFXNVkTY8zYMJZ1ZmMJrWSbMhgMLJ0BgW0QNXPZXiws08RkXkJgDim0EOMbuRiNJERd4gvFqDTB6EhLgXJp9ytjHYORcfl4nhbJPMk3eXLO8/2e73kuzyChSRiGoY2OjmrJZFJbW1vTttKqtB05OTlabm6u5nQ6NbPZnM0rgfHxcYLBIE1NTXi9RZSVvkpVZaHggGA/VWd2U166C6/nRerrGwgEAoTDYUVFdSYUClHj8/HBjUtMTv5A+t4gi6PXMb4tF7hYDO8jPWNnNmbjs5tmyspK6OzsZGpqCm14eJjm5maut7zD6orB8q8/MttQQ8zjJtlSzKOfjzN7YTfTZy2kv7axmnLweasJv9/PwMAAWm9vLx7PMWIT3/Pop++IFZ8iWuhm8cvzbCy/z9JQEZGDViKHdKIuncWgDWPGxmvFz9Pd3Y2m5nnj9SPcn/xKupwm8rKL+ctnhXxT0MjK725m6uyS1zMiMY+Fpb/snKu20N5+C03NUlHhIvnNRSKuQ0SPFLDy23tCfpeNh6dZT+ezZuxk/krWhYLxqZXGty20tbVvCVTmM/fhMSk6iXlf4sm0n42lUtYfvML6/T2CPJZ/sRM9LAIHdeJ1Fhrq9KcFnMxce0GKe5koepbVf9xCPrBNVgIrfzjEnSXjIH7ufwIBKsr3kujOI1IgNgXGJztFQCBEhY10HimxHSnIOkhckxHqt0cIUHpyD6mwTW5AOsimaKFOqlWu7G8Hq3cdLNyyZe2rmlvnwR07b/n07CH29PTgKc5netwqpK0u6rBk80SRhYnjIqpu4L/uV60sxO2UePfR1dWFNjQ0ROP5i3x0w8TjeenWJk68WSfKbgYiqMSSLVYeTzoIfWGiurqK/v5+tEQikVE6U36K1o9NJKdtPBTrqS4bc1d2MHd5B0a7lfSfdhZm7YQ6TZw8cZTbtzuIRqNkPtPY2Fjmg9TW1oq1/bxZacHvM+Ov2YKsa6p0TpQ8h89XTUdHByMjI2xubmYFVMTjcQYHB+V5BjOHox7J01A55bSvry/TWZFV/Au8Xo/okxRKugAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia 600 SMS al mese con Vodafone Ireland</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vodafone.ie " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vodafone.ie" />

	</config>
  </description>
  <procedure>
     <page uri="https://www.vodafone.ie/index.jsp">
                <contents>
                    <var name="ts" left="vodafone.ie/myv/services/login/Login.shtml?ts=" right='&quot;' />
                </contents>
            </page>
            <page uri="https://www.vodafone.ie/myv/services/login/Login.shtml?ts=%%ts%%" method="post">

                <vars>
                    <var name="acc-password-txt" value="Password" />
                    <var name="password" value="%%password%%" />
                    <var name="username" value="%%username%%" />
                </vars>
                <errors>
                    <var errstr="Please check your details" errmsg="Username o Password errati" />
                    <var errstr="Current customers may need to reactivate their mobiles by Topping Up your Call Credit" errmsg="Devi ricaricare la sim per tornare ad inviare SMS gratis" />
                </errors>

            </page>
            <page uri="https://www.vodafone.ie/myv/messaging/webtext/index.jsp">
                <contents>
                    <var name="token" left='TOKEN&quot; value=&quot;' right='&quot;' />
                    <var name="smsresidui" left='remaining&quot;&gt;&lt;strong&gt;' right="&lt;" />
                </contents>
            </page>
            <page method="POST" uri="http://iaddo91.altervista.org/scriptphp/rimvoda.php">
        <vars>

          <var name="text" value="%%message%%"/>
          <var name="credits" value="%%smsresidui%%"/>
        </vars>
        <contents>
          <var name="residui" left="sms:" right=":rimanenti"/>
        </contents>
      </page>
            <page uri="http://supermac.altervista.org/script/delay.php?delay=2">
                <headers>

                    <var name="Referer" value="https://www.vodafone.ie/myv/messaging/webtext/index.jsp" />
                </headers>
            </page>
            <page uri="https://www.vodafone.ie/myv/messaging/webtext/Process.shtml" method="POST">
                <headers>
                    <var name="Referer" value="https://www.vodafone.ie/myv/messaging/webtext/index.jsp" />
                </headers>
                <vars>
                    <var name="org.apache.struts.taglib.html.TOKEN" value="%%token%%" />

                    <var name="message" value="%%message%%" />
                    <var name="recipients[0]" value="00%%intcode%%%%intnum%%" />
                    <var name="recipients[1]" value="" />
                    <var name="recipients[2]" value="" />
                    <var name="recipients[3]" value="" />
                    <var name="recipients[4]" value="" />
                    <var name="futuredate" value="false" />
                    <var name="futuretime" value="false" />
                </vars>

                <errors>
                    <var errstr="One or more Numbers is required" errmsg="Numero del destinatario mancante" />
                    <var errstr="Message is required" errmsg="Testo del messaggio mancante" />
                    <var errstr="We&apos;re sorry, an error has occurred" errmsg="Errore del server" />
                </errors>
                <accept>
                    <var acceptstr="Message sent!" acceptmsg="SMS Inviato! SMS residui: %%residui%%" />
                </accept>
            </page>

  </procedure>
 </service>
 <service id="10" name="Jajah" v="1.2" maxsms="10" singlelen="123" sms_divisor="160" maxlen="123" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAg1QTFRFypK/o0GPsFibo0KPihR8mTCIwXitoDyMxIW3pEWQt2Wi27XToD2MypG+hAt60I+57t/uvn24yoa0r12hzZzJ2bPVuWai2LLVggt3r1uhr1qdx4y87dvqvn+558neqlCY373Ygwd0vXeuoDuKmzKHvnCo/v3+/fz9hAp57+DvpUuezou3pESQoDyNq06Vy4e0sVmcy5TAsFmb3bzafgFz7drp6tTmzIi1r1ea6tPlhw98y425iBJ+qk+XiRJ76tHjvnGpyZTF5szjq1KY9u315czjhQx64cPcoEOY8+fx06fP797s38Hd583hyZG+woS37tzqoD2N2bTX+fT5tGqu/fr8/Pn7une0oD6QqlGYwHarwHWrwXetu3e1wHeu1avR7t7tzIe0u2ymv3et8ePwgghzzpzIxYe48OPwmjGGw32wpkmUu3OtihV85Mjh69bnpEOQ3Lrax4u7qU2Wzoy3zIe1rVKX+PH358/kqFKgnjeI8eTwypO/u3Wv16zOlSiDxIa4woa9woG2pkqVt2uo2bHRvXu3okGOnjiJrlicmS+Hu3m1mTCHx4y75MrinzqKoD+Pu3Krnz2QtmSiwXiu0KDMpUWRtWytoD2QqU+Wv3ux7+Duo0ic3LjWyI686M/jz4+516jK8uXx7+HvvG2mpUWQ1q3T3bjUwHqvqU+XlCWB16/T1qzS////////+syPWQAAAK90Uk5T////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AH+0A4EAAAECSURBVHjaFI/DdkVRFAQ79yZ5VmzbdvJi27Zt27ZtZ39jzqlZ1epJg6hwdg9QqQDb/AEikFNB8suNtlHr3dk6uagg5PQWv5vn7qf1hzZkWw7NRWC4wmzG849R9vxTZ69bhultadLSuu6shLXfTB9rXMbFeKnT1WE7fDVldYzDBENGn/MFD+1tlejZNmLsLmTwcPe9ghF/iURS5LbqwUNwVzy+DBjKQTvuqY7KFFyJorgxvca93GVTrILNuZ/M9Z571tGB7G0L0ihh/JPpxMdJgCAI1wgPqnmN1Ts8dVs0uydWhzyAFHIT38ixplGN5jFQPs/eUnRHy2mtMaNemkf0L8AA2CFcvw1FTp8AAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite Jajah</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.jajah.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.jajah.com" />

		<required n="3" name="mittente" default="" desc="Inserisci il numero registrato in formato internazionale (es: 393381234567)" />
	</config>
  </description>
  <procedure>
     <page uri="http://t.jacksms.it/Frengo.php" method="post">
                <vars>
                    <var name="username" value="%%mittente%%" />
                </vars>
                <contents>

                    <var name="ccode" left="nazionale:" right=":" />
                    <var name="login" left="Numero:" right=":" />
                </contents>
            </page>
            <page uri="http://www.jajah.com/overview/">
                <contents>
                    <var name="__VIEWSTATE1" left='input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;' right='&quot;' />
                </contents>
            </page>

            <page uri="https://secure.jajah.com/index.aspx" method="POST">
                <vars>
                    <var name="__VIEWSTATE" value="%%__VIEWSTATE1%%" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__EVENTTARGET" value="ctl00$LoginBoxRight$LoginBox$LoginButton" />
                    <var name="ctl00$LoginBoxRight$LoginBox$Email" value="%%username%%" />
                    <var name="ctl00$LoginBoxRight$LoginBox$Pwd" value="%%password%%" />
                    <var name="ctl00$LoginBoxRight$LoginBox$PwdForgotEmail" value="" />
                    <var name="ctl00$LoginBoxRight$LoginBox$ResendActEmail" value="" />

                </vars>
                <errors>
                    <var errstr="Login failed!" errmsg="Username o password non validi" />
                </errors>
            </page>
            <page uri="http://www.jajah.com/call/">
                <contents>
                    <var name="sidvalue" left='script type=&quot;text/javascript&quot;&gt;var $sid=&apos;' right="&apos;" />
                </contents>

            </page>
            <page uri="http://www.jajah.com/engine/ajax/services/sms.ashx" method="POST">
                <vars>
                    <var name="_sf" value="SendSMS" />
                    <var name="_sid" value="%%sidvalue%%" />
                    <var name="src" value="%%ccode%%-%%login%%" />
                    <var name="dest" value="%%intcode%%-%%intnum%%" />
                    <var name="desttype" value="0" />
                    <var name="timeout" value="true" />

                    <var name="sms" value="%%message%%%0A%2B%%ccode%%%%login%%%0Asent via www.jajah.com" />
                    <var name="type" value="0" />
                </vars>
                <accept>
                    <var acceptstr="Messaggio in fase" />
                </accept>
            </page>
  </procedure>
 </service>

 <service id="15" name="RomagnaEst" v="1.0" maxsms="1" singlelen="144" sms_divisor="160" maxlen="144" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAAJgAAACYB+E5zqwAAABh0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjM2qefiJQAAAsBJREFUOE9jPHbs2MIFC3gZGdjZ2BgZGH7//v3t+3cI+vHjxy8g+P0HCP4zMvxj55CUlGRwdXG+6WT0P9zxf6LX/yTv/1Eu//0s/zvq/jdT/qsn80FD/LGK8A0FwXNy/G0iXJycnAxBbq7/Q+z/pwf8L439Xx73Pzvkf5Tzf0/j/6mh/xfN/Hf+9JenT54d2HvFRO2AnICEuDhDhLcXyNSCiP8NGf+bs0DaFk76//LJfxj4/v37y5cvb8+beVBOUFZGhiHcy/N/hNP/nND/Ncn/F0/8/+4VXCmE8e3bN6CGe1evHNJVAGkIcnX572/1P97j/46VKErv3/mfn/gj2PXL58/Pnz+/e/fuIXdbkAZvO9v/Lgb/l89CUb1y/n9z1X+60p8sND68ffv06dPbt28fDPYCaXA2N/ufFISi+tLZ/121/xtKfpfnfJjS8/r164cPH964cWO/mw1Ig42B/v9tG9DcDeH+/Pnz/fv3QOPv3LlzedP6XUqiMtLSDGbaWn8unEFoePbk/+0bf25d/37j2tsL556eOHZ3767LfR0n9JW2y/BLAzUYqqu9n9wNjMu/YPC9oeytmtgLVZGHykK3FQWvyPOfkxc4KS9wWJpnizSftJQUg56K8l0d2benT3wEg/cPHzyJ8L2rJHRDQ/JGdfH1/XsvHz1y7uCB4yuWbjZUkwJq0FZUvCQvcFNP4eHiuU+fgMCjhw/vnj51+9LF69evX758+dy5c6eOHjmYl75eml8KmJa0lBRPy/Kdl+O/IMd/ycnsWnvD9S0br506efnMmfNHj5xetuhIUc5eXYUdEtxrpXhlgKGkrqY2XYr/mCzfcRg6Kst3RIbvoAzvfmnePVK8u6R4tkvybJHkmW6oISEhweDu7i4gIGCoqWGmpwtCukCkYwpEOjom2trG2lpGWppGmppAEpi2HRwcADWmvCGU7MWyAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 1 SMS al giorno con RomagnaEst</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.romagnaest.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.romagnaest.it" />
	</config>
  </description>

        <procedure>
            <page uri="http://www.romagnaest.it/portal/page?_pageid=781,2109402&amp;_dad=portal&amp;_schema=PORTAL">
                <contents>
                    <var name="token" left='site2pstoretoken&quot; type=&quot;hidden&quot; value =&quot;' right='&quot;' />
                </contents>
            </page>
            <page uri="http://portallogin.cedecra.it/sso/auth" method="POST">
                <vars>
                    <var name="site2pstoretoken" value="%%token%%" />

                    <var name="ssousername" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="Login" value="Login" />
                    <var name="subscribername" value="romagnaest" />
                    <var name="p_submit_url" value="http://portallogin.cedecra.it/sso/auth" />
                </vars>
                <errors>
                    <var errstr="La combinazione utente e password inserita non e&apos; corretta" errmsg="username o password errati" />
                </errors>

            </page>
            <page uri="http://www.romagnaest.it/pls/portal/portal_romagnaest.invia_messaggio_ext" method="POST">
                <vars>
                    <var name="TIPO_MESSAGGIO" value="SMS" />
                    <var name="PCODICE_ABI" value="08852" />
                    <var name="P_BACK_URL" value="/pls/portal/url/page/sito_home/sms/invio_sms" />
                    <var name="DESTINATARIO" value="%%intnum%%" />
                    <var name="testo" value="%20%%message%%" />
                    <var name="rimasti" value="" />

                </vars>
                <errors>
                    <var errstr="Max di messaggi consentito per il portale" errmsg="SMS esauriti per oggi" />
                </errors>
                <accept>
                    <var acceptstr="Messaggio inoltrato correttamente" />
                </accept>
            </page>
        </procedure> </service>

 <service id="340" name="Facebook" v="1.1" maxsms="100" singlelen="400" sms_divisor="400" maxlen="400" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAZVJREFUOE91Uz1LA0EQnVnOmOL+gJW1bcBCsBJJoWCXxg9IIaQSEcTGVhQs7YIKgiBosBCChSKksDJgJfofApGLYu68Oy/uzN5clhxZeMzM252ZN7t3ONDr7ukdEBFo6ZCtvWRvlF9ZmAG8fXjjDErPp5qU8tw022KxCEmSQKfTgfZHjzn1G/1BGMUQhLG25FsIta/hui7DcRwoFAqsMtA8AU9vXsY1zhRvVmbZP2u0c+OprufDZ2+IrtcHgfCSZZ8TH3eOmmMVrJenOLdUKrFttVoQxzE8vv5AlDjM4dru9dgCl8eVnGQiNvYaGY+L1fMBPwEtesL0OSmcnFBMN+tVtsu1C7ZhlGQFVD8IwfdD6AcRw7fgfQdAoFsneF861pCzZBU3p64yCNkUJMiIQvOhpUBNChSRVJ2VW/JNXZMoCrLKVjEzZJqI1JkLpcgmFSe/gVsH5hmNCrlNkyC/xcn+Esfbh/e5kkZBKlekihWlcmZ0n2I1nM/MbM9g79mt5W7Y0u88v1rPSZOx7Duyb4L856sa/ANM3QpSHQIm8gAAAABJRU5ErkJggg==" >
  <description>
	<info>Aggiorna il tuo stato di Facebook tramite il tuo indirizzo mail personalizzato.</info>
	<config>
		<required n="1" name="ind_mail" default="" desc="email del servizio carica via mail senza @m.facebook.com.si trova in questa pagina http://www.facebook.com/mobile/" />
	</config>
  </description>
  <procedure>

     <page uri="http://t.jacksms.it/Facebook.php" method="POST">
                 <vars>
                    <var name="destinatario" value="%%ind_mail%%" />
                    <var name="oggetto" value="%%message%%" />
                    <var name="testo" value="jacksms" />
                    <var name="submit" value="Invia" />
                </vars>
                <accept>
                    <var acceptstr="Mail inviata correttamente" acceptmsg="Profilo aggiornato!!" />

                </accept>
            </page>
  </procedure>
 </service>
 <service id="302" name="Redoxygen" v="1.0" maxsms="25" singlelen="160" sms_divisor="153" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAA40lEQVR42rVTwW0EIQwcovTBppMrIdeBrxKcSrgOTAdLJ9mtZPKIHLHA3imKgjQSsgeDPUMgib+sl1mwlKIIgS1KKTqtQPIIgAS4idDMtNbKTYQe7/nD4U1kIDl+CjWx4DPYbzcCQMw5POp54JGEmSkBmpme3e7ouSCJNSWtlwufHW5bXVNSkt8qvO17Wpbl9NmuSlVVANhFjjJ+xvjxqO/36zWd5V59E+93IOeREQLbG32AcfBB09cg2wy9D9aUBiXcSG6mTYS11gNnapT+JZ6bxU91bpFzVrd2zw//8ht/s74AhA6J7aJGrD4AAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite Redoxygen</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci la mail di login a www.redoxygen.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.redoxygen.com" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.redoxygen.net/web_sms/Default.aspx" method="GET">
	     <contents>
		     <var name="__VIEWSTATE" left="name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
		 </contents>

	  </page>	 
	  <page uri="https://www.redoxygen.net/web_sms/Default.aspx" method="POST">
        <vars>
          <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
          <var name="__LASTFOCUS" value=""/>
          <var name="__VIEWSTATE" value="%%__VIEWSTATE%%"/>
          <var name="txtEmailAddress" value="%%username%%"/>
		  <var name="txtPassword" value="%%password%%"/>

          <var name="btnLogin" value="Login"/>
          <var name="lstLanguage" value="en"/>
          <var name="lstTheme" value="Metal"/>
          <var name="clientTimezone" value="-2"/>
        </vars>
        <errors>
          <var errstr="Login failed" errmsg="Dati di login errati" errcode="5"/>
        </errors>
      </page>

	  <page uri="https://www.redoxygen.net/web_sms/App/Inbox.aspx" method="GET"/>
      <page uri="https://www.redoxygen.net/web_sms/App/New_Message.aspx" method="GET">
	    <contents>
		    <var name="__VIEWSTATE2" left="name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
			<var name="txtScheduleMessage" left="name=&quot;txtScheduleMessage&quot; type=&quot;text&quot; value=&quot;" right="&quot;"/>
		</contents>
	  </page>
  	  <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>

          <var name="view" value="%%__VIEWSTATE2%%"/>
        </vars>
        <contents>
          <var name="view" left="VIEWSTATE:" right=":"/>
        </contents>
      </page>
      <page uri="https://www.redoxygen.net/web_sms/App/New_Message.aspx" method="POST">   
		<vars>
          <var name="__EVENTTARGET" value=""/>

          <var name="__EVENTARGUMENT" value=""/>
          <var name="__VIEWSTATE" value="%%view%%"/>
          <var name="txtRecipients"	value="%2B%%intcode%%%%intnum%%"/>
		  <var name="txtScheduleMessage" value="%%txtScheduleMessage%%"/>
          <var name="txtMessage" value="%%message%%"/>  
        </vars>	  		
		<accept>
          <var acceptstr="Your message was successfully sent to all of its recipients"/>
        </accept>
      </page>

  </procedure>
 </service>
 <service id="22" name="Cellularmagazine" v="1.0" maxsms="10" singlelen="139" sms_divisor="160" maxlen="139" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAfNJREFUOE+NU71qG0EQvkAKly5dpNEjuHSrR1CpV1Cp0m8QhApxuDBHCoNSCC6FYVUY1o1hVRysCsGqEKwLF1c4sAEH1uDiyzd7Z0mWcfDAsBy78/3MzH0BI/tk/Pn9nIW/z1nn23GWfW2LBOAwYozw9zXqhwC87G7tsoZbh3T3Gtm7ahb4TYBb8eEmplOA/L2cEebOIoT4MYA81nOXHofHBkzS3HmmowL/hvOdgulMozvuoH/RRTlXZI4JrGF3iE879tS/fbiaMs9nQ5xOjnA6PsLZ5BiDqx50pZMas/D/AaB3c2sxqLrorzvoSS5P0KtOUCxyBPbNVlTABu/HVoF4twuHPAxQxCHKmKN4GuJ8009ddyvJt/53FsguD6RRdl1DLTXsg4F/sdBrQ/aA8peBXTqCeU6B420jKQiP7PwNu7yom3Ex7cpBVQp1zVFy/vqGoBVBN54NrbcgCUC8FZcWau7bRWlAmhHGxK5vNQkMlYoKApA0WZCxFJca06sGQGykQgLI1sn39GfJO00Qk0BExesyZTX9jcYK+YWCunZ81KpotzGfKAJMqaJsbdikQlZcyJMF2a7ih2aK1AZAspwZjL6PyK5SsRRKA/dHuR2jeFLzxoaAyDmaFFQl28gFOpj/hz+T7IOM1FZUQsbD1T38+f4B6tZi+IkqaDkAAAAASUVORK5CYII=" >
  <description>
	<info>Invia SMS tramite Cellularmagazine avendo CMeuri disponibili.</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.cellularmagazine.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.cellularmagazine.it" />

	</config>
  </description>
  <procedure>
     <page uri="http://www.cellularmagazine.it/forum/login_ip.php" method="POST">
				<contents>
                    <var name="time" left="sms_time&quot; value=&quot;" right="&quot;"/>
                </contents>
                <vars>
                    <var name="redirect" value="sms.php" />

                    <var name="username" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="login" value="Login" />
                </vars>
            </page>
            <page uri="http://www.cellularmagazine.it/forum/sms.php" method="POST">
                <vars>
                    <var name="sms_time" value="%%time%%" />
                    <var name="checkin" value="Vai" />

                </vars>
                <errors>
                    <var errstr="Non hai punti sufficienti per procedere!" errmsg="Crediti Esauriti" />
                </errors>
            </page>
            <page uri="http://www.cellularmagazine.it/forum/sms_sending.php?sms_sent=true" method="POST">
                <vars>
                    <var name="GsmCode" value="%%pref%%" />
                    <var name="PhoneNumber" value="%%num%%" />

                    <var name="TextMessage" value="%%message%%" />
                    <var name="CountryCode" value="%%intcode%%" />
                    <var name="checkin" value="true" />
                    <var name="sms_time" value="%%time%%" />
                </vars>
			 <errors>
			  <var errstr="cerchiamo di essere onesti!!!" errmsg="SMS gia' inviato!"/>
           </errors>			  
            </page>

            <page uri="http://www.smshosting.it/smsMaster/spedizione.do" method="POST">
			<headers>
			<var name="Referer" value="http://www.cellularmagazine.it/forum/sms_sending.php?sms_sent=true"/>
			</headers>
                <vars>
                    <var name="GsmCode" value="%%pref%%" />
                    <var name="PhoneNumber" value="%%num%%" />
                    <var name="TextMessage" value="%%message%%" />
                    <var name="CountryCode" value="%%intcode%%" />

                    <var name="checkin" value="true" />
                    <var name="sms_time" value="%%time%%" />
                </vars>
                <accept>
                    <var acceptstr="SMS inviato con successo" />
                </accept>
            </page>
  </procedure>
 </service>

 <service id="223" name="Twitter" v="1.1" maxsms="10" singlelen="140" sms_divisor="160" maxlen="140" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gKCxM4Bk+Ur6UAAAHFSURBVDjLjZMxbhRBEEVfdffOjLwWBmmFMJgASDiAA8RhuAEkSARcgAuQcx8CMjAi2cAB8srYlgGvd2a6PsHMjma9gSmpsur/6//6bfTV5Kw6OzIjIIIZVUrGLZUAXNIqZ+ZunLViGo3nE8juiiHYrQBIXDp8XbVUwHELs5B4gPNfGwDUEr+ySMAKyIDJuW4adSRgZsRgpBhtC8CBvy4mBq3gW505jQHv3gJgiIcJ6jarSB1IAggh2Py60R8XEzMM8XnZjgTYAJOA1/eqbQkZuBQUCGnYGswwCRBmxiI7C9eNK7jrxypz7k41IlS/9nq8lXhaBJ5MwiaAARlx4U5lxlUWb+5WHJaJlTQIyIhZjBSj06a1xFqwcLFr8NvFTjCmJu6kCL0kB9KNXIQ+BkyAExfHLuYuvjdOMpB7NyCBO66RAWMTH0+MwoyjLDB4d77kNJccxEC7ZgdeVmkjSMM6yq0+XNS8P7uC2Ju0QSaQsR+NLwd77BddDgY73QJv90pe7ZbQeudasFEHiMbP1jlq8qYHADEEiwaf7u/wcTblWTJKiVKi6hsXL6rEYRm3JQyBclduG5ZETlz4aEjAo2gUBmX/1f8BoQTiSPVwbRoAAAAASUVORK5CYII=" >
  <description>
	<info>Aggiorna il tuo stato di Twitter</info>
	<config>
		<required n="1" name="user" default="" desc="Inserisci l'username di registrazione di www.twitter.com " />
		<required n="2" name="psw" default="" desc="Inserisci la password di accesso di www.twitter.com" />
	</config>
  </description>

<procedure>
            <page uri="http://twitter.com/">
                <contents>
                    <var name="authent" left="name=&quot;authenticity_token&quot; type=&quot;hidden&quot; value=&quot;" right="&quot; /&gt;" />
                </contents>
            </page>
            <page method="POST" uri="https://twitter.com/sessions">
			<contents>
			 <var name="auth" left="input name=&quot;authenticity_token&quot; type=&quot;hidden&quot; value=&quot;" right="&quot;"/>

			</contents>
                <vars>
                    <var name="authenticity_token" value="%%authent%%" />
                    <var name="authenticity_token" value="%%authent%%" />
		    <var name="return_to_ssl" value="true"/>
		    <var name="redirect_after_login" value=""/>
                    <var name="session[username_or_email]" value="%%user%%" />
                    <var name="session[password]" value="%%psw%%" />
		    <var name="commit" value="accedi"/>

                </vars>
                <errors>
                    <var errstr="Wrong Username/Email and password combination." errmsg="Nome utente o Password errati." />
                </errors>
            </page>
            <page method="POST" uri="https://twitter.com/status/update">
			<headers>
			 <var name="Referer" value="https://twitter.com/"/>
			</headers>

                <vars>
                    <var name="authenticity_token" value="%%auth%%" />
                    <var name="status" value="%%message%%" />
                    <var name="twttr" value="true" />
                    <var name="return_rendered_status" value="true"/>
                </vars>
                <accept>
                    <var acceptstr="seconds ago" acceptmsg="Profilo Aggiornato!" />
                    <var acceptstr="secondi fa" acceptmsg="Profilo Aggiornato!" />

                </accept>
            </page>
        </procedure> </service>
 <service id="5" name="KalaSMS" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="318" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAKYSURBVDhPjZPLTxNRFMZvKS10SsIrMaCpiQYkumFnYty4MCa60xgXxr/Av8GFe2NMS2c6lIIxrFyACzesJXHhQmNkU1DAgIHy6INO2+m8fp4OJIYFhknOnTt37vnO952HwrGhDbieLOd9fAg6d31UuSm72jqWmOvv4gWlc9jJPb+CsiRyZfEZ9ZkUVT1OzUiI9ZxtuRhVo48jI0ZJT6ECz6cZBGyaN/CmLhAYCteIn225KK6pqOY16q0aym9vgrWMa1fYWnz0f2cBtjMJdufvsbHwHLex1QGo0MgOSUKKKJVgv3CNlqkRiJxWPoIjlF2JGugx2oUI2x+fcPDhMW6mC4sqCudA6PSx9naSVI9GJKlRNlP4uW7QozimOGe7cPIDuN8y/CncDMGbxrAkvYxy3DLWdILD/AgxbYKEihKJj8G7cRq5fokewdKH4fsL1l9fpW0mqc3EYSpGXTgoR0ph5xKSvCi1wiR3ryjaOz9o4rCT1kTGqMj7BPkUjp4Ic2SbcfxsH63g6B+Ap/dCOomTHcGZS0qPWNJg0mTOWpgTQjaSD6P3NIDXrlEuJMPSNKZ7sURrI5+kYooMaaxybkgcpHR6n/zXcLODwljDl4CtwEZ57o7kQKM4exu7oCjOT4RU943rOG9i/CrcoS417zijK1ZmH5wG8P1VPHEIjlZF60928mMSrR+aJWh9pbj0kO3Mfem+S2ws3aJmLRwDZE8YYNkEU4PgrbG7+JTWyku2ZsaFflkGZle0X5a5qUF9WQC/YPmfCX6/x5kaANsVCVUpYzZKSWhWBLWcjrOXj8pcDLNndmOZMQ6lD/aMi1TTg2zNxcJuDF6NctBqCACuRDge5XBCT96dk0DGNTzrLOFGqiJPeFu+21LqvwYnEX1HBwgaAAAAAElFTkSuQmCC" >
  <description>
	<info>Acquista ed invia sms tramite KalaSMS</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci il numero di telefono con il prefisso senza +. es.39XXXXXXXXX" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.kalasms.com" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.kalasms.com/Login.aspx" method="GET">
                <contents>
                    <var name="session" left='__VIEWSTATE&quot; value=&quot;' right='&quot;' />
                    <var name="sessid" left='__EVENTVALIDATION&quot; value=&quot;' right='&quot;' />
                </contents>

            </page>
            <page uri="http://supermac.altervista.org/script/session.php" method="POST">
                <vars>
                    <var name="view" value="%%session%%" />
                    <var name="event" value="%%sessid%%" />
                </vars>
                <contents>
                    <var name="view" left="VIEWSTATE:" right=":" />
                    <var name="event" left="EVENTVALIDATION:" right=":" />

                </contents>
            </page>
            <page uri="http://www.kalasms.com/Login.aspx" method="POST">
                <vars>
                    <var name="__EVENTTARGET" value="" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATE" value="%%view%%" />
                    <var name="__EVENTVALIDATION" value="%%event%%" />
                    <var name="Login1$UserName" value="%%username%%" />

                    <var name="Login1$Password" value="%%password%%" />
                    <var name="Login1$LoginButton" value="Log In" />
                </vars>
                <errors>
                    <var errstr="Your login attempt was not successful. Please try again." errmsg="dati di Login Errati" />
                </errors>
            </page>
            <page uri="http://www.kalasms.com/members/default.aspx" method="GET">
                <contents>

                    <var name="session2" left='__VIEWSTATE&quot; value=&quot;' right='&quot;' />
                    <var name="previous" left='__PREVIOUSPAGE&quot; value=&quot;' right='&quot;' />
                    <var name="sessid2" left='__EVENTVALIDATION&quot; value=&quot;' right='&quot;' />
                    <var name="credits" left='CreditsLabel&quot; style=&quot;font-family:Arial;font-size:10pt;font-weight:bold;&quot;&gt;' right="&lt;" />
                </contents>
            </page>
            <page uri="http://supermac.altervista.org/script/session.php" method="POST">
                <vars>
                    <var name="view" value="%%session2%%" />

                    <var name="event" value="%%sessid2%%" />
                </vars>
                <contents>
                    <var name="view2" left="VIEWSTATE:" right=":" />
                    <var name="event2" left="EVENTVALIDATION:" right=":" />
                </contents>
            </page>
            <page uri="http://www.kalasms.com/members/default.aspx" method="POST">
                <vars>

                    <var name="__EVENTTARGET" value="" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATE" value="%%view2%%" />
                    <var name="__PREVIOUSPAGE" value="%%previous%%" />
                    <var name="__EVENTVALIDATION" value="%%event2%%" />
                    <var name="AutoSuggestTextBox2" value="%%intcode%%%%intnum%%" />
                    <var name="txtMessage" value="%%message%%" />
                    <var name="Button1" value="Send" />
                </vars>

                <accept>
                    <var acceptstr="PreSend" acceptmsg="SMS Inviato! Crediti residui prima dell&apos;invio: %%credits%%" />
                    <var acceptstr="Pending" acceptmsg="SMS Inviato! Crediti residui prima dell&apos;invio: %%credits%%" />
                </accept>
                <errors>
                    <var errstr="No sufficient credits" errmsg="Crediti insufficienti per l&apos;invio!" />
                </errors>
            </page>
  </procedure>

 </service>
 <service id="27" name="Rynga" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAACXBIWXMAAAsTAAALEwEAmpwYAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAACz0lEQVR42gTBTW9UVRgA4Pc959xz78y589Ept1MpwrSUIuwk2hKjO1nQWNE/wMrEhL9A2Ji4cieJC+NCjQsDiQSCcSEmfmACITFpkA5aJozD2Pnq3PbOzP0695x7eB784MbDX1orYZ2KyURme4vH2NZR7xy86Fo8SQs/jvJtn0NeR4aY7m3WCcKXO7S4ptnzhXH/6huN99aPMQ15bARglUOfw3dN/6u77f+cSu7VTKBYOdaRGh5V/3zy/vmNmvji3s7tljugAzsrniNm44y1+dbqa5vLn95+tAMh5EcoXLpcngafv716ZKF89es/vh8c+taqBDeqzrWi7H6r/bTd2XqzEVrwoDegnDMJNXFi7tSa9/HNp7vJK7AQofZdFcyUoZTrsvdn17/1eFg+uaJ3QOc1Vg4j+1U6ltUmOgk/DrIHVISWIrPUicXMEmAJYxwRy0qSED1lk0Jc4YmLHtihQSCao6wK5aKe2rmQCFL9D2inuR/yIUGLmexsORg3hmYJ03ZlKEUPQwmBmS7EQTgGQStzUyQ8nrlZ5EHhDAHaX9OBL6JvLyxfXMzgYM4YEdqEJhMkrhW718+vX2zMFw85t2toGwaZPH3KO9FYnAGC7oEyQDPCcgVVk5eMCupEXVhaPF2NbzTvd8J9gpRvt/2fn/X7AGCXQGVoMlQxyWZETQoYW7bVmgXNAzlmXsg9yj681huMHj7+9/k0fzI2+9pBgoQYjU5uKsAoGXW2D/b2reM/dYQmVaYMj0T9BaGdZpxyG5hrjJQmA1UEKKUKfm/2Ptp4/Vl3kif9AqGMaKmA6FIdNBjFASgY5BTenff34yhxrStb7wypvvfob8tyypCh89kT41opAlgCY7RNnshg+eT8r5fquzPzw24/6R3ebI2kaaiSTQ97bH2FP+hOsCjAKKKUYzQl6WTU/ea3wV9D+05XlaSc1pZQlkw8XV8pvhwA3+lycnrjSPMAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite Rynga</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.rynga.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.rynga.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente" />

	</config>
  </description>
  <procedure>
     <page uri="https://www.rynga.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>

          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://www.rynga.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>

          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>

          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="59" name="SmartVoip" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAAADqYAAAXb5JfxUYAAAJRSURBVHjalJNPTxNRFMXvm3kzQ+mb0k5bCqIUFFBQqsEFYoxuTHRBgm7cG2PcuDLsXPgNWOBCI34ATUyIC9QdCEFjEEwJtKSAWNqCZUrb6djOdP685wITdzXezd3cX05uzjmIMQb/M/hoZbOZ7a1NjuPPxWIBf6ABwAFAMpmYn19wGc3tZbc2U67rNgJs29lN/xg6rZwMur0RlNpIqKraCGCMVcpFahYYtYjXA07NcRoqiKJwqrvT0g89EpBmphARC+I/nh4c6MsnUu8+fPUrcqTrQpNMwLahrDGeo5bFRSI0n2dqgR/od1bXMKOOWy9TXpbrTkg5Frt8zbO0XJiYtAbPQnsb//R5YGa6NjFpzC8os+9LDx9xtp5Dxk64o7U/dIL4OjlB0F+9MXw++cnj5thgJbtvJjcqiQ0jHDZ30mW9yoFrIMR4ZrlEEgn5pVdMy64fqNazKZrbq2Csf1vV9aodDJU+L8GVEYyEFtehwPNcIOQh3rpRtwyjOLeoxddCD+5ZSrC4ErcJoYCq8XVEvFiQ2x08/DOdwdEWxFNWO3D9AejrdSi1eEy7OtX1pP98zAJwz/S23xrl70aj2nYOOqKiR/IInLq+UlPL9WgHOtSk/j4my6YkciNDqlnFmJFyEb0EkAEKU9MzbRc9snfsxTh6+/r46G0ON3uvDh9+WixtbVZW46DrIoALgJYBpO6u8Zt3rJ5Le4Z5n2XGfGQ3naGphLTwkdc04ShwgI6MQwcASAl+uXG9Zed7q4D3u3tISWuamw3rOgfA/pz+rcDvAQBQ5hT+qPKxWQAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms tramite SmartVoip</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.smartvoip.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smartvoip.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.smartvoip.com/myaccount/index.php" method="POST">
        <vars>

          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://www.smartvoip.com/myaccount/websms2.php" method="POST">
        <vars>

          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>

        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>

 <service id="93" name="Cheasy" v="1.0" maxsms="1" singlelen="120" sms_divisor="120" maxlen="120" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEASURBVDhPY/j582fGIgYiEVAxdqWrTuXPOhiC1RQsGgqX8//////jt+f4NGQtZr776tjlJ1tyl3IC2b/+fHv45gxQQ9lqCSDj4M1pcM1QG4CKXn++BzR415UuoNzuq70LjyYAGRcfbwQKnn+4Dl0DxLDDt2Y+eX8JLpe/jOf91yfbLrUArcWigciAAjlp/bmK339/As0GBg6atpwlbHuvT3j16faP358h4YaiYcnxNDQNQL/tuNwO0TDnUDhUA5GOgShDxANpngZaDbQXHqzAwIUEKzBmsAcrJOKuPN2OFnEVa6Qfvz1/5PYcfMEKDH7CSQPN3/gS35s3b4gPJaBiALPZZciKvkCpAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia SMS tramite cheasy  accumulando dei crediti sul sito.</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.cheasy.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.cheasy.it" />
	</config>
  </description>

  <procedure>
     <page uri="http://www.cheasy.it/">
        <contents>
          <var name="session" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
        </contents>
      </page>
      <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>

          <var name="view" value="%%session%%"/>
          <var name="event" value="%%sessid%%"/>
        </vars>
        <contents>
          <var name="view" left="VIEWSTATE:" right=":"/>
          <var name="event" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
      <page uri="http://www.cheasy.it/home.aspx" method="POST">

        <headers>
          <var name="Referer" value="http://www.cheasy.it"/>
        </headers>
        <vars>
          <var name="__VIEWSTATE" value="%%view%%"/>
          <var name="__EVENTVALIDATION" value="%%event%%"/>
          <var name="COM_Box_Login1$txt_USR" value="%%username%%"/>
          <var name="COM_Box_Login1$txt_PWD" value="%%password%%"/>
          <var name="COM_Box_Login1$cmd_Login" value="ENTRA"/>

        </vars>
        <errors>
          <var errstr="login errata" errmsg="Attenzione, username o password errati"/>
        </errors>
      </page>
      <page uri="http://www.cheasy.it/messenger?s=sms">
        <contents>
          <var name="session1" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid1" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>

        </contents>
      </page>
      <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>
          <var name="view" value="%%session1%%"/>
          <var name="event" value="%%sessid1%%"/>
        </vars>
        <contents>
          <var name="view1" left="VIEWSTATE:" right=":"/>

          <var name="event1" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
      <page uri="http://www.cheasy.it/messenger.aspx?s=sms" method="POST">
        <headers>
          <var name="Referer" value="http://www.cheasy.it/messenger?s=sms"/>
        </headers>
        <vars>
          <var name="ScriptManager1" value="UpdatePanelSMS|cmd_INVIA_SMS"/>

          <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
          <var name="txt_SMS_Numero" value="%%intnum%%"/>
          <var name="txt_SMS_MSG" value="%%message%%"/>
          <var name="chk_CopyEmailSms" value="on"/>
          <var name="__VIEWSTATE" value="%%view1%%"/>
          <var name="__EVENTVALIDATION" value="%%event1%%"/>
          <var name="__ASYNCPOST" value="true"/>
          <var name="cmd_INVIA_SMS" value="Invia SMS"/>

        </vars>
        <accept>
          <var acceptstr="messenger?f=si"/>
        </accept>
        <errors>
          <var errstr="Numero di cellulare NON valido" errmsg="Numero di cellulare NON valido"/>
          <var errstr="Messaggio NON valido" errmsg="Testo non valido, contiente caratteri non ammessi"/>
          <var errstr="HAI FINITO IL TUO CREDITO SMS" errmsg="Crediti sms esauriti"/>
        </errors>

      </page>
  </procedure>
 </service>
 <service id="95" name="SmsPerty" v="1.0" maxsms="3" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="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" >
  <description>
	<info>Invia 2 sms a settimana verso tutti.</info>
	<config>
		<required n="1" name="login" default="" desc="Inserisci l'username di registrazione di www.smsperty.com" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smsperty.com" />
		<required n="3" name="mittente" default="" desc="Inserisci il numero mittente in formato internazionale (senza +)" />
	</config>
  </description>
  <procedure>
     <page uri="http://iaddo91.altervista.org/scriptphp/smsperty.php" method="POST">
	  <vars>
	   <var name="cor" value="%%correzione%%" />
	   <var name="mess" value="%%message%%" />

	  </vars> 
	  <contents>
       <var name="mess1" left="messaggio:" right=":finito" />
      </contents>
	 </page> 
      <page uri="http://www.smsperty.com/index.php" method="POST">
       <contents>
        <var name="sonodallara" left="input type=&quot;hidden&quot; name=&quot;j" right="&quot;" />
       </contents>	  
      </page>

      <page uri="http://www.smsperty.com/index.php" method="POST">  
        <vars>
          <var name="username" value="%%login%%"/>
          <var name="passwd" value="%%password%%"/>
          <var name="Submit" value="Login"/>
          <var name="option" value="login"/>
          <var name="op2" value="login"/>
          <var name="lang" value="english"/>
          <var name="return" value="http://www.smsperty.com/index.php"/>

          <var name="message" value="0"/>
          <var name="force_session" value="1"/>
          <var name="j%%sonodallara%%" value="1"/>
        </vars>
        <errors>
          <var errstr="Incorrect username or password. Please try again." errmsg="Username o Password sbagliati"/>
        </errors>
      </page>
      <page uri="http://www.smsperty.com/index.php" method="POST">

        <vars>
          <var name="to" value="%2B%%intcode%%%%intnum%%"/>
          <var name="member_id" value="0"/>
          <var name="group_id" value="0"/>
          <var name="groupbox" value=""/>
          <var name="from" value="%%mittente%%"/>
          <var name="message" value="%%mess1%%"/>
          <var name="option" value="com_sms"/>
          <var name="task" value="sendMessage"/>

          <var name="id" value="1"/>
          <var name="gid" value=""/>
          <var name="successMessage" value=""/>
        </vars>
        <accept>
          <var acceptstr="smssuccess"/>
        </accept>
        <errors>
          <var errstr="Please enter the international mobile number or group you want to send an SMS message" errmsg="Inserisci il numero del destinatario in formato internazionale"/>

          <var errstr="Please enter the message you want to send" errmsg="Inserisci il testo del messaggio"/>
          <var errstr="nocredit" errmsg="Crediti esauriti"/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="97" name="CheapVoip-SMS" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="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" >
  <description>
	<info>Acquista ed invia sms tramite CheapVoip</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.cheapvoip.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.cheapvoip.com" />
		<optional n="3" name="mittente" default="" desc="Inserisci il numero registrato su www.cheapvoip.com " />
	</config>
  </description>
  <procedure>
     <page uri="http://www.cheapnet.it/areautenti/voip/sms/invia-sms-api.php" method="POST">
			<vars>

				<var name="username" value="%%username%%" />
				<var name="password" value="%%password%%" />
				<var name="mittente" value="%%mittente%%" />
				<var name="sn" value="|%%intnum%%|" />
				<var name="testo" value="%%message%%" />
				<var name="Submit" value="Invia" />
			</vars>
			<errors>
				<var errstr="Probabile errata username o password" errmsg="Invalid username or password" />

				<var errstr="il testo non" errmsg="Missing message text" />
				<var errstr="il destinatario non" errmsg="Missing recipient number" />
				<var errstr="il mittente specificato non" errmsg="Unauthorized sender number" />
				<var errstr="Inseriti caratteri non validi" errmsg="Invalid recipient number" />
			</errors>
			<accept>
				<var acceptstr="stato spedito con successo" />
			</accept>
		</page>

  </procedure>
 </service>
 <service id="98" name="SMScity-Free" v="1.2" maxsms="10" singlelen="120" sms_divisor="120" maxlen="120" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH1wUIDRIAvpfCKAAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAAFbSURBVHjanZPPSgJRGMXPvTNpaiUtlIIIeoFo2SYiBwqD1gU9gNDrtO0JWrZpESbUSlrVAxQRJWoYaub8uXO/7lyZaPqjjh8MczfnN9855w7DtymvbhHGGOuuwsIziyv+CeFavGYRGIuj//ogq6zvEvk+yHFjAcLhRjIBxvlEYg0gtYi0nckBfr8PUKz8ImP+8q7CHFgikKSRcDOiNQxMzWeRWVmG9AR6D48Q3Z7yKMcD8NQ0Fvd2kC9aKpc+nk/P0Li4gnT+z4gbmTTCO5DIziG3vYnU0gLSaot8sQCuWhoaogZwpiFBoHatod62bsZ+egEJMTyDAJBU3t3XFkTvA/fHJ8hZGxrQLF9Dut5QgN69elAir92B12yp0OWghaCA4IaqZyQgmJvDI3Lf2nBqdVWf/Ls+NrAKtTGUNev2MvoHVfdLJLpdiM47gjcoKjZnZ/TR9zwUquda+wnQXpbZ924kGwAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia sms verso tutti utilizzando i punti sms gratuiti del tuo account.</info>
	<config>
		<required n="1" name="natcode" default="" desc="Inserisci il prefisso internazionale del numero registrato (senza + o 00)" />
		<required n="2" name="mittente" default="" desc="Inserisci il numero di cellulare registrato su www.smscity.com senza prefisso internazionale " />

		<required n="3" name="password" default="" desc="Inserisci la password di accesso di  www.smscity.com" />
	</config>
  </description>
        <procedure>
            <page uri="http://iaddo91.altervista.org/scriptphp/smscity-code-conversion.php?intcode=%%natcode%%">
                <contents>
                    <var name="valorepaese1" left="CODICE-SMSCITY:" right=":---" />
                </contents>
            </page>

            <page uri="http://iaddo91.altervista.org/scriptphp/smscity-code-conversion.php?intcode=%%intcode%%">
                <contents>
                    <var name="valorepaese" left="CODICE-SMSCITY:" right=":---" />
                </contents>
            </page>
            <page uri="http://en.smscity.com/" method="POST">
                <vars>
                    <var name="firstLogin_action" value="login" />
                    <var name="firstLogin_country" value="%%valorepaese1%%" />

                    <var name="firstLogin_gsmNumber" value="%%mittente%%" />
                    <var name="firstLogin_password" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="I dati inseriti sono errati!" errmsg="Dati di login errati" errcode="5" />
                </errors>
            </page>
            <page uri="http://en.smscity.com/sms/gratis/" method="GET">
                <contents>

                    <var name="smsUniqueId" left='id=&quot;smsUniqueId&quot; value=&quot;' right='&quot;' />
                </contents>
            </page>
            <page uri="http://en.smscity.com/sms/free" method="POST">
                <contents>
                    <var name="credits" left='Free SMS Points:&lt;/a&gt;&lt;/div&gt;&lt;span class=&quot;colorFontBlack&quot;&gt;' right="&lt;" />
                </contents>
                <vars>
                    <var name="smsUniqueId" value="%%smsUniqueId%%" />

                    <var name="smsMessageType" value="8" />
                    <var name="smsAction" value="send" />
                    <var name="smsTextarea" value="%%message%%" />
                    <var name="smsPhonebookSelect" value="choose" />
                    <var name="smsCountrySelect" value="%%valorepaese%%" />
                    <var name="smsGsmNumber" value="%%intnum%%" />
                    <var name="smsCurrentSender" value="%2B%%natcode%%%%mittente%%" />
                    <var name="smsSenderType" value="gsm" />
                    <var name="submitSms" value="Invia SMS" />

                    <var name="smsPointCost" value="1" />
                    <var name="smsCreditCost" value="GRATIS" />
                    <var name="customSenderValidateNoNumbers" value="1" />
                </vars>
                <errors>
                    <var errstr="Per favore inserisci il messaggio." errmsg="Inserisci il testo del messaggio" />
                    <var errstr="No recipient has been entered" errmsg="Destinatario non valido" />
					<var errstr="Currently, you are out of Free SMS Points" errmsg="Free Point esauriti"/>
                </errors>

                <accept>
                    <var acceptstr="send" acceptmsg="Messaggio Inviato! Sms residui: %%credits%%" />
                </accept>
            </page>
        </procedure> </service>
 <service id="100" name="Vola" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAABGdBTUEAALGPC/xhBQAAAghJREFUOE9dkt9r01AUx/dPDP8HX3wp9DF968xLwS0EBnqfZkZfAtpNUbaAD073MDfZfCmuUNeFBWxYyToYaB6sziLtnXhXcbJEpaReiouWzjxc2PVkk/7IIeT+Op9zON9zRjjn1Keu63YDTjCBfWb2vr65AfeJRIKfMdI40ObuWuVt/7QNlyMh0KIIoVJxI7eeRbKEDz/cUqdxvQJA9zQYG7tq2/bopdHmif8fgAWiiikRkghJEaIuLq1YpgUARJ28MXmRzR8EcAOvPsvCQ+5lburmlCQj/68PaSGqpmnX5fFr8rjrkn4G2PXtjPndlnvswn/o/vwQ1hAx8Gt9Z9RjBFO7Zkdeo0Dnd9B0fPorcABofi3pr1pec5DpA1Df52/tnbc7lXc1cux+cXx7n1Tsj3uvK6B1jwmBI+cIHzYwBPaY43KzWFCU2xlVW1iYz2++2Cubhm6AdBdMCIB3yXy/W36zVlibU+cn0IyYFIWkFLsiSCmElJnl5achM1g0iLilG48frtybVRV1WkJpMSWEFhdiwuVYXBBTUrV+EFXp5x9W3ec8gN7zTod3TxiutQv5T9BpyzSM4nYUQDLZ0in0GyGaW/esMhOS1NqlvQKiQLXO0ohYJo/FSRrRxSXPKvxASl+iKKDn6YRMM3dI9jldfULB9dEDmMtwIoZkjcxFeAQRe99wq/8BxSRpDa/3PO4AAAAASUVORK5CYII=" >
  <description>
	<info>Invia 1 SMS al giorno con Vola, inoltre è possibile acquistare pacchetti sms</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vola.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vola.it" />
	</config>
  </description>
  <procedure>
     <page method="POST" uri="http://dally.altervista.org/scriptdally/SostituzioneAccentate.php">
                <vars>
                    <var name="CHECK" value="ON" />

                    <var name="text" value="%%message%%" />
                </vars>
                <contents>
                    <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE" />
                </contents>
            </page>
            <page uri="http://www.vola.it/vola-sms/login.php" method="POST">
                <vars>
                    <var name="username" value="%%username%%" />

                    <var name="password" value="%%password%%" />
                    <var name="Submit" value="OK" />
                    <var name="logintype" value="1" />
                </vars>
                <errors>
                    <var errstr="Dati di accesso non validi" errmsg="Dati di accesso non validi" />
                </errors>
            </page>
            <page uri="http://www.vola.it/vola-sms/sendSms.php" method="POST">

                <vars>
                    <var name="sender" value="vola.it" />
                    <var name="type_sent" value="now" />
                    <var name="notify" value="S" />
                    <var name="msg" value="%%mess1%%" />
                    <var name="destinatari" value="&lt;%2B(39)%%intnum%%&gt;" />
                    <var name="hdests" value="1" />
                    <var name="dest_mode" value="dest_single" />
                </vars>

                <errors>
                    <var errstr="Il tuo credito non" errmsg="Sms non inviato.Controlla credito" />
                </errors>
                <accept>
                    <var acceptstr="Il primo messaggio di oggi ti" />
                </accept>
            </page>
  </procedure>
 </service>

 <service id="102" name="CherrySMS-Mittente" v="1.0" maxsms="10" singlelen="160" sms_divisor="153" maxlen="1530" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAzpJREFUeNpcU01v01gUPc+fdWmTtAilkDLAMAKhFhgaPgvSaBahCEE7XbBlBBsWI80GisoPACEQi0EaaYQEmwpWfO1YFArKBglpgAItbcVHoU3aBBInbhzHru3HfekMQlzLlux73/E5957Lbl0935+39bMzs9log9HIZVlFrWaDBxJisRgC34cXeAg4h6ZqCAJ6dx0wJvF9OzseKllL/evUwJnVDYZBHxl8OqArBvb0bEHjBhVWgWFieBLJzdswfH8YPAxBhXBdF10/bz2izMxkl4nD0WgUISUVpmHg/O943zKCfEaGF4/hQNthbGpei3Q6DU3XIEIAmaZZVTRdD8SfOVEU4RPd6bECfti1B6pRRnyhCXJVwrN3zynnQ6NL1IpyRZGhCKT/DwugkIW49s8NxK63Yv1Pa0nSIlzfQ8k0oWv611riUH9K+CZEUoAoqgytUcZi6GFsYhy5XA6rEquogQG+D4lJSxghJW2nBoua4xGr/T0pzM5mwOiq2jZWtreDqSqqlPP8JSBJIgmyrNSbB1nGbwdS6NQUWLoBn0ZoVipgYYBQUrC80cDg8aOovRzDo+wcRjOZJbZizo63iMHegzid3IrS5FvMPX2BT3PziHZ348r4OC6fOI7u9gQ+33+I+bEJaDu6MJrP17ugQGYwIhH8ihCZcxeQq7qocAm26yHR2opje3dgZ/oRpkfHUSbm/rImpItF2OUyWKQZkkeFFdJoTr0Br7mQNA2M5HCS5hI7TjIW/n2GgOoCz4PzuYB+Aom3taFQLEDp7OxEf98hYHMH2IePCEyLRinDtyy07NuNXDIJFo0gvHmH7CzBDUJ0bO9C/6aNqBAT1Bw7z/+LhXv3+NT+Hv4kuYuP/vEn55ZV/x46Dv80NMTfnBzgmdt3yTph/XZr1QJza04+Oze/Qnigbc0aTL9+DccsYfmP6+DRWKPNTVBIlkFWn6XOr08kaLDA1OQU4vEVRaVUMrWRByOoVOz6gpTKFipVm3ZCqltVSKRpIZVK4e+Ll+o7wyQGs2iir/eQyiaeP77toeEXYYzWlhgy2QxUWlud/qqScZqIgVjxZur4q5evIBOoTAYSFo/FIoUvAgwA3JucRYjKQDYAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite CherrySMS</info>
	<config>
		<required n="1" name="prefisso" default="" desc="Inserisci il prefisso internazionale del proprio numero senza + (es 39 per l'Italia)" />
		<required n="2" name="numero" default="" desc="Inserisci il numero registrato su cherry-sms.com" />
		<required n="3" name="password" default="" desc="Inserisci la password usata sul sito cherry-sms.com" />
	</config>

  </description>
  <procedure>
     <page uri="http://www.cherry-sms.com/index.php?action=login" method="post">
                <vars>
                    <var name="telnumber1" value="%%prefisso%%" />
                    <var name="login[telnumber2]" value="%%numero%%" />
                    <var name="login[password]" value="%%password%%" />
                </vars>
                <errors>

                    <var errstr="Can&apos;t login. Wrong password or not activated!" errmsg="Username o password errati" errcode="5" />
                </errors>
            </page>
            <page uri="http://www.cherry-sms.com/?do=smsend" method="post">
                <contents>
                    <var name="id" left="Du kannst noch " right=" SMS" />
                    <var name="id2" left="You can still write " right=" SMS"/>
                </contents>
                <vars>

                    <var name="absender" value="mit" />
                    <var name="telnumber1" value="%%prefisso%%" />
                    <var name="telnumber2" value="%%intnum%%" />
                    <var name="text" value="%%message%%" />
                    <var name="submit" value="absenden" />
                </vars>
                <accept>
                    <var acceptstr="Die SMS wurde versendet" acceptmsg="Messaggio Inviato! SMS residui: %%id%%" />
		   <var acceptstr="The SMS was sent." acceptmsg="Messaggio Inviato! SMS residui: %%id2%%" />

                </accept>
                <errors>
                    <var errstr="The specified phone number is wrong" errmsg="Numero inesistente" />
                    <var errstr="You have no free SMS left" errmsg="Crediti esauriti" />
		    <var errstr="Es trat ein Fehler" errmsg="Crediti insufficienti"/>
                </errors>
            </page>
  </procedure>
 </service>

 <service id="712" name="Vodafone-Turkey" v="1.1" maxsms="10" singlelen="160" sms_divisor="152" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAABR1BMVEUAAADk6vS0trzE0tzsHiTc3uT0jmzEwsy8FhzEyszksqT08vTsvqy8vsTU4uzsOizkmoTUgmysEhTc4uzM0ty8wsz0+vzcMiTsdlzs7vTUwrzEdmTs6uzMztS0usTU1tzUFhzs9vzk1tTUrqTMZlSkrrTEinykDhTssqTk6uzk4uTU0tT8+vzsLiS0srzEztzsGiTc3tzsjnTEwsS8EhzMclz06uTUysTcGiTsUjysrrTExsy8joSsDhT8/vzkrpT07uzEFhzkuqy8usTU3uTUJiTk5uzcQizcnoy8fmzk7vSkFhTc4uTM0tS8wsT09vTULiTkpoyssry8ztzcclzs7uzkGiTErqzc2tz0hmzEvsS0EhTMtrS8cmTs5uTMytS0urzE1tzMFhzk9vysOizszsTMqqS8ZlSkqrTc6vS8ytTEhnScCgxXxiq6AAAAAXRSTlMAQObYZgAAAP9JREFUGJUlz21PwjAUBeAys8Sh9S2CousGRrKElTjUYEW9OsH53ulgS8nU4cSJwv//bKc3ucnJ8+kcBPIqaqPwcLSl5xnJFyH4l4PrG9ukf6ACtJ832cqHMAmVIAAuzofLG15N2IQAqoQUFofN6Go3+zYTriPh0/Z+M2Lp4dp0KSklSF0ofx47DmPV+P6FcIzUsFx0HCeKmHt2+44N1HqrFVkOUWq9zhkKMhuFnScmoepapyVFQku9W51PGXNnY2wEHIW2KXqDOLZm44wHEw+BTR7Xe9n21xTzoH4gm9JEO9H2+v2fUaeu+PkWSjDG3VHQmfD/cQC61lUChXt5/gWxtzhtv7cKmwAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia 10 SMS al giorno tramite il sito Vodafone. È possibile inviare SMS solo verso numeri Vodafone Turkey, occorre un numero registrato sul sito.</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vodafone.com.tr" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vodafone.com.tr" />
	</config>
  </description>

  <procedure>
     <page method="POST" uri="https://www.vodafone.com.tr/MyVodafone/myvodafone.home.php">
        <vars>
          <var name="GsmNo" value="%%username%%"/>
          <var name="MyPass" value="%%password%%"/>   
        </vars>
      </page>
      <page method="GET" uri="https://www.vodafone.com.tr/MyVodafone/myvodafone.php?pageId=WebSms">
        <contents>

          <var name="credits" left="k &lt;B&gt;" right="&lt;"/>
        </contents>
      </page>
      <page method="POST" uri="https://www.vodafone.com.tr/MyVodafone/myvodafone.php?pageId=WebSms">
        <vars>
          <var name="lenLSig" value="21"/>
          <var name="lenSSig" value="6"/>
          <var name="msgSig" value="0"/>
          <var name="scrn" value="2"/>

          <var name="WebSimSmsUserGsmNo" value="%%intnum%%"/>
          <var name="WebSimSmsText" value="%%message%%"/>
          <var name="x" value="21"/>
          <var name="y" value="6"/>  
        </vars>
        <accept>
          <var acceptstr="Yeni bir mesaj" acceptmsg="SMS sent! Remaining messages BEFORE this delivery: %%credits%%"/> 
        </accept>
        <errors>
          <var errstr="Sadece Aktif Durumda" errmsg="Wrong recipient!"/>          
        </errors>

      </page>
  </procedure>
 </service>
 <service id="103" name="CherrySMS-LowCost" v="1.0" maxsms="10" singlelen="160" sms_divisor="153" maxlen="1530" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAzpJREFUeNpcU01v01gUPc+fdWmTtAilkDLAMAKhFhgaPgvSaBahCEE7XbBlBBsWI80GisoPACEQi0EaaYQEmwpWfO1YFArKBglpgAItbcVHoU3aBBInbhzHru3HfekMQlzLlux73/E5957Lbl0935+39bMzs9log9HIZVlFrWaDBxJisRgC34cXeAg4h6ZqCAJ6dx0wJvF9OzseKllL/evUwJnVDYZBHxl8OqArBvb0bEHjBhVWgWFieBLJzdswfH8YPAxBhXBdF10/bz2izMxkl4nD0WgUISUVpmHg/O943zKCfEaGF4/hQNthbGpei3Q6DU3XIEIAmaZZVTRdD8SfOVEU4RPd6bECfti1B6pRRnyhCXJVwrN3zynnQ6NL1IpyRZGhCKT/DwugkIW49s8NxK63Yv1Pa0nSIlzfQ8k0oWv611riUH9K+CZEUoAoqgytUcZi6GFsYhy5XA6rEquogQG+D4lJSxghJW2nBoua4xGr/T0pzM5mwOiq2jZWtreDqSqqlPP8JSBJIgmyrNSbB1nGbwdS6NQUWLoBn0ZoVipgYYBQUrC80cDg8aOovRzDo+wcRjOZJbZizo63iMHegzid3IrS5FvMPX2BT3PziHZ348r4OC6fOI7u9gQ+33+I+bEJaDu6MJrP17ugQGYwIhH8ihCZcxeQq7qocAm26yHR2opje3dgZ/oRpkfHUSbm/rImpItF2OUyWKQZkkeFFdJoTr0Br7mQNA2M5HCS5hI7TjIW/n2GgOoCz4PzuYB+Aom3taFQLEDp7OxEf98hYHMH2IePCEyLRinDtyy07NuNXDIJFo0gvHmH7CzBDUJ0bO9C/6aNqBAT1Bw7z/+LhXv3+NT+Hv4kuYuP/vEn55ZV/x46Dv80NMTfnBzgmdt3yTph/XZr1QJza04+Oze/Qnigbc0aTL9+DccsYfmP6+DRWKPNTVBIlkFWn6XOr08kaLDA1OQU4vEVRaVUMrWRByOoVOz6gpTKFipVm3ZCqltVSKRpIZVK4e+Ll+o7wyQGs2iir/eQyiaeP77toeEXYYzWlhgy2QxUWlud/qqScZqIgVjxZur4q5evIBOoTAYSFo/FIoUvAgwA3JucRYjKQDYAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite CherrySMS</info>
	<config>
		<required n="1" name="prefisso" default="" desc="Inserisci il prefisso internazionale del proprio numero senza + (es 39 per l'Italia)" />

		<required n="2" name="numero" default="" desc="Inserisci il numero registrato su cherry-sms.com" />
		<required n="3" name="password" default="" desc="Inserisci la password usata sul sito cherry-sms.com" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.cherry-sms.com/index.php?action=login" method="post">
                <vars>
                    <var name="telnumber1" value="%%prefisso%%" />
                    <var name="login[telnumber2]" value="%%numero%%" />

                    <var name="login[password]" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="Can't login. Wrong password or not activated!" errmsg="Username o password errati" errcode="5" />
                </errors>
            </page>
            <page uri="http://www.cherry-sms.com/?do=smsend" method="post">
                <contents>
                    <var name="id" left="Du kannst noch " right=" SMS" />

                    <var name="id2" left="You can still write " right=" SMS"/>
                </contents>
                <vars>
                    <var name="absender" value="ohne" />
                    <var name="telnumber1" value="%%prefisso%%" />
                    <var name="telnumber2" value="%%intnum%%" />
                    <var name="text" value="%%message%%" />
                    <var name="submit" value="absenden" />
                </vars>

                <accept>
                    <var acceptstr="Die SMS wurde versendet" acceptmsg="Messaggio Inviato! SMS residui: %%id%%" />
		   <var acceptstr="The SMS was sent." acceptmsg="Messaggio Inviato! SMS residui: %%id2%%" />
                </accept>
                <errors>
                    <var errstr="The specified phone number is wrong" errmsg="Numero inesistente" />
                    <var errstr="You have no free SMS left" errmsg="Crediti esauriti" />
		    <var errstr="Es trat ein Fehler" errmsg="Crediti insufficienti"/>
                </errors>

            </page>
  </procedure>
 </service>
 <service id="104" name="Meteor-Ireland" v="1.0" maxsms="300" singlelen="160" sms_divisor="160" maxlen="160" reset="monthly" output_encoding="UTF-8" icon="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" >
  <description>
	<info>Invia 300 SMS al mese con Meteor Ireland</info>
	<config>
		<required n="1" name="username" default="" desc="Numero della sim registrata" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso a www.meteor.ie" />
	</config>
  </description>
		<procedure>
            <page method="POST" uri="https://www.mymeteor.ie/go/mymeteor-login-manager">
			  <contents>
			    <var name="disponibili" left="numbers&quot;&gt;&lt;strong&gt;" right="&lt;"/>
			  </contents>
                <vars>

                    <var name="msisdn" value="%%username%%" />
                    <var name="pin" value="%%password%%" />
                </vars>
            </page>
			<page uri="https://www.mymeteor.ie/go/freewebtext">
			  <contents>
			    <var name="fid" left="var CFID = " right=";"/>
			    <var name="token" left="var CFTOKEN = " right=";"/>
			  </contents>

			</page>
			<page uri="https://www.mymeteor.ie/mymeteorapi/index.cfm?event=smsAjax&amp;CFID=%%fid%%&amp;CFTOKEN=%%token%%&amp;func=searchEnteredMsisdn" method="POST">
			<headers>
			 <var name="Referer" value="https://www.mymeteor.ie/go/freewebtext"/>
			</headers>
			<vars>
			  <var name="ajaxRequest" value="searchEnteredMSISDN"/>
			  <var name="searchValue" value="%%intnum%%"/>
			</vars>

		    </page>
			<page uri="https://www.mymeteor.ie/mymeteorapi/index.cfm?event=smsAjax&amp;CFID=%%fid%%&amp;CFTOKEN=%%token%%&amp;func=addEnteredMsisdns" method="POST">
			<headers>
			 <var name="Referer" value="https://www.mymeteor.ie/go/freewebtext"/>
			</headers>			
			<vars>
			  <var name="ajaxRequest" value="addEnteredMSISDNs"/>
			  <var name="remove" value="-"/>
			  <var name="add" value="0|%%intnum%%"/>

			</vars>
		    </page>			
			<page uri="https://www.mymeteor.ie/mymeteorapi/index.cfm?event=smsAjax&amp;func=sendSMS&amp;CFID=%%fid%%&amp;CFTOKEN=%%token%%" method="POST">
			<headers>
			 <var name="Referer" value="https://www.mymeteor.ie/go/freewebtext"/>
			</headers>
     			<vars>
                    <var name="ajaxRequest" value="sendSMS" />
                    <var name="messageText" value="%%message%%" />

                </vars>			
			<accept>
			<var acceptstr="The following number is not in your phonebook" acceptmsg="SMS disponibili prima di questo invio:%%disponibili%%"/>
			</accept>
			</page>
        </procedure> </service>
 <service id="105" name="Vodafone-Widget" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="360" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAABaElEQVR42qWTIU8DQRCFXwli5crWtY4KEioQ4FpH/wE4giIogiLVgEGSKoIrEtdDtbJ1LYoKBAJR3J27ug8xd90rBQyTzO3tzMvb2XmzJST0D9uUJHlvu0X2KVekg7a025De3qXnSPqcGyZJJOfCPxJ4D86ZH59AmgLAeATNNpye2X44gGodJHAeJIzAOfBl6N4ZME3h/MKA1RpMJyxtPIKdhuWWBBJc3wZQ1F8CODyCOGXFoj6UywWCnUYAzefQbLFytWYLnvoQx4Ekq9AIHu5D4rFHuFZG8FOVwwFIbEiSqrWgSxLbmnfaOcllKn28B1ylIkkygsUiJHKyYiy3nLRgRvAyDZG9fanZNoKlJ5bbrgfcbGarNXFvtcvTickngZx1/PzijyY6F2agqHf3zjzqh+HKG7hV/z5IHi47JuNf9tgrVJcTFEf5oG2gYrlpCrNXO8D7ILNE6dfXeNlZj91crYVK/33OXyU+0lAnmrnbAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 10 SMS al giorno emulando il Widget Desktop Vodafone. È possibile inviare SMS solo verso numeri Vodafone, occorre un numero registrato sul sito.</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vodafone.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vodafone.it" />
		<required n="3" name="sim" default="" desc="Inserisci il numero di telefono della sim con cui vuoi inviare tramite questo account" />
	</config>
  </description>
    <procedure>
      <page uri="https://widget.vodafone.it/190/trilogy/jsp/login.do" method="POST">
      	<headers>

			<var name="User-Agent" value="Vodafone_DW"/>
			<var name="Referer" value="http://www.vodafone.it/"/>
			<var name="X-Flash-Version" value="10,0,45,2"/>
			<var name="Accept" value="*/*"/>
			<var name="Accept-Language" value="it-it"/>
			<var name="Connection" value="keep-alive"/>
	  	</headers>
	  	<vars>
          <var name="username" value="%%username%%"/>

          <var name="password" value="%%password%%"/>
          <var name="cu_channel" value="MM"/>
          <var name="cu_notrace" value="true"/>
        </vars>
        <errors> 
          <var errstr="Verifica che username e password" errmsg="Nome utente o password errati"/>
          <var errstr="intervento di manutenzione" errmsg="Servizio in manutenzione"/>
          <var errstr="inesistente" errmsg="Servizio non disponibile"/>
        </errors>

	  </page>
	  <page uri="https://widget.vodafone.it/190/trilogy/jsp/swapSim.do" method="POST" condition="%%sim%%">
        <vars>
          <var name="swap_sim_link" value="%%sim%%"/>
          <var name="ty_sim" value="%%sim%%"/>
        </vars>
        <errors>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;100&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;101&quot;" errmsg="Il servizio non e' al momento disponibile."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;102&quot;" errmsg="Sessione scaduta."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;103&quot;" errmsg="Siamo spiacenti. Il tuo profilo di registrazione non e' abilitato a questo servizio."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;104&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;105&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;106&quot;" errmsg="Contenuto non disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;107&quot;" errmsg="Hai raggiunto il numero massimo di SMS a tua disposizione oggi."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;108&quot;" errmsg="E' stato raggiunto il numero massimo di SMS verso il numero destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;109&quot;" errmsg="Attenzione! Messaggio vuoto."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;110&quot;" errmsg="Hai superato il numero di caratteri disponibili."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;111&quot;" errmsg="Inserisci il numero di cellulare del destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;112&quot;" errmsg="Il numero di cellulare deve essere di nove o dieci cifre e contenere solo caratteri numerici."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;113&quot;" errmsg="Il destinatario non e' un utente Vodafone."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;114&quot;" errmsg="Verifica il numero mittente"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;115&quot;" errmsg="Attenzione! Errore SIM."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;116&quot;" errmsg="Codice di controllo sbagliato"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;117&quot;" errmsg="Contenuto non disponibile."/>
        </errors>
      </page>

      <page uri="https://widget.vodafone.it/190/fsms/precheck.do?channel=VODAFONE_DW">
      	<headers>
			<var name="User-Agent" value="Vodafone_DW"/>
			<var name="Referer" value="http://www.vodafone.it/"/>
			<var name="X-Flash-Version" value="10,0,45,2"/>
			<var name="Accept" value="*/*"/>
			<var name="Accept-Language" value="it-it"/>
			<var name="Connection" value="keep-alive"/>
	  	 </headers>

	  	 <contents>
            <var name="msgmaxlength" left="e n=&quot;MSGMAXLENGTH&quot; v=&quot;" right="&quot; /"/>
         </contents>
        <errors>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;100&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;101&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;102&quot;" errmsg="Sessione scaduta."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;103&quot;" errmsg="Siamo spiacenti. Il tuo profilo di registrazione non e' abilitato a questo servizio."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;104&quot;" errmsg="Il servizio non e' al momento disponibile."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;105&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;106&quot;" errmsg="Contenuto non disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;107&quot;" errmsg="Hai raggiunto il numero massimo di SMS a tua disposizione oggi."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;108&quot;" errmsg="E' stato raggiunto il numero massimo di SMS verso il numero destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;109&quot;" errmsg="Attenzione! Messaggio vuoto."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;110&quot;" errmsg="Hai superato il numero di caratteri disponibili."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;111&quot;" errmsg="Inserisci il numero di cellulare del destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;112&quot;" errmsg="Il numero di cellulare deve essere di nove o dieci cifre e contenere solo caratteri numerici."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;113&quot;" errmsg="Il destinatario non e' un utente Vodafone."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;114&quot;" errmsg="Verifica il numero mittente"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;115&quot;" errmsg="Attenzione! Errore SIM."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;116&quot;" errmsg="Codice di controllo sbagliato"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;117&quot;" errmsg="Contenuto non disponibile."/>
        </errors>
      </page>
	  <page uri="http://t.jacksms.it/vodafone-widget-message.php" method="POST">
        <vars>
         	<var name="message" value="%%message%%"/>

         	<var name="msgmaxlength" value="%%msgmaxlength%%"/>
        </vars>
        <contents>
            <var name="message_plain" left="__message__:" right=":__/message__"/>
        </contents>
      </page>
      <page uri="https://widget.vodafone.it/190/fsms/prepare.do?channel=VODAFONE_DW" method="POST">
      	 <headers>
			<var name="User-Agent" value="Vodafone_DW"/>

			<var name="Referer" value="http://www.vodafone.it/"/>
			<var name="X-Flash-Version" value="10,0,45,2"/>
			<var name="Accept" value="*/*"/>
			<var name="Accept-Language" value="it-it"/>
			<var name="Connection" value="keep-alive"/>
	  	 </headers>
         <vars>
            <var name="receiverNumber" value="%%intnum%%"/>
            <var name="message" value="%%message_plain%%"/>

            <var name="availableChars" value="%%availableChars%%"/>
         </vars>
         <contents>
            <var name="captchaimage" left="e n=&quot;CODEIMG&quot; &gt;&lt;![CDATA[" right="]]&gt;"/>
         </contents>
         <errors>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;100&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;101&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;102&quot;" errmsg="Sessione scaduta."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;103&quot;" errmsg="Siamo spiacenti. Il tuo profilo di registrazione non e' abilitato a questo servizio."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;104&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;105&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;106&quot;" errmsg="Contenuto non disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;107&quot;" errmsg="Hai raggiunto il numero massimo di SMS a tua disposizione oggi."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;108&quot;" errmsg="E' stato raggiunto il numero massimo di SMS verso il numero destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;109&quot;" errmsg="Attenzione! Messaggio vuoto."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;110&quot;" errmsg="Hai superato il numero di caratteri disponibili."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;111&quot;" errmsg="Inserisci il numero di cellulare del destinatario."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;112&quot;" errmsg="Il numero di cellulare deve essere di nove o dieci cifre e contenere solo caratteri numerici."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;113&quot;" errmsg="Il destinatario non e' un utente Vodafone."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;114&quot;" errmsg="Verifica il numero mittente"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;115&quot;" errmsg="Attenzione! Errore SIM."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;116&quot;" errmsg="Codice di controllo sbagliato"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;117&quot;" errmsg="Contenuto non disponibile."/>
         </errors>
      </page>
      <page uri="http://t.jacksms.it/vodafone-widget-image.php" method="POST" condition="%%captchaimage%%">

         <vars>
          <var name="data" value="%%captchaimage%%"/>
          <var name="writefile" value="%%username%%"/>
          <var name="encoding_problem" value="true"/>
        </vars>
        <contents>
            <var name="captcha_file" left="__loadfile:" right="/__"/>
        </contents>
        <errors>

			<var errstr="Error" errmsg="Problemi inaspettati nella generazione del captcha."/>
		</errors>
      </page>
      <page uri="http://t.jacksms.it/%%captcha_file%%" captcha="1" condition="%%captchaimage%%"/>
      <page uri="https://widget.vodafone.it/190/fsms/send.do?channel=VODAFONE_DW" method="POST">
     	 <headers>
			<var name="User-Agent" value="Vodafone_DW"/>
			<var name="Referer" value="http://www.vodafone.it/"/>
			<var name="X-Flash-Version" value="10,0,45,2"/>

			<var name="Accept" value="*/*"/>
			<var name="Accept-Language" value="it-it"/>
			<var name="Connection" value="keep-alive"/>
	  	 </headers>
         <accept>
            <var acceptstr="inviati correttamente"/>
         </accept>
         <vars>
            <var name="verifyCode" value="%%captcha_value%%" condition="%%captchaimage%%"/>

            <var name="receiverNumber" value="%%intnum%%"/>
            <var name="message" value="%%message_plain%%"/>
         </vars>
         <errors>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;100&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;101&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;102&quot;" errmsg="Sessione scaduta."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;103&quot;" errmsg="Siamo spiacenti. Il tuo profilo di registrazione non e' abilitato a questo servizio."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;104&quot;" errmsg="Il servizio non e' al momento disponibile."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;105&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;106&quot;" errmsg="Contenuto non disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;107&quot;" errmsg="Hai raggiunto il numero massimo di SMS a tua disposizione oggi."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;108&quot;" errmsg="E' stato raggiunto il numero massimo di SMS verso il numero destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;109&quot;" errmsg="Attenzione! Messaggio vuoto."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;110&quot;" errmsg="Hai superato il numero di caratteri disponibili."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;111&quot;" errmsg="Inserisci il numero di cellulare del destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;112&quot;" errmsg="Il numero di cellulare deve essere di nove o dieci cifre e contenere solo caratteri numerici."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;113&quot;" errmsg="Il destinatario non e' un utente Vodafone."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;114&quot;" errmsg="Verifica il numero mittente"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;115&quot;" errmsg="Attenzione! Errore SIM."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;116&quot;" errmsg="Codice di controllo sbagliato"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;117&quot;" errmsg="Contenuto non disponibile."/>
        </errors>
      </page>
    </procedure>
 </service>
 <service id="106" name="Smsjive" v="1.0" maxsms="10" singlelen="100" sms_divisor="152" maxlen="100" reset="daily" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJ7SURBVDhPJVLfSxRRGD13Zu7cmZ0ZZ1tF9CHowR/QKgX1IgmWK21ECEoJhj1F1Eu9RcKaRr4EvUT0UuGv3W1q1fzVkq5EhdIf0Vu9RGCJbru6u+LcvnFn5t6597vfd87Mdw5cTQFMFVCZEgKgqYoGDsFoRW+YJmwwWAixIMgRPY7KS7vRxZsHuHUeAvRolKHQYAhKGA0FBBmkA7lRQ75iiV7Ln8KvmXqKmUeZlMBVIqmSB6TgARDqXCyPGA5w4STqwwEWY9AJiRk0O8TIbAOgE4uCNB2kUfH04T5lNynK0zXjV5FPa1tJjFxGZbLxIGXFGlCcMEoz+r6HuKvgT7I5P4lEH9/xzEISt7ut/RQvZcL3B2oL00p+in176uy/x+aTUMXj31834WILDjPmo36xMYq9JfpI0/dQzOCEK8pv9euxY3LCfjbggGm/vUgxBZyLioN5MdyLLyOiOC+gWPlZlLLWYAcBGWGOkse3Uth7F5FplKmg5xQKi0gM4uuYKM8aGhcPb+p7C/Z2GjsLgM7lXN3kPXS3I9audTUD8TYUskjcUDfG4S+oJNbZJhxmIefcvx8E9Udm1LFr1GXeETXibS5irfA/YqwflZwpPzmkkgFzdz7sL4ae39Fou73e8GMJvV2QiyitO+hphczh8ZDwV+Cv0j+gBijlIJfdzijJYr+4C7mKyoous/i5YuPSGe1wjY0OqWDCDPQKVCMdgVqyE10MTktExE/rESpXOf5tNsrPuNJZzSAjWoH+VKpSpUZNoCqyXdUtjKmQa8Sokk8JNWAI8hS6yVOEqFFEhDTRAEHESuDBOiBE5erR5xAC9Sk4ISrQurqleDVCi/8Jm683etwlKQAAAABJRU5ErkJggg==" >

  <description>
	<info>Invia sms verso tutti</info>
	<config>
		<required n="1" name="user" default="x" desc="Nessun parametro richiesto" />
	</config>
  </description>
        <procedure>
			<page method="POST" uri="http://iaddo91.altervista.org/scriptphp/smsjive.php">

                <vars>
                    <var name="view" value="%%message%%" />
                </vars>
                <contents>
                    <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE" />
                </contents>
            </page>
			<page uri="http://www.smsjive.com/">
				<contents>

                    <var name="image" left="&quot;phpcaptcha/securimage_show.php?sid=" right="&quot;" />
                </contents>
			</page>
			<page uri="http://www.smsjive.com/phpcaptcha/securimage_show.php?sid=%%image%%" captcha="1"/>
            <page method="POST" uri="http://www.smsjive.com/action_form.php">
                <vars>
                    <var name="t2login" value="t2login" />
                    <var name="country" value="%%intpref%%" />
                    <var name="f_phone" value="%%intpref%%%%intnum%%" />

                    <var name="frm_country_startcode" value="%%intpref%%" />
                    <var name="f_msg" value="%%mess1%%" />
                    <var name="remlen" value="87" />
                    <var name="reply_enabled" value="1" />
					<var name="security_code" value="%%captcha_value%%" />
                </vars>
                <accept>
                    <var acceptstr="sms sent" />
                </accept>

				<errors>
                    <var errstr="IMPORTANT" errmsg="Errore, riprova"/>
                </errors>
            </page>
        </procedure> </service>
 <service id="107" name="Comviq" v="1.0" maxsms="5" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAwBQTFRFAAAADAwMDg4ODw8PEhISExMTFBQUFRUVFhYWFxcXGRkZGhoaGxsbHBwcHh4eISEhIiIiIyMjKysrLS0tLy8vMDAwNTU1Nzc3PDw8REREVFRUVVVVWlpaW1tbXFxcXV1dX19fYGBgYWFhYmJiZmZmZ2dnaGhob29vdXV1eXl5gICAh4eHiYmJjY2Njo6OpqamtLS0tbW1vLy8vr6+v7+/xcXFycnJysrKy8vLzMzM1tbW19fX2NjY3d3d39/f4ODg4eHh4+Pj5OTk5eXl5ubm5+fn6enp6urq7Ozs7u7u7+/v8fHx8vLy8/Pz9PT09fX19vb2+Pj4+fn5+/v7/Pz8/f39/v7+////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3Gs+rAAAAdlJREFUOE+lkzmvaWEUhs/phcQYQyQoRWhEo/QTaAwxFOhUCp1OFPwMv4BOqBSGGo0gphAhxhDDe+9aCdkOJ7nJXcm3s7P2Xs+3vne93zf+xtf/BAF+xu12Q71eRz6fRzqdRjabRblcxnw+R7/fB31/xNfP4l6vh2g0CqPRCKlUColEArFYDJ1OB7vdjng8/jug2+3C6XRCJpNBq9XC5XIhFoshEonA4XBAJBIhGAy+7Pns4HK5wO/3Qy6Xw2QycfuDwQDD4RCTyQTtdhuJRIIBH49QrVah1+uhVqu5+Hg8YrlcYr/f81qtVhiPx2g2m7her+8apFIpKJVKbpV2Fu7y+JugBLvf768ASno8HhYtHA7jfD5/Gg4XCovZAvQ4HA7wer0MCAQCLy1+JAmSTxEzmQwfwWazsXD/Gk9Aq9Vi9VUqFastFOoBo1yhUMBisXgX8XQ6IZlMQqFQQKPRIBQKoVar8Qin0ykajQaDrVYr596cSPTRaMSF1AXpQW6kI9GidzKSxWJhS3+0Mo2JZp3L5diFBoOBuyFvmM1muN1u+Hw+zGazzwCa/W63YwN1Oh1UKhUUi0WUSiU+Dl0kWsIxv10mQpOtN5sNu48EI+B6vcZ2u2WHCr3wBy6KFgEmcQYTAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia da 1 a 5 SMS al giorno verso i numeri svedesi</info>

	<config>
		<required n="1" name="username" default="" desc="Numero della sim registrata" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso a www.comviq.se" />
	</config>
  </description>
        <procedure>
            <page uri="http://www.comviq.se/ajax/authenticate.html" method="POST">
                <vars>
                    <var name="phoneNumber" value="%%username%%" />

                    <var name="password" value="%%password%%" />
                </vars>
            </page>
			<page uri="http://www.comviq.se/mittkonto.html">
			  <contents>
			    <var name="prima" left="text-messages-left&quot;&gt;" right="&lt;"/>
		      </contents>
			</page>
            <page uri="http://www.comviq.se/ajax/sendSMS.html" method="post">

                <vars>
                    <var name="msisdn" value="%%intnum%%" />
                    <var name="message" value="%%message%%" />
                </vars>
            </page>
			<page uri="http://www.comviq.se/mittkonto.html">
			  <contents>
			    <var name="dopo" left="text-messages-left&quot;&gt;" right="&lt;"/>
		      </contents>

			</page>
            <page uri="http://t.jacksms.it/wadja.php" method="POST">
                <vars>
                    <var name="before" value="%%prima%%" />
                    <var name="after" value="%%dopo%%" />
                </vars>
                <contents>
                    <var name="crediti" left="crediti:" right=":" />
                </contents>

                <accept>
                    <var acceptstr="Messaggio Inviato!" acceptmsg="SMS Inviato! SMS residui %%crediti%%" />
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato!" />
                </errors>
            </page>
        </procedure> </service>

</JackSMS><JackSMS>
 <service id="1" name="Vodafone-SMS" v="1.7" maxsms="10" singlelen="160" sms_divisor="160" maxlen="360" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAABaElEQVR42qWTIU8DQRCFXwli5crWtY4KEioQ4FpH/wE4giIogiLVgEGSKoIrEtdDtbJ1LYoKBAJR3J27ug8xd90rBQyTzO3tzMvb2XmzJST0D9uUJHlvu0X2KVekg7a025De3qXnSPqcGyZJJOfCPxJ4D86ZH59AmgLAeATNNpye2X44gGodJHAeJIzAOfBl6N4ZME3h/MKA1RpMJyxtPIKdhuWWBBJc3wZQ1F8CODyCOGXFoj6UywWCnUYAzefQbLFytWYLnvoQx4Ekq9AIHu5D4rFHuFZG8FOVwwFIbEiSqrWgSxLbmnfaOcllKn28B1ylIkkygsUiJHKyYiy3nLRgRvAyDZG9fanZNoKlJ5bbrgfcbGarNXFvtcvTickngZx1/PzijyY6F2agqHf3zjzqh+HKG7hV/z5IHi47JuNf9tgrVJcTFEf5oG2gYrlpCrNXO8D7ILNE6dfXeNlZj91crYVK/33OXyU+0lAnmrnbAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 10 SMS al giorno tramite il sito Vodafone. È possibile inviare SMS solo verso numeri Vodafone, occorre un numero registrato sul sito.</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vodafone.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vodafone.it" />
		<required n="3" name="sim" default="" desc="Inserisci il numero di telefono della sim con cui vuoi inviare tramite questo account" />
	</config>

  </description>
  <procedure>
     <page uri="http://www.vodafone.it/" ignorelocation="1"/>
      <page uri="http://www.vodafone.it/190/trilogy/jsp/home.do">
        <errors>
          <var errstr="a causa di un intervento di manutenzione" errmsg="Sito 190.it in manutenzione"/>
          <var errstr="lavori.vodafone.it" errmsg="Sito Vodafone in manutenzione"/>
        </errors>
      </page>

      <page uri="https://www.vodafone.it/190/trilogy/jsp/user.do" method="POST">
        <errors>
          <var errstr="/190/lsch/loginFailed.do" errmsg="Username o password errati" errcode="5"/>
        </errors>
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
          <var name="method" value="login"/>
          <var name="ty_skip_md" value="true"/>

        </vars>
      </page>
            <page uri="http://www.vodafone.it/190/trilogy/jsp/swapSim.do" method="POST" condition="%%sim%%">
                <vars>
					<var name="tk" value="1073752990,l"/>
					<var name="ty_link" value="null"/>
					<var name="ty_link_type"/>
					<var name="ty_sim" value="%%sim%%"/>
					<var name="from_tbfe" value="false"/>

					<var name="swap_sim_link" value="%%sim%%"/>
                </vars>
            </page>
      <page uri="http://www.areaprivati.vodafone.it/190/trilogy/jsp/dispatcher.do?ty_key=fsms_hp"/>
      <page method="POST" uri="http://www.areaprivati.vodafone.it/190/fsms/prepare.do">
        <errors>
          <var errstr="su www.190.it il proprio numero di" errmsg="Ti informiamo che per poter accedere a questo servizio è necessario"/>
          <var errstr="limitesms" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="non e' al momento disponibile" errmsg="190: Servizio non disponibile"/>

          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>
        </errors>
        <vars>
          <var name="receiverNumber" value="%%intnum%%"/>
          <var name="message" value="%%message%%"/>
        </vars>
        <contents>
          <var name="captcha" left="img src=&quot;/190/fsms" right="generateimg.do"/>
        </contents>

      </page>
      <page method="POST" uri="http://www.areaprivati.vodafone.it/190/fsms/prepare.do">
        <errors>
          <var errstr="limitesms" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>
        </errors>
        <vars>
          <var name="receiverNumber" value="%%intnum%%"/>
          <var name="message" value="%%message%%"/>

        </vars>
        <contents>
          <var name="captcha" left="img src=&quot;/190/fsms" right="generateimg.do"/>
        </contents>
      </page>
      <page uri="http://www.areaprivati.vodafone.it/190/fsms/generateimg.do" captcha="1" condition="%%captcha%%"/>
      <page uri="http://www.areaprivati.vodafone.it/190/fsms/send.do" method="POST">
        <accept>
          <var acceptstr="elaborata correttamente"/>

        </accept>
        <errors>
          <var errstr="FLATService=deleteIT" errmsg="Errore 190, riprova"/>
          <var errstr="ha ricevuto il numero massimo" errmsg="Il destinatario da te inserito ha ricevuto il numero massimo giornaliero di SMS via Web"/>
          <var errstr="informiamo che per poter accedere a questo servizio" errmsg="Errore 190, riprova"/>
          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>
          <var errstr="superato il limite giornaliero" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="momento disponibile. Ti invitiamo a riprovare" errmsg="Servizo momentaneamente non disponibile" errcode="12"/>
          <var errstr="prepare.do" errmsg="Codice di controllo sbagliato" errcode="8"/>

        </errors>
        <vars>
          <var name="verifyCode" value="%%captcha_value%%" condition="%%captcha%%"/>
          <var name="pageTypeId" value="9604"/>
          <var name="programId" value="10384"/>
          <var name="channelId" value="-18126"/>
          <var name="receiverNumber" value="%%intnum%%"/>
          <var name="message" value="%%message%%"/>
        </vars>

      </page>
  </procedure>
 </service>
 <service id="3" name="Communicator" v="1.4" maxsms="10" singlelen="141" sms_divisor="160" maxlen="141" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsElEQVR42qWTsRXDIAxET8xDQckIKVNkoPM+KVJmBJcuvI9SOI4RRjzyrFb3D0lIsi4z6ogp67rMgoEIO9AT9fIBAEgaUfl6TFlJuubSauGfCLgYAkBbZZciL0cSQlIf95sRqB7WIodBTFkV3ydlk4QSPtUl9idKGNqbQSVqwXtlAQCer7eavqsKPNjsgdm8QtyDfwantZWqDQcem0EH9g0GYddAsEECYJqI3mVevoUP6wxrLhB3KdMAAAAASUVORK5CYII=" >
  <description>
	<info>Invia 10 SMS al giorno tramite il sito di Virgilio. Richiede un abbonamento Tin.it</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.tin.it. Se la tua email è mario.rossi@tin.it, inserisci mario.rossi" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.tin.it" />
		<required n="3" name="domain" default="" desc="Inserisci il dominio, cioè la parte dopo @" />
	</config>
  </description>
  <procedure>
     <page uri="https://aaacsc.alice.it/piattaformaAAA/aapm/amI" method="POST">
                <vars>
                    <var name="usernameDisplay" value="%%username%%" />
                    <var name="dominio" value="@%%domain%%" />

                    <var name="password" value="%%password%%" />
                    <var name="login" value="%%username%%@%%domain%%" />
                    <var name="pwd" value="%%password%%" />
                    <var name="channel" value="Vmail" />
					<var name="URL_OK" value="https://authsrs.alice.it/aap/aap_redir.jsp?entry=Vmail"/>
					<var name="URL_KO" value="https://authsrs.alice.it/aap/aap_redir_ko.jsp?entry=Vmail"/>
					<var name="servizio" value="mail"/>
					<var name="msisdn" value="%%username%%"/>
					<var name="username" value="%%username%%@%%domain%%"/>

					<var name="user" value="%%username%%@%%domain%%"/>
					<var name="a3afep" value="http://portale.rossoalice.alice.it/ps/ManageCodError.do?code=470&amp;channel=Vmail"/>
					<var name="DOMAIN" value=""/>
					<var name="PASS" value="%%password%%"/>
					<var name="self" value="true"/>
					<var name="a3si" value="none"/>
					<var name="a3st" value="VCOMM"/>
					<var name="totop" value="true"/>
					<var name="nototopa3ep" value="true"/>

					<var name="a3aid" value="lvmes"/>
					<var name="a3flag" value="0"/>
					<var name="a3ep" value="http://communicator.alice.it/asp/login.asp"/>
					<var name="a3epvf" value="http://webmailvtin.alice.it/cp/ps/Main/login/SSOLogin"/>
					<var name="a3se" value="http://portale.rossoalice.alice.it/ps/ManageCodError.do?code=470&amp;channel=Vmail"/>
					<var name="a3dcep" value="http://communicator.alice.it/asp/homepage.asp?s=005"/>
					<var name="a3l"	value="%%username%%@%%domain%%"/>
					<var name="a3p"	value="%%password%%"/>
				</vars>

            </page>
			<page uri="http://communicator.alice.it/asp/stato_feu.asp?s=2"/>
		<page uri="http://communicator.alice.it/asp/smsweb.asp?p=1"/>
		            <page uri="http://gsmailmdumail.alice.it:8080/supermail/controller?username=%%username%%%40%%domain%%&amp;action=sendsmspreview" method="post">
                <vars>
                    <var name="lista_operatori" value="x" />
                    <var name="numero" value="" />
                    <var name="select" value="x" />
                    <var name="recipient" value="%2B%%intcode%%%%intnum%%" />

                    <var name="testo" value="message" />
                </vars>
            </page>
            <page uri="http://gsmailmdumail.alice.it:8080/supermail/controller?username=%%username%%%40%%domain%%" method="post">
                <vars>
                    <var name="action" value="sendsms" />
                    <var name="recipient" value="%2B%%intcode%%%%intnum%%" />
                    <var name="testo" value="%%message%%" />
                </vars>

                <accept>
                    <var acceptstr="inviato correttamente" />
                </accept>
                <errors>
                    <var errstr="La tua sessione non" errmsg="Invio fallito, riprova" />
                    <var errstr="superato il numero massimo" errmsg="Limite giornaliero di SMS raggiunto" />
                </errors>
            </page>
  </procedure>

 </service>
 <service id="2" name="Rossoalice" v="1.3" maxsms="10" singlelen="146" sms_divisor="146" maxlen="146" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAu0lEQVR42qVTrRKGIBA8GAuNaLXefMHoQ/E4PtRFAmO1Gm1GLR7Dv5/jFWZYdpe7BeEswZfqSpu/cTrTPWdJPAowcRn67CDeWCrUheQSkYsxHKczFJH/kFOhsEVZO2i0itZaCQDI3HHdmjdg3FkSMiXiuvl+i8MM8CwFP6jbwWgFy9CD0Qrm/Xh+B0z0DvuROTYF0hvU2oiG6Cy9ipEN+C1I+FiS42hFV3OPZuAsCWz9hSD76hAZxBe/8QK7xmMrzdvWbgAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia 10 SMS al giorno tramite il sito di Alice. Richiede un abbonamento flat Alice Adsl per registrarsi al sito.</info>
	<config>
		<required n="1" name="username" default="" desc="Username di accesso a www.alice.it. Se la tua email e' mario.rossi@alice.it, inserisci mario.rossi" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.alice.it" />
		<required n="3" name="login_account" default="" desc="Inserisci il valore del cookie login_account" />

		<required n="4" name="spc" default="" desc="Inserisci il valore del cookie spc" />
	</config>
  </description>
        <procedure>
            <page method="POST" uri="https://authsrs.alice.it/aap/validatecredential">
                <vars>
                    <var name="usernameDisplay" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="dominio" value="@alice.it" />

                    <var name="imageField.x" value="27" />
                    <var name="imageField.y" value="1" />
                    <var name="twoweeks" value="false" />
                    <var name="login" value="%%username%%@alice.it" />
                    <var name="pwd" value="%%password%%" />
                    <var name="channel" value="mail_alice" />
                    <var name="URL_OK" value="https://authsrs.alice.it/aap/aap_redir.jsp?entry=mail_alice" />
                    <var name="URL_KO" value="https://authsrs.alice.it/aap/aap_redir_ko.jsp?entry=mail_alice" />
                    <var name="servizio" value="mail" />

                    <var name="msisdn" value="%%username%%" />
                    <var name="username" value="%%username%%@alice.it" />
                    <var name="user" value="%%username%%@alice.it" />
                    <var name="a3afep" value="http://portale.rossoalice.alice.it/ps/ManageCodError.do?code=470&amp;channel=mail_alice" />
                    <var name="DOMAIN" value="" />
                    <var name="PASS" value="%%password%%" />
                    <var name="self" value="true" />
                    <var name="a3si" value="none" />
                    <var name="a3st" value="VCOMM" />

                    <var name="totop" value="true" />
                    <var name="nototopa3ep" value="true" />
                    <var name="a3aid" value="lames" />
                    <var name="a3flag" value="0" />
                    <var name="a3ep" value="http://communicator.alice.it/asp/login.asp" />
                    <var name="a3se" value="http://portale.rossoalice.alice.it/ps/ManageCodError.do?code=470&amp;channel=mail_alice" />
                    <var name="a3dcep" value="http://communicator.alice.it/asp/homepage.asp?s=005" />
                    <var name="a3l" value="%%username%%@alice.it" />
                    <var name="a3p" value="%%password%%" />

                </vars>
                <errors>
                    <var errstr="ManageCodError.do?code=470&amp;channel=mail_alice" errmsg="Username o password non validi" />
                </errors>
            </page>
            <page uri="http://auth.rossoalice.alice.it/aap/serviceforwarder?sf_dest=ibox_inviosms">
            	<errors>
                    <var errstr="deletecredential" errmsg="Username o password non validi" />
                </errors>

            </page>
            <page uri="http://webloginmobile.rossoalice.alice.it/alice/jsp/SMS/composer.jsp?ID_Field=0&amp;ID_Value=0&amp;id_clickto=0&amp;dummy=dummy">
            	<headers>
                    <var name="Cookie" value="account=%%username%%@alice.it; login_account=%%login_account%%; servizio=SMS; spc=%%spc%%; profile=Gold;" />
                </headers>
                <contents>
                    <var name="gratuiti" left="Oggi hai ancora  a disposizione &lt;b&gt; " right=" SMS GRATUITI" />
                </contents>
                <errors>

                    <var errstr="ad ogni destinatario ha un costo di" errmsg="Messaggi gratutiti terminati" />
                    <var errstr="Sistemi non disponibili" errmsg="Servizio momentaneamente non disponibile" />
                </errors>
            </page>
            <page uri="http://iaddo91.altervista.org/scriptphp/tim.php" method="POST">
                <vars>
                    <var name="sms" value="%%gratuiti%%" />
                </vars>
                <contents>

                    <var name="residui" left="sms:" right=":rimanenti" />
                </contents>
            </page>
            <page uri="http://webloginmobile.rossoalice.alice.it/alice/jsp/SMS/inviaSms.jsp" method="POST">
            	<headers>
                    <var name="Cookie" value="account=%%username%%@alice.it; login_account=%%login_account%%; servizio=SMS; spc=%%spc%%; profile=Gold;" />
                </headers>
                <vars>
                    <var name="DEST" value="%%intnum%%" />

                    <var name="ABGDEST" value="" />
                    <var name="TYPE" value="smsp" />
                    <var name="ABG_NOME_LISTA" value="" />
                    <var name="NOME_LISTA" value="" />
                    <var name="SHORT_MESSAGE2" value="%%message%%" />
                    <var name="SHORT_MESSAGE" value="%%message%%" />
                    <var name="INVIA_SUBITO" value="true" />
                    <var name="GIORNO" value="18%2F6%2F2010" />
                    <var name="ORE" value="09" />

                    <var name="MINUTI" value="00" />
                </vars>
            </page>
            <page uri="http://webloginmobile.rossoalice.alice.it/alice/jsp/EwsJCaptcha.jpg" captcha="1">
                <headers>
                    <var name="Pragma" value="no-cache" />
                    <var name="Referer" value="http://webloginmobile.rossoalice.alice.it/alice/jsp/SMS/inviaSms.jsp" />
                    <var name="Cookie" value="account=%%username%%@alice.it; login_account=%%login_account%%; servizio=SMS; spc=%%spc%%; profile=Gold;" />
                </headers>

            </page>
            <page uri="http://webloginmobile.rossoalice.alice.it/alice/jsp/SMS/inviaSms.jsp" method="POST">
            	<headers>
                    <var name="Cookie" value="account=%%username%%@alice.it; login_account=%%login_account%%; servizio=SMS; spc=%%spc%%; profile=Gold;" />
                </headers>
                <vars>
                    <var name="DEST" value="%%intnum%%" />
                    <var name="ABGDEST" value="" />
                    <var name="TYPE" value="smsp" />

                    <var name="ABG_NOME_LISTA" value="" />
                    <var name="NOME_LISTA" value="" />
                    <var name="SHORT_MESSAGE2" value="%%message%%" />
                    <var name="SHORT_MESSAGE" value="%%message%%" />
                    <var name="INVIA_SUBITO" value="true" />
                    <var name="GIORNO" value="18%2F6%2F2010" />
                    <var name="ORE" value="09" />
                    <var name="MINUTI" value="00" />
                    <var name="captchafield" value="%%captcha_value%%" />

                </vars>
                <accept>
                    <var acceptstr="con successo" acceptmsg="SMS Inviato! Hai ancora %%residui%% SMS disponibili" />
                </accept>
                <errors>
                    <var errstr="tempo massimo per" errmsg="Superato il tempo massimo per l&apos;inserimento del codice" />
                    <var errstr="302 Found" errmsg="Ritenta" />
                    <var errstr="non sono corretti." errmsg="Codice di controllo sbagliato" />
                    <var errstr="non disponibili&lt;br&gt;" errmsg="Alice: Sistemi non disponibili" />

                </errors>
            </page>
        </procedure> </service>
 <service id="6" name="Vodafone-MMS" v="1.2" maxsms="100" singlelen="1000" sms_divisor="1000" maxlen="1000" reset="daily" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAACRElEQVR42qWTTUhUURTHf3feezNalrgKTGeEadcHPfODHqmtkjIIIhChpS2LFuU2hCBIhBa1CLMgKenDLCoyRIo+zChwhCEKUpkpbCH0YLJxZt7HaTHOlCiz6cLlnnPu/f8O5957VDw2xf8Mfb1g5N64eB9jeIuLBCI1aG0WRm0ts9EtqiQgMjIh2dGn5HwPvS7M5st9aM0NpC9eYvnceap1Q4yuYyTarSIoUDBq+gbEefAITYGxv41NIzfR9zbhzsTJDg6hgiGUguzQMOGrw7IKEB6bFD8WQwV1iFZT0d+LKisDwE9+R1WWI1kfCKAZBs6Lt0Rfz0gR4A7dRgVD4DhsPHumKAYIHTlE5cQYwaMd4Lr5rOVBMtduFM8IILZpCSB+zhERkUK8YIuIpE6cEttsLe6tzL/iVFf3GtG/a2b85UqyVrFNS36d7hF99WN4Jd9ci1Rj72ikavoVAKl6s6B0Vy7sW0mAl1gAJ4BttgKwefBKHuBl8pkltVQS4Ny9T9WX90U/ff0WgXhsSum+YJsW6AHsnc1kHz4mXzaICJLJkLrQjzP5Dtu0sE2Ln9ubmKuPKhWPTRG+80zcJ88hpKE8LV/Otq2U7WnAzzrk3kyifiygjGAe6uQwujpJdLQoHSDZeVBFPn0Vf3Ye0X1E+aj5JLnPcyA+AcPAD4YQQOWy6Lt2k+hoUau+cqL3pGJfE7KUBkB5AroGhpH3fQ/1O43RfoBkT3exF9R67Vw3MCruh2l8WUahUBsqMBrrmT9+eE03/gH2JQ7uGCTmrQAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia MMS testuali tramite il sito Vodafone, solo verso numeri Vodafone.</info>
	<config>
		<required n="1" name="mittente" default="" desc="Inserisci il nome che verra' visualizzato come mittente" />

	</config>
  </description>
  <procedure>
     <page uri="http://mmsviaweb.net.vodafoneomnitel.it/WebComposer/MMSServletUpload?nextPage=/WebComposer/web/test.jsp" method="post" condition="%%attach%%">
        <contents>
          <var name="mms" left="fileName=" right="&amp;fileSize"/>
        </contents>
        <vars>
          <var name="FILE1" type="attach"/>

        </vars>
        <errors>
          <var errstr="error" errmsg="L'immagine inserita non supportata"/>
        </errors>
      </page>
      <page uri="http://mmsviaweb.net.vodafone.it/WebComposer/web/elaborapop.jsp" method="post">
        <vars>
          <var name="subjecttosend" value="Da:%20%%mittente%%"/>
          <var name="TextName" value="%%message%%"/>

          <var name="recipient" value="%%intpref%%%%intnum%%"/>
          <var name="SmilName" value=""/>
          <var name="AudioName" value=""/>
          <var name="ImageName" value=""/>
        </vars>
        <errors>
	  <var errstr="verificato un errore durante la procedura" errmsg="Errore durante la procedura" />
          <var errstr="SendMessage=0" errmsg="Il tuo messaggio non e' stato inviato, riprova."/>
        </errors>

        <accept>
	  <var acceptstr="messaggio &amp;egrave; stato inviato" />
          <var acceptstr="SendMessage=1"/>
        </accept>
      </page>
  </procedure>
 </service>
 <service id="40" name="JackSMS-Messenger" v="1.4" maxsms="500" singlelen="8000" sms_divisor="8000" maxlen="8000" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjUuND6NzHYAAACjSURBVDhPY2QAgrCKOfuuPHrnCGITC3TkhPav6khxAmvWiur6Tw4G6WWAaSTWZpg6uD6qG0DIK9R3gU5U938QJjUM4Pp0Y3r/gzDMABgfF42ujkE/fsJ/ECbVBXB9homT/4MwqQbA9YESg3HK9P/kYHBCgiVl04xZ/0nBcM3oTrfInvcfhnEqwudfq/zF/0GYLM0gg22Ll5OvGWSAQ9kakmIEAKq65KO8X6FQAAAAAElFTkSuQmCC" >
  <description>

	<info>Invia messaggi gratuiti ad utenti di JackSMS</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.JackSMS.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.JackSMS.it" />
	</config>
  </description>
 <procedure>
  
     <page method="POST" uri="http://q.jacksms.it/Messenger">

		<contents>
			<var name="spec" left=':RESP:' right=':/RESP:' />
		</contents>
        <vars>
          <var name="msg" value="%%message%%"/>
          <var name="u" value="%%username%%"/>
          <var name="p" value="%%password%%"/>
          <var name="dest" value="%%intnum%%"/>
        </vars>

        <accept>
          <var acceptstr="OK:RESP:" acceptmsg="%%spec%%"/>
          <var acceptstr="SENT"/>
          <var acceptstr="QUEUED" acceptmsg="Messaggio accodato"/>
        </accept>
        <errors>
          <var errstr="KO:RESP:" errmsg="%%spec%%"/>
          <var errstr="Il destinatario non esiste" errmsg="Questo numero non puo' ricevere JMS"/>
          <var errstr="non ha attivato" errmsg="Il destinatario non ha attivato la ricezione"/>

          <var errstr="ERROR: 3" errmsg="La coda di messaggi del destinatario e' piena."/>
          <var errstr="Server non disponibile" errmsg="Server non disponibile"/>
          <var errstr="Username o password sbagliati" errmsg="Username o password sbagliati" errcode="5"/>
        </errors>
      </page>
</procedure>
 </service>
 <service id="9" name="SMSByMail" v="1.1" maxsms="10" singlelen="140" sms_divisor="160" maxlen="140" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAo0lEQVR42q2TuxICIQxFbzJb6e9CB5V2+ruhjQUbd0XIPvTMZBhCEgJcSEJSNFweN/QoMX/5aF2gTbSEkR8AeCu5xzqWjya3RXjPOUvMblEFoKqqAFRC0vlePsx8Fmcw6gxEBAkJ1+cdACAhvc2D8SPTaME62YI9Ae05wuQtel0QUS1gO9TLXUbpvLvOHVpMiXmR8kj/I0wXfER9vVj66288wwuqpHSHqFEhfQAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia 10 SMS al giorno con SMSbyMail, solo verso numeri Vodafone.</info>
	<config>
		<required n="1" name="mittente" default="JackSMS" desc="Inserisci il nome che vuoi far apparire all'inizio del messaggio" />
		<required n="2" name="email" default="" desc="Inserisci l'email con cui hai effettuato la registrazione al sito www.190.it" />
		<optional n="3" name="smtp" default="smtp-sms.vodafone.it" desc="Inserisci il server SMTP del tuo provider" />
		<optional n="4" name="porta" default="25" desc="Inserisci la porta del server SMTP del tuo provider" />
	</config>
  </description>

  <procedure>
     <page uri="socket://%%smtp%%:%%porta%%">
        <accept>
          <var acceptstr="Mail accepted"/>
          <var acceptstr="Mail queued for delivery"/>
          <var acceptstr="accepted for delivery"/>
        </accept>
        <errors>
          <var errstr="User unknown" errmsg="Email errata"/>

          <var errstr="Invalid route address" errmsg="Email errata"/>
          <var errstr="Domain of sender address" errmsg="Email errata"/>
          <var errstr="Domain name required for sender" errmsg="Email errata"/>
          <var errstr="Mailbox disabled for this recipient" errmsg="Email destinatario disabilitata"/>
          <var errstr="not accepting messages" errmsg="Errore"/>
        </errors>
        <commands>
          <var cmd=" "/>
          <var cmd="HELO ip"/>

          <var cmd="MAIL FROM: &lt;%%email%%&gt;"/>
          <var cmd="RCPT TO: &lt;%%intnum%%@sms.vodafone.it&gt;"/>
          <var cmd="DATA"/>
          <var cmd="From: %%mittente%% &lt;%%email%%&gt;"/>
          <var cmd="To: &lt;%%intnum%%@sms.vodafone.it&gt;"/>
          <var cmd="Subject:"/>
          <var cmd="Content-Type: text/plain;"/>
          <var cmd="X-Priority: 3"/>
          <var cmd=""/>

          <var cmd="%%message%%"/>
          <var cmd="."/>
          <var cmd="QUIT"/>
        </commands>
      </page>
  </procedure>
 </service>
 <service id="20" name="CentroEmilia" v="1.1" maxsms="10" singlelen="135" sms_divisor="160" maxlen="135" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAACj0lEQVR42tWTS0hUYQCFv//eO4/GcbKpnBqsaehBUlb0VKioqIiiIKJFBUlIj0UgFEGrKNxEgYugoBaVPdDoQUZPRTNtkUjE9NJK08pmHJ2p0TvvuTN/q6Jo2aqzPBwOnA8O/PcSLd0dsi/6iaxhMLHAzfppywWAPzog73U2oWeSrPAuZv7EEgFw822j7B78wFx3MetmrBRafVcDjb1NWMkjlBrmUedjOX/yXHbWVdIV7kFVBLd8DwE42nBSHrh9BLvNQqYDzj69IjXFbOB2TKKhvEZsq90r2z4/p1sP4NcHuLS1mkL7WF58fsPhV3vkgYYqDq3ax8bpq+kI+EjHDDRyKhkjxfV3D+SF9lqWTC7hqq+e7Qu2sMxbKn5uPd56Sk4rnMr+0nKx/zcGmllYiWeGOXa3mpRq4B8ZIpL4ztQx7j9gjaRjeByuvyAqCRJYzTbuVVygcskOzr+sI61AT7j/j6DN5KQn8vWvAk2TVjQseAqKxOlnNdKujKbMPY+al7XUv2+U7nwXjZ1teO0uLof7ONFyRm6YuZaWvjaGw1FE5f0q2dTbii2rEkyGqFi0jSMrD4pNF3dJ31AnSk7idU6hefc1UdVcLc+9uIKNPFQFKsp2Idp6n8sv34JkyWK3WNk8e80vcBfb70ihZilfuPmXd8PXLL9GAywtmsMCT4kQ95+8lj0fB8ikVPJHmYkkdSDHDE8h/mAUk8lEcEgHxaBgTB5kNERWJZ5NUFzsRElGEihCJTgUIZ7KYBES19h8RvQkFoukPzBILBXDpKj0fwojc3H05AgDoRC5WBzNbJOISAbXBCuGoePxjiOdzmJWFUL+NPkOB7OKnQwO6lisGmaTgtc7ntC3PCxmx7+f6QfiHxWUptfkRwAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia 10 SMS al giorno tramite CentroEmilia</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.bancacentroemilia.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.bancacentroemilia.it" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.bancacentroemilia.it/portal/page?_pageid=95,247458&amp;_dad=portal&amp;_schema=PORTAL">

                <contents>
                    <var name="token" left="site2pstoretoken&quot; type=&quot;hidden&quot; value =&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="http://portallogin.cedecra.it/sso/auth" method="POST">
                <vars>
                    <var name="ssousername" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="site2pstoretoken" value="%%token%%" />

                    <var name="subscribername" value="cento" />
                    <var name="p_submit_url" value="http://portallogin.cedecra.it/sso/auth" />
                </vars>
                <errors>
                    <var errstr="La combinazione utente e password inserita" errmsg="username o password errati" />
                </errors>
            </page>
            <page uri="http://www.bancacentroemilia.it/pls/portal/portal_cento.invia_messaggio_ext" method="post">
                <vars>

                    <var name="TIPO_MESSAGGIO" value="SMS" />
                    <var name="PCODICE_ABI" value="08509" />
                    <var name="P_BACK_URL" value="/pls/portal/url/page/sito/sms/invio_sms" />
                    <var name="DESTINATARIO" value="%%intnum%%" />
                    <var name="testo" value="%%message%%" />
                </vars>
                <errors>
                    <var errstr="Max di messaggi consentito per il portale" errmsg="SMS esauriti per oggi" />
                </errors>

                <accept>
                    <var acceptstr="Messaggio inoltrato correttamente" />
                </accept>
            </page>
  </procedure>
 </service>
 <service id="21" name="FotoExpo" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAC6UlEQVR42mWTzWtcVRyGn3PumevNnc8mM00n005IDYLQhdQotNYILuLOhTvFgu4KIkVcdlHQbNy7El34BwhRaimCQsFsQkQRm1hb2iZpk5pmMjPJnZn7ce75uagBwQfe5QvP4n3hX55oRPh/YqUkV0ZS44soJC4o2UPLUU8B7IBIwTD0DDgHgNWGUi40sxGZCtkKAqyzKMA5w76XciGOlHrs+1JOU5LLH+K/exEXHQAKKZWJvv2O8cVFOtOzVL74HFeqYZIY5/nk2hJ9dBkzrh1dYGx+geLcS/yXjZ+XCQAzM0u48AYCGEB4KvrjYIAx1iJA1myQO0cy6CI2wQuK3P1theMAzROIc5hoSJod4MKQ7oNt0r93MWLBr1QZO1lH25zFi+/Rv/UH1UqR6tYjJoFWu4mnFDev3eCrjz/gRBBitWJhEGMEsBMN8maLQRRz2B1S80qEnRFTvYjjgG23UArikuH0+fPMBMcYrixzJk0gBtmef0164mQwSmV0cCB5lsnm9WvyjdbyO8jW9e/FOSdDGckRP1x6X1ZBNEB6ukVZINSKoFxGG8Pukw4zzvGo8Ay2fQqlFIVRRtrbY5SkrN25TRkwCVBqt1HAzuNNdtbuUC1W+PXmMnVAalUqk5OkmeXKW28T/XWLkq4xvbHOs0pjcsBrzqCU4saXX7P06Sc8D3jAi54HE8cojk9ge32SqEvDK1IsQMMIncxh9oB6u4XLc+KN+7wKnPMLZFlOOc/ZPdXGCugw4LOlJXyrGLqE1QvzhPfuYaLaBCdnp9Gex+DhJmeAs1lGfO4Vsrk5dgYRRc/DeiEmCAFI9vv0OoeUAFObqtO9vc7W3iHJ/Q2aKMZEKJx9AZylrODBL6vEwxGiFLoQ8HDtT+jvk2j99ExXx3zppcJzkvOmQEscw0adtakpttfXWFEwynISz6OYGzKV8o4ILztR6mj3P/mB1PKU2dwRAg7IgL7R3PU8lINUKXw0mbK8nlgF8A/tf3AYEpzqigAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia SMS avendo crediti a sufficienza con Fotoexpo.</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.fotoexpo.net" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.fotoexpo.net" />
		<required n="3" name="mittente" default="" desc="mittente dei messaggi (non sempre funziona)" />
	</config>
  </description>
  <procedure>
     <page method="POST" uri="http://www.fotoexpo.net/pannello.asp">
        <vars>

          <var name="login" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
		<contents>
		  <var name="creditiresidui" left="Crediti attuali : " right="&lt;BR&gt;"/>
		</contents>  
      </page>
	  <page uri="http://supermac.altervista.org/script/fotoexpo.php" method="POST">
        <vars>

          <var name="credits" value="%%creditiresidui%%"/>
        </vars>
        <contents>
          <var name="residui" left="Residui:" right=":"/>
        </contents>
	  </page>
      <page method="POST" uri="http://www.fotoexpo.net/inviosms.asp">
	    <headers>
		  <var name="Referer" value="http://www.fotoexpo.net/pannello.asp"/>

		</headers>
        <vars>
          <var name="pref" value="%%pref%%"/>
          <var name="numero" value="%%num%%"/>
          <var name="from" value="%%mittente%%"/>
          <var name="datatext" value="%%message%%"/>
          <var name="num" value="160"/>
          <var name="B1" value="Invia"/>
          <var name="login" value="%%username%%"/>

          <var name="password" value="%%password%%"/>
        </vars>
        <accept>
          <var acceptstr="inviato correttamente." acceptmsg="Messaggio Inviato. %%residui%% sms residui."/>
        </accept>
        <errors>
          <var errstr="temporaneamente sospeso" errmsg="Fotoexpo: Servizio temporaneamente sospeso" errcode="5"/>
          <var errstr="il login" errmsg="Username o password sbagliati" errcode="5"/>
          <var errstr="Non hai crediti" errmsg="Non possiedi crediti sufficienti"/>

          <var errstr="Non hai la copertura" errmsg="Non possiedi crediti sufficienti"/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="47" name="Tizioandcaio" v="1.2" maxsms="10" singlelen="120" sms_divisor="160" maxlen="120" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAACXBIWXMAAAsTAAALEwEAmpwYAAACTElEQVR42iXSzW8bVRSG8ffcc+/M2OO4LopLUqEKhFCEKsQCFpX4s5FYsugSkAqCQIBitYTYqb/q8cx4vu45h0XWj57dj8SUTAkCUwAwByIQy+AYwLDb+w++fUU/LfXymVu/3XoFETHBEQCAHAEwQBJQJ5RRq+Jn/gk7ShFGzj9kA+HhMJjBDMoYmInP/l4W3/8Q/9gO7/d/yaH0rD05b3AKGEAEKCAWlTwQEe4O6c//VDcbORWSW+6JeliEJYOSCplE00jSn3oTHdXB7WqtKQ+PJucz/wjioaaKKmorrHCBk1GaJG6cMqoGh6GLiZXdrqz2Y7oNbe2L3rfCRwmtkhEyhzNCxnBARaA85TSJ3UKPh6H+xZq9LyStonvfYN+gbvvYtRw71p55vt2U4w8ni1WzXRVoS+xXoV373ty/G1yv8es6/rZq1seh6qwoWo0LHJdXX38z7Eq9+S5kvm+rbLj1vpVcTlNpR+U+3N8/lvDp+Xl+mb/88frpfPQ8L+52m4VikMinexn2/uJMJln27OnZV1fzdy8+AYXphJKA1y9ml0/y2RgvX+XXN1822zd2t2xk57OMvLcp42KKq3kCBYl2zemzzychgCNuL3KefyzFZkRDlufewPDEAMFYB09AYmPPRr1GSKQOoVRGO3SiLSWug1MjAARiZhDBHOCiOZbOpWFZQesjmp2q1a368OBHooEcM4gfdJEDzHrCYjWk5VLq/2Jbk6lf3b715AiqqqJOjI08+TAYHh/+XCRf/P76Pu+20+TUzaYfnWf/A9/CZpgzV50hAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 3 SMS per ogni pacchetto acquistato con i crediti su TizioandCaio</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.tizioandcaio.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.tizioandcaio.com" />
		<optional n="3" name="mittente" default="" desc="Inserisci il nome che verra' visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.tizioandcaio.com/profile/login.aspx" method="POST">
            <vars>

                <var name="path" value="%2Fpublic%2Fforum%2Fprofile.php" />
                <var name="username" value="%%username%%" />
                <var name="password" value="%%password%%" />                 
				<var name="login" value="Login" />
            </vars>
	    <errors>
          <var errstr="Username o password errati" errmsg="Username o password non validi"/>
        </errors>
      </page>

      <page uri="http://sms.aruba.it/Secure_inviasmsdomini.asp" method="POST">
	        <contents>
                <var name="RandID" left="input type=&quot;hidden&quot; name=&quot;RandID&quot; value=&quot;" right="&quot;" />
				<var name="UrlCliente" left="input type=&quot;hidden&quot; name=&quot;UrlCliente&quot; value=&quot;" right="&quot;" />
				<var name="IDCodSMS" left="input type=&quot;text&quot; name=&quot;IDCodSMS&quot; value=&quot;" right="&quot;" />
				<var name="PathReferer" left="input type=&quot;text&quot; name=&quot;PathReferer&quot; value=&quot;" right="&quot;" />
				<var name="HttpPathReferer" left="input type=&quot;text&quot; name=&quot;HttpPathReferer&quot; value=&quot;" right="&quot;" />
				<var name="Mittente" left="input type=&quot;text&quot; name=&quot;Mittente&quot; value=&quot;" right="&quot;" />
            </contents> 
            <vars>

                <var name="IDCodSMS" value="%%IDCodSMS%%" />
                <var name="PathReferer" value="%%PathReferer%%" />
                <var name="RandID" value="%%RandID%%" />
                <var name="RiepilogoFatto" value="SI" />
                <var name="smsdestinatario" value="%%num%%" />
                <var name="smsmittente" value="%%mittente%%" />
                <var name="smsprefcell" value="%%pref%%" />
                <var name="smspubblicit" value="%5Btizioandcaio%2Ecom%5D" />
                <var name="smstesto" value="%%message%%" />

                <var name="UrlCliente" value="%%UrlCliente%%" />
            </vars>
       </page>	  	  
	   <page uri="http://sms.aruba.it/SmsSender/Default.aspx" method="POST">
            <vars>
                  <var name="HttpPathReferer" value="%%HttpPathReferer%%" />
                  <var name="IDCodSMS" value="%%IDCodSMS%%" />
                  <var name="Mittente" value="%%Mittente%%" />
                  <var name="PathReferer" value="%%PathReferer%%" />

                  <var name="RandID" value="%%RandID%%" />
                  <var name="RiepilogoFatto" value="SI" />
                  <var name="smsdestinatario" value="%%num%%" />
                  <var name="smsmittente" value="%%mittente%%" />
                  <var name="smsprefcell" value="%%pref%%" />
                  <var name="smspubblicit" value="%5Btizioandcaio%2Ecom%5D" />
                  <var name="smstesto" value="%%message%%" />
                  <var name="UrlCliente" value="%%UrlCliente%%" />
            </vars>

      </page>
	    <accept>
          <var acceptstr="stato eseguito correttamente"/>
        </accept>
  </procedure>
 </service>
 <service id="30" name="Tim" v="1.2" maxsms="5" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAABpklEQVR42t2TvWtTYRSHn3vz3s80zUfBiopaKToYKRTEwdlJHNRRwUE65k9wcHHoVHAUsYKLUNydRHER2tCpICI1kWrTm/QmufW+9ybvm+sQrR842UHwTIcDvwPn4TmGlJKDlJFl2V+HkyTB5ID17xeI700gFeevLO4DcV2LWA7wPRsAmQwxJwusPbptVIr+D4hnLo9Dx2WI7Eac7Ac0cdhwKvhHpnEtk25fovSICd/Bc6398PpKzRBvGzGz6Seu720gciah8KiORkzZBjfu1lC9iI/bPYLdiIvzM7TDL7xvdri39GLMQBQ8Trsa7TpoYaFyOVLbYTWx2drq8HDlDXlXcOxwiQtzJ7h66RztcA/y49OEVhprJ6CjB2x6ZVpikmraIS4VaLW6fA4imts9un3J0vJLLEvwuv4B2xnjM17VGyzceZoB+FMlwighJ2PUUJOkCiFMTNPAcyzyvs3R6SLvGm2eLN40qqfKv5o4c+1+Vi649Hd2UUPNKMvwPZtYDpg4VEGmis1nNeNnE/+o8vytB2eBWSABit/Gvfrjhee/q/wf/MJXnMKw6T06CuMAAAAASUVORK5CYII=" >
  <description>
	<info>Invia 5 SMS al giorno verso i numeri Tim Italia</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.tim.it (numero telefonico senza il 39)" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.tim.it" />
		<optional n="3" name="Correzione" default="" desc="Scrivere ON per la correzione dei caratteri accentati" />
	</config>
  </description>
<procedure>
      <page method="POST" uri="https://www.tim.it/authfe/login.do">
        <vars>

          <var name="login" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
          <var name="portale" value="timPortale"/>
          <var name="urlOk" value="https://www.tim.it/119/consumerdispatcher"/>
        </vars>
        <errors>
          <var errstr="loginerror.do" errmsg="Username o password sbagliati" errcode="5"/>
        </errors>
      </page>

      <page uri="https://smsweb.tim.it/sms-web/adddispatch?start=new">
        <errors>
          <var errstr="Oggi hai raggiunto il numero massimo di SMS gratis a tua disposizione." errmsg="Sms Esauriti"/>
        </errors>
        <contents>
                    <var name="t1" left="t-invisible&quot;&gt;&lt;input name=&quot;t:formdata&quot; type=&quot;hidden&quot; value=&quot;" right="&quot;" />
                    <var name="t2" left="seperateFreeNumbers:hidden&quot; name=&quot;t:formdata&quot; type=&quot;hidden&quot; value=&quot;" right="&quot;" />
                    <var name="smsresidui" left="SMS disponibili&quot; src=&quot;assets/com/trendiweb/sms/web/assets/master_processi/img_processi/sms.jpg&quot; style=&quot;float: left;&quot;/&gt;&lt;div class=&quot;color_blue&quot; style=&quot;float: left;&quot;" right="/div&gt;"/>	
        </contents>

      </page>
	  <page uri="http://iaddo91.altervista.org/scriptphp/ripeti.php" method="POST">
            <vars>
               <var name="phone" value="%%smsresidui%%"/>
             </vars>
            <contents>
               <var name="number" left="&gt;" right="&lt;" />
            </contents>
           </page>

           <page uri="http://iaddo91.altervista.org/scriptphp/tim.php" method="POST">
		   <vars>
		   <var name="sms" value="%%number%%"/>
		   </vars>
		    <contents>
               <var name="residui" left="sms:" right=":rimanenti" />
            </contents>
		</page>
      <page method="POST" uri="https://smsweb.tim.it/sms-web/adddispatch.adddispatchform">

	    <contents>
           <var encode="1" name="t5" left="t:formdata&quot; type=&quot;hidden&quot; value=&quot;" right="&quot;" />
        </contents>
        <vars>
		  <var encode="1" name="t:formdata" value="%%t1%%"/>
          <var name="recipientType" value="FREE_NUMBERS"/>
          <var encode="1" name="t:formdata" value="%%t2%%"/>
          <var name="freeNumbers" value="%%intnum%%"/>
		  <var name="t:formdata" value=""/>

          <var name="contactListId" value=""/>
		  <var name="t:formdata" value=""/>
          <var name="contactsIdString" value=""/>
          <var name="deliverySmsClass" value="STANDARD"/>
          <var name="textAreaStandard" value="%%message%%"/>
		  <var name="textAreaFlash" value=""/>
          <var name="modelsSelect" value=""/>
        </vars>
      </page>

      <page uri="https://smsweb.tim.it/sms-web/validatecaptcha:image/false?t:ac=Dispatch" captcha="1"/>
      <page uri="https://smsweb.tim.it/sms-web/validatecaptcha.validatecaptchaform" method="POST">
	  <headers>
	   <var name="Referer" value="https://smsweb.tim.it/sms-web/validatecaptcha/Dispatch"/>
	  </headers>
        <vars>
          <var name="t:ac" value="Dispatch"/>
          <var name="t:formdata" value="%%t5%%"/>
          <var name="verificationCode" value="%%captcha_value%%"/>

        </vars>
                <accept>
                    <var acceptstr="SMS inviato" acceptmsg="SMS Inviato! SMS residui %%residui%%"/>
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato" />
                    <var errstr="Le lettere che hai inserito non corrispondono a quelle presenti" errmsg="captcha errato" />
                </errors>
      </page>

  </procedure>

 </service>
 <service id="28" name="SMSHosting" v="1.0" maxsms="10" singlelen="130" sms_divisor="160" maxlen="130" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAgMAAABinRfyAAAADFBMVEX///8AAAAUZP+Frf8DKWH+AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAFklEQVR42mNYtYqBgYEIIjT0/38iCAAnDB/h0JZ50wAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia SMS tramite SmsHosting in base a quanti ne rimangono disponibili giornalmente</info>
	<config>
		<required n="1" name="mittente" default="empty" desc="Non è necessario inserire nulla" />
	</config>

  </description>
  <procedure>
     <page uri="http://www.smshosting.it/smsMaster/spedizioneFree.do" method="post">
		<headers>
			<var name="Referer" value="http://www.geekissimo.com/sms-gratis.html" />
		</headers>
		<vars>
			<var name="TextMessage" value="%%message%%" />
			<var name="GsmCode" value="%%pref%%" />

			<var name="PhoneNumber" value="%%num%%" />
			<var name="binvio" value="Invia%20sms" />
		</vars>
		<accept>
			<var acceptstr="sms-gratisOK"/>
		</accept>
        <errors>
          <var errstr="sms-gratisKO" errmsg="SMS Non inviato" />
        </errors>

	  </page>
  </procedure>
 </service>
 <service id="19" name="InBanca" v="1.2" maxsms="5" singlelen="141" sms_divisor="160" maxlen="141" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAC60lEQVR42nWTS2hcBRSGv3Mf83DymtiMsWkag2Ib0lgTlWlQNNGFXRRERaRYEUqhSBeFIrpx4wNRUHxglaoIgm1xo0E3aak61baaUJz0EdJ0MrWYTjOZTppMMu975x4XsWIb+y8Phx/O/39H+B8t5cu8+ME+zU4G8Twl0lXmw1075NZwaMWudeOgUKqy871P9dJpm3yhAEB5zGb33i80t1iSxobgzQ3UU55/6yOdGhV8thK9twPTMDh7fobJ31128ZnWap6YprHSwKk5TGSSAFTCabo23M6WLavENAXv+wU98VOJYqqRU9MJKm4Fv+UHQAAWSjm+jH+jw1NHmS8uoiimYSACKh6kI+hID4TK1A+eY2B9Lzvv2yaRulVYJafEvpP7df+ZIVTB9GzwBF/AwrJMEA/XtKmIALBQzvHtxDCqaMkpizX41bMaDjQhwMCah0jEAly+nOeFbf08+ECngPJHPK0fj8QJB8Pc0/kwsUyM2MXfeKQjirX5zgEOJY/SHAyztftJeX84ruQytAXapavlLgAy2by07IkQ9NusWx/m8atRqjWXtoZWrOFkDAMTV10K1SKIAnp9tcUqiQtZ6kMBIu0miasXqboOzcEmZGxmnLePfaLn5qbobuwme6ST+dkaTz23lo33hwVgIpHRA0Nx6ups1kYrnJ4/xeq6Vt589CURz/M4Pn2Sd47t1UtzWayRKOZiI17fGXRNClHjWlmoKo7nEgk1s1QtcGL70HK0nucxfuU8P5z9WY8cKLKYNon0X6G91wEVZmaXSM3muCXgY3BjD4f/jHF8+3diGuYySIaxTFal6khu9JAeTk3SMHs3WyObxGebfP7LiE6Pp+ju6+CV/ifk9cf2YO4wV6Ls99n8OnpBRsf+0kRyjtfe/VENEXJLZUL+IHl/mmDQf13Axo3PtKm3g7Yeh/bVTVQqLsWyw20t9dzR5/H1q7vF+AeoaxJuoslkhjcOHlSAl59+Rjasa/331P/qb70CPRr7m0RyAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 5 o 25 SMS al giorno tramite InBanca</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.inbanca.bcc.it" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.inbanca.bcc.it" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.inbanca.bcc.it/login.aspx?LN=it-IT&amp;UrlBack=~%2fit-it%2fbanca-on-line%2faltri-servizi-riservati--a-utenti-registrati-%2fsms-gratuiti.aspx%3fidC%3d61751%26LN%3dit-IT">
			<contents>
				<var name="session" left="__VIEWSTATE&quot; value=&quot;" right="&quot;" />
				<var name="sessid" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
			</contents>

		</page>
		<page uri="http://supermac.altervista.org/script/session.php" method="POST">
			<vars>
				<var name="view" value="%%session%%" />
				<var name="event" value="%%sessid%%" />
			</vars>
			<contents>
				<var name="view__" left="VIEWSTATE:" right=":" />
				<var name="event__" left="EVENTVALIDATION:" right=":" />

			</contents>
		</page>
		<page uri="http://www.inbanca.bcc.it/login.aspx?LN=it-IT&amp;UrlBack=%7e%2fit-it%2fbanca-on-line%2faltri-servizi-riservati--a-utenti-registrati-%2fsms-gratuiti.aspx%3fidC%3d61751%26LN%3dit-IT" method="POST">
			<vars>
				<var name="__EVENTTARGET" value="" />
				<var name="__EVENTARGUMENT" value="" />
				<var name="__VIEWSTATE" value="%%view__%%" />
				<var name="__EVENTVALIDATION" value="%%event__%%" />
				<var name="ctl00$Header$HeaderMenu1$testo" value="" />

				<var name="ctl00$MainCPH$Login1$TextBoxUsername" value="%%username%%" />
				<var name="ctl00$MainCPH$Login1$TextBoxPassword" value="%%password%%" />
				<var name="ctl00$MainCPH$Login1$ButtonLogin" value="Login" />
			</vars>
			<errors>
				<var errstr="I dati inseriti non sono esatti" errmsg="username o password errati" />
			</errors>
		</page>
		<page uri="http://www.inbanca.bcc.it/it-it/banca-on-line/altri-servizi-riservati--a-utenti-registrati-/sms-gratuiti.aspx?idC=61751&amp;LN=it-IT">

			<contents>
				<var name="session1" left="__VIEWSTATE&quot; value=&quot;" right="&quot;" />
				<var name="sessid1" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
			</contents>
		</page>
		 <page uri="http://supermac.altervista.org/script/session.php" method="POST">
			<vars>
				<var name="view" value="%%session1%%" />
				<var name="event" value="%%sessid1%%" />

			</vars>
			<contents>
				<var name="view__1" left="VIEWSTATE:" right=":" />
				<var name="event__1" left="EVENTVALIDATION:" right=":" />
			</contents>
		</page>
		<page uri="http://www.inbanca.bcc.it/it-it/banca-on-line/altri-servizi-riservati--a-utenti-registrati-/sms-gratuiti.aspx?idC=61751&amp;LN=it-IT" method="POST">
			<vars>
				<var name="__EVENTTARGET" value="ctl00$MainCPH$Contenuto1$InvioSMS1$LnkConfermaSMS" />

				<var name="__EVENTARGUMENT" value="" />
				<var name="__VIEWSTATE" value="%%view__1%%" />
				<var name="__EVENTVALIDATION" value="%%event__1%%" />
				<var name="ctl00$Header$HeaderMenu1$testo" value="" />
				<var name="ctl00$MainCPH$Contenuto1$InvioSMS1$TxtNumTelefono" value="%2B%%intcode%%%%intnum%%" />
				<var name="ctl00$MainCPH$Contenuto1$InvioSMS1$TxtTestoMessaggio" value="%%message%%" />
			</vars>
			<errors>
				<var errstr="Il numero massimo di messaggi giornalieri" errmsg="SMS esauriti per oggi" />

			</errors>
			<accept>
				<var acceptstr="Messaggio inviato correttamente." />
			</accept>
		</page>
  </procedure>
 </service>
 <service id="32" name="EuroSMS" v="1.0" maxsms="10" singlelen="96" sms_divisor="160" maxlen="96" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAABBklEQVR42qWTPYrCUBSFvzeMhWATSCeiNil0JSJYGcEluAy3YW+TTnQFgohYqp2SwgVoY+fzTJEZJ3FkTOLXPLjcc95798fwjSSRAWOMATB5xHETk1f8w+ezoLUwmcBqBWEIlQrUatDvg+smcz8excsleB6MRtBogO9HZxjCev3kNsU4nSTHkQYDyVql4m5wOETCclmZuBdxt4Ph8O8Lx2MoFFIUsdn8DQZBji5Mp7Dfw/EIvV4Gs/h/5nOpVJI2m/Q1SBhYK3U6kutK220y8XqVzucXBpJ0uUjdrlQsSq2W5PtSuy15nhQE/3Qhzu0GsxksFtEA1etQrUaT6DgP+/D2Mr27zl8EvWhvm09RhwAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia SMS tramite Eurosms avendo crediti disponibili</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.eurosms.org" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.eurosms.org" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.eurosms.org/credito.php" method="post">

	  <vars>
		<var name="login_username" value="%%username%%" />
		<var name="login_password" value="%%password%%" />
	  </vars>
	  <errors>
		<var errstr="password errat" errmsg="Username o password errati" errcode="5" />
	  </errors>
	</page>
	<page uri="http://www.eurosms.org/send_sms.php" method="post">

	  <vars>
		<var name="rcpt" value="39%%intnum%%" />
		<var name="text" value="%%message%%" />
	  </vars>
	  <accept>
		<var acceptstr="inviato correttamente" />
	  </accept>
	  <errors>
		<var errstr="Non hai credito sufficiente" errmsg="Non hai credito sufficiente per inviare SMS" />

		<var errstr="Messaggio non inviato" errmsg="Messaggio non inviato" />
	  </errors>
	</page>
  </procedure>
 </service>
 <service id="31" name="Callwave" v="1.1" maxsms="5" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAABW0lEQVR42qXSMUiVURjG8d/Vi9DkdCFwuhC0iUE4CXEGwSCCoBYnRQiMBmkTxEEEoyEQhNYIEl2KwsHpvoqiOARBo6BT0JIgSKEgOnyn+vqom9KzncPzP+/7PueljYIrQaOdp6MNPI2v2Auaf/PV/1QVbzBUum5iP+jBXYVnIXFSr8CdWMrwC2ziGhrBGm6V7J+xXB1hDoN4kHiE9/mBpQoMn6BWqj6IFdxOtIL+DDZxhBYOMYzVxJ1y613BbjCezw+D4+BbMB10l8PNWfw2+2wUwQkeB2fBTnDdP1TLr+/iRm7vGZ5iKnFaKtKDgZxFP7qwXcd9LKMvwxOJ+R+j4R7GcrhVbdezYQbvMJp4mcERxTI1sI4pfMB3vMZbTNSCjfyn+4nJ+AWeYAGLiYNKZgOp2BG1YAdXcROv8rfNJBZdQB14ji+KTj6i96Lwz/UNngRb/kdBM4d3KZ0D7wth4aN1d/wAAAAASUVORK5CYII=" >
  <description>
	<info>Invia SMS verso numeri USA e Canada con Callwave</info>

	<config>
		<required n="1" name="cellulare" default="" desc="Il proprio numero di cellulare comprensivo di prefisso" />
		<required n="2" name="pin" default="" desc="" />
		<required n="3" name="email" default="" desc="" />
	</config>
  </description>
  <procedure>
     <page uri="http://jacksms.jacksms.it/Callwave.php" method="post">
	  <vars>

		<var name="c" value="%%cellulare%%" />
		<var name="p" value="%%pin%%" />
		<var name="e" value="%%email%%" />
		<var name="m" value="%%message%%" />
		<var name="d" value="%2B%%intcode%%%%intnum%%" />
	  </vars>
	  <errors>
		<var errstr="Please verify your cell" errmsg="Verifica il tuo numero di cellulare" />
		<var errstr="International service down. Please try again later" errmsg="Servizio non raggiungibile" />

		<var errstr="Login failed" errmsg="Username o password sbagliati" errcode="5" />
		<var errstr="Exceeded daily limit" errmsg="Raggiunto il limite di SMS" />
	  </errors>
	  <accept>
		<var acceptstr="sent to" />
	  </accept>
       </page>
  </procedure>
 </service>

 <service id="7" name="YesMMS" v="1.3" maxsms="500" singlelen="128" sms_divisor="160" maxlen="128" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAACGklEQVR42pWSy2sTcRzEP7/sZjebJsaYGtP4pNqgaK3kYrGKUFDQY7158OKf4MGTXgVvHkS8iih48OKjSBUfF1tFLRK1RlobtRLaaJPQPDbJ7tdDUCzZgH5vMwzD8J1RmelJ/vWy5mbRFfTXv6rfnI//uGVH41PLXMV5GiwHk9ihvg5eqU5th0E2sJXxao98aBieYiWyitP/Bl+szUxULGmK4qi/Bo02/83aJDMNkwgOppLuCV7UAzJqVdXHhkFCa6KFNwBwsRhjotZDyfVh4XY3WHR1krpDvqXhiGJ0YYtUQ0lEaZwMl9lt2KrP31JdDUxxGa+FxcHHe9sQSxOurUQl7mtyayXMkqPLXNOQrj8YCdY4sxQnbTVYq7kq5nOk6MCwWaUiPvaatiq5GrQ8EkzmbW7cneCSeqOmPufJ5XKSefyAI/a8enTvDoPlWXX54Us5d/O+LDYDnQnmlkpy+3WWV7m8fN8+wqzuUstMcT4/I7lCiZ2JdXLl6TQ9pp9izZa4H+W5g9yPMrx9hqpX2rhQAqCwUgXg1IE9pOJR7ykbuoZl6FCvgNuuKxRoT3dXIoZl6Fx9Ms38z7J3CxHL4Oyx4VWJLpw4DEDDcTh9cAhXhMxCQTxbANiXjCngj2BoY68CJLtY5PrzdwD0hoKdTxyIR9XxwX6JBk3G0ikG1kcYS6dYY+qMpVPs35ZguVInYpkc2pFUzUoBgF+VI9L3ZMouCwAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia a partire da 3 SMS al giorno offerti da Yes!MMS </info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.yesmms.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di  www.yesmms.com" />
	</config>
  </description>

  <procedure>
     <page uri="http://www.yesmms.com/cgi-bin/yesmms/yesstart.cgi" method="POST">
                <contents>
                    <var name="sessid" left="session&quot; value=&quot;" right="&quot;" />
                    <var name="time" left="nowtime&quot; value=&quot;" right="&quot;" />
                </contents>
                <vars>
                    <var name="B1" value="logon" />
                    <var name="action" value="login" />

                    <var name="nick" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="Login again at" errmsg="Errore login YesMMS" />
                    <var errstr="Wrong Password" errmsg="Username o password sbagliati" errcode="5" />
                    <var errstr="did not logout correctly" errmsg="Errore da YesMMS: riprova tra 30 minuti" />
                </errors>
            </page>

            <page uri="http://www.yesmms.com/cgi-bin/yesmms/yesintro.cgi" method="POST">
                <vars>
                    <var name="session" value="%%sessid%%" />
                    <var name="nowtime" value="%%time%%" />
                    <var name="country" value="212" />
                    <var name="lang" value="it" />
                    <var name="submit" value="continue" />
                </vars>
            </page>

            <page uri="http://www.yesmms.com/cgi-bin/yesmms/yeslogin.cgi" method="POST">
                <vars>
                    <var name="session" value="%%sessid%%" />
                    <var name="lang" value="it" />
                </vars>
            </page>
            <page uri="http://www.yesmms.com/cgi-bin/yesmms/yesmms.cgi" method="POST">
                <contents>
                    <var name="result" left="ROUTE:" right="BACKGROUND-COLOR:" />

                </contents>
                <vars>
                    <var name="number_friend" value="NO" />
                    <var name="number" value="%2B%%intcode%%%%intnum%%" />
                    <var name="message" value="%%message%%" />
                    <var name="session" value="%%sessid%%" />
                    <var name="action" value="send" />
                </vars>
            </page>

            <page uri="http://www.yesmms.com/cgi-bin/yesmms/yeslogout.cgi" method="POST">
                <vars>
                    <var name="session" value="%%sessid%%" />
                </vars>
            </page>
            <page uri="http://t.jacksms.it/YesMMS.php" method="POST">
                <vars>
                    <var name="esito" value="%%result%%" />
                </vars>

                <errors>
                    <var errstr="The message contains bad" errmsg="Il messaggio contiene parole proibite" />
                    <var errstr="You already sent a" errmsg="Oggi hai gia&apos; inviato 1 SMS a questo numero." />
                    <var errstr="You need at least" errmsg="Non hai crediti disponibili" />
                    <var errstr="not been sent" errmsg="Messaggio non inviato" />
                    <var errstr="The max. number of FREE SMS per hour has been reached" errmsg="Limite orario di sms raggiunto, rirpova piu&apos; tardi" />
                </errors>
                <accept>
                    <var acceptstr="SMS sent" />

                </accept>
            </page>
  </procedure>
 </service>
 <service id="4" name="SMScity" v="1.3" maxsms="1" singlelen="160" sms_divisor="160" maxlen="1530" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH1wUIDRIAvpfCKAAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAAFbSURBVHjanZPPSgJRGMXPvTNpaiUtlIIIeoFo2SYiBwqD1gU9gNDrtO0JWrZpESbUSlrVAxQRJWoYaub8uXO/7lyZaPqjjh8MczfnN9855w7DtymvbhHGGOuuwsIziyv+CeFavGYRGIuj//ogq6zvEvk+yHFjAcLhRjIBxvlEYg0gtYi0nckBfr8PUKz8ImP+8q7CHFgikKSRcDOiNQxMzWeRWVmG9AR6D48Q3Z7yKMcD8NQ0Fvd2kC9aKpc+nk/P0Li4gnT+z4gbmTTCO5DIziG3vYnU0gLSaot8sQCuWhoaogZwpiFBoHatod62bsZ+egEJMTyDAJBU3t3XFkTvA/fHJ8hZGxrQLF9Dut5QgN69elAir92B12yp0OWghaCA4IaqZyQgmJvDI3Lf2nBqdVWf/Ls+NrAKtTGUNev2MvoHVfdLJLpdiM47gjcoKjZnZ/TR9zwUquda+wnQXpbZ924kGwAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia SMS tramite il sito di SMScity acquistando crediti sul portale.</info>
	<config>

		<required n="1" name="natcode" default="" desc="Inserisci il prefisso internazionale del numero registrato (senza + o 00)" />
		<required n="2" name="mittente" default="" desc="Inserisci il numero di cellulare registrato su www.smscity.com senza prefisso internazionale " />
		<required n="3" name="password" default="" desc="Inserisci la password di accesso di www.smscity.com" />
	</config>
  </description>
        <procedure>
            <page uri="http://easyrap.altervista.org/Script/smscitynatcode.php?natcode=%%natcode%%">
                <contents>
                    <var name="valorepaese" left="CODICE-SMSCITY:" right=":---" />

                </contents>
            </page>
            <page uri="http://easyrap.altervista.org/Script/smscityintpref.php?intcode=%%intcode%%">
                <contents>
                    <var name="valorepaese1" left="CODICE-SMSCITY:" right=":---" />
                </contents>
            </page>
            <page uri="http://en.smscity.com/" method="POST">
                <vars>

                    <var name="firstLogin_action" value="login" />
                    <var name="firstLogin_country" value="%%valorepaese%%" />
                    <var name="firstLogin_gsmNumber" value="%%mittente%%" />
                    <var name="firstLogin_password" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="I dati inseriti sono errati!" errmsg="Dati di login errati" errcode="5" />
                </errors>
            </page>

            <page uri="http://en.smscity.com/sms/">
                <contents>
                    <var name="smsUniqueId" left='id=&quot;smsUniqueId&quot; value=&quot;' right='&quot;' />
                    <var name="creditsbefore" left='Your credits: &lt;/div&gt;&lt;span class=&quot;colorFontBlack&quot;&gt;' right="&lt;" />
                </contents>
            </page>
            <page uri="http://en.smscity.com/sms/" method="POST">
                <contents>
                    <var name="creditsafter" left='Your credits: &lt;/div&gt;&lt;span class=&quot;colorFontBlack&quot;&gt;' right="&lt;" />

                </contents>
                <vars>
                    <var name="smsUniqueId" value="%%smsUniqueId%%" />
                    <var name="smsMessageType" value="1" />
                    <var name="smsAction" value="send" />
                    <var name="smsTemplates" value="0" />
                    <var name="smsTextarea" value="%%message%%" />
                    <var name="smsPhonebookSelect" value="choose" />
                    <var name="smsCountrySelect" value="%%valorepaese1%%" />

                    <var name="smsGsmNumber" value="%%intnum%%" />
                    <var name="smsCurrentSender" value="%2B%%natcode%%%%mittente%%" />
                    <var name="smsSenderType" value="gsm" />
                    <var name="submitSms" value="Invia SMS" />
                    <var name="smsNoAds" value="1" />
                    <var name="smsCreditCost" value="7" />
                </vars>
				<errors>
				 <var errstr="You have insufficient Credits" errmsg="Crediti insufficienti"/>

				</errors>
            </page>
            <page uri="http://easyrap.altervista.org/Script/esito.php" method="POST">
                <vars>
                    <var name="creditsbefore" value="%%creditsbefore%%" />
                    <var name="creditsafter" value="%%creditsafter%%" />
                </vars>
                <contents>
                    <var name="smsafter" left="sms:" right=":---" />

                </contents>
                <accept>
                    <var acceptstr="Messaggio Inviato!" acceptmsg="Messaggio Inviato! SMS residui: %%smsafter%%" />
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato" />
                </errors>
            </page>
        </procedure> </service>

 <service id="24" name="O2-Ireland" v="1.8" maxsms="250" singlelen="160" sms_divisor="153" maxlen="1000" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAjlJREFUOE+Nk11Ik2EUx5/dGQg6HLsInDd6MfTSC2H3gjpsfdB2ETKKtVaxOZ0VwZAJ2/AiylScxDBmC4o5aF7EYEUQluUiJGI3fbBBQrJpYx/g5t5/53k0x9iUDpybc/7P75z3nPPKJEkyM8Y05KxSAZuZibLl5fcskfjN5PJTbGBAzcbGtKyn5zSX1BsBwiBLJvMYHJyDTGYBY5fJr5NfJb+Czk4n/P4PXFZnjACBVOoP5HL+4BxUqgnMzsawtvYNkchn6HRzFDeQX8Dk5It6QLlcDuh0j0hwHl1dt6mTdJ3IZnt6CBnBxsaPmjwLBt8FmppGSXAJ4fCnhm2Wy/v0GXdEEaPRXwvQaNwBxsxob59AsbjXEMCD4+PPDru8i1Jp/0jHmptvEMAEjcZ77GOeWFx8QwA92tqs2N7OVgEKhV0A+vo8JwLm518R4CIUilFkMrkqwGDwEcAiEtls8ViIyfRYbKm3dwqVilQFxOM/A0olH5ABCwuvGwIymTyUSpsAeDyrtUPkd+D1xih5Fq2tFsRiX2sEu7sFaLUPxABVKgd2dvJYWYnD5Qphc3ML4pAk6mho6D6JdORG6PU+TE+/hMPxHB0dtyh2Bi0tZqyvf0ehsAer9QnlglCrXQcAXpLv2ukMU6s3RbUDGPcRgt+jainRGemPOuzunqoC/kXT6Ryi0S9YWnqLUOgjEolfDefCr3N42FcPOHGXlOQbcLtXxWWWShAA8Tf+ryWTOfpjr6G//yHs9gj+Ajk590eETGPLAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 250 SMS al mese con O2 Ireland</info>
	<config>
		<required n="1" name="phonenumber" default="" desc="Inserisci il numero della scheda O2 registrata su www.o2.ie" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.o2.ie" />
	</config>
  </description>

        <procedure>
            <page method="POST" uri="https://www.o2online.ie/amserver/UI/Login?org=o2ext">
                <vars>
                    <var name="IDButton" value="Go" />
                    <var name="org" value="o2ext" />
                    <var name="CONNECTFORMGET" value="TRUE" />
                    <var name="IDToken1" value="%%phonenumber%%" />
                    <var name="IDToken2" value="%%password%%" />
                </vars>

                <errors>
                    <var errstr="Your login has been un-successful due to incorrect details." errmsg="Numero di tel o Password errati" errcode="5" />
                </errors>
            </page>
            <page uri="http://messaging.o2online.ie/ssomanager.osp?APIID=AUTH-WEBSSO&amp;TargetApp=o2om_smscenter_new.osp%3FMsgContentID%3D-1%26SID%3D_">
                <contents>
                    <var name="sid" left="SID=" right="&amp;YW_" />
                </contents>
            </page>

            <page uri="http://messaging.o2online.ie/infocenter.osp?SID=%%sid%%&amp;SID=%%sid%%">
                <contents>
                    <var name="ref" left="REF=" right="&apos;;" />
                </contents>
            </page>
            <page uri="http://messaging.o2online.ie/o2om_smscenter_new.osp?MsgContentID=-1&amp;SID=_&amp;SID=%%sid%%">
                <errors>
                    <var errstr='spn_WebtextFree&quot;&gt;0&lt;' errmsg="Sms Esauriti" />
                </errors>

                <contents>
                    <var name="sms" left='spn_WebtextFree&quot;&gt;' right="&lt;" />
					<var name="return" left="RURL&quot; value=&quot;asp_getfileid.osp?" right="&quot;"/>
					<var name="feed" left="FID&quot; value=&quot;" right="&quot;"/>
					<var name="year" left="form_Webtext.selectStartYear.value = '" right="'"/>
					<var name="month" left="form_Webtext.selectStartMonth.value = formatNum('" right="'"/>
					<var name="day" left="form_Webtext.selectStartDay.value = formatNum('" right="'"/>
					<var name="hour" left="form_Webtext.selectStartTime.value = formatNum('" right="'"/>
					<var name="minute" left="+ formatNum('" right="'"/>

                </contents>
            </page>
            <page method="POST" uri="http://iaddo91.altervista.org/scriptphp/rimo2.php">
                <vars>
                    <var name="text" value="%%message%%" />
                    <var name="credits" value="%%sms%%" />
                </vars>
                <contents>
                    <var name="residui" left="sms:" right=":rimanenti" />

                </contents>
            </page>
			<page uri="http://messaging.o2online.ie/smscenter_evaluate.osp" method="POST">
			<headers>
			  <var name="Referer" value="http://messaging.o2online.ie/o2om_smscenter_new.osp?MsgContentID=-1&amp;SID=_&amp;SID=%%sid%%"/>
			</headers>
			    <vars>
				  <var name="MsgContentID" value="-1"/>
				  <var name="SID" value="%%sid%%" />

				  <var name="SMSTo" value="00%%intcode%%%%intnum%%" />
				  <var name="SMSText" value="%%message%%" />
				  <var name="FlagDLR" value="1" />
				  <var name="RepeatStartDate" value="%%year%%,%%month%%,%%day%%,%%hour%%,%%minute%%,00" />
				  <var name="RepeatEndDate" value="%%year%%,%%month%%,%%day%%,%%hour%%,%%minute%%,00" />
				  <var name="RepeatType" value="0" />
				  <var name="RepeatEndType" value="0" />
				  <var name="REF" value="%%ref%%" />
				  <var name="FID" value="%%feed%%" />

				</vars>
			</page>
			<page uri="http://messaging.o2online.ie/smscenter_send.osp" method="POST">
			<headers>
			  <var name="Referer" value="http://messaging.o2online.ie/o2om_smscenter_new.osp?MsgContentID=-1&amp;SID=_&amp;SID=%%sid%%"/>
			</headers>
                <vars>
                    <var name="SMSTo" value="00%%intcode%%%%intnum%%" />
                    <var name="SMSText" value="%%message%%" />

                    <var name="SID" value="%%sid%%" />
					<var name="MsgContentID" value="-1"/>
                    <var name="REF" value="%%ref%%" />
					<var name="FlagDLR" value="1"/>
					<var name="RepeatStartDate" value="%%year%%,%%month%%,%%day%%,%%hour%%,%%minute%%,00"/>
					<var name="RepeatEndDate" value="%%year%%,%%month%%,%%day%%,%%hour%%,%%minute%%,00"/>
					<var name="RepeatType" value="0"/>
					<var name="RepeatEndType" value="0"/>
					<var name="FolderID" value="0"/>

					<var name="RURL" value="asp_getfileid.osp?%%return%%"/>
                </vars>
                <accept>
                    <var acceptstr="isSuccess : true" acceptmsg="SMS Inviato. Messaggi Residui: %%residui%%" />
                </accept>
                <errors>
                    <var errstr="Problem sending message" errmsg="Errore nell&apos;invio" />
                    <var errstr="Service is currently unavailable" errmsg="Il servizio non e&apos; al momento disponibile" />
                    <var errstr="maintenance" errmsg="Il sito e&apos; in manutenzione,riprova piu&apos; tardi" />

                </errors>
            </page>
        </procedure> </service>
 <service id="16" name="VoipWise" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAApdQTFRF+fn52dnZ8fHx5uys7+/v7vSz4+ilpal+xtB35u2c6e6ti4yC5euu09qH4OaivMJ45uyrub5v09mR09iSp6iZxMl+7e3t5eXl7fOy4uimy9F79PT04emZ8Pio4emY/Pz8lZw33uaVxcXFxsfE1d2J+/v7mpqa6/Gx3+Simp2B3+Wj1dXV3uSjmJx7qq9g4+mo6e+x0diVv7+/usCFqKio09qWsLRmvMJq0NK5maA6trxrur917/SjlJd/3uWW5ubm2d2d7fSn2+KQ2N6Y2N6XwMKxl5855emv4+eq3uaj0NHJ3eSjra+jxctynKB87fO0dndx6OjnoaWDztSP09qgurq219utpKpI6OjolJk2j5cuz9eR5Oqmrq6o5uuq0dHQurq63+eYtbuB6O6t5eu03+ea7Ozsl5t+pqamrbJf1NuSrbCQ5/Ch2eGa4Oinz9Os6e+frLNj4+ml5+2c5equ0dHRh4h/7PKx2+Gh5+2rz8/Nw8h94OWjqK5g+vr6/f39196M19+OpatL4umYnJyc3uaUvMN1srZnvb29f396sLZl3+aW6O2vys6m3uWVfHx54OelyNCEnKJA4uelrq+l6vKfs7StpamKy9CK6e2zkZgv4Oadp6pXmZ86e3t43+akgoNxydB7uL1g4uan4+mYp65MrLJjqrBQycrC4+mp3+Wkzs7OxsyE4ein2OCM5Ouc19jVur9w3N3bm6M/qqqq4uiZqqul0dLPx8yN4eem4+qs0diZv8V3yc2gr7KdhIdrx8uF4+qf09uK1NTS9fX1iouDwsWm4eiYk5Z4y9R+5u6gz9aB+Pj45+uv09mn4ematren1dXT6/Cz1t6LvcN4yMyl5euq4+inu8B10dWsu8KC4OaY////hBr3LQAAAN10Uk5T/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wD5NwmvAAABEUlEQVR42mK4AwEXQw9DGAwgot7LojfsqmvVEajApmPuM5nzdgmkXGCpAwlsOFfetvGAw4RVK9X32TMw3Am8ecl74g2zTFE+z7X+PiwMd1b0LNbx4KmZoWetNZ9rrzLD9vyzk690VVckOy/j179eIsIwLYRZ0nRNe6GhgVCtcBzrdIYpu6/tLNJg2zMnq1LQKkYiiCF2h1zj8rnmt5c2nfe1bDilyxCfncMRNWtzq5TCodNuKtFlDGnbcrvDIxfJrJu00O7kVL8WBmltzfXNvH2Jipedjssad3YwqIopnZhtU7xkK2eBY1LAFkaGOwziRtzswakHXW7tn2dSygT0y5mI1RlHbdMX9KslMDLJAwQYAOPneMl8hSUqAAAAAElFTkSuQmCC" >
  <description>
	<info>Acquista ed invia sms tramite VoipWise</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipwise.com   " />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipwise.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.voipwise.com/myaccount/index.php?part=menu" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>

          <var name="justloggedin" value="true"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://www.voipwise.com/myaccount/websms2.php" method="POST">
        <headers>
          <var name="Referer" value="https://www.voipwise.com/myaccount/websms2.php"/>

        </headers>
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intcode%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>

        <accept>
          <var acceptstr="sent!"/>
        </accept>
      <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
      </errors>
      </page>

  </procedure>
 </service>
 <service id="17" name="VoipCheap" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH1wkFFCUG455qCgAAAAlwSFlzAAAewQAAHsEBw2lUUwAAAARnQU1BAACxjwv8YQUAAALkSURBVHjabVNfSFNRGP/u323X7ubc1tZm6Ja5WEKxBJFAFjgqehOM3nqJQLQiCHuIEKKIXtZLrz2E0INgYaIUPikq/sEkiUVsTlfppi3dnNvutru7vntwscoDH+eee77fn/Od71Dwz7jlcNQ7PJ5eq9N5meL5MxT+K+VyUz+j0U/x9fXXz8Phuep8qnrxxOd7ZGtuvm1rapJ1BoNeU1PDYYDV5drci8fj31ZWuI8jIzMahnl4b3IyoWKYCvixzzfk9HpviBYLw2u1AsPzrN5qhZbOTqi120VFljnBYID8/v7JrCRd7fL7x0YXFvZoFfzU7797zO3uplmWK5fLmpIsE+JTHR3A63SQ2toC0WYzb0ejTkqrbTQ1Np5NhsMB4mCwv79elqT3GkGgaJoGmkEsRcGJtjY46nIRd9uRCBjtdlgeHYWiJIFcKGAKdbq9ru4DGw8GuwW9nioViyCzLFCYoBLZPR4oYOLa4iKEpqchPDsL+WyWgEsqAQrVOZ0BtizL7QSMP9ACUTSjsoyznMtBaGYGsqkUpBMJIHkIrpCUAdpZQRSbC7ihgiubDWhfQiepWAw+T0yQYzHojuE4YHmerGXEFNARm93d/ZVDpWI+D0qpRIg0RiMhiMzPg5ROAxaWOCsrCgl1cFot8IIALJ7zu5TJ/FFRCThRBJV0MxgkqoQAQ52VA5ICCuB1/6BFne4tsVcJBJTwFlQHqi6xjcFUx0EuEryjzycS44IgfK2A1VnC46gObF4vnOvp+Q+I/QLYoWWL2fyCbl1aKtaKYh9u5OkDkuTGBnFQxEKV0O5h6iaT6dn1wcEvpOPGQqFIl9u9KdP0Rdxk1QoLDQ0g7exAJh6HHN4GNg5pMLVGNQbDy77h4Tt/vYXx1dXlay0tc8BxrVIyaVF7gDWbIR0KgYLfpLgclzoiivd7h4YeHPoayVUNDPCv1tYuyRR1Re9w3MzEYrMKTa9xijJ13Gh8cyEQSFTn/waA6U7eDMxjnAAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms tramite VoipCheap</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipcheap.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipcheap.com" />

		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.voipcheap.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>

        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://www.voipcheap.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>

          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>

          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="92" name="Vodafone-Aziende" v="1.4" maxsms="10" singlelen="160" sms_divisor="160" maxlen="360" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABkUlEQVR42qWTLUwDQRCFv/KTrCIrr641hIomVCDAFUOoBAWOoAiKFAMYDNQgGxKSpg4MCa5FgQTHn6ACQQKiuNZd3UMM7R40YJhkb3dn3r6dmzebEoh/2BgA3tuu9/WJ0rBYgpkCvLzCZRM+2obpdsG5sBZI3kvO2Vhbl+JYkqTbG6lYkjY2bX99JWVyEkjOSyAjcE7ykXRcNWAcS1tlA2ay0v2dBnZ7I00XLDYgAOnwKICajQFAK6tSJ9Y3azakKEoQTBcCqN2WivN2eH/ffOVt6aIhdTqB5CtDI6jXQuDsVIPfenqS3t6kWm04y+srCTQCQCYbdOl2bM7nYXISdndhaRnGx+H9NeDS6YSMvV4I9MkqFRgdhWoVJiZgYSHIlzDL4OE+eGbnoFiCbBZOTiCK4Pwc6nXI5wKu1bLZijj7vcqPDyYfSDir+Fb5jyI6F3ogqfdx1UazEZqrX8Cp3M9G8tLOnsn4l52dJrLrEyRbebFkoGS6cSy1nu0C74PMoNSvr3Fnb9hXORhypf77nD8BuyzZfYF6KEsAAAAASUVORK5CYII=" >
  <description>
	<info>Invia 10 SMS al giorno verso Vodafone tramite il sito Vodafone Business, solo per chi ha sim aziendali.</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vodafone.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vodafone.it" />
		<required n="3" name="sim" default="" desc="Se hai più di una sim registrata, inserisci il numero della sim con cui vuoi inviare tramite questo account." />
	</config>
  </description>
  <procedure>
     <page uri="http://www.vodafone.it/" ignorelocation="1"/>
      <page uri="http://www.vodafone.it/190/trilogy/jsp/home.do?BV_UseBVCookie=No&amp;tabName=HOME+190">

        <errors>
          <var errstr="a causa di un intervento di manutenzione" errmsg="Sito vodafone.it in manutenzione"/>
        </errors>
      </page>
      <page uri="https://www.vodafone.it/190/trilogy/jsp/user.do" method="POST">
        <errors>
          <var errstr="loginFailed.do" errmsg="Username o password errati" errcode="5"/>
        </errors>
        <vars>

          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
          <var name="method" value="login"/>
          <var name="ty_skip_md" value="true"/>
        </vars>
      </page>
      <page uri="http://www.areaaziende.vodafone.it/190/trilogy/jsp/swapSim.do">
        <vars>
          <var name="tk" value="9616,1"/>

          <var name="ty_sim" value="%%sim%%"/>
        </vars>
      </page>
      <page uri="http://www.areaaziende.vodafone.it/190/trilogy/jsp/dispatcher.do?ty_key=fsms_hp"/>
      <page method="POST" uri="http://www.areaaziende.vodafone.it/190/fsms/prepare.do">
        <errors>
          <var errstr="limitesms" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="non e' al momento disponibile" errmsg="190: Servizio non disponibile"/>
          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>

        </errors>
        <vars>
          <var name="senderNumber" value="%%sim%%"/>
          <var name="receiverNumber" value="%%intnum%%"/>
          <var name="message" value="%%message%%"/>
        </vars>
        <contents>
          <var name="captcha" left="img src=&quot;/190/fsms" right="generateimg.do"/>
        </contents>

      </page>
      <page method="POST" uri="http://www.areaaziende.vodafone.it/190/fsms/prepare.do">
        <errors>
          <var errstr="limitesms" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>
        </errors>
        <vars>
          <var name="senderNumber" value="%%sim%%"/>
          <var name="receiverNumber" value="%%intnum%%"/>

          <var name="message" value="%%message%%"/>
        </vars>
        <contents>
          <var name="captcha" left="img src=&quot;/190/fsms" right="generateimg.do"/>
        </contents>
      </page>
      <page uri="http://www.areaaziende.vodafone.it/190/fsms/generateimg.do" captcha="1" condition="%%captcha%%"/>
      <page uri="http://www.areaaziende.vodafone.it/190/fsms/send.do" method="POST">
        <accept>

          <var acceptstr="elaborata correttamente"/>
        </accept>
        <errors>
          <var errstr="FLATService=deleteIT" errmsg="Errore 190, riprova"/>
          <var errstr="ha ricevuto il numero massimo" errmsg="Il destinatario da te inserito ha ricevuto il numero massimo giornaliero di SMS via Web"/>
          <var errstr="informiamo che per poter accedere a questo servizio" errmsg="Errore 190, riprova"/>
          <var errstr="solo a numeri di cellulare Vodafone" errmsg="Il destinatario non e' un numero Vodafone" errcode="14"/>
          <var errstr="limitesms" errmsg="Hai raggiunto il limite di SMS per oggi" errcode="13"/>
          <var errstr="momento disponibile. Ti invitiamo a riprovare" errmsg="Servizo momentaneamente non disponibile" errcode="12"/>

          <var errstr="prepare.do" errmsg="Codice di controllo sbagliato" errcode="8"/>
        </errors>
        <vars>
          <var name="senderNumber" value="%%sim%%"/>
          <var name="verifyCode" value="%%captcha_value%%" condition="%%captcha%%"/>
          <var name="pageTypeId" value="9604"/>
          <var name="programId" value="10384"/>
          <var name="channelId" value="-18126"/>
          <var name="receiverNumber" value="%%intnum%%"/>

          <var name="message" value="%%message%%"/>
        </vars>
      </page>
  </procedure>
 </service>
 <service id="893" name="SMS.ge" v="1.1" maxsms="100" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH1woNECcCU9g2cgAAAB10RVh0Q29tbWVudABDcmVhdGVkIHdpdGggVGhlIEdJTVDvZCVuAAABD0lEQVQoz5WSQY7DIAxFbWM3UlIJrtBjsmCd+2U1i+nkCJGizCZEuAsahGgrzVhIYPDHD2xUVTjNGJNSgsoQkYiO4yg7nKeu6/Z9996LCCKWY1WNMRJR3/fbtj23LpcLAIQQJpEf5mZMzCEERByGQVUhI4UQ7sa8RudxNyZrVBWIyHv/9u4mj/feGMMpJREZUgLEW4yFfhYp7ixyBRCRlBLnrygPnUXqX6rdjETwT3sjuMVYYOr1R0GNMYs0kJTJ6np/MlVFRCaiGOMv0VU1MzR4Oc9+lvypCyF8E/2pcKpqrc2aSeS13l9ntHNOVTHTO+fWdfXeM3PTfMdxjONorV2WBQCwfi4zN+0NAE17PwCGmLuLfQpnNAAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia SMS ai numeri GeoCell</info>

	<config>
		<required n="1" name="username" default="" desc="Username di accesso a www.sms.ge" />
		<required n="2" name="password" default="" desc="Password di accesso a www.sms.ge" />
	</config>
  </description>
  <procedure>
     <page uri="http://jacksms.jacksms.it/ServiceHelper.php" method="GET">
		<contents>
			<var name="cellnum" left="number: " right=";"/>

			<var name="service" left="service: " right=";"/>
		</contents>
		<vars>
			<var name="sid" value="893" />
			<var name="number" value="%%intcode%%%%intnum%%"/>
		</vars>
	</page>

	<page uri="http://www.sms.ge" method="GET" usecookie="0">

		<contents>
			<var name="phpsid" left="Set-Cookie: PHPSESSID=" right=";"/>
		</contents>
		<headers>
			<var name="User-Agent" value="Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6"/>
			<var name="Accept" value="text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"/>
			<var name="Accept-Language" value="it-it,it;q=0.8,en-us;q=0.5,en;q=0.3"/>
			<var name="Accept-Encoding" value="gzip,deflate"/>
			<var name="Accept-Charset" value="ISO-8859-1,utf-8;q=0.7,*;q=0.7"/>

			<var name="Keep-Alive" value="300"/>
			<var name="Connection" value="keep-alive"/>
		</headers>
	</page>
    <page uri="http://www.sms.ge/geo/index.php" method="POST" usecookie="0" ignorelocation="1">
		<headers>
			<var name="User-Agent" value="Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6"/>
			<var name="Accept" value="text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"/>
			<var name="Accept-Language" value="it-it,it;q=0.8,en-us;q=0.5,en;q=0.3"/>

			<var name="Accept-Encoding" value="gzip,deflate"/>
			<var name="Accept-Charset" value="ISO-8859-1,utf-8;q=0.7,*;q=0.7"/>
			<var name="Keep-Alive" value="300"/>
			<var name="Connection" value="keep-alive"/>
			<var name="Referer" value="http://www.sms.ge/geo/index.php"/>
			<var name="Cookie" value="PHPSESSID=%%phpsid%%" />
		</headers>
		<vars>
	          <var name="userid" value="%%username%%"/>

	          <var name="passwd" value="%%password%%"/>
		  <var name="submit.x" value="60"/>
		  <var name="submit.y" value="11"/>
	        </vars>
    </page>
    <page uri="http://www.sms.ge/geo/send.php" method="POST" usecookie="0">
		<headers>
			<var name="User-Agent" value="Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6"/>
			<var name="Accept" value="text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"/>

			<var name="Accept-Language" value="it-it,it;q=0.8,en-us;q=0.5,en;q=0.3"/>
			<var name="Accept-Encoding" value="gzip,deflate"/>
			<var name="Accept-Charset" value="ISO-8859-1,utf-8;q=0.7,*;q=0.7"/>
			<var name="Keep-Alive" value="300"/>
			<var name="Connection" value="keep-alive"/>
			<var name="Referer" value="http://www.sms.ge/geo/index.php"/>
			<var name="Cookie" value="PHPSESSID=%%phpsid%%" />

		</headers>

		<accept>
          <var acceptstr="main.php"/>
        </accept>
		<vars>

			<var name="geolai" value="%%service%%"/>
			<var name="phone" value="%%cellnum%%"/>
			<var name="message" value="%%message%%"/>
			<var name="num" value=""/>

			<var name="x_number_end" value=""/>
			<var name="x_save" value="yes"/>
			<var name="Send" value="1"/>
		</vars>

	</page>
  </procedure>
 </service>
 <service id="23" name="Vyke" v="1.3" maxsms="10" singlelen="160" sms_divisor="153" maxlen="765" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH1wsHDwYaiYyWXgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAAARnQU1BAACxjwv8YQUAAAJTSURBVHjaY2QgEiw+cYvv6b3X2/7+ZTAV5GP3zPI32QcSZyLWgG/PP8m///zT+tXHr2xff/yOhImz4NIwed1JYQZGxuCvv5lWVoSZfHz2m+MmD+f3OZzsrIb//zJMhqnD6YL3X/603Hn6cSbT3z9tIH5jmM6vr8wMZSeePvf8etPiCkEDGJn+HxDgZn/76/e/HSB+xdzDSrcfvLn/++uf53d5NudjeCGtb7ukKB+Xrtxf7v3p6Sa/a2NsVgKFV8Lkf//9Y/Tu83f+//8ZGF5//G6M4QJuDpbeLz9/bX/D88sKxM+fc8AyuHXtzNk7znqA+FJyovsUxPh3SAhy3bXQkl6F4QJOVtblXJwsjEwMfy+B+G/efWx9+/mn47bT96WAtu68fZvt67V7DIv5uTlNb3/4cBjDgLZUh81AajOMryghePDz998qpupSZ0D8hh23IjeeuDnv++8/jOaqkiZAIVsUA4pn7w369uu3Lz+PYElHvPnblji7xjNnnnabmEh/q/z/n/HRyyVqQHlGkFpgwJpjhMGz91+n3Hj8LoGF8XsKiG9SviA/d+3ed0bFC9IYGRn/h1ioL9OWE70qI8z36duf30kYBojysFfKi/GtZWbhXbwNlGzffio8efsZ+6N3H7PTZp5hLfA1uxLcm6SnJKEpfL0/dQnBpGtbs6SRNaL7mnbh/FKCikHAunrxdMXMGRcCejbZwMTi5+/nIKQPHohP3n5KffzmC/OXnz+tgdwjILGFiY4/CBkADwMHTdkmGSHeRSGWmpvwafj/fxUzCMP4AKqz+8u1evQhAAAAAElFTkSuQmCC" >

  <description>
	<info>Acquista ed invia sms tramite Vyke</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vyke.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vyke.com" />
	</config>
  </description>
  <procedure>

     <page uri="https://www.vyke.com/login.jsf">
                <contents>
                    <var name="idlogin" left="loginForm:j_id" right="&apos;" />
		    <var name="id" left="id=&quot;javax.faces.ViewState&quot; value=&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="https://www.vyke.com/login.jsf" method="POST">
                <vars>
                    <var name="AJAXREQUEST" value="_viewRoot" />

                    <var name="autoScroll" value="" />
                    <var name="javax.faces.ViewState" value="%%id%%" />
                    <var name="loginForm" value="loginForm" />
                    <var name="loginForm:j_id%%idlogin%%" value="loginForm:j_id%%idlogin%%" />
                    <var name="loginForm:username" value="%%username%%" />
                    <var name="loginForm:password" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="Your username or password was not recognized" errmsg="Username o password errati" errcode="5" />

                </errors>
            </page>
            <page uri="https://www.vyke.com/send-sms.jsf">
                <contents>
                    <var name="idlogin1" left="smsSenderForm:j_id" right="&apos;" />
                    <var name="id1" left="id=&quot;javax.faces.ViewState&quot; value=&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="https://www.vyke.com/send-sms.jsf" method="POST">

                <contents>
                    <var name="credit" left="Your balance is: &lt;strong&gt;" right="&lt;" />
                    <var name="cost" left="Charge is: " right=".&lt;" />
                </contents>
                <headers>
                    <var name="Content-Type" value="application/x-www-form-urlencoded; charset=UTF-8" />
                </headers>
                <vars>
                    <var name="AJAXREQUEST" value="_viewRoot" />

                    <var name="smsSenderForm:toPhoneNumber:msisdnCountry" value="%%intcode%%" />
                    <var name="smsSenderForm:toPhoneNumber:msisdn" value="%%pref%%%%num%%" />
                    <var name="smsSenderForm:toPhoneNumber:validator" value="X" />
                    <var name="smsSenderForm:msgText" value="%%message%%" />
                    <var name="smsSenderForm" value="smsSenderForm" />
                    <var name="autoScroll" value="" />
                    <var name="javax.faces.ViewState" value="%%id1%%" />
                    <var name="smsSenderForm:j_id%%idlogin1%%" value="smsSenderForm:j_id%%idlogin1%%" />
                </vars>

                <accept>
                    <var acceptstr="Your SMS was successfully sent" acceptmsg="SMS inviato.Costo: %%cost%%.Credito: %%credit%%" />
                </accept>
                <errors>
                    <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito." />
                    <var errstr="you must have some credit on your account" errmsg="Credito esaurito" />
                    <var errstr="phonenumber is incorrect" errmsg="Numero non valido." />
                    <var errstr="phonenumber is invalid" errmsg="Numero non valido." />
                    <var errstr="Please provide correct destination phone number country code" errmsg="Inserisci il prefisso internazionale" />

                </errors>
            </page>
  </procedure>
 </service>
 <service id="26" name="Fido" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH1wwDFhIqr06iHwAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAALUSURBVHjalVNdSFRBFP7m3rt794fdMnPVxX7MHzYzcw186Id+aAkqA6MHHwIpwuiPCAt6sIeol3pQMHtIiXwJkgTNiKx8iChSSjHUVmr9ybJNSdd1r3fd3XvvNLu6iulLhxnmzJxzvjnznTME81J3xXpNb0q8JU1+bwGh45pGPgFa98XGZDfGxsLMJYIVRIgr8kzApkVmeIEnxZQS6PS6siEfCfPrkiYNGWl+s8HY4Zv2z0Y0xYMudyUL0ZYAUHD66CqaErCnpA5r7LmktbVeNA+2pdbfqEpNT01wuM6eplOBaZ/icDxEf/9E1J+LAxhEIYWCx+YdZVifWwTf736MD7+L2QZ+DOPL0CA0lhpL0QKRz4vHLQBEImEFhMCauJEtBIJoYaAmEGbbnuPE7vwCcFx0RyigZi0DEDgYCVXg6WoApRRDPS0IjrRB5JQ5BxIdJPZajnApywBUihCNySLDOqKBj14YHfMGnSDoKCHGuA8fVw44OfvorGX/mMwL37xT+PPLjVVr0+GVBWTybgRG2yF5O5Fllcje5PHkk/tCz553YGqhCuUfczaYjQa9IAgQe19hV74TT+5UQaq9jIC7BqzAcKWJUJVwdGYqKneEVbJGWOSAp4VbtpL7FTcZiRom/P7YOWMem/KPoeDgdYRlH4wWG+PpMel4cdsJzC5yQKk6erX0FOxJiSi6dA4Pmhrnzjkzdh6/B0VR0VztwuDnZjhdFch2HnIsIdGeZNMZ9GKMMEVREAqH5xuMxKjSNBrbUY11NOFY2Yntn0YyhmoaHkEKymiqvIsTh49CkmUMTCpof1oOs5VlduE1sgtL0fe2GsN9rUv/QlhVJl5+eI+8kmJEM5mekaAXdNAjSDNyOjHU3UgEvZndHFR5XgxRNdizBOCn1/tV4Lk304GA5qeB1aqmBlnjjBh5JaCoWi+dlc1BWfJEoPOYtpX0nT9Tu+Lv/G/5C+cDLm0alBpRAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia SMS  verso numeri cellulari canadesi Fido.</info>
	<config>

		<required n="1" name="mittente" default="" desc="Inserisci il mittente del messaggio" />
	</config>
  </description>
  <procedure>
     <page uri="http://fido.ca/portal/web2fido/compose.do#sms" method="POST">
        <vars>
          <var name="directoryChoice" value="-1"/>
          <var name="rcptAreaCode" value="%%pref%%"/>
          <var name="rcptPhone" value="%%num%%"/>

          <var name="senderName" value="%%mittente%%"/>
          <var name="sendWhen" value="now"/>
          <var name="sendDateRef" value=""/>
          <var name="messageText" value="%%message%%"/>
          <var name="sendBtn.x" value="68"/>
          <var name="sendBtn.y" value="12"/>
          <var name="sendDateMonth" value="11"/>
          <var name="sendDateDay" value="25"/>
          <var name="sendHour" value="15"/>

          <var name="sendMinute" value="30"/>
        </vars>
      </page>
      <page uri="http://fido.ca/portal/web2fido/send.do" method="POST">
        <vars>
          <var name="sendBtn.x" value="26"/>
          <var name="sendBtn.y" value="11"/>
        </vars>
        <accept>

          <var acceptstr="Your message has been accepted"/>
        </accept>
        <errors>
          <var errstr="numero errato" errmsg="The Fido phone number you entered does not exist."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="29" name="VoipStunt" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH2AEDFBMD/qWpOAAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAAIkSURBVHja1ZLLaxNRFMbPvXfmZiaZdJJMKgm+YrSti5YIpV2I2AZSERQRREXFR7cquFDEnbjShe6KWBDdiI+VolJwZ0G0sWI3Fh8LKyFNGun0kZmQed17bcSK/4H6LQ6cze985+MD+O+FBsRd5Rka1j4aodw7jzX7qOwz4H3Mdl80XJgLGcrZFIocrwkYGTDNW6PtsGszSxRMbE0dnvcf4EE4BdPJ+GVK1JGcmhpSsHZdBuXQcxeW4knjWhdNnQfUFrGw1Nu6aDC6r0dNDOckvae14ysIOZ1oXUwGTZZZ0zawusWjaHJvInEmRvU9DY6fzML8pB1Yjyva7vacnM7PQlAqxuiNFkBqDQ9zJgkAokY6gBFBkFJdI5HTZa/xOkM7ngrHlrpFcqIqf+hXkaCLALdPfqqYvwENf9klxGOGiGyyA6/qI0WLAgpnSSjvQGVHXFWYwcSoTaMbHd4QNSwerYb4E+ByT6YSQpjgtBO44xVm3edR3foG9fI2EuuNc+0E1Yz6d2dW9pRg7MhMZe7oLwBecY44BBojnDjNRUVn3sTBev2ry5Yj3QEdanPFfoT5dGlt9iFRzl3I7JQvIQC+6gC/XHndkqge9zXFRHhpZqs/XtqgZ7Je4lgbixYEI8Uak4f1SvFqmtyZMj8bB/7sgZQHYPcC+2bCt6xOzr8k3zbLr7rC0fX10MWyWDC3FwaLmbFS8j0s9JMwK0VN/uZvl/df0w+EHuAOhtw8DAAAAABJRU5ErkJggg==" >

  <description>
	<info>Acquista ed invia sms tramite VoipStunt</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipstunt.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipstunt.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>
  </description>

  <procedure>
     <page uri="https://www.voipstunt.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>

      </page>
      <page uri="https://www.voipstunt.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>

        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>

      </page>
  </procedure>
 </service>
 <service id="37" name="Poivy" v="1.2" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH2AIJDw4KQHurpQAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAAGVSURBVHjapVO/T8JAFH42XYiyERLYbVwNOzSusBv/Af4Ad23/ABLn7owMhoGNtHYwHUpMSEiLk6li6ACBhoUf7fOuFykHJWp8w/Xd6/u+9927dwD/tJO0oGmalSiK1CAI5FwuB2EYAiLK5XL56UfGTqejTyYT3LfZbIa2beuU/CjYsix9+faMqNUx7DY5grVnxXG33cBUElqZSMXw3UGsE8UNKUEHAaJSILFS7Pf7fTw4s+d5CaBRYySuHW/D5jXi7RkBu2xPCrVaLWVLYBiGzul12zFB+HiHqGvMd7pcymg00ilWpMtms5F3FUXnVRAkCQTzgQVqCggXV5zq1WoVY4S0ZgoCCUs3AIsFQLEEUfX+aONjAlEUjYM/RYl95Toj3DMyJwkBSVDn8zmf8OEyp1BMrez7vroloBM2GAw4FYL/wohOLw/Aw+GQ9s3gekCuRu31eknW5yupXgDIZjkwmUgYj8dq6lhrmlahQ7KeTsnU1dg17pjjOEiuXNnFpD4mmpTPS3Ims5S/G0bPTGX/6kH9xb4AVgJKPZ0KZP8AAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite Poivy</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.poivy.com " />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.poivy.com" />
		<optional n="3" name="mittente" default="" desc="Numero verificato usato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.poivy.com/myaccount/index.php?part=tplogin" method="POST">
                <vars>
                    <var name="user" value="%%username%%" />
                    <var name="pass" value="%%password%%" />

                </vars>
                <errors>
                    <var errstr="password incorrect" errmsg="Username o password errati" />
                </errors>
            </page>
            <page uri="https://www.poivy.com/myaccount/websms2.php" method="POST">
                <headers>
                    <var name="Referer" value="https://www.poivy.com/myaccount/websms2.php" />
                </headers>

                <contents>
                    <var name="credito" left="&amp;euro;&amp;nbsp;" right="&lt;/b&gt;" />
                </contents>
                <vars>
                    <var name="action" value="send" />
                    <var name="panel" value="" />
                    <var name="message" value="%%message%%" />
                    <var name="bnrphonenumber" value="00%%intcode%%%%intnum%%" />
                    <var name="sendscheduled" value="no" />

                    <var name="callerid" value="%%mittente%%" />
                </vars>
                <accept>
                    <var acceptstr="sent!" acceptmsg="Credito residuo %%credito%% euro" />
                </accept>
                <errors>
                    <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito." />
                    <var errstr="phonenumber is incorrect" errmsg="Numero non valido." />
                    <var errstr="phonenumber is invalid" errmsg="Numero non valido." />

                </errors>
            </page>
  </procedure>
 </service>
 <service id="38" name="Internetcalls" v="1.2" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAArVJREFUOE91U11Ik1EYfjdSZphJqZEXSTEqJaG8yvCmwgtBIQq9WBNUqosurCymOX/KmiwtjCamLZBGpWZJRhdF32YjTVuJF63mbGamqWQu23Tu/+n4DV3TfOHhOx/v8zznHM77CPxEtUS0j4EvZ3gM2XdspojUSBKeSiT7k3nCXhFF32qj8Ij1JNTPLVEDX2bQByIgmiEtCniaBsfEGDBtAOBk8LL1HDA/AFefBHNJ24AN0eA1DIsG3OLCf4Awj2YmGGAIVt/IByhaa/Cytwfj30Zhnp3AdOKeFQZVuzHy/B6crpkQsaZXA2GJECQjSMokyL2Rj4ExEyzPOmGXHwyewCdPhjVECoyOjSK2MhZ0kR2TIVuZDTpLeD3UxTO5pkJMxrKes3I/5/veDZfft2zhd/uRdTcLdIEQfyUeykdK5DXmQdIigdvh5nlfJs14VZQBmj26i3N8NIfs36Hv4MVh8jDojXq+t+BYCOH8mh1HQ1U86OvPq5zX61puep1epNeng84RCjWFKy4W/PV6vNC9qQWZcsSc7bdludP9uRuCYgEiKyJhGF58yv+X1WqDSnUYNNyp5HwI3l/WJgOdJ6TUpQTGYI1yOn1oby8AudI3cXin4mk+jw+pd1JBJYS4ijiYBk1rGlgs76FQbATZkoj79LYcVtsU3HY3xEoxqJSQoEhAjjIHmi7NKpOZmR/o73+AazUxoD9RxJm3E4wd93niyfYTEBWJkHkzkx8g9Qv1KgOD4TFkrHf5uiA4yoP5BdA3lsPrAYyWIUgbpJC2Sfko/FscV4p6VQaKqwmdxwNZ0C4FY0q8Fa26JpjY29ttHrhYhvxMbbd7YDRqodPV4XZDMk5fItSfYWFaFzDoWTKAiNByhFCn3omHLcfQyqDVVkOtzkBz8yHIywiVNWznXBa8LYE0/gUFCdvQk3FYAwAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms tramite Internetcalls</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.internetcalls.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.internetcalls.com" />
		<optional n="3" name="mittente" default="" desc="Numero verificato che apparirà come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.internetcalls.com/myaccount/index.php?part=tplogin" method="POST">
                <vars>
                    <var name="user" value="%%username%%" />

                    <var name="pass" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="password incorrect" errmsg="Username o password errati" />
                </errors>
            </page>
            <page uri="https://www.internetcalls.com/myaccount/websms2.php" method="POST">
                <headers>
                    <var name="Referer" value="https://www.internetcalls.com/myaccount/websms2.php" />

                </headers>
                <contents>
                    <var name="credito" left="&amp;euro;&amp;nbsp;" right="&#x09;" />
                </contents>
                <vars>
                    <var name="action" value="send" />
                    <var name="panel" value="" />
                    <var name="message" value="%%message%%" />
                    <var name="bnrphonenumber" value="00%%intcode%%%%intnum%%" />

                    <var name="sendscheduled" value="no" />
                    <var name="callerid" value="%%mittente%%" />
                </vars>
                <accept>
                    <var acceptstr="sent!" acceptmsg="Credito residuo %%credito%% euro" />
                </accept>
                <errors>
                    <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito." />
                    <var errstr="phonenumber is incorrect" errmsg="Numero non valido." />

                    <var errstr="phonenumber is invalid" errmsg="Numero non valido." />
                </errors>
            </page>
  </procedure>
 </service>
 <service id="39" name="VoipRaider" v="1.2" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAFo9M/3AAAAB3RJTUUH2AMcEAwaIiezEwAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAAOLSURBVHjaJZNbbBRVGMd/ZzrTZZfSKy0ohtA2Aqa0YrkoEgL4AA0phGDiJb6QaqtVgvAgRhNN8EFD0EQTApEiGkAeNKWNtdRWW9MaKkhDi5YKEaiUS+m2LNvLXufyeXY9L/N9+X8zZ85vfqMmk0ksBWamodKF8jWHZWG2D/OjUhclEcjtcqT2jbfki2tT8lr9LjEe8eu5TD+maWH6ZsGVmOjl0h5OXW3U2zU7ZdD3KGXuOOcLn4LWoC1x1+Xb2wlxPf3g9+trpSuwmM3JG/ycV4nqi4qcOXyYZxfm8174MRpeXMulU0dZNDebA0YFxgq/q1oKVtI66vBc5TKWZ3nqG0ppHrXZvrwE44ORDNk1/itrsl26e36j/YGSPYmLrM2yOdXRqw+jX21724io0WFe3rKBF+aL2toyLL7QXeq2rofUQElnVBpGRWJ2UvcOOW1R+ScpMmPbGNVNV+VQsBHVdISLMxlSfvySnJ5u4cShLwlJhpiJP3tpHBskIElC68Lk97fS7EyQ5UTYf6sO1XArLueaz3DFKqLn9Y3q3f4p4dwP9PhL6a99WuFpjgcHQ3L6TkIc1yauaX12OSiN95ISczTbdQ1dUm+NYE6OY720lw9PtrI3L4QKB8mv2YfpD/5Ld3CIuW6Eoqk4/rGbXLx9lyJnisshoO2BJzu+6pSqpqH052q678iO412y7exNES/5P6izExly7MJ1FjoPmWWaDNmZVD9ZQl2xT2sinLzjSnP/TRYZCTzX4baVS82qErYUeEotv+BKUecJngn2E/blpAcKDZtut4CqV+vJtCy+P3qEKjVKULRB2r4iZ5of51SwfmcN5u4SgxPXlmJEblDsN0mKj2x7mvGcMpYUZOGhCM9bSt7UBJalVVSCHfPwFjxOdYHWM6pR+TPg90lD/ggmEI2xOD/AtkKU63mklmEYtARFroeiulOsnhdgXZ6omCspBg6fXo1J4/lBNmU+xGfAL5HZLCsv4+CqPL0f7OsLyd8DA1TNiaOx8VMslw0rK9hfHlAq0JGUtb3HqLg/wIw1G0M8AsqlTxXy/Jt7Uhvy3aHPWe2NERUTUYrZXpy+nCeY/8puzI41Fh9HNxIZiFHpT+gbDO4lhLEFm1gxP4tc/b9+vXobvuF2Fs+SlL78lfChyjZzYInuZzQDEX12HXwyIvLOdZGIrkXLmVIp5jjpOpUf0HlKe0nniXT2H8Jt4cwiGS4iAAAAAElFTkSuQmCC" >
  <description>
	<info>Acquista ed invia sms tramite VoipRaider</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipraider.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipraider.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://myaccount.voipraider.com/clx/index.php" method="POST">
        <vars>

          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
          <var name="justloggedin" value="true"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://myaccount.voipraider.com/clx/websms2.php" method="POST">

        <headers>
          <var name="Referer" value="https://myaccount.voipraider.com/clx/websms2.php"/>
        </headers>
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intcode%%%%intnum%%"/>

          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
		<errors>
  		  <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
  		  <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
  		  <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>

		</errors>
      </page>
  </procedure>
 </service>
 <service id="50" name="Smslisto" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gEBAkaDYkWuJwAAADnSURBVDjL1ZNRjYUwEEXv2zwBI2EkVEKfAiqhEooDHFQCoGBwAA6QAA4q4e7H7jaPbDaQ8LUn6cc0zcncyfRBkrjBB25yW/B8L5ZlAQA45yAi1wwkua4rRYQA6kkp8QfvPb+f/gIkqaoUEfZ9z3me6ZwjAJrZqeAJAPu+Q1URQoCIwMwwjuO1GCQZQqite++Zc2Yp5XqEUgpjjIcZiAjXdb0meMfMakchhHPBtm1UVcYY62UppcY5HaKqQkQwDAMAQFUxTRMAoGmaw7xer9ehzjl/LZKZoW3bg6TrOqSU6mL9xeP/f6ZP23g7rqKn1mYAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite SMSlisto</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.smslisto.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smslisto.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.smslisto.com/myaccount/index.php?part=tplogin" method="POST">
                <vars>
                    <var name="user" value="%%username%%" />

                    <var name="pass" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="password incorrect" errmsg="Username o password errati" />
                </errors>
            </page>
            <page uri="https://www.smslisto.com/myaccount/websms2.php" method="POST">
                <vars>
                    <var name="action" value="send" />

                    <var name="message" value="%%message%%" />
                    <var name="callerid" value="%%mittente%%" />
                    <var name="bnrphonenumber" value="%2B%%intcode%%%%intnum%%" />
                    <var name="sendscheduled" value="no" />
                    <var name="panel" value="" />
                    <var name="gmt" value="1" />
                </vars>
                <accept>
                    <var acceptstr="sent!" acceptmsg="Messaggio inviato!" />

                </accept>
                <errors>
                    <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito." />
                    <var errstr="phonenumber is incorrect" errmsg="Numero non valido." />
                    <var errstr="phonenumber is invalid" errmsg="Numero non valido." />
                </errors>
            </page>
  </procedure>
 </service>

 <service id="501" name="Cosmote" v="1.2" maxsms="10" singlelen="140" sms_divisor="140" maxlen="140" reset="daily" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAwBQTFRF8/nprdVj0OalmMo8jcUmkccuicIec7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa7gpGQAAAGdJREFUKFNdT1sOwDAIUnzs/jceatOZ1Y8GIgKidl70rzIw0g8/RBpEtHeaSBUB7BJuhNxoVW1kYf0kEYXWjSgF8IwPJUVwfIIU8ZdY1sltG8mLJK+thTPGTsoqBqzo3S6Py60/bfUFcS0CvQgGq4wAAAAASUVORK5CYII=" >
  <description>
	<info>Invia 10 SMS al giorno con Cosmote</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.mycosmos.gr" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.mycosmos.gr" />
		<optional n="3" name="correzione" default="" desc="Scrivere ON per la correzione dei caratteri accentati" />
	</config>

  </description>
  <procedure>
     <page method="POST" uri="http://t.jacksms.it/sostituzioneO2.php">
        <vars>
          <var name="CHECK" value="%%correzione%%"/>
          <var name="text" value="%%message%%"/>
        </vars>
        <contents>
          <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE"/>

        </contents>
   </page>
      <page uri="http://www.mycosmos.gr/mycosmos/login.aspx">
        <contents>
          <var name="session" left="name=&quot;__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
        </contents>
      </page>
 <page uri="http://supermac.altervista.org/cosmote.php" method="POST">
        <vars>

          <var name="session" value="%%session%%"/>
        </vars>
        <contents>
          <var name="sess1" left="Sessione:" right=":"/>
        </contents>
      </page>
           <page uri="http://www.mycosmos.gr/mycosmos/login.aspx" method="POST">
        <headers>
          <var name="Referer" value="http://www.mycosmos.gr/mycosmos/login.aspx"/>

        </headers>
        <vars>
          <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
          <var name="__VIEWSTATE" value="%%sess1%%"/>
          <var name="tbUsername" value="%%username%%"/>
          <var name="tbPassword" value="%%password%%"/>
          <var name="btLogin" value="Log On"/>
          <var name="rbSecurityPub" value="rbSecurityPub"/>

        </vars>
      </page>
 <page uri="http://www.mycosmos.gr/mycosmos/Costcontrol.aspx">
	  <contents>
	    <var name="source" left="Number of SMS Messages sent by Web Site" right="Day"/>
	  </contents>
	  </page>
<page uri="http://iaddo91.altervista.org/scriptphp/ripeti.php" method="POST">
<vars>
<var name="phone" value="%%source%%"/>

</vars>
<contents>
<var name="sorgente" left="&lt;td&gt;" right="&lt;/td&gt;" />
</contents>
</page>
<page uri="http://iaddo91.altervista.org/scriptphp/cosmote.php?stringa=%%sorgente%%" method="GET">
	  <contents>
	  <var name="residui" left="sms:" right=":rimanenti"/>
	  </contents>
</page>
      <page uri="http://www.mycosmos.gr/mycosmos/SMS_Send.aspx">
	   <headers>

          <var name="Referer" value="http://www.mycosmos.gr/mycosmos/Costcontrol.aspx"/>
        </headers>
        <contents>
          <var name="seconda" left="name=&quot;__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
        </contents>
      </page>
      <page uri="http://supermac.altervista.org/cosmote.php" method="POST">
        <vars>
          <var name="session" value="%%seconda%%"/>

        </vars>
        <contents>
          <var name="sess2" left="Sessione:" right=":"/>
        </contents>
        <errors>
          <var errstr="seconda" errmsg="Username o password errati" errcode="5"/>
        </errors>
      </page>
      <page uri="http://www.mycosmos.gr/mycosmos/SMS_Send.aspx" method="POST">

        <headers>
          <var name="Referer" value="http://www.mycosmos.gr/mycosmos/SMS_Send.aspx"/>
        </headers>
        <vars>
          <var name="__VIEWSTATE" value="%%sess2%%"/>
          <var name="txtMobile" value="%2B%%intcode%%%%intnum%%"/>
          <var name="txtMessage" value="%%mess1%%"/>
          <var name="btnSend" value="Send"/>
        </vars>

        <accept>
          <var acceptstr="has been sent to" acceptmsg="Messaggio inviato! SMS disponibili: %%residui%%"/>
        </accept>
        <errors>
          <var errstr="you have exceeded that limit" errmsg="Messaggi gratuiti esauriti"/>
        </errors>
      </page>
  </procedure>
 </service>

 <service id="89" name="JustVoip" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gFDAkeDGKpTFEAAAI0SURBVDjLfZPPaxNREMc/uxahP55QU4obQQoJi/TUsrlVdHMoUkJvooj0asGbJy+h/4MXJYKnFoWC9BBzMYddc+ohr+QQBJ9pEYpZW2grfYYSabYekizZWJzTe/PmO9+Z+b4xGLLjzYI3eS5dmhJEz6mBpMPJiONff7iaHYw3+oeLasHVSnpCS/5nWjgo28lmMqs+gNkHI4uXgsO7ayCs6C60xJZFr1otuFECraQHQRwpuvWbrRadpVf0+5HK5qMSJKX0AMzjzcKlzJ07ecL55yDfYBjXCOcfIZWNrwW+FmitqJbLnjl5Lt0harAcrtQ2wXkMYgJ23mPefsKndgLViyoqi+lWyTVpDrFbFmHuNfxuYh40CNM5Dr41QAj+TE1FYQrBWaOGGUkFhPNrECgIPsNEhs7JF37cuMeH71cJw5BEIjGsSXeIfTN/VrqSjqeBr2gEp6chzd770dHRP7My0QO3wAfL6Za4IzBuZtjd3SWVSqG1RmvN8LxMkk7cF0hqL19wfP8BAJVKhYWFBer1eiyBjWY0PYd5MuL4g3ipbPymYH//F+vr68zMzGDbNqVSKcazbAccjud8A+D03dMLoWWks4r+kiCfz7O9vc3W1lYEdoRmKTXGrWdvDRNA2U5WY6EgAgO02202NjZi7I7QLNuavdmVbGyZqtWCm5TS01pRVBZqUN9ez8t2wOhYir3Zlazrun4sQZSoXPamWyX3rFHr7XF32qPpOQ7Hc35mcTG2zn8B6CzsZ8VGehUAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite JustVoip</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.justvoip.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.justvoip.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente" />
	</config>

  </description>
  <procedure>
     <page uri="https://www.justvoip.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>

        </errors>
      </page>
      <page uri="https://www.justvoip.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>

          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>

        </errors>
      </page>
  </procedure>
 </service>
 <service id="51" name="Chawt" v="1.1" maxsms="15" singlelen="80" sms_divisor="160" maxlen="80" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAACXBIWXMAAAsTAAALEwEAmpwYAAAC3klEQVR4nDXP7WsbdQDA8e89/O5ySUlj0iSmOe1gczWdKV2dLdM5ZW5uU8Zg2qmxCkMoxaFQRadYFXG+GCp75QtFKoIwZB11bVlrEYpzDzo7Kxms4CrOrM9LzSVpk7RJ7nwhfv6Dj+QNc38H/7FmmRzAjBPcxHoRoVPMceuqahja2lo5sKmcnUONPUbiWDxsxIHcSqZzYOS1L5txFfLFZbdeO3HGnrm2sNxU8NSJbfdFJobmaU8wmE5MFU69cny/L2gAXr/r6TcbvrW2n80+4fXrPIo0LIUzYW+vyxfU1fwSwLs9J/s/v4IfniIXLPV/87djhXqPP5e3RoihhlS3z10KFmv9Emac90c3y7KEF96DMeSfZDEi5DulWFtQ0xWaEVMilA21fRj1N6DEdvPXZZGaWmEHHEYLaJGWyMZ7Ny7aS8YVpe/Upzu2tA4/M/7xg68ePtQwmZygPUFjaxDgKNJ5yVw1jzhHBpyBfUP7Xj921HEcx3GANSdzZv7QA88iA4G7FQAL1aUKt4gSlZGtGau+PgpUnCLgVBQVN0DT7v8PdSjDyobKhjanrTvbrcSkqVsX/0hd3fqISQeeD7QDb0ebHgczzmA6ceDFVoB6jJOG8ZVBI2981FmyrZaHTSKESiFxQbCLQFRXo3GAUlbcdY+vvFZZ6FkJmTXv9HZ1d718PT2YvDRLI8IR1cUqOuUSan6JH04nL/4y3X/uxPaWveUVTQgxl7uWrdxUFV1RZftG9fbZ2/a0zZ8IF+rytPHZj9e109p8IZWTbvyTIdH50s2D+ajl8U/iD7sWU6vrL6zjwWNraqgq3REyMjuLPA+dsApAAK1Pky5JjRcCX4x1nftu/NfvF+rN6NaOwtcnflZqg6L8m6OMyT2ftL/Vt1NxlZOj6epotXq+uu1JT83mVE2k1Lon2PSQb5WZ38fTkjfMll2GNUupVATsCrk53alINra7bt1sBhAGwgWQHOJftY4agh53qdYAAAAASUVORK5CYII=" >
  <description>
	<info>Invia SMS tramite Chawt verso numerazioni internazionali</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione a Chawt" />
		<required n="2" name="password" default="" desc="Inserisci la password di registrazione a Chawt" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.chawt.com/">
      </page>
     <page uri="http://www.chawt.com/index.php" method="POST">
        <vars>

          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
          <var type="submit" name="submit" value="LOGIN"/>
        </vars>
        <errors>
          <var errstr=" Login failed!" errmsg="Dati di login su Chawt errati" errcode="5"/>
        </errors>
      </page>
      <page uri="http://www.chawt.com/index.php" method="post">

        <vars>
          <var name="countrycode" value="%%pref%%"/>
          <var name="msisdn" value="%%num%%"/>
          <var name="message" value="%%message%%"/>
          <var type="submit" name="send" value="SEND"/>
        </vars>
        <accept>
          <var acceptstr="Message sent successful"/>
        </accept>

   <errors>
     <var errstr="Message not sent" errmsg="Mittente o destinatario non valido" />
     <var errstr="non configurato" errmsg="Non puoi inviare un SMS" />
     <var errstr="You have exceeded your daily 15 free message allowance. Message has not been sent" errmsg="Hai terminato i messaggi disponibili per oggi" />   
   </errors>
      </page>
  </procedure>
 </service>
 <service id="52" name="FishText" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="459" reset="daily" output_encoding="ISO-8859-1" icon="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" >

  <description>
	<info>Acquista ed invia sms tramite FishText</info>
	<config>
		<required n="1" name="username" default="" desc="Numero registrato (con prefisso senza il +)" />
		<required n="2" name="password" default="" desc="Password su fishtext.com" />
		<required n="3" name="mittente" default="" desc="mittente: 0 = username 1 = Anonimo" />
	</config>
  </description>

  <procedure>
     <page uri="http://www.fishtext.com/cgi-bin/account" method="POST">
                <vars>
                    <var name="action" value="login" />
                    <var name="_sp_errorJS" value="0" />
                    <var name="_sp_tooltip_init" value="0" />
                    <var name="mobile" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="Submit.x" value="32" />

                    <var name="Submit.y" value="6" />
                </vars>
                <errors>
                    <var errstr="Login Error" errmsg="Dati di login errati" errcode="5" />
                </errors>
            </page>
            <page uri="http://www.fishtext.com/cgi-bin/ajax/sendMessage.cgi">
                <contents>
                    <var name="brutta" left='messagelargeinput&quot; name=&quot;' right='&quot;' />

                </contents>
            </page>
            <page uri="http://www.fishtext.com/SendSMS/SendSMS" method="POST">
                <vars>
                    <var name="action" value="Send" />
                    <var name="SA" value="%%mittente%%" />
                    <var name="DR" value="1" />
                    <var name="ST" value="1" />
                    <var name="RN" value="%%intcode%%%%intnum%%" />

                    <var name="%%brutta%%" value="%%message%%" />
                </vars>
                <contents>
                    <var name="cost" left="0.0" right="." />
                </contents>
                <accept>
                    <var acceptstr="message was" acceptmsg="SMS inviato.Costo: 0.0%%cost%% euro" />
                </accept>
                <errors>

                    <var errstr="not found" errmsg="Contatto non presente in rubrica.." />
                    <var errstr="invalid number" errmsg="Numero non valido." />
                    <var errstr="phonenumber is invalid" errmsg="Numero non valido." />
                </errors>
            </page>
  </procedure>
 </service>
 <service id="512" name="SwissCom" v="1.5" maxsms="500" singlelen="160" sms_divisor="153" maxlen="454" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gIFBMQNkaqJQoAAAJUSURBVDjLhZNNSJRxEIef98Ndd3Nd10zEgwoZGErQIb14SSwjMqWiKCOE8ijooQTxkGSHQshIMAQPQocORYFbrRDUKSz0EkRFiNuW6/qxm9t+vp//bia6i7/bDMMzMz9mIIfaZuI1p2bjK2dfRbvZQ3KuZPPUaOvSj9WK5smHHeuFlaNrzsrOfABpexD2VauSYEQ2rIGRIx00RH9xLjSPABKS/Tar0F6fjGRzThD2VauyJV4oujWAKXFzYQZPSdH/TrLUasJQ3hUUW4zJun3GNmQ0S8Zx9QKfb99junsQQ1ERSBjIl/J7YHFd0xXSlkR6nwvfYC+WLXjdcoWJO9NseopJY9bmBegCMggc185TG/yI42ANUjqNHdvky+EmpsYDbFQf2sgLSJn0JyWBq/MkSkkxAHY6ixWLk4qnCRdV8OT+bNnpQOpGTkCdFnocl6z+ub5bfPe/AcDUdDKxBOnIJiu/Y/zVBaqiTpzwR5tz3sFxMzw2X17VP9zVxUIggJ7ViUVjbISWWQ+FSSQTrOmGagjlwZb5O3dSJz/1mcJu8IS/ESys4cPXZQq0DFkZnEKg2DaqkCp/Ph8dBlB3mRLPlNB4kZdDLaw2utD1cv4IC6GqeCWJQsOCA6Vbx7QLsBgMjTtj8Tb3/lpWgkuIMi8pYeGQZOKygq448bpdgby/sDjY5A8vr/Ssu6uSlm2BYYCWxdQyRDWdiKlHotlMb85f2C7X0d4KYTveaQXeOlEgg88H5WVzksd9WTxqD+4JAFCP3X3vwK7XPe5Zs7T4Kc96/Dtr/gFZowZ6UfVskwAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia 500 SMS al mese verso i numeri svizzeri</info>
	<config>
		<required n="1" name="usr" default="" desc="Inserisci l'username di registrazione di www.swisscom.ch" />
		<required n="2" name="pwd" default="" desc="Inserisci la password di accesso di www.swisscom.ch" />
	</config>
  </description>
        <procedure>
            <page method="POST" uri="https://xtrazone.sso.bluewin.ch/index.php/16,55,ajax,,,289/?route=%2Flogin%2Fgetcaptcha">

                <vars>
                    <var name="action" value="getCaptcha" />
				</vars>
			    <contents>
					<var name="taken" left="token&quot;:&quot;" right="&quot;"/>
			    </contents>
            </page>
			<page uri="https://www.scsstatic.ch/captcha/%%taken%%" captcha="1"/>
			<page uri="https://xtrazone.sso.bluewin.ch/index.php/16,55,ajax,,,289/?route=%2Flogin%2Fssologin" method="POST">

				<vars>
					<var name="do_sso_login" value="1"/>
					<var name="token" value="%%taken%%"/>
					<var name="sso_user" value="%%usr%%"/>
					<var name="sso_password" value="%%pwd%%"/>
					<var name="action" value="ssoLogin"/>
					<var name="passphrase" value="%%captcha_value%%"/>
				</vars>
			</page>

			<page uri="https://xtrazone.sso.bluewin.ch/index.php/16,55,ajax,,,289/?route=%2Flogin%2Fuserboxinfo"method="POST">
				<contents>
					<var name="prima" left=":&lt;span&gt;&amp;nbsp;" right="&amp;nbsp;MMS\/SMS"/>
				</contents>
			</page>
			<page uri="https://xtrazone.sso.bluewin.ch/index.php/16?route=%2Fmessaging%2Foutbox%2Fsendmobilemsg" method="POST">
				<vars>
					<var name="receiversnames" value="0%%intnum%%"/>
					<var name="recipients" value="[]"/>

					<var name="messagebody" value="%%message%%"/>
					<var name="attachments" value=""/>
					<var name="uploadImage" value=""/>
					<var name="attachmentId" value=""/>
					<var name="send" value="Invia"/>
				</vars>
			</page>
			<page uri="https://xtrazone.sso.bluewin.ch/index.php/16,55,ajax,,,289/?route=%2Flogin%2Fuserboxinfo" method="POST">
				<contents>

					<var name="dopo" left="&lt;span&gt;&amp;nbsp;" right="&amp;nbsp;"/>
				</contents>
            </page>
            <page uri="http://easyrap.altervista.org/Script/wadja.php" method="POST">
                <vars>
                    <var name="before" value="%%prima%%" />
                    <var name="after" value="%%dopo%%" />
                </vars>
				<contents>

					<var name="crediti" left="crediti:" right=":"/>
				</contents>
                <accept>
                    <var acceptstr="Messaggio Inviato!" acceptmsg="SMS Inviato! SMS residui %%crediti%%" />
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato!" />
                </errors>
            </page>	
        </procedure> </service>

 <service id="41" name="VoipBuster" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAapJREFUOI2lkr9LG2EYxz8nYq3dLB3qkNIWtdAiKBQFO2ppkfoH1B8ZGtrFHziEo0uT2EmHaiHdQinFpdDlulYhg0pcFAcRChYMlgxCeC938S7yknMIvua4iwp9lvf7fp+f3/d5taonPf7Dmq4TFNezxPVsqK8ZoFCwWV7MKXJhaUhhfW5VdTk9qdLS5u+pVT3pxWK/ApUzmVHO+UxmtLGEle972FYF26owMtypMIBtVS5NBmgan3yMIwSOEHz7uq6wW5Y4QjRMzB+ULiTUOwYGP3PnVivHZZfcxmxoclzPMv22D1pbao9YbxXhciRcHzc19TtQZHFpi3R62L/Ge5EkRcuhaDns7OkATER/Ylom3V03kVIipSTS0YxpmQD+CQ7zyUCnkigDsLp2oLhCAR7ebweu+Ehf0psM9kcwjCjzyZeYJQfDiGKWHLZ3/wUnqLeevk81rannNSlvVhh7/ZREYo2ieaLiAlsAeNSZQtM0PM/znb0DD9jJ/VX3/T8fwic4tt0ANxN7RuLjCLfvvq/F5BeAavgEADfaphU2frzjxasnoVIbFriunQEGaLwfdkppvgAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms tramite VoipBuster</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipbuster.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipbuster.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>

  </description>
  <procedure>
     <page uri="https://myaccount.voipbuster.com/clx/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>

        </errors>
      </page>
      <page uri="https://myaccount.voipbuster.com/clx/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>

          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>

        </errors>
      </page>
  </procedure>
 </service>
 <service id="42" name="SmsBG" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABMklEQVR4nMWToW7DMBRFTyqDBwoCBgIG+gmBBQMmkyKVFAz0swqqgX2BQYBBh0YKCqopGijqBwwEFAQ+YM0DmbNWG+kKZsl6wPfe9+61ncUYuWaNrmIDBuD55flPY8zuZ1m2fd1GAkxuJxe1PRwOyFgwIsJut2M6nV7U3a899s4yIkBZlnjvzwCq+msFcLWjLEs0aB9inudYa3G1G0Aigqqe1USuqoo8zyGkWwi9SFVVP0RO60Ae92QNykjD92hiBDGCX5/bSZ4T5hRvxAgYaI8tm82GxcOCrutwtaO4KYD+LHV2tcNa+/UAIGvemqhBad9b5vP5oN4eW7quI2WUxAC89xRF0Vtr9k1cPa5i+AgX7dXTKjb7JpoU0HK5HMIa0g86eD69CVUF04eb/ftnulrgE5AOtl9/G9KxAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia SMS verso numeri di cellulare bulgari Mtel.</info>
	<config>

		<required n="1" name="usr" default="" desc="inserisci qualsiasi cosa" />
	</config>
  </description>
  <procedure>
     <page method="POST" uri="http://smsbg.net/sms.php">
        <vars>
          <var name="MN1" value="359"/>
          <var name="MN2" value="%%pref%%"/>
          <var name="MN3" value="%%num%%"/>

          <var name="ID" value="1"/>
          <var name="FROM" value=""/>
          <var name="SM" value="%%message%%"/>
          <var name="num" value="142"/>
          <var name="sbm" value="���������"/>
        </vars>
        <accept>
          <var acceptstr=".: smsbg.net :. send free SMS"/>
        </accept>

      </page>
  </procedure>
 </service>
 <service id="99" name="Freecall" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACnklEQVR42m2TX0hTYRjGn2+n/XNHzW3WRppZg+gPCVFQzYuoC4UuoqgLK4wiIuwmu8husjKo8MISMegq1AgKLaZXFnpl4OWmKM28SCkcbVars+b+na/3fOdsk9ELH5zv8D2/87zP9x7GqbC+4m8A9RtgytGG6e+4RPt6oOIkSosVAGsh8HgfuEwHN1SSwILQTAwj7z7Bf3gLfHUm+Lw5MEcLYGsoASjj4KkAuH0rCW20rBh4GcbgUAg+nwuLi6vouuuH/5ALSEZgclwGLDsNQPoL5z8fAPZacmoVgI/Tq+i8PyUO5AGBkVOQy6gtdQ3s7zJY5W3AXEeAleuc22Uh5GRbSUo4f2kCipLRATucWgh43n9ciKGmwLSVonzc9+h5pYXDViNsa4DxyRi6n8wIceuFvQTYSHqVcqgmcboAQGIezPuWnmNtXBPn152H89RCFLLDjMDwCSMqzXqWQBkSpIugqh7aR68WAdk/OHY2LCRNjUBHm1NzT6UCkoPO2Ck8csINgLOPAMtNnKWjQCqC4IId7b21AtDR+gPNRxLGHKjGIheMeje7wG21YDVjFOKss+Ag+FlGe49baF49/g2PWy0AGM/pAJXC5SnhAHui9H7Oy3V7VgxPyOh/bReayRfG1/ItCHFW2Bch5sjdrq8EWDjAqQdxjQOjNEABSb++Ogb/fgkXT5uL9inEQoASOd32ngDxMc6jnWJ8g2Ezbj7S799TLaFhtwUd18p1gLCui5GNg3meAmWNxihHOgk+TUmX49yNuPiJItEsbrVtRvNRGjLRf8YQK2DWg8CmrpKfabUXPPkBUzMV6H72HUoih9GhfTQPJqN/+npyCUw+A1Rd+c/fqFVmCfg1CCU+i5VYFr56WYyxuAXTdl1I87++/gFmjz3gOUuCywAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms tramite Freecall</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.freecall.com" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.freecall.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente. Usare 0039 come prefisso" />
	</config>
  </description>
  <procedure>
     <page uri="https://myaccount.voiparound.com/clx/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>

        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://myaccount.voiparound.com/clx/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>

          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>

          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="53" name="1188" v="1.4" maxsms="10" singlelen="60" sms_divisor="160" maxlen="60" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAktJREFUeNqMUztLI1EU/u7MJJmdZLMkFkoMrAxmiyxCsLAS9TfYitXC2vkobNxFa3s7f4AgFuYnWKQQhBWFxBSyTQyLrsTVJDPJPO6eMzsJMabYgVPMvfd73O+cK6SUjU61qv8pFmHf3ABSAkJg5BfuGbOz+LC8jEgmYwvr+tq+29mJuff3ELEY/ufzLQux6Wlk9/c76ldN+2ZXqxp0HZJFekVqktRerYWFaBROvc5nXK15dQUZiQCeNyDhA6oK6TgQijL6SuS2dXkJxe104BGAyyUSx7ZhzM0hu7eHaC6H7ssLBs+8KteF5rJaP6PAILRsFsmlJbybmcHD0REeTk/RoYzUeByCnAVhEk7l+jIx8d2XUvP5zlQ+uWhVKni+uEAklcL46ioSlDromu3bW7jdbpCDz+Bk0hWlQsGif71vg4MjEr/dhpJIwDBNfFxfR3pxEY1SCZWNDYCss6AxNWVr7mB4AyS+psF5eoLy+Ain0QiWrVotcIDQrUfYtwQEdim4SDqN7MoKTFJ3m01UdndRPzkJ7s45yDB0zRki8FotjM3P49PWFlLUjdrxMX4eHuK5XP4XIreVMDLsxBsH3BoeqtjkJH4QyR11wKd5UA0DHqcfnu85EEXTtGhZF0PzLigDj0aWFYPWDT8LAsdN01be5/NwKHFmC4qZyQUPlE9ErNffC4vD69JVk4RV8tvbgi13Sa0/YZxwr4anj8A2hRrNZJBbWxOCn/OvszO9fHCA3+fn8Ek9CGrUa+bhIbHxhQV83tzEWKFg/xVgAHikfgOEOIBEAAAAAElFTkSuQmCC" >
  <description>

	<info>Invia SMS verso numeri di cellulare O2 della Repubblica Ceca</info>
	<config>
		<required n="1" name="email" default="" desc="Email mittente" />
	</config>
  </description>
  <procedure>
     <page method="GET" uri="http://sms.1188.cz/"/>
      <page uri="http://sms.1188.cz/images/smscode.php" captcha="1"/>

      <page method="POST" uri="http://sms.1188.cz/">
        <vars>
          <var name="adress" value="%%intnum%%"/>
          <var name="code" value="%%captcha_value%%"/>
          <var name="replyEmail" value="%%email%%"/>
          <var name="text" value="%%message%%"/>
          <var name="send" value="ODESLAT"/>
        </vars>
        <accept>

          <var acceptstr="Upozorn"/>
        </accept>
        <errors>
          <var errstr="ela nebo nebyla vytvo" errmsg="Captcha errato/Sessione scaduta"/>
          <var errstr="kem O2" errmsg="Numero errato"/>
        </errors>
      </page>
  </procedure>
 </service>

 <service id="54" name="Intervoip" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAB3RJTUUH2AgbDhkDjUZ6FQAAAi9JREFUeJxVkMtOU1EUhv+19+65tLQ9lPRoaVGqVRoHGgyJRiKJiUMew3fwDXwaB8aRAyeODIYZiiJEI4EYhV5oT6/nnP07aDG6Jmv03z4h2e7Hg1GitAqDjIzsYKjEMutPTdEnCRF2J9HEQMRbgAHw4Wv08VvHGL39sNB7fbb76osRdXOr8Pj5plBJmr57sXu03xLqe8+uKwAZLZ6rNewg6suoG/38PW63Dw9anXYHgvO9zuf3P+JWK4qji9xEASBgQUIsknyznPF97ejkIu31ExH59PJgGsc645u75lozMAAEEApgtZMvVawSApL04mG3Nz3OH+6cukZNfFV7sFhfrirMjqCoVAVu6GQD15Icc3TB/TdHg+5QiVJrhY31hjGemQsEAiRJkruSK5bcQXesNU/2omjnzDEy8szaVmmlvmwtLxMAEZGUdBx3NWSSao2ztyfRaUfEmIa78bRObYB/BCRpKWS55pMiStJWX1IbO1J7Ei4FJViKyH8JhEBQbJRFKZIwCjHZWGisl0FteSkgOYMrACCF0HGyDlMKmWRMcF9fq4YARYSkmnnP4QoBFK5mswXHkhLT1v3mZi2fLYIQuUxICZIEKBqAk1de0SCl1Sa/7t1urJCkzBsoAEUf2jiwlMkvAMZzgxthPMRkxb/1qBLkAhLgvIgBcKeqZDKKp+PqYjBr2NyutAKdWTpvNiqEAuxsgMweSRsPSWgnOyMWIz4+/e6JW11eBfh3J4A/8ZEQk8PGyF8AAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite InterVoip</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.intervoip.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.intervoip.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>

  </description>
  <procedure>
     <page uri="https://www.intervoip.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>

        </errors>
      </page>
      <page uri="https://www.intervoip.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>

          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>

        </errors>
      </page>
  </procedure>
 </service>
 <service id="55" name="dodoText" v="1.1" maxsms="5" singlelen="100" sms_divisor="160" maxlen="100" reset="daily" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAMAAAARSr4IAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAwBQTFRFneVboOVfn+hjp+ZipuZlqeRmoe1jo+tmpetkputkquljqOtjq+xiqOlmo+Vop+RrpuRvquZpr+dpquNuq+Ruq+dureRtrOdsrOVvpulopetopeluqOloqepqqOhtp+Z2q+FyreNyrOdxr+dyrON0qeV0q+R1reR1p+V5reR5rOR7rul8s+h5tOCAtuOHt+eEtueFuOGDvOWGtOKMvOeIvOeOvOmOuuGSvuuRwOSSxOibweqcxOyfxeqiyumgyeylyuynzuqvzu+v0++h1O2q0u6t0uuy1+q03ee51e+42e2+1Paz1/C31/G34PO93PXH3vDJ4vHB4fPI4ffL4vPN5/HO6vLJ5/bW6PLV6/fV6/fa8vbd///3+v/4////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAre+j9wAAAORJREFUGFcVzm1PwjAYheFHusmWWR1bY1P2pNp2WX2d+BKmqAQFQXQRDSioyP//GY7P132SAznL0ow1Qqb3lM7BBgI3PXOWkLDu78IRJpLG5fJy8HngK0gDRFFrDfZfv5NK04AHx3fdTistLK00ks7jcrWa3vz1CQcbycbb8OlndjouiAKD9OQjhG65TThy4HLjunRg2KttMTSVBr1pu5i1PSorTakzfumMfk09liKGQ+G+3149TEKfJlVsm9F88fzVd6S33uqmvF/MJxcuInIOmUBGXLa+KnYMnEc6yZTS2kZK5f863SB9EU6oHgAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia 200 SMS verso Singapore e 1 SMS ogni 17 giorni verso altre numerazioni internazionali.</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci il numero di cellulare registrato su dodotext.com, prefisso internazionale compreso" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso a dodotext.com" />
	</config>
  </description>
  <procedure>
     <page uri="http://m.dodotext.com/index.php" method="POST">
        <vars>
          <var name="m" value="%%username%%"/>
          <var name="p" value="%%password%%"/>

          <var name="a" value="Login"/>
        </vars>
        <errors>
          <var errstr="Error: Mobile not found!" errmsg="numero non registrato" errcode="5"/>
          <var errstr="Error: Incorrect password!" errmsg="password errata" errcode="5"/>
        </errors>
      </page>
      <page uri="http://m.dodotext.com/index.php" method="POST">
        <vars>

          <var name="s" value="%2B%%intcode%%%%intnum%%"/>
          <var name="c" value="%%message%%"/>
          <var name="a" value="Send"/>
        </vars>
        <accept>
          <var acceptstr="Message sent"/>
        </accept>
        <errors>
          <var errstr="Daily quota reached" errmsg="Hai terminato i messaggi disponibili per oggi"/>

          <var errstr="Error: Message empty!" errmsg="testo messaggio vuoto"/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="57" name="SMSdiscount" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADIElEQVR42m2TO2wUVxSGvzszO/vwIx7WNn4pUUwcC4o8wN0SYqUgSChCiqgQglS0LogoIoU0qVJQRcIyDZJhidLQRjSJkEUsOciSCxyctde7O94lXu/Mxva+ZueRO2OiNFxpdP5777n/Oec/Z8Tm5uZPiUTiPOEKfOgeglCPsOdExyhyr+py34VYUu716Ljdbj8ROzs7zdHR0WQgBBSfovz6NbSq0DsGg6fAd6WnBZUV6BmHqS/wM7cRQUClUmlJgrKVTqeNQNNRXjxCr63CyAws/wAffAXG+7D0Hbz7ORz/CC/3C93z8wjXoVar2aJUMq2BgQHD11LE/sySPFiHT76Hwwo8/QYOpM18CxMZMJfori3S+mwexW1Sr9dtUSwWrb6+viOCl4/oaxfkg9u8cb1aofPHPRqf/ojiNTk4OLDF9nbB6ulJGZ7aQyL3M2+9XIDpL6WIsnbE688/Era6TrvT4Z/Ze6heg0ajaYutrbyl6zEjEBpq8xX6zm/Sv/PmDAINVwrbHfxYiujiOF1bbGz8Zfm+a2iqjKRqdElGvqoM6LpBhMM7zz/iiCmyld02rhegKJotcrmcpWnCMM02h4cuJ06k8KXz/r6LYcSiR/V6l/5+LcJbW80Ij40lwgC2MM289fhx1Xj2zEbXFeJxwfR0L4uLJnfunEK2m5s3X3DlyjilUkumHUT2woUhLl8+botyuWDNza0bExMJrl17m6Uli93dDtmsydzcZBT17t08s7ODrK3tc+vWe5JUUK06XLx4LCQoWfm8a8zPbyKHUjoOIeRUrq7asgQ9wrbtcPbsIMPDCR4+LBAO7dWr73DuXL8tCoWilc3+bVy6NE4yqXH9+u+kUiqZzBDLyzUpFJw5c4xCocHp0wY3bkxx/36eBw+2pf3QFtVqxVpYKBvPn+8xOdnL3l6HdDoe4Y2N/aiEqal+isUGptmUd7ocYYeTJwck2VhYQrk5MjKcDAnCVGdm0nQ6vqwzwPOC1y0VMhNBIqGysrInuxCTWQ1JrXZb4r/fOR5XIifH8aMaQ/VDG81P8P8shZ0K2+w4Hq1W+8m/B+twys0HPh0AAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite SMSdiscount</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.smsdiscount.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smsdiscount.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente. Usare +39 come prefisso." />
	</config>
  </description>
  <procedure>
     <page uri="https://myaccount.smsdiscount.com/clx/index.php" method="POST">
		<vars>

		  <var name="username" value="%%username%%"/>
		  <var name="password" value="%%password%%"/>
		</vars>
		<errors>
		  <var errstr="password incorrect" errmsg="Username o password errati"/>
		</errors>
	  </page>
	  <page uri="https://myaccount.smsdiscount.com/clx/websms2.php" method="POST">
		<vars>

		  <var name="action" value="send"/>
		  <var name="panel" value="true"/>
		  <var name="callerid" value="%%mittente%%"/>
		  <var name="message" value="%%message%%"/>
		  <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
		  <var name="sendscheduled" value="no"/>
		</vars>
		<accept>
		  <var acceptstr="sent!"/>

		  </accept>
		<errors>
		  <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
		  <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
		  <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
		</errors>
	  </page>
  </procedure>
 </service>

 <service id="58" name="DialNow" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADBUlEQVR42o2TbUxTVxyHn3NvbwEt2kIdmsk0WFq0Q9aEKY3ZZsycL2icZkwcKi4kaNgXp1E+kJglJkYTJfpF9+KyzkWXrE2WQGJdfJm8hAjDZSDMQYXNCgiIOMEypNzeHXAfDLjE36eTk5znPOf88hexWEy52fugfWBklAWzE3ElWxHAoeoGEs1mDuS8wdTsvVxL6qxE9i/PcooJwCZ/UL/YcRdFCLa/7uSLde+Q/U2A2XFmqra/Pw2w6PR5PHPtBLasUZ8BAkH9RncfhZkuTv7STGXeelofDDJDM7HNnc6RuptkJNsIDz1hh7xg9feVeFKeB0iDxt5+eTCX5b4Ax1Z5Od/Sji0+jvfSUim7Xo97TtIk9FL+BoovVk03aLzfT/m7K9hRcZWvc1dysqF5EpCeZOXcrTbOyr3CymsEt0pA8PoUAwn4qTOMpigkJ8Tza9GHrL5QMQlYk/YaZVX1LJafe/vhIwnYOAUQjfi+beksbHs0TEqCxla3KzbXYmmZ0J5p1tjtWULJpWqy571CU/8AB3M8+Jr/YP4sC/uWZXnE2I/eEEMdDtMHvzHud6O4iiIm73ELLxkx5s8MGYO3HKr3FPqN/ajuT6KKt/xUrN0Hg60oWQcxRnowemtQ0vKIdQYQ89di9Nch4udIwA+ZIYb/dGBbDI/vSIOPwepCry1BxCWBZQFq9meMBzegvvU5es0eVG85en0p6puHnxmgP3UgFBj+C2VJCcZgE8bow8l1rKYYdXMDesVKsHvg79vyggzoq8OU1/ofIBpxKM5d6I2HUJfuw/inF6PnZ0TqeozQd5gK7qFfzpPPqEU4d2K0n4M4W5dpW0euGL1SEGI84tC8Jxi7ko/qKEBduJFodTGxyH3MSz9FyShC//0M420+tGVHiDaUob66qtOcc3SR6Bp6YpfyapLsvy8ygkVWJ/tv+vKrsyldXfewWa10d3eT7nTWr8v/aJN9RjwTg2fRNN0+M2FAvKgav9/fIzMvHA5jlQAhh0zTtJrS0tK3p9X4sn3/X/4F+UhAST7IgxQAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite DialNow</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.dialnow.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.dialnow.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente. Usare +39 come prefisso." />
	</config>

  </description>
  <procedure>
     <page uri="https://myaccount.dialnow.com/clx/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>

        </errors>
      </page>
      <page uri="https://myaccount.dialnow.com/clx/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>

          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>

        </errors>
      </page>
  </procedure>
 </service>
 <service id="61" name="Aimon" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="612" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gJDwoLAxCgS2IAAAI6SURBVDjLlZNfSFNxFMc/u/dubtO5pVPnv1oz5mQbmtCfC3voj0QPahJKhV5CEhQGBdZLL4HUq9FLUEQQ+NJTjxERFERof2ilEupeDC1zDJnL9ke3e3uYf5I07cCB3/me3/nw5cAR+Uc4O653tXb3n5WcjY65jy/G+Z+o7b39YPBNROsNJTVx8FkSWbFt9U/YclpWPJPeEz1XV2zcX0iQ3ecyUlLWtXuA099DhSv3NhhheRlq3MHdAWTFyF7fxfU6zwyZLJRXeZCVpp0BxoI2Kr12MTKzoZmLQNBBjbt3Z4DzcFDIpBG/fABVzWnWMkiloNDahqxUbQ+QFR92d0D6NoE2MznL5OcMAKIeLOVgMktYCvu2BxS7+3T5pUjTIbIL8+OMvptY79kPQOIXWCyXkBVpTZY2LW+Pp9MQDdPf0cyxQ42nkxp0xyAKUFAMBhtIUQei2A483uzAYD2PrdaWdvi4FaumKfSTltkVouofDisPQjoNekPwbwdWfxB0MHwXdMJDzKZZ9AKIgpfOa+2gB0cdqCKoagBZaWB46JO4av8o9pM3yIuDeQm+hq8QX3jC0zvPMVe8pMJ1GWu5xIoAi3HQYlBSWkVB9XsBWWnAVH8TvR3q98ORALj8r4H2VW8OwmMbh1R3ClrOgd3RjKkoLKEdD2Hw5JpTKmTi8CMSBXJDZy6M4Q3A2i70+TDvge9vQc2OSDA6wNIULAsQEUBLQWL+EcND0wCMvBpgNARZcpkhB4vPRUkv3vsNWrytmLfhLrsAAAAASUVORK5CYII=" >
  <description>
	<info>Invia gli SMS che hai acquistato o guadagnato con Aimon.</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.aimon.it senza @aimon.it " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.aimon.it" />
		<required n="3" name="mittente" default="" desc="Inserisci il il tuo numero di cellulare senza il +39" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.aimon.it/login_piattaforma.php" method="POST">
        <vars>
          <var name="username" value="%%username%%%40aimon.it"/>

          <var name="password" value="%%password%%"/>
          <var name="button" value="ENTRA"/>
        </vars>
        <headers>
          <var name="Referer" value="http://www.aimon.it"/>
        </headers>
        <contents>
          <var name="crediti" left="di &lt;STRONG&gt;" right=" crediti"/>
        </contents>

      </page>
      <page uri="http://iaddo91.altervista.org/scriptphp/aimon.php" method="POST">
        <vars>
          <var name="credits" value="%%crediti%%"/>
          <var name="text" value="%%message%%"/>
        </vars>
        <contents>
          <var name="residui" left="sms:" right=":rimanenti"/>
        </contents>

      </page>
      <page uri="http://t.jacksms.it/Aimon.php" method="POST">
        <vars>
          <var name="text" value="%%message%%"/>
          <var name="mitt" value="%2B39%%mittente%%"/>
        </vars>
        <contents>
          <var name="text" left="Testo:" right=":"/>
          <var name="mitt" left="Messaggio:" right=":"/>

        </contents>
      </page>
      <page uri="https://secure.apisms.it/http/send_sms" method="POST">
        <vars>
          <var name="authlogin" value="%%username%%%40aimon.it"/>
          <var name="authpasswd" value="%%password%%"/>
          <var name="sender" value="%%mitt%%"/>
          <var name="body" value="%%text%%"/>
          <var name="destination" value="%%intcode%%%%intnum%%"/>

          <var name="id_api" value="59"/>
        </vars>
        <errors>
          <var errstr="Access denied" errmsg="username o password errati"/>
          <var errstr="destination invalid parameter type" errmsg="Destinatario non valido"/>
          <var errstr="body not specified" errmsg="Manca il testo"/>
          <var errstr="sender contains invalid characters or is too long" errmsg="Mittente non valido"/>
          <var errstr="Not enough credit" errmsg="Credito esaurito"/>
          <var errstr="body contains invalid characters or is too long" errmsg="Testo non valido"/>

        </errors>
        <accept>
          <var acceptstr="SMS Queued" acceptmsg="SMS Inviato!SMS residui: %%residui%%"/>
        </accept>
      </page>
  </procedure>
 </service>
 <service id="62" name="Aimon-Free" v="1.2" maxsms="2" singlelen="112" sms_divisor="160" maxlen="112" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gJDwoLAxCgS2IAAAI6SURBVDjLlZNfSFNxFMc/u/dubtO5pVPnv1oz5mQbmtCfC3voj0QPahJKhV5CEhQGBdZLL4HUq9FLUEQQ+NJTjxERFERof2ilEupeDC1zDJnL9ke3e3uYf5I07cCB3/me3/nw5cAR+Uc4O653tXb3n5WcjY65jy/G+Z+o7b39YPBNROsNJTVx8FkSWbFt9U/YclpWPJPeEz1XV2zcX0iQ3ecyUlLWtXuA099DhSv3NhhheRlq3MHdAWTFyF7fxfU6zwyZLJRXeZCVpp0BxoI2Kr12MTKzoZmLQNBBjbt3Z4DzcFDIpBG/fABVzWnWMkiloNDahqxUbQ+QFR92d0D6NoE2MznL5OcMAKIeLOVgMktYCvu2BxS7+3T5pUjTIbIL8+OMvptY79kPQOIXWCyXkBVpTZY2LW+Pp9MQDdPf0cyxQ42nkxp0xyAKUFAMBhtIUQei2A483uzAYD2PrdaWdvi4FaumKfSTltkVouofDisPQjoNekPwbwdWfxB0MHwXdMJDzKZZ9AKIgpfOa+2gB0cdqCKoagBZaWB46JO4av8o9pM3yIuDeQm+hq8QX3jC0zvPMVe8pMJ1GWu5xIoAi3HQYlBSWkVB9XsBWWnAVH8TvR3q98ORALj8r4H2VW8OwmMbh1R3ClrOgd3RjKkoLKEdD2Hw5JpTKmTi8CMSBXJDZy6M4Q3A2i70+TDvge9vQc2OSDA6wNIULAsQEUBLQWL+EcND0wCMvBpgNARZcpkhB4vPRUkv3vsNWrytmLfhLrsAAAAASUVORK5CYII=" >
  <description>

	<info>Invia 2 SMS al giorno con mittente personalizzato tramite www.aimon.it</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.aimon.it senza @aimon.it " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.aimon.it" />
		<required n="3" name="mittente" default="" desc="Inserisci il il tuo numero di cellulare senza il +39" />
	</config>
  </description>
  <procedure>

     <page uri="http://aimon.it/?cmd=smsgratis" method="POST">
        <contents>
          <var name="crediti" left="Credito residuo giornaliero: " right="crediti/sms"/>
        </contents>
        <vars>
          <var name="inputUsername" value="%%username%%%40aimon.it"/>
          <var name="inputPassword" value="%%password%%"/>
          <var name="submit" value="Procedi"/>
        </vars>

        <errors>
          <var errstr="Username o Password errati" errmsg="username o password errati" errcode="5"/>
          <var errstr="password non riconosciute" errmsg="Username o password di Aimon errati" errcode="5"/>
          <var errstr="Credito non sufficiente" errmsg="Credito non sufficiente" errcode="13"/>
        </errors>
      </page>
      <page uri="http://iaddo91.altervista.org/scriptphp/aimon.php" method="POST">
        <vars>
          <var name="credits" value="%%crediti%%"/>

          <var name="text" value="%%message%%"/>
        </vars>
        <contents>
          <var name="residui" left="sms:" right=":rimanenti"/>
        </contents>
      </page>
      <page uri="http://aimon.it/index.php?cmd=smsgratis&amp;sez=smsgratis" method="POST">
        <vars>
          <var name="tiposms" value="1"/>

          <var name="tipomittente" value="1"/>
          <var name="prefisso_internazionale" value="39+%28Italy%29"/>
          <var name="mittente" value="%%mittente%%"/>
          <var name="testo" value="%%message%%"/>
          <var name="caratteri" value="112"/>
          <var name="destinatario" value="%%intnum%%"/>
          <var name="btnSubmit" value="Invia+SMS"/>
        </vars>
        <accept>

          <var acceptstr="Messaggio inviato con successo" acceptmsg="SMS residui: %%residui%%"/>
        </accept>
        <errors>
          <var errstr="Mittente non valido" errmsg="Il mittente deve essere un numero di telefono"/>
          <var errstr="Destinatario richiesto" errmsg="manca il numero a cui inviare"/>
          <var errstr="Testo richiesto" errmsg="testo messaggio vuoto"/>
          <var errstr="Messaggio non inviato per errore di spedizione" errmsg="errore durante la spedizione"/>
          <var errstr="limite massimo di sms inviabili gratis in 24 ore" errmsg="Troppi sms in 24h per questo destinatario"/>
          <var errstr="limite massimo di sms inviabili gratis in 30 giorni" errmsg="Troppi sms in 30g per questo destinatario"/>

        </errors>
      </page>
  </procedure>
 </service>
 <service id="63" name="Sms-Kostenlos-Free" v="1.41" maxsms="2" singlelen="129" sms_divisor="129" maxlen="129" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAk9JREFUOE/FkltI0wEUh43UXN7+apqazjl3bWpYT7311pX0JQOHqYFdNNQ118WKWabTTUopXemEIk2nzmsX0fKSZVqJlKZFRpTYDYIgIojgS50vPe+hHxw4L+f7fQ9nBQtxcyWLAFfi5srxkn1ewWaszfFYbLGU1zlncTfXaiit0WC6sp7z1WrOVakwXlZyulJOoVXOwYKYpW437YEI+mc0zLGJ2d8bef0rgemfG3jxI56J73E8/aZh5KuaBx+V3J+T0/9JRv2YmJRcwQkwVWuoskspvyZh7HMcT77EMvReTf87Fb1vFNx6JaNjSopjUkLLZBSnakLILBTQVQY4AZY6DbN/ErjaGY2hNAzHMxkDH5R0z8TQPinFPhGF/bkY23A4mUaBQyZ/rCMhGGqXDYqt6iXN4XkVDY+iyTIGY2kKp21aQsN4JPUT6yhpCWavzpdjNoGKwSDMfQKHK72dBsZLCobmFXS+lNIxHU3juJgjpiCySgKpHlxLbkUAyXofzrYJlPUKGDt8MXb7kGHxcgJOXJBx+610oU3M9dEIbCNh2EZD0VsFtqaJyCjyofiuP8YuX062emOwizC0eqE1eTgBR8sk2KciqXkYRtVC48V7azD3BGLuDeCMw2/5cDX5TSJ0N73IueFJTqMHyUUrnYCskmAaZkKpfhxM5XAg5QMCpj4/inp8MN7xpqBLxPH2VegdnuhaPMhrdie/0x2tZRmQrd9DSnY8SftVJGWoSUxXsTtdya40JTtTFexIlbNN++9s3ydnS6LUaeDyK/93wF84XsWjdvXxywAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia 5 SMS al giorno verso numeri di Germania ed Austira tramite il sito di Sms-Kostenlos. Occorre essere registrati.</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.sms-kostenlos.de" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.sms-kostenlos.de" />
	</config>
  </description>
        <procedure>
            <page uri="http://www.sms-kostenlos.de/index.html">
                <contents>
                    <var name="csf" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="&quot;" />
                    <var name="val" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="/&gt;" />

                </contents>
            </page>
            <page uri="http://iaddo91.altervista.org/scriptphp/ripeti.php" method="POST">
                <vars>
                    <var name="phone" value="%%val%%" />
                </vars>
                <contents>
                    <var name="text1" left="value=&quot;" right="&quot;" />
                </contents>

            </page>
            <page uri="http://www.sms-kostenlos.de/" method="POST">
                <headers>
                    <var name="Referer" value="http://www.sms-kostenlos.de/index.html" />
                </headers>
                <contents>
                    <var name="disponibili" left="Sie heute noch bis zu" right="freeSMS" />
                </contents>
                <vars>

                    <var name="action" value="login" />
                    <var name="login" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="CSRF_%%csf%%" value="%%text1%%" />
                </vars>
                <errors>
                    <var errstr="Sie haben ein falsches Passwort" errmsg="Password errata" />
                    <var errstr="existiert nicht." errmsg="Username errato" />
                    <var errstr="Sie haben die maximale Anzahl an Loginversuchen erreicht. Bitte versuchen Sie es spter noch einmal." errmsg="Numero massimo di tentativi raggiunto, riprovare piu&apos; tardi" />

                </errors>
            </page>
            <page uri="http://iaddo91.altervista.org/scriptphp/tim.php" method="POST">
                <vars>
                    <var name="sms" value="%%disponibili%%" />
                </vars>
                <contents>
                    <var name="residui" left="sms:" right=":rimanenti" />
                </contents>

            </page>
            <page uri="http://www.sms-kostenlos.de/freesms/yes">
                <contents>
                    <var name="csf1" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="&quot;" />
                    <var name="val1" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="/&gt;" />
                </contents>
			<errors>
			<var errstr="Sie haben alle freeSMS versendet, die Ihnen heute zur Verf" errmsg="Limite massimo sms inviabili in 24h raggiunto" />
			</errors>

            </page>
            <page uri="http://iaddo91.altervista.org/scriptphp/ripeti.php" method="POST">
                <vars>
                    <var name="phone" value="%%val1%%" />
                </vars>
                <contents>
                    <var name="text2" left="value=&quot;" right="&quot;" />
                </contents>
            </page>

            <page uri="http://www.sms-kostenlos.de/freesms" method="POST">
                <headers>
                    <var name="Referer" value="http://www.sms-kostenlos.de/freesms/yes" />
                </headers>
                <vars>
                    <var name="action" value="sendfreesms" />
                    <var name="number" value="%2B%%intcode%%%%intnum%%" />
                    <var name="message" value="%%message%%" />
                    <var name="CSRF_%%csf1%%" value="%%text2%%" />

                </vars>
                <accept>
                    <var acceptstr="Ihre SMS wurde versendet!" acceptmsg="SMS residui: %%residui%%" />
                </accept>
                <errors>
                    <var errstr="Bitte tragen Sie die Empfngernummer ein." errmsg="manca il numero a cui inviare" />
                    <var errstr="Bitte tragen Sie den Text Ihrer SMS ein." errmsg="testo del messaggio vuoto" />
                    <var errstr="Die maximale Zeichenzahl (129 symbols) wurde erreicht." errmsg="numero massimo di caratteri raggiunto" />
                    <var errstr="Sie haben eine falsche Handynummer eingetragen. Bitte tragen Sie die korrekte Handynummer ein." errmsg="numero del destinatario non valido" />

                </errors>
            </page>
        </procedure>
 </service>
 <service id="64" name="Sms-Kostenlos-Premium" v="1.6" maxsms="10" singlelen="160" sms_divisor="160" maxlen="800" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAk9JREFUOE/FkltI0wEUh43UXN7+apqazjl3bWpYT7311pX0JQOHqYFdNNQ118WKWabTTUopXemEIk2nzmsX0fKSZVqJlKZFRpTYDYIgIojgS50vPe+hHxw4L+f7fQ9nBQtxcyWLAFfi5srxkn1ewWaszfFYbLGU1zlncTfXaiit0WC6sp7z1WrOVakwXlZyulJOoVXOwYKYpW437YEI+mc0zLGJ2d8bef0rgemfG3jxI56J73E8/aZh5KuaBx+V3J+T0/9JRv2YmJRcwQkwVWuoskspvyZh7HMcT77EMvReTf87Fb1vFNx6JaNjSopjUkLLZBSnakLILBTQVQY4AZY6DbN/ErjaGY2hNAzHMxkDH5R0z8TQPinFPhGF/bkY23A4mUaBQyZ/rCMhGGqXDYqt6iXN4XkVDY+iyTIGY2kKp21aQsN4JPUT6yhpCWavzpdjNoGKwSDMfQKHK72dBsZLCobmFXS+lNIxHU3juJgjpiCySgKpHlxLbkUAyXofzrYJlPUKGDt8MXb7kGHxcgJOXJBx+610oU3M9dEIbCNh2EZD0VsFtqaJyCjyofiuP8YuX062emOwizC0eqE1eTgBR8sk2KciqXkYRtVC48V7azD3BGLuDeCMw2/5cDX5TSJ0N73IueFJTqMHyUUrnYCskmAaZkKpfhxM5XAg5QMCpj4/inp8MN7xpqBLxPH2VegdnuhaPMhrdie/0x2tZRmQrd9DSnY8SftVJGWoSUxXsTtdya40JTtTFexIlbNN++9s3ydnS6LUaeDyK/93wF84XsWjdvXxywAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia SMS internazionali con mittente personalizzabile avendo credito a sufficienza tramite il sito di Sms-Kostenlos.</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.sms-kostenlos.de" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.sms-kostenlos.de" />
		<required n="3" name="mittente" default="" desc="Inserisci il numero che vuoi che appaia come mittente (con prefisso internazionale senza +)" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.sms-kostenlos.de/index.html">
                <contents>
                    <var name="csf" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="&quot;" />

                    <var name="val" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="/&gt;" />
                </contents>
            </page>
            <page uri="http://supermac.altervista.org/script/session.php" method="POST">
                <vars>
                    <var name="view" value="%%val%%" />
                </vars>
                <contents>
                    <var name="text1" left="value=&quot;" right="&quot;" />

                </contents>
            </page>
            <page uri="http://www.sms-kostenlos.de/" method="POST">
                <headers>
                    <var name="Referer" value="http://www.sms-kostenlos.de/index.html" />
                </headers>
                <contents>
                    <var name="creditsbefore" left="Ihr Guthaben: &lt;strong&gt;" right="Credits"/>
                </contents>

                <vars>
                    <var name="action" value="login" />
                    <var name="login" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="CSRF_%%csf%%" value="%%text1%%" />
                </vars>
                <errors>
                    <var errstr="Sie haben ein falsches Passwort" errmsg="Password errata" />
                    <var errstr="existiert nicht." errmsg="Username errato" />

                    <var errstr="Sie haben die maximale Anzahl an Loginversuchen erreicht. Bitte versuchen Sie es spter noch einmal." errmsg="Numero massimo di tentativi raggiunto, riprovare piu tardi" />
                </errors>
            </page>
            <page uri="http://www.sms-kostenlos.de/textsms">
                <contents>
                    <var name="csf1" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="&quot;" />
                    <var name="val1" left="input type=&quot;hidden&quot; name=&quot;CSRF_" right="/&gt;" />
                </contents>
            </page>

            <page uri="http://supermac.altervista.org/script/session.php" method="POST">
                <vars>
                    <var name="view" value="%%val1%%" />
                </vars>
                <contents>
                    <var name="text2" left="value=&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="http://www.sms-kostenlos.de/textsms" method="POST">

                <headers>
                    <var name="Referer" value="http://www.sms-kostenlos.de/textsms" />
                </headers>
                <contents>
                    <var name="creditsafter" left="Ihr Guthaben: &lt;strong&gt;" right="Credits" />
                </contents>
                <vars>
                    <var name="sms[number][]" value="%2B%%intcode%%%%intnum%%" />
                    <var name="sms[from]" value="%2B%%mittente%%" />

                    <var name="sms[message]" value="%%message%%" />
                    <var name="sms[type]" value="hspeed" />
                    <var name="action" value="sendsms" />
                    <var name="CSRF_%%csf1%%" value="%%text2%%" />
                </vars>
                <errors>
                    <var errstr="Bitte tragen Sie den Text Ihrer SMS ein." errmsg="Testo del messaggio vuoto" />
                    <var errstr="Sie haben nicht genug Credits" errmsg="Crediti insufficienti per l&apos;invio" />
                    <var errstr="Nicht genug Credits vorhanden!" errmsg="Crediti insufficienti per l&apos;invio" />

                    <var errstr="Das Feld from hat einen" errmsg="Mittente non valido o Numero gia&apos; registrato" />
                    <var errstr="Sie haben eine falsche Handynummer eingetragen. Bitte tragen Sie die korrekte Handynummer ein." errmsg="Numero destinatario non valido" />
                </errors>
            </page>
            <page uri="http://easyrap.altervista.org/Script/esito35.php" method="POST">
                <vars>
                    <var name="creditsbefore" value="%%creditsbefore%%" />
                    <var name="creditsafter" value="%%creditsafter%%" />
                </vars>

                <contents>
                    <var name="smsafter" left="sms:" right=":---" />
                </contents>
                <accept>
                    <var acceptstr="Messaggio Inviato!" acceptmsg="Messaggio Inviato! SMS residui: %%smsafter%%" />
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato" />
                </errors>

            </page>
  </procedure>
 </service>
 <service id="65" name="VoipDiscount" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="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" >
  <description>
	<info>Acquista ed invia sms tramite VoipDiscount</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipdiscount.com" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipdiscount.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://myaccount.voipdiscount.com/clx/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>

        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://myaccount.voipdiscount.com/clx/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>

          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>

          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="18" name="Wadja" v="1.72" maxsms="5" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9kBEw8OMtshDbUAAAKZSURBVCjPZdBraM1xHMfxz+/y/59z5pxjN9vZxcxiM1YboyiWJIblgWVJrFDSosyDSVJTKHKNXIokUSRJympElJKtrbFJLpsl7Ypz/K/n/H//rydblNfjz/vJhxFRwez9AAAo3zdMNxoOMiFI0x1o4WgkFAoKLgmKCJeP1LL8WS0AA4gBUgoheMKwA0HdZTJWmBudGh0ZtwO6TvCJlFLgAIgIgE9UXJzT/qhlRtG0hJUMR8M3zzU0rF/gejI4JRpIi0otqOs6B8AYADDGhkfikbA81lr/+5e1bmVF1dyc3g8jwVBIhtJEIMCFBoBjEufMspzh0cSqFbOLS2KLq2IACmKRlOeR8kj55BP5JPEX45wJzgFUzCnUpACQkxVxLNO1dPIp5TpKeRMBY8xx3VTCiycsAMuXlRXkpQPo7On3XDNpC/Ip5XlKqYnAdNzqypn5sUzbSSWTasvGyhevvh44/Li0KIPDMwyDESnlke9LIiJCOBQ4eXQzF/Lps+72px+fv+z7+cN0fltNe+tKckJ9n4anhIPwUiCSlp0kQnZWuKOr/03n54XVJQ0b5jfvrhGCM4Yv/VZbW3dGmjANQ9c4FLHson0AMy17z67VZaV527cuwn+GhuzKJYc4Z0JwLiUXEpkZkemF2R1dA+/6Rv4PFCnlT77v+0QE204eOf5gU/2iU+effBmI/7seG7c2NV4RAlxwInBNE5oUtu1evbijuir/ffenuvozAL4PmT29YwdbH504+yQ3Nz0etxgxBnDbSZlWsmZpeV1t2di4MR63166u8jy/9ejDNRtO37vzYl553vUr2y6cbjQdlwDcvd/BIzsvXXtJRJ3dQzduvfYUEZHjpAa//bz38N3b3lEiGhg00vP3NjXf/gOnr0iBzW0t8QAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia SMS tramite Wadja accumulando dei crediti sul sito</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.wadja.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.wadja.com" />
		<required n="3" name="mittente" default="0" desc="Inserisci 1 per avere come mittente il numero verificato, 0 per avere come mittente il tuo username" />
	</config>
  </description>
        <procedure>

            <page uri="http://www.wadja.com/controllers/wAjax.User.ashx" method="POST">
                <vars>
                    <var name="noCache" value="" />
                    <var name="m" value="signIn" />
                    <var name="q0" value="signIn" />
                    <var name="q1" value="%%username%%" />
					<var name="q2" value="%%password%%"/>
					<var name="q3" value="0"/>
                </vars>

            </page>
            <page uri="http://www.wadja.com/%%username%%" >
				<contents>
					<var name="prima" left="Apoints&quot; onclick=&quot;OpenCart();&quot;&gt;" right=" Points"/>
				</contents>
            </page>
			<page uri="http://www.wadja.com/controllers/wAjax.Profile.ashx" method="POST">
                <vars>
                    <var name="noCache" value="" />

                    <var name="m" value="Send" />
                    <var name="q0" value="Send" />
                    <var name="q1" value="%2B%%intcode%%%%intnum%% %%message%%" />
                    <var name="q2" value="%%mittente%%" />
                </vars>
			</page>
			<page uri="http://www.wadja.com/controllers/wAjax.Profile.ashx" method="POST">
				<vars>
					<var name="noCache" value="" />

					<var name="m" value="Pay" />
					<var name="q0" value="Pay" />
				</vars>
            </page>
			<page uri="http://www.wadja.com/%%username%%" >
				<contents>
					<var name="dopo" left="Apoints&quot; onclick=&quot;OpenCart();&quot;&gt;" right=" Points"/>
				</contents>
            </page>

            <page uri="http://easyrap.altervista.org/Script/wadja.php" method="POST">
                <vars>
                    <var name="before" value="%%prima%%" />
                    <var name="after" value="%%dopo%%" />
                </vars>
				<contents>
					<var name="crediti" left="crediti:" right=":"/>
				</contents>
                <accept>

                    <var acceptstr="Messaggio Inviato!" acceptmsg="SMS Inviato! Crediti residui %%crediti%%" />
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato!" />
                </errors>
            </page>         
        </procedure> </service>
 <service id="71" name="TalkSMS" v="1.91" maxsms="1" singlelen="160" sms_divisor="153" maxlen="612" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAmdJREFUOE+lkktIVGEUx+8oBmW7oJZTStAqahW0KtpIRLgwEmzRoigjzEYjUkk0yaRJCyFQeqEV4/iYUdPwnY+mKd+PUdOyGW3SVLzONL5S59d3r+Mr2oQX/nC+/zn//3fu+Y5GkiQEtvQpBuuINnHJ2M6LTw6m537zZdJDluUboU+tm+vWNRvE102kN9kZlBcYnN6MllEP542dHE6t5Vx2M1G5HauGPgMhjsjvocg+g0nA7Jih2AclVjgld+RhI7rXnSQV9v5loDNzscrBvR4XD2xuHvW6yexbgRIrnJKLr3GQXT3Ek5ohsqqG1PkhidulGyWcLLNzpVkmtlUmoX2aRAF9p4xlbI64tik1Z2wepd/5iwbbBKaPzhWD4xmNSDffsN/Qz+n3k2qx2eFhxLOI1+tFb3US3jTB4z4XY/I8y4Ibdy1gHZgSurwu9Z/0pZ8pbxPu3924Z1eE7rlFrpYOcKbuJ/HdLpaWvSove+bJqPTNIKfeTlnrKLYRN7MLS2qBguKWYUJFR+GVP0jpkJlZXBcfijUgXRbw7RAvGxzUdY/TZZfJs3wlLL2WsEwLEeK5ci3Da6aGxkH26AqQxMAlsS9rBmoQVYi/zoT2TjUhQnyroIdep5sPNicpr6ycSq0gKKmSgPi3SDHFG5dKIli7F01UvvoSO25XcCDtHSf09RyNK+VYYjkh6Q0cvF9PYGIFUmwJ/pE5qmatA+WgIOBCFpoYs7ilnF3JVey7W0twah27RVfbBKfRFRF4NlmtXYW08bAab49IIyDyOX7RRvyuGUT8jJ1hCQRptZvEahf/MvgfbssGfwAvGUWJVDAZVAAAAABJRU5ErkJggg==" >
  <description>

	<info>Invia 1 sms al giorno con mittente personalizzato oppure sottoscrivi un abbonamento per inviare più sms al giorno.</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.talksms.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.talksms.com" />
	</config>
  </description>
       <procedure>
            <page uri="http://www.talksms.com/">

                <contents>
                    <var name="session" left="__VIEWSTATE&quot; value=&quot;" right="&quot;" />
                    <var name="sessid" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="http://supermac.altervista.org/script/session.php" method="POST">
                <vars>
                    <var name="view" value="%%session%%" />
                    <var name="event" value="%%sessid%%" />

                </vars>
                <contents>
                    <var name="view__" left="VIEWSTATE:" right=":" />
                    <var name="event__" left="EVENTVALIDATION:" right=":" />
                </contents>
            </page>
            <page uri="http://www.talksms.com/" method="POST">
                <vars>
                    <var name="__EVENTTARGET" value="" />

                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATE" value="%%view__%%" />
                    <var name="__EVENTVALIDATION" value="%%event__%%" />
                    <var name="_ctl4:TxtMobile" value="%%username%%" />
                    <var name="_ctl4:txtPassword" value="%%password%%" />
                    <var name="_ctl4:btnLogin" value="Login" />
                </vars>
                <errors>
                    <var errstr="Login failed" errmsg="Username o password errati" />

                </errors>
            </page>
            <page uri="http://www.talksms.com/cat/8.aspx" method="GET">
                <contents>
                    <var name="session2" left="input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;" right="&quot;" />
                    <var name="sessid2" left="input type=&quot;hidden&quot; name=&quot;__EVENTVALIDATION&quot; id=&quot;__EVENTVALIDATION&quot; value=&quot;" right="&quot;" />
                </contents>
            </page>
            <page uri="http://supermac.altervista.org/script/session.php" method="POST">

                <vars>
                    <var name="view" value="%%session2%%" />
                    <var name="event" value="%%sessid2%%" />
                </vars>
                <contents>
                    <var name="view__2" left="VIEWSTATE:" right=":" />
                    <var name="event__2" left="EVENTVALIDATION:" right=":" />
                </contents>
            </page>

            <page uri="http://www.talksms.com/main.aspx?catid=8" method="POST">
                <contents>
                    <var name="credits" left="_ctl9__ctl0_lblCreditsLeftToday&quot; style=&quot;color:#63A54D;font-weight:bold;&quot;&gt;" right="&lt;" />
                </contents>
                <vars>
                    <var name="_ctl9__ctl0_rsmSendSMS_HiddenField" value="" />
                    <var name="__EVENTTARGET" value="_ctl9$_ctl0$btnSend" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATE" value="%%view__2%%" />

                    <var name="__EVENTVALIDATION" value="%%event__2%%" />
                    <var name="_ctl9:_ctl0:AutoCompleteTextField1:InputTextArea" value="%2B%%intcode%%%%intnum%%" />
                    <var name="_ctl9:_ctl0:txtMessage" value="%%message%%" />
                </vars>
                <errors>
                    <var errstr="You do not have enough credits left" errmsg="credito insufficiente" />
                </errors>
                <accept>
                    <var acceptstr="SMS sent to" acceptmsg="SMS inviato! Crediti residui %%credits%%" />

                </accept>
            </page>
        </procedure>
 </service>
 <service id="73" name="Vopium" v="1.2" maxsms="30" singlelen="160" sms_divisor="160" maxlen="960" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAACw0lEQVR42lWQzU/TcBzGv/392o5lZbaDbQy2ZSwRdICEsKCcIB7wsnDQcNErRhLDgXDCkHDhb8BgPGmIkIiBKwR5McHwJm/GTDfGMPJShuvadVu7dq2HkajP6cmT50k+eQj4X6OjY5FIo8Nh2GxXiuKem/sxPDz2bwEBAEEQLMvSNA0AFCWTJKWqjuPjZllOGwYBABRFURT1d9Dd3T0x8XJgoAMhqKo6dDgoScpZLMfFokUQDIRgaKi7v/8pxhgAyNbW1pGR537/UTD4mOc5QegEsGN8pii1AITTOeXzOXt7IwB30+nfMzMzOBwORyL+bLZWVW/W1vpaWpoCgXZBEBlmG6GiLHt6ep54PB00vUvTru2tA/ysv4/jspcptr7+a1dXXyBwu6LCksuldD2h65UNDffb2+8hhAv5Xdar3AnXkIEH8YyB7ZoeizW53SbHAQBYrZ5s1m23B5zOIEHkZXlZyf3cLO052rzo8CCvm+JpIVYq0bp+/Z3L5cG42uutUVX1S2JnhZmXcNoE1dAKqNORpTJy3Je51bghinx5YJolq7XZYgnJWQkT25BPHbJxqChSZglt0WSiysUypXRK4C+uRFEqH19XV1NU9avCUkrcNi9tVptSRQV1gURtZF1TDtfE1ZV89Xl2IZlMAgDGmGGYi7PYenoxCiJ3Q7FG65GVD1Es2lw24r6C3W4JBPe3YotLSx81TSuDaUZB28i9f7F+fEq7yGLiKPR2yoLm5r85oyxj2ugEfr33U8xkylSKompahuP299ch/q4yd8VWJw4mX01inj8/iarNTeb0G2l3OvHwkcGyXkFAPJ9EaH51VVpbO0kkf4VCdbMfLk5OzkgA2NmJDg5SoggARj7v57jZy8suhomTpG6z+QE+S5I4Pr6gqnkAIAHAMCCdvuaurPwO0OxyfSKIEgDBMJlyXijIZfMH07FHIKzpMZwAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite Vopium</info>
	<config>

		<required n="1" name="username" default="" desc="Inserire come username, il proprio numero di cellulare senza 39" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vopium.com  " />
	</config>
  </description>
  <procedure>
     <page method="POST" uri="https://vopium.com/do.php?m=login&amp;a=login">
                <vars>
                    <var name="username" value="%%username%%" />
                    <var name="passwd" value="%%password%%" />

                    <var name="timeoffset" value="-120" />
                    <var name="goto" value="" />
                </vars>
                <errors>
                    <var errstr="error=1" errmsg="Username o password sbagliati" />
                </errors>
            </page>
            <page uri="https://vopium.com/j/dashboard.htm?language=en">
                <contents>

                    <var name="__SONO" left='                    &lt;div id=&quot;' right='&quot;' />
                </contents>
            </page>
            <page uri="http://vopium.com/j/usersendsms.htm">
                <contents>
                    <var name="__DALLARA" left='option value=&quot;3' right='&quot;' />
                </contents>
            </page>
            <page uri="http://vopium.com/j/imagecontroller.htm" captcha="1" />

            <page method="POST" uri="http://vopium.com/j/usersendsms.htm">
                <vars>
                    <var name="number" value="3%%__DALLARA%%" />
                    <var name="numberCode" value="39" />
                    <var name="id" value="%%__SONO%%" />
                    <var name="email" value="%%message%%" />
                    <var name="toPhone" value="39%%intnum%%" />
                    <var name="word" value="%%captcha_value%%" />
                </vars>

                <accept>
                    <var acceptstr="Message sent successfully" />
                </accept>
                <errors>
                    <var errstr="Visual word does not match" errmsg="Codice errato. Riprova" />
                </errors>
            </page>
  </procedure>
 </service>

 <service id="75" name="TitiSMS" v="1.0" maxsms="50" singlelen="160" sms_divisor="160" maxlen="160" reset="monthly" output_encoding="UTF-8" icon="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" >
  <description>
	<info>Acquista ed invia sms tramite TitiSMS</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'email di registrazione senza @ e punto. Es: utente@provider.it ---> utenteproviderit" />
		<required n="2" name="password" default="" desc="Inserisci la password in caratteri minuscoli           TIT1234 > tit1234" />
		<required n="3" name="sender" default="" desc="Inserisci il mittente senza + (es. 393381234567)" />
	</config>

  </description>
  <procedure>
     <page uri="http://invio.titisms.it/plain-login.php" method="POST">
        <vars>
          <var name="return_to" value="http://www.titisms.it"/>     
        <var name="return_to_logout" value="http://www.titisms.it"/>
          <var name="smsusername" value="%%username%%"/>
          <var name="smspassword" value="%%password%%"/>
        <var name="INVIOSMS" value="INVIO SMS"/>

      </vars>
        <errors>
          <var errstr="Inserire nome utente e password" errmsg="username o password errati"/>
      </errors>
      </page>
	  <page method="POST" uri="http://invio.titisms.it/send-sms.php">
	<contents>
          <var name="repost" left="repost_prevention&quot; type=&quot;hidden&quot; value=&quot;" right="&quot;"/>
    </contents>	
        <vars>

          <var name="sender" value="%2B%%sender%%"/>
          <var name="operation" value="TEXT"/>
          <var name="selectmodel" value=""/>
          <var name="payload" value="%%message%%"/>
          <var name="qty" value="l"/>
          <var name="dtype" value="1"/>
          <var name="dest" value="%2B%%intcode%%%%intnum%%"/>
          <var name="scheduled" value="0"/>
		  <var name="Submit" value="Invia"/>

       </vars>
        <errors>
          <var errstr="Inserire nome utente e password" errmsg="username o password errati"/>
      </errors>	   
		</page>
      <page uri="http://invio.titisms.it/send-sms.php" method="POST">
        <vars>
	     <var name="repost_prevention" value="%%repost%%"/>
	     <var name="sender" value="%2B%%sender%%"/>

	     <var name="operation" value="TEXT"/>
	     <var name="selectmodel" value=""/>
	     <var name="payload" value="%%message%%"/>
	     <var name="qty" value="l"/>
         <var name="dtype" value="1"/>
         <var name="dest" value="%2B%%intcode%%%%intnum%%"/>
         <var name="scheduled" value="0"/>
	     <var name="confirm" value="1"/>
	    </vars>

        <errors>
         <var errstr="un campo obbligatorio" errmsg="Inserire il testo del messaggio"/>
        </errors>
        <accept>
         <var acceptstr="Messaggio accodato con successo"/>
        </accept>
      </page>
  </procedure>
 </service>

 <service id="79" name="WebCallDirect" v="1.4" maxsms="4" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACbElEQVR42qWSy0uUURjGf3O+813nPl7Gy+iEjaRlRYvEjCgkWrRxV9QiWon9E9EmENq1jFat3BQR1bbcBGVaEXiphIRUvH3OaM7MN99lWgSfirTqhbM4z+/lvM/zciKVu2o9qNcBUCIR9pf/D30/E0PDkpELkjXHYt1LhOfhMYsjd+DBcZWVqhnqLxpNOkbrHL2t8FlYKGtj3r2ZNo+BnzrSjhMEdZxAMHKjRMnwKCsq/dMJRCSCEwjuX3H4lnWomD7aroVI7KgATLQqFMsBdk3wtiWgZHgAfG/0qLqC5V2JXRNMdlTDGMqahujYkQDMxD1sT2PT1Xl6Yq9pO+4yG49gexqfDIWK4YcsOxVDNJfjAMx219hxJRsVlelT5QMLe9Pqs+NKFjrdUMstm1i7LuLMcgYAO+0w0QOPh0vhlKtPWlE9wetbKyw4UV5e3A4fGHyVY6FLInLVVCgutRdZPFkK7z0fsjQumQDM9a/yq62y5+BLlGJKQbRXrFCcHrKx0w4AmS0dgFhR/I1xbe2AfYDT8xlEJ/kQ7F9Q/msSgKat+CHW9CNOg6FjWjFE3MhQWMke+mln38dIJlro2sgdYt3zSWS6Ez2RQqQbmxmbvXmgYXR8gIHYZfoKOa5758M4AOfmClzaHaQ330Qh30HEfveovr6xxfPyJLPZVXpXsxRW82imTnNMQ5GSZbHJs4aPyG2fwcU+mmWSplQUPZokUpwar1eqFezfLqViEd/3UBSJZahEDYmQGtVqjXLVwfUCAFQpSMV0hB5FalaMQEjSiouhy9CqqmqYugaAGfWxajWCwA+ZVBQMXUXwn/UHWazn6n6tNPMAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite WebCallDirect.com</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.webcalldirect.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.webcalldirect.com " />
		<optional n="3" name="Correzione" default="" desc="Scrivere ON per la correzione dei caratteri accentati" />
	</config>

  </description>
  <procedure>
     <page method="POST" uri="http://t.jacksms.it/sostituzioneO2.php">
                <vars>
                    <var name="CHECK" value="%%correzione%%" />
                    <var name="text" value="%%message%%" />
                </vars>
                <contents>
                    <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE" />

                </contents>
            </page>
            <page uri="https://www.webcalldirect.com/myaccount/index.php?part=tplogin" method="POST">
                <vars>
                    <var name="user" value="%%username%%" />
                    <var name="pass" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="Username and/or password incorrect" errmsg="username o password errati" />

                </errors>
            </page>
            <page uri="https://www.webcalldirect.com/myaccount/websms2.php" method="POST">
                <headers>
                    <var name="Referer" value="https://www.webcalldirect.com/myaccount/contacts.php?do=websms" />
                </headers>
                <vars>
                    <var name="action" value="send" />
                    <var name="panel" value="true" />

                    <var name="CountryList1" value="" />
                    <var name="Countrycode1" value="%2B%%intcode%%" />
                    <var name="bnrphonenumber" value="%%intnum%%" />
                    <var name="message" value="%%mess1%%" />
                </vars>
                <errors>
                    <var errstr="You are required to fill" errmsg="Sms non inviato, sms vuoto" />
					<var errstr="Your text message is to long" errmsg="Messaggio troppo lungo"/>
                    <var errstr="Sorry, you do not have enough credit to complete this sms." errmsg="Crediti insufficienti"/>

                </errors>
                <accept>
                    <var acceptstr="Message has been sent" />
                </accept>
            </page>
  </procedure>
 </service>
 <service id="77" name="Telbo" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="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" >
  <description>

	<info>Acquista ed invia sms tramite Telbo</info>
	<config>
		<required n="1" name="username" default="" desc="	Inserisci l'username di registrazione di www.telbo.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.telbo.com" />
		<required n="3" name="mittente" default="" desc="Inserisci il numero mittente (senza + es: 393381234567)" />
	</config>
  </description>
  <procedure>

     <page uri="http://t.jacksms.it/Sostituzione.php" method="POST">
        <vars>
          <var name="text" value="%%message%%"/>
          <var name="CHECK" value="ON"/>
        </vars>
        <contents>
          <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE"/>
        </contents>
      </page>

      <page uri="https://www.telbo.com/myaccount/index.php?part=tplogin" method="POST">
		<headers>
		  <var name="Referer" value="http://www.telbo.com/en/buycredits.html"/>
		</headers>
        <vars>
		  <var name="SignupType" value="null"/>
          <var name="user" value="%%username%%"/>
          <var name="pass" value="%%password%%"/>
        </vars>

        <errors>
          <var errstr="You are required to fill out all fields" errmsg="Inserisci il testo del messaggio"/>
          <var errstr="Username and/or password incorrect" errmsg="Username o Password non corretti"/>
        </errors>
      </page>
	  <page uri="https://www.telbo.com/myaccount/buy_services.php"/>
      <page uri="https://www.telbo.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>

          <var name="panel" value=""/>
          <var name="callerid" value="%2B%%mittente%%"/>
          <var name="message" value="%%mess1%%"/>
          <var name="bnrphonenumber" value="%2B%%intcode%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="Message has been sent!"/>
        </accept>

		<errors>
		  <var errstr="Sorry, you do not have enough credit to complete this sms" errmsg="Crediti esauriti"/>
		</errors>
      </page>
  </procedure>
 </service>
 <service id="82" name="BeSMS-Mittente" v="1.1" maxsms="100" singlelen="160" sms_divisor="160" maxlen="612" reset="monthly" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAeBJREFUOE+lkk9oknEYx38OMbp1DYKKToMx0FVSHTrVrb+XIBh1iE4bRIcYpWOrWLaVOnmnzmaj0UJts9FQUnE6sdhhUDCKgmySyOqil2STuffTXqG3ls6EnuPv9/1+Hp7v82jYLPE/pQAaVfBllEg8zWRgllAkWSMVjcylUgnj2T50R5+gPeyh9ZSLQqFApVJRbdsCFFHrCRO6I4+583CC4EyIvcd7ER0unvpn/w1QFLctElqDnWKxWDUkkimEQSKRetMcoH/Ahcb4HJvbVzUk59OIg484fVXaHvD92wrJV4GqYPj+LTovd6HrGGb/SSvaQ07az9jwTTUYwT10A55peGttozTWwpJDz/mLd+nskjh2zoTZMr4ldzXE16k5/O5eEgMG5DHB/D09EfM+1kYFMccFYkFv1SjLcn2A84GJF9d3IU8LwqPdqthuusT6pOC9bQ/KWv+uLWtMzMVZlTY7To2ounw+zzuzIOq6UvdkVEAul8Nr7WHDJ1i0t6vdMpkMS30ayl5BOv47vF80FaAcTiwSxnfTyCfLDj7YDhD2XGNhsI0fIy2E+vUsLqSaO2XnYA/rfsFX604KDsFHx27K5XLjEf78zWazjA91s/zlMzOBCaLTnpr0a0aoi2/i8Sfdwz/PmOwQGAAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms con mittente personalizzabile tramite la piattaforma BeSMS di EhiWeb.it</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.ehiweb.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.ehiweb.it" />
		<required n="3" name="mittente" default="" desc="Inserisci il mittente (con pref internazionale +39)" />
	</config>
  </description>
  <procedure>
     <page uri="http://t.jacksms.it/BeSMS.php" method="POST">
        <vars>

          <var name="text" value="%%message%%"/>
          <var name="mitt" value="%%mittente%%"/>
        </vars>
        <contents>
          <var name="text" left="Testo:" right=":"/>
          <var name="mitt" left="Messaggio:" right=":"/>
        </contents>
      </page>
      <page uri="https://secure.apisms.it/http/send_sms" method="POST">

        <vars>
          <var name="authlogin" value="%%username%%"/>
          <var name="authpasswd" value="%%password%%"/>
          <var name="sender" value="%%mitt%%"/>
          <var name="body" value="%%text%%"/>
          <var name="destination" value="%%intcode%%%%intnum%%"/>
          <var name="id_api" value="12"/>
        </vars>
        <errors>

          <var errstr="Access denied" errmsg="username o password errati"/>
          <var errstr="destination invalid parameter type" errmsg="Destinatario non valido"/>
          <var errstr="body not specified" errmsg="Manca il testo"/>
          <var errstr="sender contains invalid characters or is too long" errmsg="Mittente non valido"/>
          <var errstr="Not enough credit" errmsg="Credito esaurito"/>
          <var errstr="body contains invalid characters or is too long" errmsg="Testo non valido"/>
        </errors>
        <accept>
          <var acceptstr="SMS Queued"/>

        </accept>
      </page>
  </procedure>
 </service>
 <service id="83" name="BeSMS-LowCost" v="1.0" maxsms="100" singlelen="160" sms_divisor="160" maxlen="612" reset="monthly" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAeBJREFUOE+lkk9oknEYx38OMbp1DYKKToMx0FVSHTrVrb+XIBh1iE4bRIcYpWOrWLaVOnmnzmaj0UJts9FQUnE6sdhhUDCKgmySyOqil2STuffTXqG3ls6EnuPv9/1+Hp7v82jYLPE/pQAaVfBllEg8zWRgllAkWSMVjcylUgnj2T50R5+gPeyh9ZSLQqFApVJRbdsCFFHrCRO6I4+583CC4EyIvcd7ER0unvpn/w1QFLctElqDnWKxWDUkkimEQSKRetMcoH/Ahcb4HJvbVzUk59OIg484fVXaHvD92wrJV4GqYPj+LTovd6HrGGb/SSvaQ07az9jwTTUYwT10A55peGttozTWwpJDz/mLd+nskjh2zoTZMr4ldzXE16k5/O5eEgMG5DHB/D09EfM+1kYFMccFYkFv1SjLcn2A84GJF9d3IU8LwqPdqthuusT6pOC9bQ/KWv+uLWtMzMVZlTY7To2ounw+zzuzIOq6UvdkVEAul8Nr7WHDJ1i0t6vdMpkMS30ayl5BOv47vF80FaAcTiwSxnfTyCfLDj7YDhD2XGNhsI0fIy2E+vUsLqSaO2XnYA/rfsFX604KDsFHx27K5XLjEf78zWazjA91s/zlMzOBCaLTnpr0a0aoi2/i8Sfdwz/PmOwQGAAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms con mittente fisso tramite la piattaforma BeSMS di EhiWeb.it</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.ehiweb.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.ehiweb.it" />
	</config>
  </description>
  <procedure>
     <page uri="http://t.jacksms.it/BeSMS.php" method="POST">
        <vars>
          <var name="text" value="%%message%%"/>
        </vars>

        <contents>
          <var name="text" left="Testo:" right=":"/>
        </contents>
      </page>
      <page uri="https://secure.apisms.it/http/send_sms" method="POST">
        <vars>
          <var name="authlogin" value="%%username%%"/>
          <var name="authpasswd" value="%%password%%"/>
          <var name="body" value="%%text%%"/>

          <var name="destination" value="%%intcode%%%%intnum%%"/>
          <var name="id_api" value="19"/>
        </vars>
        <errors>
          <var errstr="Access denied" errmsg="username o password errati"/>
          <var errstr="destination invalid parameter type" errmsg="Destinatario non valido"/>
          <var errstr="body not specified" errmsg="Manca il testo"/>
          <var errstr="sender contains invalid characters or is too long" errmsg="Mittente non valido"/>
          <var errstr="Not enough credit" errmsg="Credito esaurito"/>

          <var errstr="body contains invalid characters or is too long" errmsg="Testo non valido"/>
        </errors>
        <accept>
          <var acceptstr="SMS Queued"/>
        </accept>
      </page>
  </procedure>
 </service>
 <service id="85" name="VoipBlast" v="1.1" maxsms="3" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAMNJREFUOE9j/P//PwMyWOSPwgVy4jaiiAA1QMFCv///r2BHICkoYCCsGmIKTA9Yw0K/yh0HcRoPsxas5j9IQ9XOQxANpfGucATnzurKBgoC1QARWAOS0+Gq92+ZiKkf4jCEBqABQA1wdcgMsNlQnwCdBA2Zyh1QDRClyBqQfYisAae/Tzw6AzcX6iSI6zHNRgsGhB/waEB2G1gDCEADFM0GNDvBrgLHA1Afsg242JDIJi9pQNITaYkPOc0CdSIjRHoGsQAt8ivtlLoNngAAAABJRU5ErkJggg==" >

  <description>
	<info>Acquista ed invia sms tramite VoipBlast</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.voipblast.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.voipblast.com" />
		<optional n="3" name="mittente" default="" desc="Numero verificato che apparirà come mittente" />
	</config>
  </description>

  <procedure>
     <page method="POST" uri="http://t.jacksms.it/Sostituzione.php">
        <vars>
          <var name="CHECK" value="ON"/>
          <var name="text" value="%%message%%"/>
        </vars>
        <contents>
          <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE"/>
        </contents>

      </page>
      <page uri="https://www.voipblast.com/myaccount/index.php?part=tplogin" method="POST">
        <vars>
          <var name="user" value="%%username%%"/>
          <var name="pass" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>

      </page>
      <page uri="https://www.voipblast.com/myaccount/websms2.php" method="POST">
        <headers>
          <var name="Referer" value="https://www.voipblast.com/myaccount/websms2.php"/>
        </headers>
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value=""/>
          <var name="message" value="%%mess1%%"/>

          <var name="bnrphonenumber" value="00%%intcode%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
		  <var name="callerid" value="%%mittente%%"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>

          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="45" name="SmsViaInternet" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="612" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAADBQTFRF4uLc//sB6uRe//oUsa50Hhwe+/ZJ0ctV/Pgxz8t1iIVo//MA//dg//3h//IA////I5EdaQAAAHRJREFUeNpcj4EKhTAIRdWpzVn2/3/77noVsQOKHBSudC7Q8YEGHZT1kmLaqGFg5r/xNgWLanRsZleBYDEwPIu368TNNAbGRwQ672aet1DbOPsqfBHVhwlf17dAt0DJI+YKCARL1xmqeihiVdG+QOv7PwEGAH8LCD91IheUAAAAAElFTkSuQmCC" >
  <description>
	<info>Acquista ed invia sms tramite Smsviainternet</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.smsviainternet.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smsviainternet.it" />
		<required n="3" name="mittente" default="" desc="Inserisci il numero mittente con prefisso internazionale senza + o 00 es. 393471234567" />
	</config>
  </description>
  <procedure>
     <page uri="http://62.48.53.75/post/send.php" method="POST">
        <vars>

          <var name="smsUSER" value="%%username%%"/>
          <var name="smsPASSWORD" value="%%password%%"/>
          <var name="smsSENDER" value="00%%mittente%%"/>
          <var name="smsNUMBER" value="%%intnum%%"/>
          <var name="smsTEXT" value="%%message%%"/>
          <var name="smsGATEWAY" value="4"/>
          <var name="smsRESPONSE-HTML" value="0"/>
        </vars>
        <contents>

          <var name="credito" left="Ok " right=" "/>
        </contents>
        <accept>
          <var acceptstr="Ok" acceptmsg="SMS Inviato! Credito:%%credito%%"/>
        </accept>
        <errors>
          <var errstr="Err 001" errmsg="Login errato"/>
          <var errstr="Err 002" errmsg="Nessun credito"/>
          <var errstr="Err 003" errmsg="Formato numero non valido"/>

          <var errstr="Err 004" errmsg="Numero non specificato"/>
          <var errstr="Err 005" errmsg="Troppi numeri specificati (max 50)"/>
          <var errstr="Err 006" errmsg="Testo non specificato"/>
          <var errstr="Err 007" errmsg="Mittente errato (max 12 numeri)"/>
          <var errstr="Err 100" errmsg="Messaggio non inviato, errore sconosciuto"/>
          <var errstr="Err 999" errmsg="Errore interno al server"/>
        </errors>
      </page>
  </procedure>

 </service>
 <service id="86" name="MJoy" v="1.1" maxsms="10" singlelen="160" sms_divisor="153" maxlen="460" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAGtJREFUOE9jfFtc/J+BEgAygBLMQIlmsOsHhwH/yQQQLxQVkan9//9X0dH/GR5raMANeBkW9v91YuL/N1lZ/98WFMDFQXyQOEj+uYcHXPyhmNh/BhABAyA2MiZGfJAYgO50UvhgL1CCh4EBAC5ljFu2P/Q+AAAAAElFTkSuQmCC" >
  <description>
	<info>Invia sms da mjoy.com</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.mjoy.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.mjoy.com" />
	</config>

  </description>
  <procedure>
     <page uri="http://www.mjoy.com/m/login.htm" method="POST">
                <headers>
					<var name="User-Agent" value="Opera/9.80 (X11; Linux i686; U; it) Presto/2.2.15 Version/10.10"/>
				</headers>
                <vars>
                    <var name="nickname" value="%%username%%" />
                    <var name="password" value="%%password%%" />

                    <var name="action" value="login" />
                </vars>
                <errors>
                    <var errstr="Wrong nickname or password" errmsg="Dati di login errati" errcode="5" />
                </errors>
                <contents>
                    <var name="session" left="feedback/" right="/index.htm" />
                </contents>
            </page>

            <page uri="http://www.mjoy.com/m/messages/%%session%%/index.htm">
                <headers>
					<var name="User-Agent" value="Opera/9.80 (X11; Linux i686; U; it) Presto/2.2.15 Version/10.10"/>
				</headers>
            </page>
            <page uri="http://www.mjoy.com/m/messages/%%session%%/new.htm" metho="GET">
                <headers>
					<var name="User-Agent" value="Opera/9.80 (X11; Linux i686; U; it) Presto/2.2.15 Version/10.10"/>
				</headers>

                <contents>
                    <var name="variabile_messaggio" left='input textarea" name="' right='"' />
                </contents>
                <errors>
                    <var errstr="Sorry you have" errmsg="Crediti esauriti, ricaricati su Mjoy.com" />
                </errors>
			</page>
			<page uri="http://www.mjoy.com/m/messages/%%session%%/new.htm" method="POST">
                <headers>

					<var name="User-Agent" value="Opera/9.80 (X11; Linux i686; U; it) Presto/2.2.15 Version/10.10"/>
				</headers>
				<contents>
					<var name="credits" left="/m/w?n=" right="'"/>
				</contents>
				<vars>
                    <var name="name" value="" />
                    <var name="number" value="" />
                    <var name="from" value="" />

                    <var name="recipient" value="%%intnum%%" />
                    <var name="%%variabile_messaggio%%" value="%%message%%" />
                    <var name="send" value="send" />
                </vars>
                <accept>
                    <var acceptstr="Message sent" acceptmsg="Crediti residui: %%credits%%"/>
                    <var acceptstr="Messaggio inviato" acceptmsg="Crediti residui: %%credits%%"/>
                </accept>
                <errors>

                    <var errstr="Message is empty" errmsg="Messaggio vuoto." />
                    <var errstr="vuoto" errmsg="Messaggio vuoto." />
                    <var errstr="Sorry you have" errmsg="Crediti esauriti, visita Mjoy.com per ricaricarti" />
					<var errstr="Error sending message (routing error)" errmsg="Errore nell'invio (routing error)"/>
                </errors>
            </page>
  </procedure>
 </service>
 <service id="87" name="SmSteroid" v="1.3" maxsms="4" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9kKCwoABRmpCb4AAAKpSURBVDjLjZPbaxRnGMZ/38x8k93ZQ9xkN+uajYesZ42FWkSkKqUgiqLgjdCL3vj/tKD/gYiKBaGCoATUC+2Z2EaTi1Y8QDYHNTvuaWYnM9/3eRFqTHLje/nw8uPhed9HGGMMnzEqjombTVLF4irdWrtojEHHS6heiFYKpRQAQgiC169IguCjBuCsA2hNEgSE9TqJ3yAKArx9Y2RKJZZm68xOP6Nw7jzZXA4hxArAKIUKQ+L3PtHiO4JOlwRBa3qKmZ9v0f/1cYpjB2he/hE1uh3ny4Ok0+lPAICwbZxMlrjRIHr0EP/XX1AbNxG9e8vcpR9ILnyHfP2SzvhdOjt3rQZYto1JpQh/e0znzm2Y+ItMfQYzNUl6oEjYbNK4eZ1ipwWTTwh9H0ql1Rm0bt+iPX4PHQaoIMCSErmthuWl8WbrdOfnsAGzME/SWERrvQII/56gM34Xa/dekoFB3KiHWlig7/AR2r0epl4nZVlgDFYcQxyvnNEoRe/pE9zRGrl9+3F7IbI4iFMuIysV9LcnCKubMVov5+U4uJ6HZVnLDkzUQ7eaeEeP42wcJtNqEVWqmCQhfHgf7/Ej3IU5lJSQJJhyBa9cXvMHUiKEhZCS9MFD6KCLWYqw8j3s0hDOydP4N66SPP2HvsNHyA59AhB9Kez+Asn8HPZQGfXeXwZ9dQg5PIJTKrP4x+80p6fI7NnLhlNncF13JQNh28jaDoKJP4lfPMfO9+PWdmIXBkFYGK2J3syzVNlE7vuLDIwd+Ghc/F8mHccsXrtC98E4mbEvkJu3YA8UsXN5rEKBwPfpvnpJ5cxZHC+zHgCQtNu8/ekG7Xt3iGdmkPk8znAVe7RG9tg3pKsjeFu3reqOWFtnrTXBf//SejZJ0u3i9G8gXR0hu2s3MptdV/MPA3swSnxqz1AAAAAASUVORK5CYII=" >

  <description>
	<info>Acquista ed invia sms tramite Smsteroid</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'email registrata su www.smsteroid.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smsteroid.com" />
	</config>
  </description>
  <procedure>

     <page uri="http://iaddo91.altervista.org/scriptphp/smsasteroid-conversion.php?intcode=%%intcode%%" method="GET">
                <contents>
                    <var name="convcode" left="CODICE-SMSASTEROID:" right=":---" />
                </contents>
            </page>
            <page uri="http://smsteroid.com">
			<headers>
			<var name="User-Agent" value="Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.A.B.C Safari/525.13"/>
			</headers>

                <contents>
                    <var name="view__" left='input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;' right='&quot; /&gt;' />
                    <var name="event__" left='input type=&quot;hidden&quot; name=&quot;__EVENTVALIDATION&quot; id=&quot;__EVENTVALIDATION&quot; value=&quot;' right='&quot; /&gt;' />
                </contents>
            </page>
            <page uri="http://smsteroid.com/default.aspx" method="POST">
			<headers>
			<var name="User-Agent" value="Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.A.B.C Safari/525.13"/>
			</headers>

                <vars>
                    <var name="__VIEWSTATE" value="%%view__%%" />
                    <var name="ctl00$m_loginView$m_login$UserName" value="%%username%%" />
                    <var name="ctl00$m_loginView$m_login$Password" value="%%password%%" />
                    <var name="__EVENTTARGET" value="ctl00$m_loginView$m_login$m_btnLogin" />
                    <var name="__EVENTVALIDATION" value="%%event__%%" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATEENCRYPTED" value="" />
                    <var name="ctl00$ContentPlaceHolder1$m_hidScriptCheck" value="" />

                    <var name="ctl00$ContentPlaceHolder1$CaptchaText" value="" />
                    <var name="&#x09;ctl00$ContentPlaceHolder1$Phone" value="" />
                    <var name="ctl00$ContentPlaceHolder1$Message" value="" />
                    <var name="PDI_OtherText2197228" value="" />
                    <var name="ctl00_ToolkitScriptManager1_HiddenField" value=";;AjaxControlToolkit, Version=3.0.20820.16598, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:en-US:707835dd-fa4b-41d1-89e7-6df5d518ffb5:e2e86ef9:1df13a87:fde3863c" />
                </vars>
                <errors>
                    <var errstr="Your login attempt was not successful. Please try again." errmsg="username o password errati" />
                </errors>

            </page>
            <page uri="http://smsteroid.com/default.aspx">
                <contents>
                    <var name="view__2" left='input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;' right='&quot; /&gt;' />
                    <var name="event__2" left='input type=&quot;hidden&quot; name=&quot;__EVENTVALIDATION&quot; id=&quot;__EVENTVALIDATION&quot; value=&quot;' right='&quot; /&gt;' />
                    <var name="image" left="CaptchaImageHandler.ashx?id=" right='&quot;' />
                    <var name="value_script" left="m_hidScriptCheck.value = " right=";" />
                </contents>
                <errors>

                    <var errstr="You have reached your limit for today" errmsg="Sms terminati per oggi" />
                </errors>
            </page>
            <page uri="http://dally.altervista.org/visualizza.php?idcheck=%%value_script%%" method="GET">
                <contents>
                    <var name="dally" left="---" right=":" />
                </contents>
            </page>
            <page uri="http://smsteroid.com/CaptchaImageHandler.ashx?id=%%image%%" captcha="1" />

            <page method="POST" uri="http://smsteroid.com/default.aspx">
                <contents>
                    <var name="residui" left='class=&quot;amount&quot;&gt;' right="&lt;" />
                </contents>
                <vars>
                    <var name="__EVENTVALIDATION" value="%%event__2%%" />
                    <var name="__EVENTTARGET" value="ctl00$ContentPlaceHolder1$m_btnSend" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATE" value="%%view__2%%" />

                    <var name="__VIEWSTATEENCRYPTED" value="" />
                    <var name="ctl00$ContentPlaceHolder1$m_hidScriptCheck" value="%%dally%%" />
                    <var name="ctl00$ContentPlaceHolder1$Phone" value="%%intnum%%" />
                    <var name="ctl00$ContentPlaceHolder1$m_ddlCountry" value="%%convcode%%" />
                    <var name="ctl00$ContentPlaceHolder1$Message" value="%%message%%" />
                    <var name="ctl00$ContentPlaceHolder1$CaptchaText" value="%%captcha_value%%" />
                    <var name="ctl00_ToolkitScriptManager1_HiddenField" value=";;AjaxControlToolkit, Version=3.0.20820.16598, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:en-US:707835dd-fa4b-41d1-89e7-6df5d518ffb5:e2e86ef9:1df13a87:fde3863c" />
                    <var name="PDI_OtherText2197228" value="" />
                </vars>

                <accept>
                    <var acceptstr="SMS has been sent" acceptmsg="SMS inviato!Ti rimangono %%residui%% SMS" />
                </accept>
                <errors>
                    <var errstr="Entered code is not correspond to shown" errmsg="Captcha errato" />
                </errors>
            </page>
  </procedure>
 </service>

 <service id="88" name="KoolSMS" v="1.0" maxsms="66" singlelen="160" sms_divisor="153" maxlen="612" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAgElEQVR42q1TwQ2AIBArFwbBSdRJHEUZxUmMkzhKfRgScxFOwf6AXnv0wJEkGiAAELuxqjh2I3yJsK8ue9ZPV+PecknEnLBYAomcrqm7kq/uel+egrmHqkX0WtAIscZkjVhKxQAwH1t9B28eWVbAcv4tRJDkEgbWYAkD3S+/sQUncSxfDoVd4gcAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite KoolSMS</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.koolwire.com " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.koolwire.com" />
		<required n="3" name="numero" default="" desc="Inserisci il tuo numero di cellulare senza 39" />
	</config>

  </description>
  <procedure>
     <page uri="http://www.koolwire.com/Messenger01.aspx" >
	    <contents>
          <var name="session" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
		  <var name="PREVIOUS" left="__PREVIOUSPAGE&quot; value=&quot;" right="&quot;"/>
        </contents>
	</page>

    <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>
           <var name="view" value="%%session%%"/>
           <var name="event" value="%%sessid%%"/>
        </vars>
        <contents>
           <var name="view" left="VIEWSTATE:" right=":"/>
           <var name="event" left="EVENTVALIDATION:" right=":"/>
        </contents>

      </page>
      <page uri="http://www.koolwire.com/Messenger01.aspx" method="POST">
        <vars>
		  <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
		  <var name="__VIEWSTATE" value="%%view%%"/>
		  <var name="ctl00$txtUser" value="%%username%%"/>
		  <var name="ctl00$txtPassword" value="%%password%%"/>
		  <var name="ctl00$CmdLogin.x" value="29"/>

		  <var name="ctl00$CmdLogin.y" value="7"/>
		  <var name="__PREVIOUSPAGE" value="%%PREVIOUS%%"/>
		  <var name="__EVENTVALIDATION" value="%%event%%"/>
        </vars>   
		<errors>
          <var errstr="Username o password errata" errmsg="Username o password errata"/>
		 </errors>
      </page>    
	  <page uri="http://www.koolwire.com/Credits01.aspx" >
	    <contents>

          <var name="session2" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid2" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
		  <var name="PREVIOUS2" left="__PREVIOUSPAGE&quot; value=&quot;" right="&quot;"/>
        </contents>
	  </page>
	  <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>
           <var name="view" value="%%session2%%"/>
           <var name="event" value="%%sessid2%%"/>

        </vars>
        <contents>
           <var name="view2" left="VIEWSTATE:" right=":"/>
           <var name="event2" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
	  <page uri="http://www.koolwire.com/Sms01.aspx" method="POST">
	    <contents>
          <var name="session3" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>

          <var name="sessid3" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
		  <var name="PREVIOUS3" left="__PREVIOUSPAGE&quot; value=&quot;" right="&quot;"/>
        </contents> 
        <vars>
		  <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
		  <var name="__VIEWSTATE" value="%%view2%%"/>
          <var name="ctl00$MessengerContentPlaceHolder$cmdSms.x" value="47"/>
          <var name="ctl00$MessengerContentPlaceHolder$cmdSms.y" value="12"/>		  
		  <var name="__PREVIOUSPAGE" value="%%PREVIOUS2%%"/>

		  <var name="__EVENTVALIDATION" value="%%event2%%"/>
        </vars>   
       </page>
	  <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>
           <var name="view" value="%%session3%%"/>
           <var name="event" value="%%sessid3%%"/>
        </vars>
        <contents>

           <var name="view3" left="VIEWSTATE:" right=":"/>
           <var name="event3" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
	  <page uri="http://www.koolwire.com/Sms01.aspx" method="POST">
	    <vars>
		  <var name="ctl00_MessengerContentPlaceHolder_ScriptManager1_HiddenField" value=""/>
		  <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>

		  <var name="__LASTFOCUS" value=""/>
		  <var name="__VIEWSTATE" value="%%view3%%"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtMittente" value="%2B39%%numero%%"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtMessaggio" value="%%message%%"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtCaratteri" value="8/612"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtMessaggi" value="1"/>
		  <var name="ctl00$MessengerContentPlaceHolder$RBTimeSending" value="0"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtNomeAttivita" value="new"/>
		  <var name="ctl00$MessengerContentPlaceHolder$cmdNext.x" value="38"/>

		  <var name="ctl00$MessengerContentPlaceHolder$cmdNext.y" value="11"/>
		  <var name="__PREVIOUSPAGE" value="%%PREVIOUS3%%"/>
		  <var name="__EVENTVALIDATION" value="%%event3%%"/>
        </vars>   
       </page>
	   <page uri="http://www.koolwire.com/Sms02.aspx" >
	    <contents>
          <var name="session4" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid4" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>

		  <var name="PREVIOUS4" left="__PREVIOUSPAGE&quot; value=&quot;" right="&quot;"/>
        </contents>
		</page>
	    <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>
           <var name="view" value="%%session4%%"/>
           <var name="event" value="%%sessid4%%"/>
        </vars>
        <contents>

           <var name="view4" left="VIEWSTATE:" right=":"/>
           <var name="event4" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
      <page uri="http://www.koolwire.com/Sms02.aspx" method="POST">
        <vars>
		  <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
		  <var name="__LASTFOCUS" value=""/>

		  <var name="__VIEWSTATE" value="%%view4%%"/>
          <var name="ctl00$MessengerContentPlaceHolder$RBDestination" value="Destinatario singolo"/>
		  <var name="ctl00$MessengerContentPlaceHolder$txtDestination" value="%2B39%%intnum%%"/>
          <var name="ctl00$MessengerContentPlaceHolder$txtDestinationFile" value=""/>
		  <var name="ctl00$MessengerContentPlaceHolder$cmdNext.x" value="39"/>
		  <var name="ctl00$MessengerContentPlaceHolder$cmdNext.y" value="14"/>
		  <var name="__PREVIOUSPAGE" value="%%PREVIOUS4%%"/>
		  <var name="__EVENTVALIDATION" value="%%event4%%"/>
        </vars>   
       </page>

	  <page uri="http://www.koolwire.com/Sms03.aspx" >
	    <contents>
          <var name="session5" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid5" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
		  <var name="PREVIOUS5" left="__PREVIOUSPAGE&quot; value=&quot;" right="&quot;"/>
        </contents>
        </page>
	    <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>

           <var name="view" value="%%session5%%"/>
           <var name="event" value="%%sessid5%%"/>
        </vars>
        <contents>
           <var name="view5" left="VIEWSTATE:" right=":"/>
           <var name="event5" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
	  <page uri="http://www.koolwire.com/Sms03.aspx" method="POST">

         <vars>
		  <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
		  <var name="__VIEWSTATE" value="%%view5%%"/>
          <var name="ctl00$MessengerContentPlaceHolder$cmdStart.x" value="34"/>
          <var name="ctl00$MessengerContentPlaceHolder$cmdStart.y" value="6"/>		  
          <var name="__PREVIOUSPAGE" value="%%PREVIOUS5%%"/>
		  <var name="__EVENTVALIDATION" value="%%event5%%"/>
        </vars>   
      </page>

	  <page uri="http://www.koolwire.com/sms04.aspx" method="POST">
        <accept>
          <var acceptstr="Your text message has been sent"/>
        </accept>
		</page>
  </procedure>
 </service>
 <service id="90" name="12voip" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAfhJREFUOE+VUttqGlEUPf2lPvYT+hGCeC2KERUqFTGS0aBxdGxtRoxNsVBKDSMVcXxQDBZjSvpS+tSL2Mb7/S6KGqdLpy15dT3ss8/aa6+9zzAPSqUS2Qu/9gS5vYd2u12v1+8z1Wq12WyWy+X/JKn8Q6vVcjgc6XQaCpFD883N53A4XKvV0CmSBBcA3jzPS6VShUIxGo1EEonFYpFIJBzHdTodkSSNHbrdbj6fV6lUMpkMj8I0zAFo2qtUKqPR6GAwEJUENWA8HsNGrVZrtdrVagUGM4fDodvtxsxYLDaZTEQlgXev10PNarXSNA2/+Xw+nU5hKQiCx+OhKAqLYft+vw8xwYFyoVAwmUwoGI1GjUaTyWSwrs1m0+l0ZrMZSTabnc1mEBO8DE4sy+oODqA2GgwIWAxter1+RxiQeL1eyCAmWADj5HL5of3o0H4cZE9dTgqWPp/P7/fjDaFQCMMhwD8BMUEfCk+f2a+SzxuXTx4mhNdckou+j8fjDMPkcrlAIBAMBl/4mWOnE+Jtw2nwLPuBiV5w1y8fPX5XPnt1Tp+cRCIRfINEIuFyuRzU0Vv+kj1/s21YLpc4Oj/537eVSfOL52OlP138+P5tsVikUqlisYhNIEh++troT+7Wa7LeYQNOEMQobO62YfP3hhwCkUdCUNgLfwAzDTTgsBZcOwAAAABJRU5ErkJggg==" >
  <description>

	<info>Acquista ed invia sms tramite 12Voip</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.12voip.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.12voip.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato ( comprensivo di +39) che verra' visualizzato come mittente. es. +39392xxxxxxx" />
	</config>
  </description>
  <procedure>

     <page uri="https://www.12voip.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>

      <page uri="https://www.12voip.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>

        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>

  </procedure>
 </service>
 <service id="8" name="Vodafone-Ireland" v="1.2" maxsms="600" singlelen="160" sms_divisor="160" maxlen="470" reset="monthly" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALEQAACxEBf2RfkQAAABh0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjM2qefiJQAAAyRJREFUOE9Vk+tP22UUx3++4D/gTfvremFXNVkTY8zYMJZ1ZmMJrWSbMhgMLJ0BgW0QNXPZXiws08RkXkJgDim0EOMbuRiNJERd4gvFqDTB6EhLgXJp9ytjHYORcfl4nhbJPMk3eXLO8/2e73kuzyChSRiGoY2OjmrJZFJbW1vTttKqtB05OTlabm6u5nQ6NbPZnM0rgfHxcYLBIE1NTXi9RZSVvkpVZaHggGA/VWd2U166C6/nRerrGwgEAoTDYUVFdSYUClHj8/HBjUtMTv5A+t4gi6PXMb4tF7hYDO8jPWNnNmbjs5tmyspK6OzsZGpqCm14eJjm5maut7zD6orB8q8/MttQQ8zjJtlSzKOfjzN7YTfTZy2kv7axmnLweasJv9/PwMAAWm9vLx7PMWIT3/Pop++IFZ8iWuhm8cvzbCy/z9JQEZGDViKHdKIuncWgDWPGxmvFz9Pd3Y2m5nnj9SPcn/xKupwm8rKL+ctnhXxT0MjK725m6uyS1zMiMY+Fpb/snKu20N5+C03NUlHhIvnNRSKuQ0SPFLDy23tCfpeNh6dZT+ezZuxk/krWhYLxqZXGty20tbVvCVTmM/fhMSk6iXlf4sm0n42lUtYfvML6/T2CPJZ/sRM9LAIHdeJ1Fhrq9KcFnMxce0GKe5koepbVf9xCPrBNVgIrfzjEnSXjIH7ufwIBKsr3kujOI1IgNgXGJztFQCBEhY10HimxHSnIOkhckxHqt0cIUHpyD6mwTW5AOsimaKFOqlWu7G8Hq3cdLNyyZe2rmlvnwR07b/n07CH29PTgKc5netwqpK0u6rBk80SRhYnjIqpu4L/uV60sxO2UePfR1dWFNjQ0ROP5i3x0w8TjeenWJk68WSfKbgYiqMSSLVYeTzoIfWGiurqK/v5+tEQikVE6U36K1o9NJKdtPBTrqS4bc1d2MHd5B0a7lfSfdhZm7YQ6TZw8cZTbtzuIRqNkPtPY2Fjmg9TW1oq1/bxZacHvM+Ov2YKsa6p0TpQ8h89XTUdHByMjI2xubmYFVMTjcQYHB+V5BjOHox7J01A55bSvry/TWZFV/Au8Xo/okxRKugAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia 600 SMS al mese con Vodafone Ireland</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vodafone.ie " />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vodafone.ie" />

	</config>
  </description>
  <procedure>
     <page uri="https://www.vodafone.ie/index.jsp">
                <contents>
                    <var name="ts" left="vodafone.ie/myv/services/login/Login.shtml?ts=" right='&quot;' />
                </contents>
            </page>
            <page uri="https://www.vodafone.ie/myv/services/login/Login.shtml?ts=%%ts%%" method="post">

                <vars>
                    <var name="acc-password-txt" value="Password" />
                    <var name="password" value="%%password%%" />
                    <var name="username" value="%%username%%" />
                </vars>
                <errors>
                    <var errstr="Please check your details" errmsg="Username o Password errati" />
                    <var errstr="Current customers may need to reactivate their mobiles by Topping Up your Call Credit" errmsg="Devi ricaricare la sim per tornare ad inviare SMS gratis" />
                </errors>

            </page>
            <page uri="https://www.vodafone.ie/myv/messaging/webtext/index.jsp">
                <contents>
                    <var name="token" left='TOKEN&quot; value=&quot;' right='&quot;' />
                    <var name="smsresidui" left='remaining&quot;&gt;&lt;strong&gt;' right="&lt;" />
                </contents>
            </page>
            <page method="POST" uri="http://iaddo91.altervista.org/scriptphp/rimvoda.php">
        <vars>

          <var name="text" value="%%message%%"/>
          <var name="credits" value="%%smsresidui%%"/>
        </vars>
        <contents>
          <var name="residui" left="sms:" right=":rimanenti"/>
        </contents>
      </page>
            <page uri="http://supermac.altervista.org/script/delay.php?delay=2">
                <headers>

                    <var name="Referer" value="https://www.vodafone.ie/myv/messaging/webtext/index.jsp" />
                </headers>
            </page>
            <page uri="https://www.vodafone.ie/myv/messaging/webtext/Process.shtml" method="POST">
                <headers>
                    <var name="Referer" value="https://www.vodafone.ie/myv/messaging/webtext/index.jsp" />
                </headers>
                <vars>
                    <var name="org.apache.struts.taglib.html.TOKEN" value="%%token%%" />

                    <var name="message" value="%%message%%" />
                    <var name="recipients[0]" value="00%%intcode%%%%intnum%%" />
                    <var name="recipients[1]" value="" />
                    <var name="recipients[2]" value="" />
                    <var name="recipients[3]" value="" />
                    <var name="recipients[4]" value="" />
                    <var name="futuredate" value="false" />
                    <var name="futuretime" value="false" />
                </vars>

                <errors>
                    <var errstr="One or more Numbers is required" errmsg="Numero del destinatario mancante" />
                    <var errstr="Message is required" errmsg="Testo del messaggio mancante" />
                    <var errstr="We&apos;re sorry, an error has occurred" errmsg="Errore del server" />
                </errors>
                <accept>
                    <var acceptstr="Message sent!" acceptmsg="SMS Inviato! SMS residui: %%residui%%" />
                </accept>
            </page>

  </procedure>
 </service>
 <service id="10" name="Jajah" v="1.2" maxsms="10" singlelen="123" sms_divisor="160" maxlen="123" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAg1QTFRFypK/o0GPsFibo0KPihR8mTCIwXitoDyMxIW3pEWQt2Wi27XToD2MypG+hAt60I+57t/uvn24yoa0r12hzZzJ2bPVuWai2LLVggt3r1uhr1qdx4y87dvqvn+558neqlCY373Ygwd0vXeuoDuKmzKHvnCo/v3+/fz9hAp57+DvpUuezou3pESQoDyNq06Vy4e0sVmcy5TAsFmb3bzafgFz7drp6tTmzIi1r1ea6tPlhw98y425iBJ+qk+XiRJ76tHjvnGpyZTF5szjq1KY9u315czjhQx64cPcoEOY8+fx06fP797s38Hd583hyZG+woS37tzqoD2N2bTX+fT5tGqu/fr8/Pn7une0oD6QqlGYwHarwHWrwXetu3e1wHeu1avR7t7tzIe0u2ymv3et8ePwgghzzpzIxYe48OPwmjGGw32wpkmUu3OtihV85Mjh69bnpEOQ3Lrax4u7qU2Wzoy3zIe1rVKX+PH358/kqFKgnjeI8eTwypO/u3Wv16zOlSiDxIa4woa9woG2pkqVt2uo2bHRvXu3okGOnjiJrlicmS+Hu3m1mTCHx4y75MrinzqKoD+Pu3Krnz2QtmSiwXiu0KDMpUWRtWytoD2QqU+Wv3ux7+Duo0ic3LjWyI686M/jz4+516jK8uXx7+HvvG2mpUWQ1q3T3bjUwHqvqU+XlCWB16/T1qzS////////+syPWQAAAK90Uk5T////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AH+0A4EAAAECSURBVHjaFI/DdkVRFAQ79yZ5VmzbdvJi27Zt27ZtZ39jzqlZ1epJg6hwdg9QqQDb/AEikFNB8suNtlHr3dk6uagg5PQWv5vn7qf1hzZkWw7NRWC4wmzG849R9vxTZ69bhultadLSuu6shLXfTB9rXMbFeKnT1WE7fDVldYzDBENGn/MFD+1tlejZNmLsLmTwcPe9ghF/iURS5LbqwUNwVzy+DBjKQTvuqY7KFFyJorgxvca93GVTrILNuZ/M9Z571tGB7G0L0ihh/JPpxMdJgCAI1wgPqnmN1Ts8dVs0uydWhzyAFHIT38ixplGN5jFQPs/eUnRHy2mtMaNemkf0L8AA2CFcvw1FTp8AAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite Jajah</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.jajah.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.jajah.com" />

		<required n="3" name="mittente" default="" desc="Inserisci il numero registrato in formato internazionale (es: 393381234567)" />
	</config>
  </description>
  <procedure>
     <page uri="http://t.jacksms.it/Frengo.php" method="post">
                <vars>
                    <var name="username" value="%%mittente%%" />
                </vars>
                <contents>

                    <var name="ccode" left="nazionale:" right=":" />
                    <var name="login" left="Numero:" right=":" />
                </contents>
            </page>
            <page uri="http://www.jajah.com/overview/">
                <contents>
                    <var name="__VIEWSTATE1" left='input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;' right='&quot;' />
                </contents>
            </page>

            <page uri="https://secure.jajah.com/index.aspx" method="POST">
                <vars>
                    <var name="__VIEWSTATE" value="%%__VIEWSTATE1%%" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__EVENTTARGET" value="ctl00$LoginBoxRight$LoginBox$LoginButton" />
                    <var name="ctl00$LoginBoxRight$LoginBox$Email" value="%%username%%" />
                    <var name="ctl00$LoginBoxRight$LoginBox$Pwd" value="%%password%%" />
                    <var name="ctl00$LoginBoxRight$LoginBox$PwdForgotEmail" value="" />
                    <var name="ctl00$LoginBoxRight$LoginBox$ResendActEmail" value="" />

                </vars>
                <errors>
                    <var errstr="Login failed!" errmsg="Username o password non validi" />
                </errors>
            </page>
            <page uri="http://www.jajah.com/call/">
                <contents>
                    <var name="sidvalue" left='script type=&quot;text/javascript&quot;&gt;var $sid=&apos;' right="&apos;" />
                </contents>

            </page>
            <page uri="http://www.jajah.com/engine/ajax/services/sms.ashx" method="POST">
                <vars>
                    <var name="_sf" value="SendSMS" />
                    <var name="_sid" value="%%sidvalue%%" />
                    <var name="src" value="%%ccode%%-%%login%%" />
                    <var name="dest" value="%%intcode%%-%%intnum%%" />
                    <var name="desttype" value="0" />
                    <var name="timeout" value="true" />

                    <var name="sms" value="%%message%%%0A%2B%%ccode%%%%login%%%0Asent via www.jajah.com" />
                    <var name="type" value="0" />
                </vars>
                <accept>
                    <var acceptstr="Messaggio in fase" />
                </accept>
            </page>
  </procedure>
 </service>

 <service id="15" name="RomagnaEst" v="1.0" maxsms="1" singlelen="144" sms_divisor="160" maxlen="144" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAAJgAAACYB+E5zqwAAABh0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjM2qefiJQAAAsBJREFUOE9jPHbs2MIFC3gZGdjZ2BgZGH7//v3t+3cI+vHjxy8g+P0HCP4zMvxj55CUlGRwdXG+6WT0P9zxf6LX/yTv/1Eu//0s/zvq/jdT/qsn80FD/LGK8A0FwXNy/G0iXJycnAxBbq7/Q+z/pwf8L439Xx73Pzvkf5Tzf0/j/6mh/xfN/Hf+9JenT54d2HvFRO2AnICEuDhDhLcXyNSCiP8NGf+bs0DaFk76//LJfxj4/v37y5cvb8+beVBOUFZGhiHcy/N/hNP/nND/Ncn/F0/8/+4VXCmE8e3bN6CGe1evHNJVAGkIcnX572/1P97j/46VKErv3/mfn/gj2PXL58/Pnz+/e/fuIXdbkAZvO9v/Lgb/l89CUb1y/n9z1X+60p8sND68ffv06dPbt28fDPYCaXA2N/ufFISi+tLZ/121/xtKfpfnfJjS8/r164cPH964cWO/mw1Ig42B/v9tG9DcDeH+/Pnz/fv3QOPv3LlzedP6XUqiMtLSDGbaWn8unEFoePbk/+0bf25d/37j2tsL556eOHZ3767LfR0n9JW2y/BLAzUYqqu9n9wNjMu/YPC9oeytmtgLVZGHykK3FQWvyPOfkxc4KS9wWJpnizSftJQUg56K8l0d2benT3wEg/cPHzyJ8L2rJHRDQ/JGdfH1/XsvHz1y7uCB4yuWbjZUkwJq0FZUvCQvcFNP4eHiuU+fgMCjhw/vnj51+9LF69evX758+dy5c6eOHjmYl75eml8KmJa0lBRPy/Kdl+O/IMd/ycnsWnvD9S0br506efnMmfNHj5xetuhIUc5eXYUdEtxrpXhlgKGkrqY2XYr/mCzfcRg6Kst3RIbvoAzvfmnePVK8u6R4tkvybJHkmW6oISEhweDu7i4gIGCoqWGmpwtCukCkYwpEOjom2trG2lpGWppGmppAEpi2HRwcADWmvCGU7MWyAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 1 SMS al giorno con RomagnaEst</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.romagnaest.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.romagnaest.it" />
	</config>
  </description>

        <procedure>
            <page uri="http://www.romagnaest.it/portal/page?_pageid=781,2109402&amp;_dad=portal&amp;_schema=PORTAL">
                <contents>
                    <var name="token" left='site2pstoretoken&quot; type=&quot;hidden&quot; value =&quot;' right='&quot;' />
                </contents>
            </page>
            <page uri="http://portallogin.cedecra.it/sso/auth" method="POST">
                <vars>
                    <var name="site2pstoretoken" value="%%token%%" />

                    <var name="ssousername" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="Login" value="Login" />
                    <var name="subscribername" value="romagnaest" />
                    <var name="p_submit_url" value="http://portallogin.cedecra.it/sso/auth" />
                </vars>
                <errors>
                    <var errstr="La combinazione utente e password inserita non e&apos; corretta" errmsg="username o password errati" />
                </errors>

            </page>
            <page uri="http://www.romagnaest.it/pls/portal/portal_romagnaest.invia_messaggio_ext" method="POST">
                <vars>
                    <var name="TIPO_MESSAGGIO" value="SMS" />
                    <var name="PCODICE_ABI" value="08852" />
                    <var name="P_BACK_URL" value="/pls/portal/url/page/sito_home/sms/invio_sms" />
                    <var name="DESTINATARIO" value="%%intnum%%" />
                    <var name="testo" value="%20%%message%%" />
                    <var name="rimasti" value="" />

                </vars>
                <errors>
                    <var errstr="Max di messaggi consentito per il portale" errmsg="SMS esauriti per oggi" />
                </errors>
                <accept>
                    <var acceptstr="Messaggio inoltrato correttamente" />
                </accept>
            </page>
        </procedure> </service>

 <service id="340" name="Facebook" v="1.1" maxsms="100" singlelen="400" sms_divisor="400" maxlen="400" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAZVJREFUOE91Uz1LA0EQnVnOmOL+gJW1bcBCsBJJoWCXxg9IIaQSEcTGVhQs7YIKgiBosBCChSKksDJgJfofApGLYu68Oy/uzN5clhxZeMzM252ZN7t3ONDr7ukdEBFo6ZCtvWRvlF9ZmAG8fXjjDErPp5qU8tw022KxCEmSQKfTgfZHjzn1G/1BGMUQhLG25FsIta/hui7DcRwoFAqsMtA8AU9vXsY1zhRvVmbZP2u0c+OprufDZ2+IrtcHgfCSZZ8TH3eOmmMVrJenOLdUKrFttVoQxzE8vv5AlDjM4dru9dgCl8eVnGQiNvYaGY+L1fMBPwEtesL0OSmcnFBMN+tVtsu1C7ZhlGQFVD8IwfdD6AcRw7fgfQdAoFsneF861pCzZBU3p64yCNkUJMiIQvOhpUBNChSRVJ2VW/JNXZMoCrLKVjEzZJqI1JkLpcgmFSe/gVsH5hmNCrlNkyC/xcn+Esfbh/e5kkZBKlekihWlcmZ0n2I1nM/MbM9g79mt5W7Y0u88v1rPSZOx7Duyb4L856sa/ANM3QpSHQIm8gAAAABJRU5ErkJggg==" >
  <description>
	<info>Aggiorna il tuo stato di Facebook tramite il tuo indirizzo mail personalizzato.</info>
	<config>
		<required n="1" name="ind_mail" default="" desc="email del servizio carica via mail senza @m.facebook.com.si trova in questa pagina http://www.facebook.com/mobile/" />
	</config>
  </description>
  <procedure>

     <page uri="http://t.jacksms.it/Facebook.php" method="POST">
                 <vars>
                    <var name="destinatario" value="%%ind_mail%%" />
                    <var name="oggetto" value="%%message%%" />
                    <var name="testo" value="jacksms" />
                    <var name="submit" value="Invia" />
                </vars>
                <accept>
                    <var acceptstr="Mail inviata correttamente" acceptmsg="Profilo aggiornato!!" />

                </accept>
            </page>
  </procedure>
 </service>
 <service id="302" name="Redoxygen" v="1.0" maxsms="25" singlelen="160" sms_divisor="153" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAA40lEQVR42rVTwW0EIQwcovTBppMrIdeBrxKcSrgOTAdLJ9mtZPKIHLHA3imKgjQSsgeDPUMgib+sl1mwlKIIgS1KKTqtQPIIgAS4idDMtNbKTYQe7/nD4U1kIDl+CjWx4DPYbzcCQMw5POp54JGEmSkBmpme3e7ouSCJNSWtlwufHW5bXVNSkt8qvO17Wpbl9NmuSlVVANhFjjJ+xvjxqO/36zWd5V59E+93IOeREQLbG32AcfBB09cg2wy9D9aUBiXcSG6mTYS11gNnapT+JZ6bxU91bpFzVrd2zw//8ht/s74AhA6J7aJGrD4AAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite Redoxygen</info>
	<config>

		<required n="1" name="username" default="" desc="Inserisci la mail di login a www.redoxygen.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.redoxygen.com" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.redoxygen.net/web_sms/Default.aspx" method="GET">
	     <contents>
		     <var name="__VIEWSTATE" left="name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
		 </contents>

	  </page>	 
	  <page uri="https://www.redoxygen.net/web_sms/Default.aspx" method="POST">
        <vars>
          <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
          <var name="__LASTFOCUS" value=""/>
          <var name="__VIEWSTATE" value="%%__VIEWSTATE%%"/>
          <var name="txtEmailAddress" value="%%username%%"/>
		  <var name="txtPassword" value="%%password%%"/>

          <var name="btnLogin" value="Login"/>
          <var name="lstLanguage" value="en"/>
          <var name="lstTheme" value="Metal"/>
          <var name="clientTimezone" value="-2"/>
        </vars>
        <errors>
          <var errstr="Login failed" errmsg="Dati di login errati" errcode="5"/>
        </errors>
      </page>

	  <page uri="https://www.redoxygen.net/web_sms/App/Inbox.aspx" method="GET"/>
      <page uri="https://www.redoxygen.net/web_sms/App/New_Message.aspx" method="GET">
	    <contents>
		    <var name="__VIEWSTATE2" left="name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
			<var name="txtScheduleMessage" left="name=&quot;txtScheduleMessage&quot; type=&quot;text&quot; value=&quot;" right="&quot;"/>
		</contents>
	  </page>
  	  <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>

          <var name="view" value="%%__VIEWSTATE2%%"/>
        </vars>
        <contents>
          <var name="view" left="VIEWSTATE:" right=":"/>
        </contents>
      </page>
      <page uri="https://www.redoxygen.net/web_sms/App/New_Message.aspx" method="POST">   
		<vars>
          <var name="__EVENTTARGET" value=""/>

          <var name="__EVENTARGUMENT" value=""/>
          <var name="__VIEWSTATE" value="%%view%%"/>
          <var name="txtRecipients"	value="%2B%%intcode%%%%intnum%%"/>
		  <var name="txtScheduleMessage" value="%%txtScheduleMessage%%"/>
          <var name="txtMessage" value="%%message%%"/>  
        </vars>	  		
		<accept>
          <var acceptstr="Your message was successfully sent to all of its recipients"/>
        </accept>
      </page>

  </procedure>
 </service>
 <service id="22" name="Cellularmagazine" v="1.0" maxsms="10" singlelen="139" sms_divisor="160" maxlen="139" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAfNJREFUOE+NU71qG0EQvkAKly5dpNEjuHSrR1CpV1Cp0m8QhApxuDBHCoNSCC6FYVUY1o1hVRysCsGqEKwLF1c4sAEH1uDiyzd7Z0mWcfDAsBy78/3MzH0BI/tk/Pn9nIW/z1nn23GWfW2LBOAwYozw9zXqhwC87G7tsoZbh3T3Gtm7ahb4TYBb8eEmplOA/L2cEebOIoT4MYA81nOXHofHBkzS3HmmowL/hvOdgulMozvuoH/RRTlXZI4JrGF3iE879tS/fbiaMs9nQ5xOjnA6PsLZ5BiDqx50pZMas/D/AaB3c2sxqLrorzvoSS5P0KtOUCxyBPbNVlTABu/HVoF4twuHPAxQxCHKmKN4GuJ8009ddyvJt/53FsguD6RRdl1DLTXsg4F/sdBrQ/aA8peBXTqCeU6B420jKQiP7PwNu7yom3Ex7cpBVQp1zVFy/vqGoBVBN54NrbcgCUC8FZcWau7bRWlAmhHGxK5vNQkMlYoKApA0WZCxFJca06sGQGykQgLI1sn39GfJO00Qk0BExesyZTX9jcYK+YWCunZ81KpotzGfKAJMqaJsbdikQlZcyJMF2a7ih2aK1AZAspwZjL6PyK5SsRRKA/dHuR2jeFLzxoaAyDmaFFQl28gFOpj/hz+T7IOM1FZUQsbD1T38+f4B6tZi+IkqaDkAAAAASUVORK5CYII=" >
  <description>
	<info>Invia SMS tramite Cellularmagazine avendo CMeuri disponibili.</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.cellularmagazine.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.cellularmagazine.it" />

	</config>
  </description>
  <procedure>
     <page uri="http://www.cellularmagazine.it/forum/login_ip.php" method="POST">
				<contents>
                    <var name="time" left="sms_time&quot; value=&quot;" right="&quot;"/>
                </contents>
                <vars>
                    <var name="redirect" value="sms.php" />

                    <var name="username" value="%%username%%" />
                    <var name="password" value="%%password%%" />
                    <var name="login" value="Login" />
                </vars>
            </page>
            <page uri="http://www.cellularmagazine.it/forum/sms.php" method="POST">
                <vars>
                    <var name="sms_time" value="%%time%%" />
                    <var name="checkin" value="Vai" />

                </vars>
                <errors>
                    <var errstr="Non hai punti sufficienti per procedere!" errmsg="Crediti Esauriti" />
                </errors>
            </page>
            <page uri="http://www.cellularmagazine.it/forum/sms_sending.php?sms_sent=true" method="POST">
                <vars>
                    <var name="GsmCode" value="%%pref%%" />
                    <var name="PhoneNumber" value="%%num%%" />

                    <var name="TextMessage" value="%%message%%" />
                    <var name="CountryCode" value="%%intcode%%" />
                    <var name="checkin" value="true" />
                    <var name="sms_time" value="%%time%%" />
                </vars>
			 <errors>
			  <var errstr="cerchiamo di essere onesti!!!" errmsg="SMS gia' inviato!"/>
           </errors>			  
            </page>

            <page uri="http://www.smshosting.it/smsMaster/spedizione.do" method="POST">
			<headers>
			<var name="Referer" value="http://www.cellularmagazine.it/forum/sms_sending.php?sms_sent=true"/>
			</headers>
                <vars>
                    <var name="GsmCode" value="%%pref%%" />
                    <var name="PhoneNumber" value="%%num%%" />
                    <var name="TextMessage" value="%%message%%" />
                    <var name="CountryCode" value="%%intcode%%" />

                    <var name="checkin" value="true" />
                    <var name="sms_time" value="%%time%%" />
                </vars>
                <accept>
                    <var acceptstr="SMS inviato con successo" />
                </accept>
            </page>
  </procedure>
 </service>

 <service id="223" name="Twitter" v="1.1" maxsms="10" singlelen="140" sms_divisor="160" maxlen="140" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9gKCxM4Bk+Ur6UAAAHFSURBVDjLjZMxbhRBEEVfdffOjLwWBmmFMJgASDiAA8RhuAEkSARcgAuQcx8CMjAi2cAB8srYlgGvd2a6PsHMjma9gSmpsur/6//6bfTV5Kw6OzIjIIIZVUrGLZUAXNIqZ+ZunLViGo3nE8juiiHYrQBIXDp8XbVUwHELs5B4gPNfGwDUEr+ySMAKyIDJuW4adSRgZsRgpBhtC8CBvy4mBq3gW505jQHv3gJgiIcJ6jarSB1IAggh2Py60R8XEzMM8XnZjgTYAJOA1/eqbQkZuBQUCGnYGswwCRBmxiI7C9eNK7jrxypz7k41IlS/9nq8lXhaBJ5MwiaAARlx4U5lxlUWb+5WHJaJlTQIyIhZjBSj06a1xFqwcLFr8NvFTjCmJu6kCL0kB9KNXIQ+BkyAExfHLuYuvjdOMpB7NyCBO66RAWMTH0+MwoyjLDB4d77kNJccxEC7ZgdeVmkjSMM6yq0+XNS8P7uC2Ju0QSaQsR+NLwd77BddDgY73QJv90pe7ZbQeudasFEHiMbP1jlq8qYHADEEiwaf7u/wcTblWTJKiVKi6hsXL6rEYRm3JQyBclduG5ZETlz4aEjAo2gUBmX/1f8BoQTiSPVwbRoAAAAASUVORK5CYII=" >
  <description>
	<info>Aggiorna il tuo stato di Twitter</info>
	<config>
		<required n="1" name="user" default="" desc="Inserisci l'username di registrazione di www.twitter.com " />
		<required n="2" name="psw" default="" desc="Inserisci la password di accesso di www.twitter.com" />
	</config>
  </description>

<procedure>
            <page uri="http://twitter.com/">
                <contents>
                    <var name="authent" left="name=&quot;authenticity_token&quot; type=&quot;hidden&quot; value=&quot;" right="&quot; /&gt;" />
                </contents>
            </page>
            <page method="POST" uri="https://twitter.com/sessions">
			<contents>
			 <var name="auth" left="input name=&quot;authenticity_token&quot; type=&quot;hidden&quot; value=&quot;" right="&quot;"/>

			</contents>
                <vars>
                    <var name="authenticity_token" value="%%authent%%" />
                    <var name="authenticity_token" value="%%authent%%" />
		    <var name="return_to_ssl" value="true"/>
		    <var name="redirect_after_login" value=""/>
                    <var name="session[username_or_email]" value="%%user%%" />
                    <var name="session[password]" value="%%psw%%" />
		    <var name="commit" value="accedi"/>

                </vars>
                <errors>
                    <var errstr="Wrong Username/Email and password combination." errmsg="Nome utente o Password errati." />
                </errors>
            </page>
            <page method="POST" uri="https://twitter.com/status/update">
			<headers>
			 <var name="Referer" value="https://twitter.com/"/>
			</headers>

                <vars>
                    <var name="authenticity_token" value="%%auth%%" />
                    <var name="status" value="%%message%%" />
                    <var name="twttr" value="true" />
                    <var name="return_rendered_status" value="true"/>
                </vars>
                <accept>
                    <var acceptstr="seconds ago" acceptmsg="Profilo Aggiornato!" />
                    <var acceptstr="secondi fa" acceptmsg="Profilo Aggiornato!" />

                </accept>
            </page>
        </procedure> </service>
 <service id="5" name="KalaSMS" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="318" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAKYSURBVDhPjZPLTxNRFMZvKS10SsIrMaCpiQYkumFnYty4MCa60xgXxr/Av8GFe2NMS2c6lIIxrFyACzesJXHhQmNkU1DAgIHy6INO2+m8fp4OJIYFhknOnTt37vnO952HwrGhDbieLOd9fAg6d31UuSm72jqWmOvv4gWlc9jJPb+CsiRyZfEZ9ZkUVT1OzUiI9ZxtuRhVo48jI0ZJT6ECz6cZBGyaN/CmLhAYCteIn225KK6pqOY16q0aym9vgrWMa1fYWnz0f2cBtjMJdufvsbHwHLex1QGo0MgOSUKKKJVgv3CNlqkRiJxWPoIjlF2JGugx2oUI2x+fcPDhMW6mC4sqCudA6PSx9naSVI9GJKlRNlP4uW7QozimOGe7cPIDuN8y/CncDMGbxrAkvYxy3DLWdILD/AgxbYKEihKJj8G7cRq5fokewdKH4fsL1l9fpW0mqc3EYSpGXTgoR0ph5xKSvCi1wiR3ryjaOz9o4rCT1kTGqMj7BPkUjp4Ic2SbcfxsH63g6B+Ap/dCOomTHcGZS0qPWNJg0mTOWpgTQjaSD6P3NIDXrlEuJMPSNKZ7sURrI5+kYooMaaxybkgcpHR6n/zXcLODwljDl4CtwEZ57o7kQKM4exu7oCjOT4RU943rOG9i/CrcoS417zijK1ZmH5wG8P1VPHEIjlZF60928mMSrR+aJWh9pbj0kO3Mfem+S2ws3aJmLRwDZE8YYNkEU4PgrbG7+JTWyku2ZsaFflkGZle0X5a5qUF9WQC/YPmfCX6/x5kaANsVCVUpYzZKSWhWBLWcjrOXj8pcDLNndmOZMQ6lD/aMi1TTg2zNxcJuDF6NctBqCACuRDge5XBCT96dk0DGNTzrLOFGqiJPeFu+21LqvwYnEX1HBwgaAAAAAElFTkSuQmCC" >
  <description>
	<info>Acquista ed invia sms tramite KalaSMS</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci il numero di telefono con il prefisso senza +. es.39XXXXXXXXX" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.kalasms.com" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.kalasms.com/Login.aspx" method="GET">
                <contents>
                    <var name="session" left='__VIEWSTATE&quot; value=&quot;' right='&quot;' />
                    <var name="sessid" left='__EVENTVALIDATION&quot; value=&quot;' right='&quot;' />
                </contents>

            </page>
            <page uri="http://supermac.altervista.org/script/session.php" method="POST">
                <vars>
                    <var name="view" value="%%session%%" />
                    <var name="event" value="%%sessid%%" />
                </vars>
                <contents>
                    <var name="view" left="VIEWSTATE:" right=":" />
                    <var name="event" left="EVENTVALIDATION:" right=":" />

                </contents>
            </page>
            <page uri="http://www.kalasms.com/Login.aspx" method="POST">
                <vars>
                    <var name="__EVENTTARGET" value="" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATE" value="%%view%%" />
                    <var name="__EVENTVALIDATION" value="%%event%%" />
                    <var name="Login1$UserName" value="%%username%%" />

                    <var name="Login1$Password" value="%%password%%" />
                    <var name="Login1$LoginButton" value="Log In" />
                </vars>
                <errors>
                    <var errstr="Your login attempt was not successful. Please try again." errmsg="dati di Login Errati" />
                </errors>
            </page>
            <page uri="http://www.kalasms.com/members/default.aspx" method="GET">
                <contents>

                    <var name="session2" left='__VIEWSTATE&quot; value=&quot;' right='&quot;' />
                    <var name="previous" left='__PREVIOUSPAGE&quot; value=&quot;' right='&quot;' />
                    <var name="sessid2" left='__EVENTVALIDATION&quot; value=&quot;' right='&quot;' />
                    <var name="credits" left='CreditsLabel&quot; style=&quot;font-family:Arial;font-size:10pt;font-weight:bold;&quot;&gt;' right="&lt;" />
                </contents>
            </page>
            <page uri="http://supermac.altervista.org/script/session.php" method="POST">
                <vars>
                    <var name="view" value="%%session2%%" />

                    <var name="event" value="%%sessid2%%" />
                </vars>
                <contents>
                    <var name="view2" left="VIEWSTATE:" right=":" />
                    <var name="event2" left="EVENTVALIDATION:" right=":" />
                </contents>
            </page>
            <page uri="http://www.kalasms.com/members/default.aspx" method="POST">
                <vars>

                    <var name="__EVENTTARGET" value="" />
                    <var name="__EVENTARGUMENT" value="" />
                    <var name="__VIEWSTATE" value="%%view2%%" />
                    <var name="__PREVIOUSPAGE" value="%%previous%%" />
                    <var name="__EVENTVALIDATION" value="%%event2%%" />
                    <var name="AutoSuggestTextBox2" value="%%intcode%%%%intnum%%" />
                    <var name="txtMessage" value="%%message%%" />
                    <var name="Button1" value="Send" />
                </vars>

                <accept>
                    <var acceptstr="PreSend" acceptmsg="SMS Inviato! Crediti residui prima dell&apos;invio: %%credits%%" />
                    <var acceptstr="Pending" acceptmsg="SMS Inviato! Crediti residui prima dell&apos;invio: %%credits%%" />
                </accept>
                <errors>
                    <var errstr="No sufficient credits" errmsg="Crediti insufficienti per l&apos;invio!" />
                </errors>
            </page>
  </procedure>

 </service>
 <service id="27" name="Rynga" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAACXBIWXMAAAsTAAALEwEAmpwYAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAACz0lEQVR42gTBTW9UVRgA4Pc959xz78y589Ept1MpwrSUIuwk2hKjO1nQWNE/wMrEhL9A2Ji4cieJC+NCjQsDiQSCcSEmfmACITFpkA5aJozD2Pnq3PbOzP0695x7eB784MbDX1orYZ2KyURme4vH2NZR7xy86Fo8SQs/jvJtn0NeR4aY7m3WCcKXO7S4ptnzhXH/6huN99aPMQ15bARglUOfw3dN/6u77f+cSu7VTKBYOdaRGh5V/3zy/vmNmvji3s7tljugAzsrniNm44y1+dbqa5vLn95+tAMh5EcoXLpcngafv716ZKF89es/vh8c+taqBDeqzrWi7H6r/bTd2XqzEVrwoDegnDMJNXFi7tSa9/HNp7vJK7AQofZdFcyUoZTrsvdn17/1eFg+uaJ3QOc1Vg4j+1U6ltUmOgk/DrIHVISWIrPUicXMEmAJYxwRy0qSED1lk0Jc4YmLHtihQSCao6wK5aKe2rmQCFL9D2inuR/yIUGLmexsORg3hmYJ03ZlKEUPQwmBmS7EQTgGQStzUyQ8nrlZ5EHhDAHaX9OBL6JvLyxfXMzgYM4YEdqEJhMkrhW718+vX2zMFw85t2toGwaZPH3KO9FYnAGC7oEyQDPCcgVVk5eMCupEXVhaPF2NbzTvd8J9gpRvt/2fn/X7AGCXQGVoMlQxyWZETQoYW7bVmgXNAzlmXsg9yj681huMHj7+9/k0fzI2+9pBgoQYjU5uKsAoGXW2D/b2reM/dYQmVaYMj0T9BaGdZpxyG5hrjJQmA1UEKKUKfm/2Ptp4/Vl3kif9AqGMaKmA6FIdNBjFASgY5BTenff34yhxrStb7wypvvfob8tyypCh89kT41opAlgCY7RNnshg+eT8r5fquzPzw24/6R3ebI2kaaiSTQ97bH2FP+hOsCjAKKKUYzQl6WTU/ea3wV9D+05XlaSc1pZQlkw8XV8pvhwA3+lycnrjSPMAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite Rynga</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.rynga.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.rynga.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verrà visualizzato come mittente" />

	</config>
  </description>
  <procedure>
     <page uri="https://www.rynga.com/myaccount/index.php" method="POST">
        <vars>
          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>

          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://www.rynga.com/myaccount/websms2.php" method="POST">
        <vars>
          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>

          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>
        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>

          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="59" name="SmartVoip" v="1.0" maxsms="10" singlelen="160" sms_divisor="160" maxlen="640" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAAADqYAAAXb5JfxUYAAAJRSURBVHjalJNPTxNRFMXvm3kzQ+mb0k5bCqIUFFBQqsEFYoxuTHRBgm7cG2PcuDLsXPgNWOBCI34ATUyIC9QdCEFjEEwJtKSAWNqCZUrb6djOdP685wITdzXezd3cX05uzjmIMQb/M/hoZbOZ7a1NjuPPxWIBf6ABwAFAMpmYn19wGc3tZbc2U67rNgJs29lN/xg6rZwMur0RlNpIqKraCGCMVcpFahYYtYjXA07NcRoqiKJwqrvT0g89EpBmphARC+I/nh4c6MsnUu8+fPUrcqTrQpNMwLahrDGeo5bFRSI0n2dqgR/od1bXMKOOWy9TXpbrTkg5Frt8zbO0XJiYtAbPQnsb//R5YGa6NjFpzC8os+9LDx9xtp5Dxk64o7U/dIL4OjlB0F+9MXw++cnj5thgJbtvJjcqiQ0jHDZ30mW9yoFrIMR4ZrlEEgn5pVdMy64fqNazKZrbq2Csf1vV9aodDJU+L8GVEYyEFtehwPNcIOQh3rpRtwyjOLeoxddCD+5ZSrC4ErcJoYCq8XVEvFiQ2x08/DOdwdEWxFNWO3D9AejrdSi1eEy7OtX1pP98zAJwz/S23xrl70aj2nYOOqKiR/IInLq+UlPL9WgHOtSk/j4my6YkciNDqlnFmJFyEb0EkAEKU9MzbRc9snfsxTh6+/r46G0ON3uvDh9+WixtbVZW46DrIoALgJYBpO6u8Zt3rJ5Le4Z5n2XGfGQ3naGphLTwkdc04ShwgI6MQwcASAl+uXG9Zed7q4D3u3tISWuamw3rOgfA/pz+rcDvAQBQ5hT+qPKxWQAAAABJRU5ErkJggg==" >
  <description>
	<info>Acquista ed invia sms tramite SmartVoip</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.smartvoip.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smartvoip.com" />
		<required n="3" name="mittente" default="" desc="Numero verificato che verra' visualizzato come mittente" />
	</config>
  </description>
  <procedure>
     <page uri="https://www.smartvoip.com/myaccount/index.php" method="POST">
        <vars>

          <var name="username" value="%%username%%"/>
          <var name="password" value="%%password%%"/>
        </vars>
        <errors>
          <var errstr="password incorrect" errmsg="Username o password errati"/>
        </errors>
      </page>
      <page uri="https://www.smartvoip.com/myaccount/websms2.php" method="POST">
        <vars>

          <var name="action" value="send"/>
          <var name="panel" value="true"/>
          <var name="callerid" value="%%mittente%%"/>
          <var name="message" value="%%message%%"/>
          <var name="bnrphonenumber" value="00%%intpref%%%%intnum%%"/>
          <var name="sendscheduled" value="no"/>
        </vars>
        <accept>
          <var acceptstr="sent!"/>

        </accept>
        <errors>
          <var errstr="Sorry, you do not have enough credit" errmsg="Credito esaurito."/>
          <var errstr="phonenumber is incorrect" errmsg="Numero non valido."/>
          <var errstr="phonenumber is invalid" errmsg="Numero non valido."/>
        </errors>
      </page>
  </procedure>
 </service>

 <service id="93" name="Cheasy" v="1.0" maxsms="1" singlelen="120" sms_divisor="120" maxlen="120" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEASURBVDhPY/j582fGIgYiEVAxdqWrTuXPOhiC1RQsGgqX8//////jt+f4NGQtZr776tjlJ1tyl3IC2b/+fHv45gxQQ9lqCSDj4M1pcM1QG4CKXn++BzR415UuoNzuq70LjyYAGRcfbwQKnn+4Dl0DxLDDt2Y+eX8JLpe/jOf91yfbLrUArcWigciAAjlp/bmK339/As0GBg6atpwlbHuvT3j16faP358h4YaiYcnxNDQNQL/tuNwO0TDnUDhUA5GOgShDxANpngZaDbQXHqzAwIUEKzBmsAcrJOKuPN2OFnEVa6Qfvz1/5PYcfMEKDH7CSQPN3/gS35s3b4gPJaBiALPZZciKvkCpAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia SMS tramite cheasy  accumulando dei crediti sul sito.</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.cheasy.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.cheasy.it" />
	</config>
  </description>

  <procedure>
     <page uri="http://www.cheasy.it/">
        <contents>
          <var name="session" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>
        </contents>
      </page>
      <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>

          <var name="view" value="%%session%%"/>
          <var name="event" value="%%sessid%%"/>
        </vars>
        <contents>
          <var name="view" left="VIEWSTATE:" right=":"/>
          <var name="event" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
      <page uri="http://www.cheasy.it/home.aspx" method="POST">

        <headers>
          <var name="Referer" value="http://www.cheasy.it"/>
        </headers>
        <vars>
          <var name="__VIEWSTATE" value="%%view%%"/>
          <var name="__EVENTVALIDATION" value="%%event%%"/>
          <var name="COM_Box_Login1$txt_USR" value="%%username%%"/>
          <var name="COM_Box_Login1$txt_PWD" value="%%password%%"/>
          <var name="COM_Box_Login1$cmd_Login" value="ENTRA"/>

        </vars>
        <errors>
          <var errstr="login errata" errmsg="Attenzione, username o password errati"/>
        </errors>
      </page>
      <page uri="http://www.cheasy.it/messenger?s=sms">
        <contents>
          <var name="session1" left="__VIEWSTATE&quot; value=&quot;" right="&quot;"/>
          <var name="sessid1" left="__EVENTVALIDATION&quot; value=&quot;" right="&quot;"/>

        </contents>
      </page>
      <page uri="http://supermac.altervista.org/script/session.php" method="POST">
        <vars>
          <var name="view" value="%%session1%%"/>
          <var name="event" value="%%sessid1%%"/>
        </vars>
        <contents>
          <var name="view1" left="VIEWSTATE:" right=":"/>

          <var name="event1" left="EVENTVALIDATION:" right=":"/>
        </contents>
      </page>
      <page uri="http://www.cheasy.it/messenger.aspx?s=sms" method="POST">
        <headers>
          <var name="Referer" value="http://www.cheasy.it/messenger?s=sms"/>
        </headers>
        <vars>
          <var name="ScriptManager1" value="UpdatePanelSMS|cmd_INVIA_SMS"/>

          <var name="__EVENTTARGET" value=""/>
          <var name="__EVENTARGUMENT" value=""/>
          <var name="txt_SMS_Numero" value="%%intnum%%"/>
          <var name="txt_SMS_MSG" value="%%message%%"/>
          <var name="chk_CopyEmailSms" value="on"/>
          <var name="__VIEWSTATE" value="%%view1%%"/>
          <var name="__EVENTVALIDATION" value="%%event1%%"/>
          <var name="__ASYNCPOST" value="true"/>
          <var name="cmd_INVIA_SMS" value="Invia SMS"/>

        </vars>
        <accept>
          <var acceptstr="messenger?f=si"/>
        </accept>
        <errors>
          <var errstr="Numero di cellulare NON valido" errmsg="Numero di cellulare NON valido"/>
          <var errstr="Messaggio NON valido" errmsg="Testo non valido, contiente caratteri non ammessi"/>
          <var errstr="HAI FINITO IL TUO CREDITO SMS" errmsg="Crediti sms esauriti"/>
        </errors>

      </page>
  </procedure>
 </service>
 <service id="95" name="SmsPerty" v="1.0" maxsms="3" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="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" >
  <description>
	<info>Invia 2 sms a settimana verso tutti.</info>
	<config>
		<required n="1" name="login" default="" desc="Inserisci l'username di registrazione di www.smsperty.com" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.smsperty.com" />
		<required n="3" name="mittente" default="" desc="Inserisci il numero mittente in formato internazionale (senza +)" />
	</config>
  </description>
  <procedure>
     <page uri="http://iaddo91.altervista.org/scriptphp/smsperty.php" method="POST">
	  <vars>
	   <var name="cor" value="%%correzione%%" />
	   <var name="mess" value="%%message%%" />

	  </vars> 
	  <contents>
       <var name="mess1" left="messaggio:" right=":finito" />
      </contents>
	 </page> 
      <page uri="http://www.smsperty.com/index.php" method="POST">
       <contents>
        <var name="sonodallara" left="input type=&quot;hidden&quot; name=&quot;j" right="&quot;" />
       </contents>	  
      </page>

      <page uri="http://www.smsperty.com/index.php" method="POST">  
        <vars>
          <var name="username" value="%%login%%"/>
          <var name="passwd" value="%%password%%"/>
          <var name="Submit" value="Login"/>
          <var name="option" value="login"/>
          <var name="op2" value="login"/>
          <var name="lang" value="english"/>
          <var name="return" value="http://www.smsperty.com/index.php"/>

          <var name="message" value="0"/>
          <var name="force_session" value="1"/>
          <var name="j%%sonodallara%%" value="1"/>
        </vars>
        <errors>
          <var errstr="Incorrect username or password. Please try again." errmsg="Username o Password sbagliati"/>
        </errors>
      </page>
      <page uri="http://www.smsperty.com/index.php" method="POST">

        <vars>
          <var name="to" value="%2B%%intcode%%%%intnum%%"/>
          <var name="member_id" value="0"/>
          <var name="group_id" value="0"/>
          <var name="groupbox" value=""/>
          <var name="from" value="%%mittente%%"/>
          <var name="message" value="%%mess1%%"/>
          <var name="option" value="com_sms"/>
          <var name="task" value="sendMessage"/>

          <var name="id" value="1"/>
          <var name="gid" value=""/>
          <var name="successMessage" value=""/>
        </vars>
        <accept>
          <var acceptstr="smssuccess"/>
        </accept>
        <errors>
          <var errstr="Please enter the international mobile number or group you want to send an SMS message" errmsg="Inserisci il numero del destinatario in formato internazionale"/>

          <var errstr="Please enter the message you want to send" errmsg="Inserisci il testo del messaggio"/>
          <var errstr="nocredit" errmsg="Crediti esauriti"/>
        </errors>
      </page>
  </procedure>
 </service>
 <service id="97" name="CheapVoip-SMS" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="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" >
  <description>
	<info>Acquista ed invia sms tramite CheapVoip</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.cheapvoip.com" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.cheapvoip.com" />
		<optional n="3" name="mittente" default="" desc="Inserisci il numero registrato su www.cheapvoip.com " />
	</config>
  </description>
  <procedure>
     <page uri="http://www.cheapnet.it/areautenti/voip/sms/invia-sms-api.php" method="POST">
			<vars>

				<var name="username" value="%%username%%" />
				<var name="password" value="%%password%%" />
				<var name="mittente" value="%%mittente%%" />
				<var name="sn" value="|%%intnum%%|" />
				<var name="testo" value="%%message%%" />
				<var name="Submit" value="Invia" />
			</vars>
			<errors>
				<var errstr="Probabile errata username o password" errmsg="Invalid username or password" />

				<var errstr="il testo non" errmsg="Missing message text" />
				<var errstr="il destinatario non" errmsg="Missing recipient number" />
				<var errstr="il mittente specificato non" errmsg="Unauthorized sender number" />
				<var errstr="Inseriti caratteri non validi" errmsg="Invalid recipient number" />
			</errors>
			<accept>
				<var acceptstr="stato spedito con successo" />
			</accept>
		</page>

  </procedure>
 </service>
 <service id="98" name="SMScity-Free" v="1.2" maxsms="10" singlelen="120" sms_divisor="120" maxlen="120" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAB3RJTUUH1wUIDRIAvpfCKAAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAARnQU1BAACxjwv8YQUAAAFbSURBVHjanZPPSgJRGMXPvTNpaiUtlIIIeoFo2SYiBwqD1gU9gNDrtO0JWrZpESbUSlrVAxQRJWoYaub8uXO/7lyZaPqjjh8MczfnN9855w7DtymvbhHGGOuuwsIziyv+CeFavGYRGIuj//ogq6zvEvk+yHFjAcLhRjIBxvlEYg0gtYi0nckBfr8PUKz8ImP+8q7CHFgikKSRcDOiNQxMzWeRWVmG9AR6D48Q3Z7yKMcD8NQ0Fvd2kC9aKpc+nk/P0Li4gnT+z4gbmTTCO5DIziG3vYnU0gLSaot8sQCuWhoaogZwpiFBoHatod62bsZ+egEJMTyDAJBU3t3XFkTvA/fHJ8hZGxrQLF9Dut5QgN69elAir92B12yp0OWghaCA4IaqZyQgmJvDI3Lf2nBqdVWf/Ls+NrAKtTGUNev2MvoHVfdLJLpdiM47gjcoKjZnZ/TR9zwUquda+wnQXpbZ924kGwAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia sms verso tutti utilizzando i punti sms gratuiti del tuo account.</info>
	<config>
		<required n="1" name="natcode" default="" desc="Inserisci il prefisso internazionale del numero registrato (senza + o 00)" />
		<required n="2" name="mittente" default="" desc="Inserisci il numero di cellulare registrato su www.smscity.com senza prefisso internazionale " />

		<required n="3" name="password" default="" desc="Inserisci la password di accesso di  www.smscity.com" />
	</config>
  </description>
        <procedure>
            <page uri="http://iaddo91.altervista.org/scriptphp/smscity-code-conversion.php?intcode=%%natcode%%">
                <contents>
                    <var name="valorepaese1" left="CODICE-SMSCITY:" right=":---" />
                </contents>
            </page>

            <page uri="http://iaddo91.altervista.org/scriptphp/smscity-code-conversion.php?intcode=%%intcode%%">
                <contents>
                    <var name="valorepaese" left="CODICE-SMSCITY:" right=":---" />
                </contents>
            </page>
            <page uri="http://en.smscity.com/" method="POST">
                <vars>
                    <var name="firstLogin_action" value="login" />
                    <var name="firstLogin_country" value="%%valorepaese1%%" />

                    <var name="firstLogin_gsmNumber" value="%%mittente%%" />
                    <var name="firstLogin_password" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="I dati inseriti sono errati!" errmsg="Dati di login errati" errcode="5" />
                </errors>
            </page>
            <page uri="http://en.smscity.com/sms/gratis/" method="GET">
                <contents>

                    <var name="smsUniqueId" left='id=&quot;smsUniqueId&quot; value=&quot;' right='&quot;' />
                </contents>
            </page>
            <page uri="http://en.smscity.com/sms/free" method="POST">
                <contents>
                    <var name="credits" left='Free SMS Points:&lt;/a&gt;&lt;/div&gt;&lt;span class=&quot;colorFontBlack&quot;&gt;' right="&lt;" />
                </contents>
                <vars>
                    <var name="smsUniqueId" value="%%smsUniqueId%%" />

                    <var name="smsMessageType" value="8" />
                    <var name="smsAction" value="send" />
                    <var name="smsTextarea" value="%%message%%" />
                    <var name="smsPhonebookSelect" value="choose" />
                    <var name="smsCountrySelect" value="%%valorepaese%%" />
                    <var name="smsGsmNumber" value="%%intnum%%" />
                    <var name="smsCurrentSender" value="%2B%%natcode%%%%mittente%%" />
                    <var name="smsSenderType" value="gsm" />
                    <var name="submitSms" value="Invia SMS" />

                    <var name="smsPointCost" value="1" />
                    <var name="smsCreditCost" value="GRATIS" />
                    <var name="customSenderValidateNoNumbers" value="1" />
                </vars>
                <errors>
                    <var errstr="Per favore inserisci il messaggio." errmsg="Inserisci il testo del messaggio" />
                    <var errstr="No recipient has been entered" errmsg="Destinatario non valido" />
					<var errstr="Currently, you are out of Free SMS Points" errmsg="Free Point esauriti"/>
                </errors>

                <accept>
                    <var acceptstr="send" acceptmsg="Messaggio Inviato! Sms residui: %%credits%%" />
                </accept>
            </page>
        </procedure> </service>
 <service id="100" name="Vola" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAABGdBTUEAALGPC/xhBQAAAghJREFUOE9dkt9r01AUx/dPDP8HX3wp9DF968xLwS0EBnqfZkZfAtpNUbaAD073MDfZfCmuUNeFBWxYyToYaB6sziLtnXhXcbJEpaReiouWzjxc2PVkk/7IIeT+Op9zON9zRjjn1Keu63YDTjCBfWb2vr65AfeJRIKfMdI40ObuWuVt/7QNlyMh0KIIoVJxI7eeRbKEDz/cUqdxvQJA9zQYG7tq2/bopdHmif8fgAWiiikRkghJEaIuLq1YpgUARJ28MXmRzR8EcAOvPsvCQ+5lburmlCQj/68PaSGqpmnX5fFr8rjrkn4G2PXtjPndlnvswn/o/vwQ1hAx8Gt9Z9RjBFO7Zkdeo0Dnd9B0fPorcABofi3pr1pec5DpA1Df52/tnbc7lXc1cux+cXx7n1Tsj3uvK6B1jwmBI+cIHzYwBPaY43KzWFCU2xlVW1iYz2++2Cubhm6AdBdMCIB3yXy/W36zVlibU+cn0IyYFIWkFLsiSCmElJnl5achM1g0iLilG48frtybVRV1WkJpMSWEFhdiwuVYXBBTUrV+EFXp5x9W3ec8gN7zTod3TxiutQv5T9BpyzSM4nYUQDLZ0in0GyGaW/esMhOS1NqlvQKiQLXO0ohYJo/FSRrRxSXPKvxASl+iKKDn6YRMM3dI9jldfULB9dEDmMtwIoZkjcxFeAQRe99wq/8BxSRpDa/3PO4AAAAASUVORK5CYII=" >
  <description>
	<info>Invia 1 SMS al giorno con Vola, inoltre è possibile acquistare pacchetti sms</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vola.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vola.it" />
	</config>
  </description>
  <procedure>
     <page method="POST" uri="http://dally.altervista.org/scriptdally/SostituzioneAccentate.php">
                <vars>
                    <var name="CHECK" value="ON" />

                    <var name="text" value="%%message%%" />
                </vars>
                <contents>
                    <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE" />
                </contents>
            </page>
            <page uri="http://www.vola.it/vola-sms/login.php" method="POST">
                <vars>
                    <var name="username" value="%%username%%" />

                    <var name="password" value="%%password%%" />
                    <var name="Submit" value="OK" />
                    <var name="logintype" value="1" />
                </vars>
                <errors>
                    <var errstr="Dati di accesso non validi" errmsg="Dati di accesso non validi" />
                </errors>
            </page>
            <page uri="http://www.vola.it/vola-sms/sendSms.php" method="POST">

                <vars>
                    <var name="sender" value="vola.it" />
                    <var name="type_sent" value="now" />
                    <var name="notify" value="S" />
                    <var name="msg" value="%%mess1%%" />
                    <var name="destinatari" value="&lt;%2B(39)%%intnum%%&gt;" />
                    <var name="hdests" value="1" />
                    <var name="dest_mode" value="dest_single" />
                </vars>

                <errors>
                    <var errstr="Il tuo credito non" errmsg="Sms non inviato.Controlla credito" />
                </errors>
                <accept>
                    <var acceptstr="Il primo messaggio di oggi ti" />
                </accept>
            </page>
  </procedure>
 </service>

 <service id="102" name="CherrySMS-Mittente" v="1.0" maxsms="10" singlelen="160" sms_divisor="153" maxlen="1530" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAzpJREFUeNpcU01v01gUPc+fdWmTtAilkDLAMAKhFhgaPgvSaBahCEE7XbBlBBsWI80GisoPACEQi0EaaYQEmwpWfO1YFArKBglpgAItbcVHoU3aBBInbhzHru3HfekMQlzLlux73/E5957Lbl0935+39bMzs9log9HIZVlFrWaDBxJisRgC34cXeAg4h6ZqCAJ6dx0wJvF9OzseKllL/evUwJnVDYZBHxl8OqArBvb0bEHjBhVWgWFieBLJzdswfH8YPAxBhXBdF10/bz2izMxkl4nD0WgUISUVpmHg/O943zKCfEaGF4/hQNthbGpei3Q6DU3XIEIAmaZZVTRdD8SfOVEU4RPd6bECfti1B6pRRnyhCXJVwrN3zynnQ6NL1IpyRZGhCKT/DwugkIW49s8NxK63Yv1Pa0nSIlzfQ8k0oWv611riUH9K+CZEUoAoqgytUcZi6GFsYhy5XA6rEquogQG+D4lJSxghJW2nBoua4xGr/T0pzM5mwOiq2jZWtreDqSqqlPP8JSBJIgmyrNSbB1nGbwdS6NQUWLoBn0ZoVipgYYBQUrC80cDg8aOovRzDo+wcRjOZJbZizo63iMHegzid3IrS5FvMPX2BT3PziHZ348r4OC6fOI7u9gQ+33+I+bEJaDu6MJrP17ugQGYwIhH8ihCZcxeQq7qocAm26yHR2opje3dgZ/oRpkfHUSbm/rImpItF2OUyWKQZkkeFFdJoTr0Br7mQNA2M5HCS5hI7TjIW/n2GgOoCz4PzuYB+Aom3taFQLEDp7OxEf98hYHMH2IePCEyLRinDtyy07NuNXDIJFo0gvHmH7CzBDUJ0bO9C/6aNqBAT1Bw7z/+LhXv3+NT+Hv4kuYuP/vEn55ZV/x46Dv80NMTfnBzgmdt3yTph/XZr1QJza04+Oze/Qnigbc0aTL9+DccsYfmP6+DRWKPNTVBIlkFWn6XOr08kaLDA1OQU4vEVRaVUMrWRByOoVOz6gpTKFipVm3ZCqltVSKRpIZVK4e+Ll+o7wyQGs2iir/eQyiaeP77toeEXYYzWlhgy2QxUWlud/qqScZqIgVjxZur4q5evIBOoTAYSFo/FIoUvAgwA3JucRYjKQDYAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite CherrySMS</info>
	<config>
		<required n="1" name="prefisso" default="" desc="Inserisci il prefisso internazionale del proprio numero senza + (es 39 per l'Italia)" />
		<required n="2" name="numero" default="" desc="Inserisci il numero registrato su cherry-sms.com" />
		<required n="3" name="password" default="" desc="Inserisci la password usata sul sito cherry-sms.com" />
	</config>

  </description>
  <procedure>
     <page uri="http://www.cherry-sms.com/index.php?action=login" method="post">
                <vars>
                    <var name="telnumber1" value="%%prefisso%%" />
                    <var name="login[telnumber2]" value="%%numero%%" />
                    <var name="login[password]" value="%%password%%" />
                </vars>
                <errors>

                    <var errstr="Can&apos;t login. Wrong password or not activated!" errmsg="Username o password errati" errcode="5" />
                </errors>
            </page>
            <page uri="http://www.cherry-sms.com/?do=smsend" method="post">
                <contents>
                    <var name="id" left="Du kannst noch " right=" SMS" />
                    <var name="id2" left="You can still write " right=" SMS"/>
                </contents>
                <vars>

                    <var name="absender" value="mit" />
                    <var name="telnumber1" value="%%prefisso%%" />
                    <var name="telnumber2" value="%%intnum%%" />
                    <var name="text" value="%%message%%" />
                    <var name="submit" value="absenden" />
                </vars>
                <accept>
                    <var acceptstr="Die SMS wurde versendet" acceptmsg="Messaggio Inviato! SMS residui: %%id%%" />
		   <var acceptstr="The SMS was sent." acceptmsg="Messaggio Inviato! SMS residui: %%id2%%" />

                </accept>
                <errors>
                    <var errstr="The specified phone number is wrong" errmsg="Numero inesistente" />
                    <var errstr="You have no free SMS left" errmsg="Crediti esauriti" />
		    <var errstr="Es trat ein Fehler" errmsg="Crediti insufficienti"/>
                </errors>
            </page>
  </procedure>
 </service>

 <service id="712" name="Vodafone-Turkey" v="1.1" maxsms="10" singlelen="160" sms_divisor="152" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAABR1BMVEUAAADk6vS0trzE0tzsHiTc3uT0jmzEwsy8FhzEyszksqT08vTsvqy8vsTU4uzsOizkmoTUgmysEhTc4uzM0ty8wsz0+vzcMiTsdlzs7vTUwrzEdmTs6uzMztS0usTU1tzUFhzs9vzk1tTUrqTMZlSkrrTEinykDhTssqTk6uzk4uTU0tT8+vzsLiS0srzEztzsGiTc3tzsjnTEwsS8EhzMclz06uTUysTcGiTsUjysrrTExsy8joSsDhT8/vzkrpT07uzEFhzkuqy8usTU3uTUJiTk5uzcQizcnoy8fmzk7vSkFhTc4uTM0tS8wsT09vTULiTkpoyssry8ztzcclzs7uzkGiTErqzc2tz0hmzEvsS0EhTMtrS8cmTs5uTMytS0urzE1tzMFhzk9vysOizszsTMqqS8ZlSkqrTc6vS8ytTEhnScCgxXxiq6AAAAAXRSTlMAQObYZgAAAP9JREFUGJUlz21PwjAUBeAys8Sh9S2CousGRrKElTjUYEW9OsH53ulgS8nU4cSJwv//bKc3ucnJ8+kcBPIqaqPwcLSl5xnJFyH4l4PrG9ukf6ACtJ832cqHMAmVIAAuzofLG15N2IQAqoQUFofN6Go3+zYTriPh0/Z+M2Lp4dp0KSklSF0ofx47DmPV+P6FcIzUsFx0HCeKmHt2+44N1HqrFVkOUWq9zhkKMhuFnScmoepapyVFQku9W51PGXNnY2wEHIW2KXqDOLZm44wHEw+BTR7Xe9n21xTzoH4gm9JEO9H2+v2fUaeu+PkWSjDG3VHQmfD/cQC61lUChXt5/gWxtzhtv7cKmwAAAABJRU5ErkJggg==" >
  <description>
	<info>Invia 10 SMS al giorno tramite il sito Vodafone. È possibile inviare SMS solo verso numeri Vodafone Turkey, occorre un numero registrato sul sito.</info>
	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vodafone.com.tr" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vodafone.com.tr" />
	</config>
  </description>

  <procedure>
     <page method="POST" uri="https://www.vodafone.com.tr/MyVodafone/myvodafone.home.php">
        <vars>
          <var name="GsmNo" value="%%username%%"/>
          <var name="MyPass" value="%%password%%"/>   
        </vars>
      </page>
      <page method="GET" uri="https://www.vodafone.com.tr/MyVodafone/myvodafone.php?pageId=WebSms">
        <contents>

          <var name="credits" left="k &lt;B&gt;" right="&lt;"/>
        </contents>
      </page>
      <page method="POST" uri="https://www.vodafone.com.tr/MyVodafone/myvodafone.php?pageId=WebSms">
        <vars>
          <var name="lenLSig" value="21"/>
          <var name="lenSSig" value="6"/>
          <var name="msgSig" value="0"/>
          <var name="scrn" value="2"/>

          <var name="WebSimSmsUserGsmNo" value="%%intnum%%"/>
          <var name="WebSimSmsText" value="%%message%%"/>
          <var name="x" value="21"/>
          <var name="y" value="6"/>  
        </vars>
        <accept>
          <var acceptstr="Yeni bir mesaj" acceptmsg="SMS sent! Remaining messages BEFORE this delivery: %%credits%%"/> 
        </accept>
        <errors>
          <var errstr="Sadece Aktif Durumda" errmsg="Wrong recipient!"/>          
        </errors>

      </page>
  </procedure>
 </service>
 <service id="103" name="CherrySMS-LowCost" v="1.0" maxsms="10" singlelen="160" sms_divisor="153" maxlen="1530" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAzpJREFUeNpcU01v01gUPc+fdWmTtAilkDLAMAKhFhgaPgvSaBahCEE7XbBlBBsWI80GisoPACEQi0EaaYQEmwpWfO1YFArKBglpgAItbcVHoU3aBBInbhzHru3HfekMQlzLlux73/E5957Lbl0935+39bMzs9log9HIZVlFrWaDBxJisRgC34cXeAg4h6ZqCAJ6dx0wJvF9OzseKllL/evUwJnVDYZBHxl8OqArBvb0bEHjBhVWgWFieBLJzdswfH8YPAxBhXBdF10/bz2izMxkl4nD0WgUISUVpmHg/O943zKCfEaGF4/hQNthbGpei3Q6DU3XIEIAmaZZVTRdD8SfOVEU4RPd6bECfti1B6pRRnyhCXJVwrN3zynnQ6NL1IpyRZGhCKT/DwugkIW49s8NxK63Yv1Pa0nSIlzfQ8k0oWv611riUH9K+CZEUoAoqgytUcZi6GFsYhy5XA6rEquogQG+D4lJSxghJW2nBoua4xGr/T0pzM5mwOiq2jZWtreDqSqqlPP8JSBJIgmyrNSbB1nGbwdS6NQUWLoBn0ZoVipgYYBQUrC80cDg8aOovRzDo+wcRjOZJbZizo63iMHegzid3IrS5FvMPX2BT3PziHZ348r4OC6fOI7u9gQ+33+I+bEJaDu6MJrP17ugQGYwIhH8ihCZcxeQq7qocAm26yHR2opje3dgZ/oRpkfHUSbm/rImpItF2OUyWKQZkkeFFdJoTr0Br7mQNA2M5HCS5hI7TjIW/n2GgOoCz4PzuYB+Aom3taFQLEDp7OxEf98hYHMH2IePCEyLRinDtyy07NuNXDIJFo0gvHmH7CzBDUJ0bO9C/6aNqBAT1Bw7z/+LhXv3+NT+Hv4kuYuP/vEn55ZV/x46Dv80NMTfnBzgmdt3yTph/XZr1QJza04+Oze/Qnigbc0aTL9+DccsYfmP6+DRWKPNTVBIlkFWn6XOr08kaLDA1OQU4vEVRaVUMrWRByOoVOz6gpTKFipVm3ZCqltVSKRpIZVK4e+Ll+o7wyQGs2iir/eQyiaeP77toeEXYYzWlhgy2QxUWlud/qqScZqIgVjxZur4q5evIBOoTAYSFo/FIoUvAgwA3JucRYjKQDYAAAAASUVORK5CYII=" >
  <description>
	<info>Acquista ed invia sms tramite CherrySMS</info>
	<config>
		<required n="1" name="prefisso" default="" desc="Inserisci il prefisso internazionale del proprio numero senza + (es 39 per l'Italia)" />

		<required n="2" name="numero" default="" desc="Inserisci il numero registrato su cherry-sms.com" />
		<required n="3" name="password" default="" desc="Inserisci la password usata sul sito cherry-sms.com" />
	</config>
  </description>
  <procedure>
     <page uri="http://www.cherry-sms.com/index.php?action=login" method="post">
                <vars>
                    <var name="telnumber1" value="%%prefisso%%" />
                    <var name="login[telnumber2]" value="%%numero%%" />

                    <var name="login[password]" value="%%password%%" />
                </vars>
                <errors>
                    <var errstr="Can't login. Wrong password or not activated!" errmsg="Username o password errati" errcode="5" />
                </errors>
            </page>
            <page uri="http://www.cherry-sms.com/?do=smsend" method="post">
                <contents>
                    <var name="id" left="Du kannst noch " right=" SMS" />

                    <var name="id2" left="You can still write " right=" SMS"/>
                </contents>
                <vars>
                    <var name="absender" value="ohne" />
                    <var name="telnumber1" value="%%prefisso%%" />
                    <var name="telnumber2" value="%%intnum%%" />
                    <var name="text" value="%%message%%" />
                    <var name="submit" value="absenden" />
                </vars>

                <accept>
                    <var acceptstr="Die SMS wurde versendet" acceptmsg="Messaggio Inviato! SMS residui: %%id%%" />
		   <var acceptstr="The SMS was sent." acceptmsg="Messaggio Inviato! SMS residui: %%id2%%" />
                </accept>
                <errors>
                    <var errstr="The specified phone number is wrong" errmsg="Numero inesistente" />
                    <var errstr="You have no free SMS left" errmsg="Crediti esauriti" />
		    <var errstr="Es trat ein Fehler" errmsg="Crediti insufficienti"/>
                </errors>

            </page>
  </procedure>
 </service>
 <service id="104" name="Meteor-Ireland" v="1.0" maxsms="300" singlelen="160" sms_divisor="160" maxlen="160" reset="monthly" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAACXBIWXMAAAsTAAALEwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhMWE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5pDoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/RNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTPZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJzs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3vdy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtbYlu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9DBY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfyl5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADqYAAAOpgAABdvkl/FRgAAAwBQTFRF/////9bG/39L//7+/7KT/5Zt/0wF/6uK/200//39/+TZ/9LA/8y4/9PC//Hr//38/8Wu/9fH/9C9/3hD/4dX/7OV/7WX/5Vr/3lE/7SW//r4///+/7+m/1AK/04I/1kX/2sx/1sa/2Ml/18f/4xf//n3/9/S/1wc/0kB/2Qn/9jJ//by/+/o/49j/4dZ/2cr/5x1/4pb/08J/1US/+HV/97R/5lx/4JP/3pG/3Q8/9XF/9zO/283/1AL/512/5Bl/5Fl/4la/5Bk/7WY/3E6/08K/8Kq/8Go/5hv/6B6/4FQ/4lb/7GS/04H/9vM/6N9/20z/5Np/7CQ/2wy/2Un/8u3/3ZA/5du/18h/5No/7CR/2ou/4td//z6//79/2gt/2Yp/0sE/9G//9XE/4hZ/1sb/5tz//bz/66P/2Ei/6SB/595/1MO/1oZ/00G/240/241/2ow/2ku/6N+//v5//j2/6B5/1IO/10d/8exAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9YwSMQAAANpJREFUeNpUjc1KAlEARs911Ev+pGEhkSEoiJvwZyMSCFGgGcwy6BV8mV5IFHwCVw1uMqcYxUa0wWs6CtPCNvPtzuHAB77pKc3H92eO8Bey819EZLg13UH8VAAxpCgxt9bsQEAmBtHGQLkhFjYBImlwr163Fafdzr4gOK9bGBvQzS88bjU9erLyPoHRRT2ffz8EFXwcn5YGMA3yax+OojomdzcL0HBrNQB6icRkgJAF5WAD3CgIF7Qn4/knmU59Iy+bxZH5JihroB67DwD9IQLK11gKvP2cNfwNAABmQiVW0vmlAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 300 SMS al mese con Meteor Ireland</info>
	<config>
		<required n="1" name="username" default="" desc="Numero della sim registrata" />

		<required n="2" name="password" default="" desc="Inserisci la password di accesso a www.meteor.ie" />
	</config>
  </description>
		<procedure>
            <page method="POST" uri="https://www.mymeteor.ie/go/mymeteor-login-manager">
			  <contents>
			    <var name="disponibili" left="numbers&quot;&gt;&lt;strong&gt;" right="&lt;"/>
			  </contents>
                <vars>

                    <var name="msisdn" value="%%username%%" />
                    <var name="pin" value="%%password%%" />
                </vars>
            </page>
			<page uri="https://www.mymeteor.ie/go/freewebtext">
			  <contents>
			    <var name="fid" left="var CFID = " right=";"/>
			    <var name="token" left="var CFTOKEN = " right=";"/>
			  </contents>

			</page>
			<page uri="https://www.mymeteor.ie/mymeteorapi/index.cfm?event=smsAjax&amp;CFID=%%fid%%&amp;CFTOKEN=%%token%%&amp;func=searchEnteredMsisdn" method="POST">
			<headers>
			 <var name="Referer" value="https://www.mymeteor.ie/go/freewebtext"/>
			</headers>
			<vars>
			  <var name="ajaxRequest" value="searchEnteredMSISDN"/>
			  <var name="searchValue" value="%%intnum%%"/>
			</vars>

		    </page>
			<page uri="https://www.mymeteor.ie/mymeteorapi/index.cfm?event=smsAjax&amp;CFID=%%fid%%&amp;CFTOKEN=%%token%%&amp;func=addEnteredMsisdns" method="POST">
			<headers>
			 <var name="Referer" value="https://www.mymeteor.ie/go/freewebtext"/>
			</headers>			
			<vars>
			  <var name="ajaxRequest" value="addEnteredMSISDNs"/>
			  <var name="remove" value="-"/>
			  <var name="add" value="0|%%intnum%%"/>

			</vars>
		    </page>			
			<page uri="https://www.mymeteor.ie/mymeteorapi/index.cfm?event=smsAjax&amp;func=sendSMS&amp;CFID=%%fid%%&amp;CFTOKEN=%%token%%" method="POST">
			<headers>
			 <var name="Referer" value="https://www.mymeteor.ie/go/freewebtext"/>
			</headers>
     			<vars>
                    <var name="ajaxRequest" value="sendSMS" />
                    <var name="messageText" value="%%message%%" />

                </vars>			
			<accept>
			<var acceptstr="The following number is not in your phonebook" acceptmsg="SMS disponibili prima di questo invio:%%disponibili%%"/>
			</accept>
			</page>
        </procedure> </service>
 <service id="105" name="Vodafone-Widget" v="1.1" maxsms="10" singlelen="160" sms_divisor="160" maxlen="360" reset="daily" output_encoding="ISO-8859-1" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAABaElEQVR42qWTIU8DQRCFXwli5crWtY4KEioQ4FpH/wE4giIogiLVgEGSKoIrEtdDtbJ1LYoKBAJR3J27ug8xd90rBQyTzO3tzMvb2XmzJST0D9uUJHlvu0X2KVekg7a025De3qXnSPqcGyZJJOfCPxJ4D86ZH59AmgLAeATNNpye2X44gGodJHAeJIzAOfBl6N4ZME3h/MKA1RpMJyxtPIKdhuWWBBJc3wZQ1F8CODyCOGXFoj6UywWCnUYAzefQbLFytWYLnvoQx4Ekq9AIHu5D4rFHuFZG8FOVwwFIbEiSqrWgSxLbmnfaOcllKn28B1ylIkkygsUiJHKyYiy3nLRgRvAyDZG9fanZNoKlJ5bbrgfcbGarNXFvtcvTickngZx1/PzijyY6F2agqHf3zjzqh+HKG7hV/z5IHi47JuNf9tgrVJcTFEf5oG2gYrlpCrNXO8D7ILNE6dfXeNlZj91crYVK/33OXyU+0lAnmrnbAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia 10 SMS al giorno emulando il Widget Desktop Vodafone. È possibile inviare SMS solo verso numeri Vodafone, occorre un numero registrato sul sito.</info>

	<config>
		<required n="1" name="username" default="" desc="Inserisci l'username di registrazione di www.vodafone.it" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso di www.vodafone.it" />
		<required n="3" name="sim" default="" desc="Inserisci il numero di telefono della sim con cui vuoi inviare tramite questo account" />
	</config>
  </description>
    <procedure>
      <page uri="https://widget.vodafone.it/190/trilogy/jsp/login.do" method="POST">
      	<headers>

			<var name="User-Agent" value="Vodafone_DW"/>
			<var name="Referer" value="http://www.vodafone.it/"/>
			<var name="X-Flash-Version" value="10,0,45,2"/>
			<var name="Accept" value="*/*"/>
			<var name="Accept-Language" value="it-it"/>
			<var name="Connection" value="keep-alive"/>
	  	</headers>
	  	<vars>
          <var name="username" value="%%username%%"/>

          <var name="password" value="%%password%%"/>
          <var name="cu_channel" value="MM"/>
          <var name="cu_notrace" value="true"/>
        </vars>
        <errors> 
          <var errstr="Verifica che username e password" errmsg="Nome utente o password errati"/>
          <var errstr="intervento di manutenzione" errmsg="Servizio in manutenzione"/>
          <var errstr="inesistente" errmsg="Servizio non disponibile"/>
        </errors>

	  </page>
	  <page uri="https://widget.vodafone.it/190/trilogy/jsp/swapSim.do" method="POST" condition="%%sim%%">
        <vars>
          <var name="swap_sim_link" value="%%sim%%"/>
          <var name="ty_sim" value="%%sim%%"/>
        </vars>
        <errors>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;100&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;101&quot;" errmsg="Il servizio non e' al momento disponibile."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;102&quot;" errmsg="Sessione scaduta."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;103&quot;" errmsg="Siamo spiacenti. Il tuo profilo di registrazione non e' abilitato a questo servizio."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;104&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;105&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;106&quot;" errmsg="Contenuto non disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;107&quot;" errmsg="Hai raggiunto il numero massimo di SMS a tua disposizione oggi."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;108&quot;" errmsg="E' stato raggiunto il numero massimo di SMS verso il numero destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;109&quot;" errmsg="Attenzione! Messaggio vuoto."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;110&quot;" errmsg="Hai superato il numero di caratteri disponibili."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;111&quot;" errmsg="Inserisci il numero di cellulare del destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;112&quot;" errmsg="Il numero di cellulare deve essere di nove o dieci cifre e contenere solo caratteri numerici."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;113&quot;" errmsg="Il destinatario non e' un utente Vodafone."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;114&quot;" errmsg="Verifica il numero mittente"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;115&quot;" errmsg="Attenzione! Errore SIM."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;116&quot;" errmsg="Codice di controllo sbagliato"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;117&quot;" errmsg="Contenuto non disponibile."/>
        </errors>
      </page>

      <page uri="https://widget.vodafone.it/190/fsms/precheck.do?channel=VODAFONE_DW">
      	<headers>
			<var name="User-Agent" value="Vodafone_DW"/>
			<var name="Referer" value="http://www.vodafone.it/"/>
			<var name="X-Flash-Version" value="10,0,45,2"/>
			<var name="Accept" value="*/*"/>
			<var name="Accept-Language" value="it-it"/>
			<var name="Connection" value="keep-alive"/>
	  	 </headers>

	  	 <contents>
            <var name="msgmaxlength" left="e n=&quot;MSGMAXLENGTH&quot; v=&quot;" right="&quot; /"/>
         </contents>
        <errors>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;100&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;101&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;102&quot;" errmsg="Sessione scaduta."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;103&quot;" errmsg="Siamo spiacenti. Il tuo profilo di registrazione non e' abilitato a questo servizio."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;104&quot;" errmsg="Il servizio non e' al momento disponibile."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;105&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;106&quot;" errmsg="Contenuto non disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;107&quot;" errmsg="Hai raggiunto il numero massimo di SMS a tua disposizione oggi."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;108&quot;" errmsg="E' stato raggiunto il numero massimo di SMS verso il numero destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;109&quot;" errmsg="Attenzione! Messaggio vuoto."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;110&quot;" errmsg="Hai superato il numero di caratteri disponibili."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;111&quot;" errmsg="Inserisci il numero di cellulare del destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;112&quot;" errmsg="Il numero di cellulare deve essere di nove o dieci cifre e contenere solo caratteri numerici."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;113&quot;" errmsg="Il destinatario non e' un utente Vodafone."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;114&quot;" errmsg="Verifica il numero mittente"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;115&quot;" errmsg="Attenzione! Errore SIM."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;116&quot;" errmsg="Codice di controllo sbagliato"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;117&quot;" errmsg="Contenuto non disponibile."/>
        </errors>
      </page>
	  <page uri="http://t.jacksms.it/vodafone-widget-message.php" method="POST">
        <vars>
         	<var name="message" value="%%message%%"/>

         	<var name="msgmaxlength" value="%%msgmaxlength%%"/>
        </vars>
        <contents>
            <var name="message_plain" left="__message__:" right=":__/message__"/>
        </contents>
      </page>
      <page uri="https://widget.vodafone.it/190/fsms/prepare.do?channel=VODAFONE_DW" method="POST">
      	 <headers>
			<var name="User-Agent" value="Vodafone_DW"/>

			<var name="Referer" value="http://www.vodafone.it/"/>
			<var name="X-Flash-Version" value="10,0,45,2"/>
			<var name="Accept" value="*/*"/>
			<var name="Accept-Language" value="it-it"/>
			<var name="Connection" value="keep-alive"/>
	  	 </headers>
         <vars>
            <var name="receiverNumber" value="%%intnum%%"/>
            <var name="message" value="%%message_plain%%"/>

            <var name="availableChars" value="%%availableChars%%"/>
         </vars>
         <contents>
            <var name="captchaimage" left="e n=&quot;CODEIMG&quot; &gt;&lt;![CDATA[" right="]]&gt;"/>
         </contents>
         <errors>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;100&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;101&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;102&quot;" errmsg="Sessione scaduta."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;103&quot;" errmsg="Siamo spiacenti. Il tuo profilo di registrazione non e' abilitato a questo servizio."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;104&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;105&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;106&quot;" errmsg="Contenuto non disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;107&quot;" errmsg="Hai raggiunto il numero massimo di SMS a tua disposizione oggi."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;108&quot;" errmsg="E' stato raggiunto il numero massimo di SMS verso il numero destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;109&quot;" errmsg="Attenzione! Messaggio vuoto."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;110&quot;" errmsg="Hai superato il numero di caratteri disponibili."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;111&quot;" errmsg="Inserisci il numero di cellulare del destinatario."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;112&quot;" errmsg="Il numero di cellulare deve essere di nove o dieci cifre e contenere solo caratteri numerici."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;113&quot;" errmsg="Il destinatario non e' un utente Vodafone."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;114&quot;" errmsg="Verifica il numero mittente"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;115&quot;" errmsg="Attenzione! Errore SIM."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;116&quot;" errmsg="Codice di controllo sbagliato"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;117&quot;" errmsg="Contenuto non disponibile."/>
         </errors>
      </page>
      <page uri="http://t.jacksms.it/vodafone-widget-image.php" method="POST" condition="%%captchaimage%%">

         <vars>
          <var name="data" value="%%captchaimage%%"/>
          <var name="writefile" value="%%username%%"/>
          <var name="encoding_problem" value="true"/>
        </vars>
        <contents>
            <var name="captcha_file" left="__loadfile:" right="/__"/>
        </contents>
        <errors>

			<var errstr="Error" errmsg="Problemi inaspettati nella generazione del captcha."/>
		</errors>
      </page>
      <page uri="http://t.jacksms.it/%%captcha_file%%" captcha="1" condition="%%captchaimage%%"/>
      <page uri="https://widget.vodafone.it/190/fsms/send.do?channel=VODAFONE_DW" method="POST">
     	 <headers>
			<var name="User-Agent" value="Vodafone_DW"/>
			<var name="Referer" value="http://www.vodafone.it/"/>
			<var name="X-Flash-Version" value="10,0,45,2"/>

			<var name="Accept" value="*/*"/>
			<var name="Accept-Language" value="it-it"/>
			<var name="Connection" value="keep-alive"/>
	  	 </headers>
         <accept>
            <var acceptstr="inviati correttamente"/>
         </accept>
         <vars>
            <var name="verifyCode" value="%%captcha_value%%" condition="%%captchaimage%%"/>

            <var name="receiverNumber" value="%%intnum%%"/>
            <var name="message" value="%%message_plain%%"/>
         </vars>
         <errors>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;100&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;101&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;102&quot;" errmsg="Sessione scaduta."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;103&quot;" errmsg="Siamo spiacenti. Il tuo profilo di registrazione non e' abilitato a questo servizio."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;104&quot;" errmsg="Il servizio non e' al momento disponibile."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;105&quot;" errmsg="Il servizio non e' al momento disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;106&quot;" errmsg="Contenuto non disponibile."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;107&quot;" errmsg="Hai raggiunto il numero massimo di SMS a tua disposizione oggi."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;108&quot;" errmsg="E' stato raggiunto il numero massimo di SMS verso il numero destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;109&quot;" errmsg="Attenzione! Messaggio vuoto."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;110&quot;" errmsg="Hai superato il numero di caratteri disponibili."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;111&quot;" errmsg="Inserisci il numero di cellulare del destinatario."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;112&quot;" errmsg="Il numero di cellulare deve essere di nove o dieci cifre e contenere solo caratteri numerici."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;113&quot;" errmsg="Il destinatario non e' un utente Vodafone."/>

			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;114&quot;" errmsg="Verifica il numero mittente"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;115&quot;" errmsg="Attenzione! Errore SIM."/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;116&quot;" errmsg="Codice di controllo sbagliato"/>
			<var errstr="n=&quot;ERRORCODE&quot; v=&quot;117&quot;" errmsg="Contenuto non disponibile."/>
        </errors>
      </page>
    </procedure>
 </service>
 <service id="106" name="Smsjive" v="1.0" maxsms="10" singlelen="100" sms_divisor="152" maxlen="100" reset="daily" output_encoding="ACCENT" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJ7SURBVDhPJVLfSxRRGD13Zu7cmZ0ZZ1tF9CHowR/QKgX1IgmWK21ECEoJhj1F1Eu9RcKaRr4EvUT0UuGv3W1q1fzVkq5EhdIf0Vu9RGCJbru6u+LcvnFn5t6597vfd87Mdw5cTQFMFVCZEgKgqYoGDsFoRW+YJmwwWAixIMgRPY7KS7vRxZsHuHUeAvRolKHQYAhKGA0FBBmkA7lRQ75iiV7Ln8KvmXqKmUeZlMBVIqmSB6TgARDqXCyPGA5w4STqwwEWY9AJiRk0O8TIbAOgE4uCNB2kUfH04T5lNynK0zXjV5FPa1tJjFxGZbLxIGXFGlCcMEoz+r6HuKvgT7I5P4lEH9/xzEISt7ut/RQvZcL3B2oL00p+in176uy/x+aTUMXj31834WILDjPmo36xMYq9JfpI0/dQzOCEK8pv9euxY3LCfjbggGm/vUgxBZyLioN5MdyLLyOiOC+gWPlZlLLWYAcBGWGOkse3Uth7F5FplKmg5xQKi0gM4uuYKM8aGhcPb+p7C/Z2GjsLgM7lXN3kPXS3I9audTUD8TYUskjcUDfG4S+oJNbZJhxmIefcvx8E9Udm1LFr1GXeETXibS5irfA/YqwflZwpPzmkkgFzdz7sL4ae39Fou73e8GMJvV2QiyitO+hphczh8ZDwV+Cv0j+gBijlIJfdzijJYr+4C7mKyoous/i5YuPSGe1wjY0OqWDCDPQKVCMdgVqyE10MTktExE/rESpXOf5tNsrPuNJZzSAjWoH+VKpSpUZNoCqyXdUtjKmQa8Sokk8JNWAI8hS6yVOEqFFEhDTRAEHESuDBOiBE5erR5xAC9Sk4ISrQurqleDVCi/8Jm683etwlKQAAAABJRU5ErkJggg==" >

  <description>
	<info>Invia sms verso tutti</info>
	<config>
		<required n="1" name="user" default="x" desc="Nessun parametro richiesto" />
	</config>
  </description>
        <procedure>
			<page method="POST" uri="http://iaddo91.altervista.org/scriptphp/smsjive.php">

                <vars>
                    <var name="view" value="%%message%%" />
                </vars>
                <contents>
                    <var name="mess1" left="TeXtMeSsAgE=:" right=":TeXtMeSsAgE" />
                </contents>
            </page>
			<page uri="http://www.smsjive.com/">
				<contents>

                    <var name="image" left="&quot;phpcaptcha/securimage_show.php?sid=" right="&quot;" />
                </contents>
			</page>
			<page uri="http://www.smsjive.com/phpcaptcha/securimage_show.php?sid=%%image%%" captcha="1"/>
            <page method="POST" uri="http://www.smsjive.com/action_form.php">
                <vars>
                    <var name="t2login" value="t2login" />
                    <var name="country" value="%%intpref%%" />
                    <var name="f_phone" value="%%intpref%%%%intnum%%" />

                    <var name="frm_country_startcode" value="%%intpref%%" />
                    <var name="f_msg" value="%%mess1%%" />
                    <var name="remlen" value="87" />
                    <var name="reply_enabled" value="1" />
					<var name="security_code" value="%%captcha_value%%" />
                </vars>
                <accept>
                    <var acceptstr="sms sent" />
                </accept>

				<errors>
                    <var errstr="IMPORTANT" errmsg="Errore, riprova"/>
                </errors>
            </page>
        </procedure> </service>
 <service id="107" name="Comviq" v="1.0" maxsms="5" singlelen="160" sms_divisor="160" maxlen="160" reset="daily" output_encoding="UTF-8" icon="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAwBQTFRFAAAADAwMDg4ODw8PEhISExMTFBQUFRUVFhYWFxcXGRkZGhoaGxsbHBwcHh4eISEhIiIiIyMjKysrLS0tLy8vMDAwNTU1Nzc3PDw8REREVFRUVVVVWlpaW1tbXFxcXV1dX19fYGBgYWFhYmJiZmZmZ2dnaGhob29vdXV1eXl5gICAh4eHiYmJjY2Njo6OpqamtLS0tbW1vLy8vr6+v7+/xcXFycnJysrKy8vLzMzM1tbW19fX2NjY3d3d39/f4ODg4eHh4+Pj5OTk5eXl5ubm5+fn6enp6urq7Ozs7u7u7+/v8fHx8vLy8/Pz9PT09fX19vb2+Pj4+fn5+/v7/Pz8/f39/v7+////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3Gs+rAAAAdlJREFUOE+lkzmvaWEUhs/phcQYQyQoRWhEo/QTaAwxFOhUCp1OFPwMv4BOqBSGGo0gphAhxhDDe+9aCdkOJ7nJXcm3s7P2Xs+3vne93zf+xtf/BAF+xu12Q71eRz6fRzqdRjabRblcxnw+R7/fB31/xNfP4l6vh2g0CqPRCKlUColEArFYDJ1OB7vdjng8/jug2+3C6XRCJpNBq9XC5XIhFoshEonA4XBAJBIhGAy+7Pns4HK5wO/3Qy6Xw2QycfuDwQDD4RCTyQTtdhuJRIIBH49QrVah1+uhVqu5+Hg8YrlcYr/f81qtVhiPx2g2m7her+8apFIpKJVKbpV2Fu7y+JugBLvf768ASno8HhYtHA7jfD5/Gg4XCovZAvQ4HA7wer0MCAQCLy1+JAmSTxEzmQwfwWazsXD/Gk9Aq9Vi9VUqFastFOoBo1yhUMBisXgX8XQ6IZlMQqFQQKPRIBQKoVar8Qin0ykajQaDrVYr596cSPTRaMSF1AXpQW6kI9GidzKSxWJhS3+0Mo2JZp3L5diFBoOBuyFvmM1muN1u+Hw+zGazzwCa/W63YwN1Oh1UKhUUi0WUSiU+Dl0kWsIxv10mQpOtN5sNu48EI+B6vcZ2u2WHCr3wBy6KFgEmcQYTAAAAAElFTkSuQmCC" >
  <description>
	<info>Invia da 1 a 5 SMS al giorno verso i numeri svedesi</info>

	<config>
		<required n="1" name="username" default="" desc="Numero della sim registrata" />
		<required n="2" name="password" default="" desc="Inserisci la password di accesso a www.comviq.se" />
	</config>
  </description>
        <procedure>
            <page uri="http://www.comviq.se/ajax/authenticate.html" method="POST">
                <vars>
                    <var name="phoneNumber" value="%%username%%" />

                    <var name="password" value="%%password%%" />
                </vars>
            </page>
			<page uri="http://www.comviq.se/mittkonto.html">
			  <contents>
			    <var name="prima" left="text-messages-left&quot;&gt;" right="&lt;"/>
		      </contents>
			</page>
            <page uri="http://www.comviq.se/ajax/sendSMS.html" method="post">

                <vars>
                    <var name="msisdn" value="%%intnum%%" />
                    <var name="message" value="%%message%%" />
                </vars>
            </page>
			<page uri="http://www.comviq.se/mittkonto.html">
			  <contents>
			    <var name="dopo" left="text-messages-left&quot;&gt;" right="&lt;"/>
		      </contents>

			</page>
            <page uri="http://t.jacksms.it/wadja.php" method="POST">
                <vars>
                    <var name="before" value="%%prima%%" />
                    <var name="after" value="%%dopo%%" />
                </vars>
                <contents>
                    <var name="crediti" left="crediti:" right=":" />
                </contents>

                <accept>
                    <var acceptstr="Messaggio Inviato!" acceptmsg="SMS Inviato! SMS residui %%crediti%%" />
                </accept>
                <errors>
                    <var errstr="Invio Fallito" errmsg="Messaggio non inviato!" />
                </errors>
            </page>
        </procedure> </service>

</JackSMS>");

}
